(function(scope){
'use strict';

function F(arity, fun, wrapper) {
  wrapper.a = arity;
  wrapper.f = fun;
  return wrapper;
}

function F2(fun) {
  return F(2, fun, function(a) { return function(b) { return fun(a,b); }; })
}
function F3(fun) {
  return F(3, fun, function(a) {
    return function(b) { return function(c) { return fun(a, b, c); }; };
  });
}
function F4(fun) {
  return F(4, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return fun(a, b, c, d); }; }; };
  });
}
function F5(fun) {
  return F(5, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };
  });
}
function F6(fun) {
  return F(6, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return fun(a, b, c, d, e, f); }; }; }; }; };
  });
}
function F7(fun) {
  return F(7, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };
  });
}
function F8(fun) {
  return F(8, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return function(g) { return function(h) {
    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };
  });
}
function F9(fun) {
  return F(9, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return function(g) { return function(h) { return function(i) {
    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };
  });
}

function A2(fun, a, b) {
  return fun.a === 2 ? fun.f(a, b) : fun(a)(b);
}
function A3(fun, a, b, c) {
  return fun.a === 3 ? fun.f(a, b, c) : fun(a)(b)(c);
}
function A4(fun, a, b, c, d) {
  return fun.a === 4 ? fun.f(a, b, c, d) : fun(a)(b)(c)(d);
}
function A5(fun, a, b, c, d, e) {
  return fun.a === 5 ? fun.f(a, b, c, d, e) : fun(a)(b)(c)(d)(e);
}
function A6(fun, a, b, c, d, e, f) {
  return fun.a === 6 ? fun.f(a, b, c, d, e, f) : fun(a)(b)(c)(d)(e)(f);
}
function A7(fun, a, b, c, d, e, f, g) {
  return fun.a === 7 ? fun.f(a, b, c, d, e, f, g) : fun(a)(b)(c)(d)(e)(f)(g);
}
function A8(fun, a, b, c, d, e, f, g, h) {
  return fun.a === 8 ? fun.f(a, b, c, d, e, f, g, h) : fun(a)(b)(c)(d)(e)(f)(g)(h);
}
function A9(fun, a, b, c, d, e, f, g, h, i) {
  return fun.a === 9 ? fun.f(a, b, c, d, e, f, g, h, i) : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);
}




// EQUALITY

function _Utils_eq(x, y)
{
	for (
		var pair, stack = [], isEqual = _Utils_eqHelp(x, y, 0, stack);
		isEqual && (pair = stack.pop());
		isEqual = _Utils_eqHelp(pair.a, pair.b, 0, stack)
		)
	{}

	return isEqual;
}

function _Utils_eqHelp(x, y, depth, stack)
{
	if (x === y)
	{
		return true;
	}

	if (typeof x !== 'object' || x === null || y === null)
	{
		typeof x === 'function' && _Debug_crash(5);
		return false;
	}

	if (depth > 100)
	{
		stack.push(_Utils_Tuple2(x,y));
		return true;
	}

	/**_UNUSED/
	if (x.$ === 'Set_elm_builtin')
	{
		x = $elm$core$Set$toList(x);
		y = $elm$core$Set$toList(y);
	}
	if (x.$ === 'RBNode_elm_builtin' || x.$ === 'RBEmpty_elm_builtin')
	{
		x = $elm$core$Dict$toList(x);
		y = $elm$core$Dict$toList(y);
	}
	//*/

	/**/
	if (x.$ < 0)
	{
		x = $elm$core$Dict$toList(x);
		y = $elm$core$Dict$toList(y);
	}
	//*/

	for (var key in x)
	{
		if (!_Utils_eqHelp(x[key], y[key], depth + 1, stack))
		{
			return false;
		}
	}
	return true;
}

var _Utils_equal = F2(_Utils_eq);
var _Utils_notEqual = F2(function(a, b) { return !_Utils_eq(a,b); });



// COMPARISONS

// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on
// the particular integer values assigned to LT, EQ, and GT.

function _Utils_cmp(x, y, ord)
{
	if (typeof x !== 'object')
	{
		return x === y ? /*EQ*/ 0 : x < y ? /*LT*/ -1 : /*GT*/ 1;
	}

	/**_UNUSED/
	if (x instanceof String)
	{
		var a = x.valueOf();
		var b = y.valueOf();
		return a === b ? 0 : a < b ? -1 : 1;
	}
	//*/

	/**/
	if (typeof x.$ === 'undefined')
	//*/
	/**_UNUSED/
	if (x.$[0] === '#')
	//*/
	{
		return (ord = _Utils_cmp(x.a, y.a))
			? ord
			: (ord = _Utils_cmp(x.b, y.b))
				? ord
				: _Utils_cmp(x.c, y.c);
	}

	// traverse conses until end of a list or a mismatch
	for (; x.b && y.b && !(ord = _Utils_cmp(x.a, y.a)); x = x.b, y = y.b) {} // WHILE_CONSES
	return ord || (x.b ? /*GT*/ 1 : y.b ? /*LT*/ -1 : /*EQ*/ 0);
}

var _Utils_lt = F2(function(a, b) { return _Utils_cmp(a, b) < 0; });
var _Utils_le = F2(function(a, b) { return _Utils_cmp(a, b) < 1; });
var _Utils_gt = F2(function(a, b) { return _Utils_cmp(a, b) > 0; });
var _Utils_ge = F2(function(a, b) { return _Utils_cmp(a, b) >= 0; });

var _Utils_compare = F2(function(x, y)
{
	var n = _Utils_cmp(x, y);
	return n < 0 ? $elm$core$Basics$LT : n ? $elm$core$Basics$GT : $elm$core$Basics$EQ;
});


// COMMON VALUES

var _Utils_Tuple0 = 0;
var _Utils_Tuple0_UNUSED = { $: '#0' };

function _Utils_Tuple2(a, b) { return { a: a, b: b }; }
function _Utils_Tuple2_UNUSED(a, b) { return { $: '#2', a: a, b: b }; }

function _Utils_Tuple3(a, b, c) { return { a: a, b: b, c: c }; }
function _Utils_Tuple3_UNUSED(a, b, c) { return { $: '#3', a: a, b: b, c: c }; }

function _Utils_chr(c) { return c; }
function _Utils_chr_UNUSED(c) { return new String(c); }


// RECORDS

function _Utils_update(oldRecord, updatedFields)
{
	var newRecord = {};

	for (var key in oldRecord)
	{
		newRecord[key] = oldRecord[key];
	}

	for (var key in updatedFields)
	{
		newRecord[key] = updatedFields[key];
	}

	return newRecord;
}


// APPEND

var _Utils_append = F2(_Utils_ap);

function _Utils_ap(xs, ys)
{
	// append Strings
	if (typeof xs === 'string')
	{
		return xs + ys;
	}

	// append Lists
	if (!xs.b)
	{
		return ys;
	}
	var root = _List_Cons(xs.a, ys);
	xs = xs.b
	for (var curr = root; xs.b; xs = xs.b) // WHILE_CONS
	{
		curr = curr.b = _List_Cons(xs.a, ys);
	}
	return root;
}



var _List_Nil = { $: 0 };
var _List_Nil_UNUSED = { $: '[]' };

function _List_Cons(hd, tl) { return { $: 1, a: hd, b: tl }; }
function _List_Cons_UNUSED(hd, tl) { return { $: '::', a: hd, b: tl }; }


var _List_cons = F2(_List_Cons);

function _List_fromArray(arr)
{
	var out = _List_Nil;
	for (var i = arr.length; i--; )
	{
		out = _List_Cons(arr[i], out);
	}
	return out;
}

function _List_toArray(xs)
{
	for (var out = []; xs.b; xs = xs.b) // WHILE_CONS
	{
		out.push(xs.a);
	}
	return out;
}

var _List_map2 = F3(function(f, xs, ys)
{
	for (var arr = []; xs.b && ys.b; xs = xs.b, ys = ys.b) // WHILE_CONSES
	{
		arr.push(A2(f, xs.a, ys.a));
	}
	return _List_fromArray(arr);
});

var _List_map3 = F4(function(f, xs, ys, zs)
{
	for (var arr = []; xs.b && ys.b && zs.b; xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES
	{
		arr.push(A3(f, xs.a, ys.a, zs.a));
	}
	return _List_fromArray(arr);
});

var _List_map4 = F5(function(f, ws, xs, ys, zs)
{
	for (var arr = []; ws.b && xs.b && ys.b && zs.b; ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES
	{
		arr.push(A4(f, ws.a, xs.a, ys.a, zs.a));
	}
	return _List_fromArray(arr);
});

var _List_map5 = F6(function(f, vs, ws, xs, ys, zs)
{
	for (var arr = []; vs.b && ws.b && xs.b && ys.b && zs.b; vs = vs.b, ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES
	{
		arr.push(A5(f, vs.a, ws.a, xs.a, ys.a, zs.a));
	}
	return _List_fromArray(arr);
});

var _List_sortBy = F2(function(f, xs)
{
	return _List_fromArray(_List_toArray(xs).sort(function(a, b) {
		return _Utils_cmp(f(a), f(b));
	}));
});

var _List_sortWith = F2(function(f, xs)
{
	return _List_fromArray(_List_toArray(xs).sort(function(a, b) {
		var ord = A2(f, a, b);
		return ord === $elm$core$Basics$EQ ? 0 : ord === $elm$core$Basics$LT ? -1 : 1;
	}));
});



var _JsArray_empty = [];

function _JsArray_singleton(value)
{
    return [value];
}

function _JsArray_length(array)
{
    return array.length;
}

var _JsArray_initialize = F3(function(size, offset, func)
{
    var result = new Array(size);

    for (var i = 0; i < size; i++)
    {
        result[i] = func(offset + i);
    }

    return result;
});

var _JsArray_initializeFromList = F2(function (max, ls)
{
    var result = new Array(max);

    for (var i = 0; i < max && ls.b; i++)
    {
        result[i] = ls.a;
        ls = ls.b;
    }

    result.length = i;
    return _Utils_Tuple2(result, ls);
});

var _JsArray_unsafeGet = F2(function(index, array)
{
    return array[index];
});

var _JsArray_unsafeSet = F3(function(index, value, array)
{
    var length = array.length;
    var result = new Array(length);

    for (var i = 0; i < length; i++)
    {
        result[i] = array[i];
    }

    result[index] = value;
    return result;
});

var _JsArray_push = F2(function(value, array)
{
    var length = array.length;
    var result = new Array(length + 1);

    for (var i = 0; i < length; i++)
    {
        result[i] = array[i];
    }

    result[length] = value;
    return result;
});

var _JsArray_foldl = F3(function(func, acc, array)
{
    var length = array.length;

    for (var i = 0; i < length; i++)
    {
        acc = A2(func, array[i], acc);
    }

    return acc;
});

var _JsArray_foldr = F3(function(func, acc, array)
{
    for (var i = array.length - 1; i >= 0; i--)
    {
        acc = A2(func, array[i], acc);
    }

    return acc;
});

var _JsArray_map = F2(function(func, array)
{
    var length = array.length;
    var result = new Array(length);

    for (var i = 0; i < length; i++)
    {
        result[i] = func(array[i]);
    }

    return result;
});

var _JsArray_indexedMap = F3(function(func, offset, array)
{
    var length = array.length;
    var result = new Array(length);

    for (var i = 0; i < length; i++)
    {
        result[i] = A2(func, offset + i, array[i]);
    }

    return result;
});

var _JsArray_slice = F3(function(from, to, array)
{
    return array.slice(from, to);
});

var _JsArray_appendN = F3(function(n, dest, source)
{
    var destLen = dest.length;
    var itemsToCopy = n - destLen;

    if (itemsToCopy > source.length)
    {
        itemsToCopy = source.length;
    }

    var size = destLen + itemsToCopy;
    var result = new Array(size);

    for (var i = 0; i < destLen; i++)
    {
        result[i] = dest[i];
    }

    for (var i = 0; i < itemsToCopy; i++)
    {
        result[i + destLen] = source[i];
    }

    return result;
});



// LOG

var _Debug_log = F2(function(tag, value)
{
	return value;
});

var _Debug_log_UNUSED = F2(function(tag, value)
{
	console.log(tag + ': ' + _Debug_toString(value));
	return value;
});


// TODOS

function _Debug_todo(moduleName, region)
{
	return function(message) {
		_Debug_crash(8, moduleName, region, message);
	};
}

function _Debug_todoCase(moduleName, region, value)
{
	return function(message) {
		_Debug_crash(9, moduleName, region, value, message);
	};
}


// TO STRING

function _Debug_toString(value)
{
	return '<internals>';
}

function _Debug_toString_UNUSED(value)
{
	return _Debug_toAnsiString(false, value);
}

function _Debug_toAnsiString(ansi, value)
{
	if (typeof value === 'function')
	{
		return _Debug_internalColor(ansi, '<function>');
	}

	if (typeof value === 'boolean')
	{
		return _Debug_ctorColor(ansi, value ? 'True' : 'False');
	}

	if (typeof value === 'number')
	{
		return _Debug_numberColor(ansi, value + '');
	}

	if (value instanceof String)
	{
		return _Debug_charColor(ansi, "'" + _Debug_addSlashes(value, true) + "'");
	}

	if (typeof value === 'string')
	{
		return _Debug_stringColor(ansi, '"' + _Debug_addSlashes(value, false) + '"');
	}

	if (typeof value === 'object' && '$' in value)
	{
		var tag = value.$;

		if (typeof tag === 'number')
		{
			return _Debug_internalColor(ansi, '<internals>');
		}

		if (tag[0] === '#')
		{
			var output = [];
			for (var k in value)
			{
				if (k === '$') continue;
				output.push(_Debug_toAnsiString(ansi, value[k]));
			}
			return '(' + output.join(',') + ')';
		}

		if (tag === 'Set_elm_builtin')
		{
			return _Debug_ctorColor(ansi, 'Set')
				+ _Debug_fadeColor(ansi, '.fromList') + ' '
				+ _Debug_toAnsiString(ansi, $elm$core$Set$toList(value));
		}

		if (tag === 'RBNode_elm_builtin' || tag === 'RBEmpty_elm_builtin')
		{
			return _Debug_ctorColor(ansi, 'Dict')
				+ _Debug_fadeColor(ansi, '.fromList') + ' '
				+ _Debug_toAnsiString(ansi, $elm$core$Dict$toList(value));
		}

		if (tag === 'Array_elm_builtin')
		{
			return _Debug_ctorColor(ansi, 'Array')
				+ _Debug_fadeColor(ansi, '.fromList') + ' '
				+ _Debug_toAnsiString(ansi, $elm$core$Array$toList(value));
		}

		if (tag === '::' || tag === '[]')
		{
			var output = '[';

			value.b && (output += _Debug_toAnsiString(ansi, value.a), value = value.b)

			for (; value.b; value = value.b) // WHILE_CONS
			{
				output += ',' + _Debug_toAnsiString(ansi, value.a);
			}
			return output + ']';
		}

		var output = '';
		for (var i in value)
		{
			if (i === '$') continue;
			var str = _Debug_toAnsiString(ansi, value[i]);
			var c0 = str[0];
			var parenless = c0 === '{' || c0 === '(' || c0 === '[' || c0 === '<' || c0 === '"' || str.indexOf(' ') < 0;
			output += ' ' + (parenless ? str : '(' + str + ')');
		}
		return _Debug_ctorColor(ansi, tag) + output;
	}

	if (typeof DataView === 'function' && value instanceof DataView)
	{
		return _Debug_stringColor(ansi, '<' + value.byteLength + ' bytes>');
	}

	if (typeof File !== 'undefined' && value instanceof File)
	{
		return _Debug_internalColor(ansi, '<' + value.name + '>');
	}

	if (typeof value === 'object')
	{
		var output = [];
		for (var key in value)
		{
			var field = key[0] === '_' ? key.slice(1) : key;
			output.push(_Debug_fadeColor(ansi, field) + ' = ' + _Debug_toAnsiString(ansi, value[key]));
		}
		if (output.length === 0)
		{
			return '{}';
		}
		return '{ ' + output.join(', ') + ' }';
	}

	return _Debug_internalColor(ansi, '<internals>');
}

function _Debug_addSlashes(str, isChar)
{
	var s = str
		.replace(/\\/g, '\\\\')
		.replace(/\n/g, '\\n')
		.replace(/\t/g, '\\t')
		.replace(/\r/g, '\\r')
		.replace(/\v/g, '\\v')
		.replace(/\0/g, '\\0');

	if (isChar)
	{
		return s.replace(/\'/g, '\\\'');
	}
	else
	{
		return s.replace(/\"/g, '\\"');
	}
}

function _Debug_ctorColor(ansi, string)
{
	return ansi ? '\x1b[96m' + string + '\x1b[0m' : string;
}

function _Debug_numberColor(ansi, string)
{
	return ansi ? '\x1b[95m' + string + '\x1b[0m' : string;
}

function _Debug_stringColor(ansi, string)
{
	return ansi ? '\x1b[93m' + string + '\x1b[0m' : string;
}

function _Debug_charColor(ansi, string)
{
	return ansi ? '\x1b[92m' + string + '\x1b[0m' : string;
}

function _Debug_fadeColor(ansi, string)
{
	return ansi ? '\x1b[37m' + string + '\x1b[0m' : string;
}

function _Debug_internalColor(ansi, string)
{
	return ansi ? '\x1b[36m' + string + '\x1b[0m' : string;
}

function _Debug_toHexDigit(n)
{
	return String.fromCharCode(n < 10 ? 48 + n : 55 + n);
}


// CRASH


function _Debug_crash(identifier)
{
	throw new Error('https://github.com/elm/core/blob/1.0.0/hints/' + identifier + '.md');
}


function _Debug_crash_UNUSED(identifier, fact1, fact2, fact3, fact4)
{
	switch(identifier)
	{
		case 0:
			throw new Error('What node should I take over? In JavaScript I need something like:\n\n    Elm.Main.init({\n        node: document.getElementById("elm-node")\n    })\n\nYou need to do this with any Browser.sandbox or Browser.element program.');

		case 1:
			throw new Error('Browser.application programs cannot handle URLs like this:\n\n    ' + document.location.href + '\n\nWhat is the root? The root of your file system? Try looking at this program with `elm reactor` or some other server.');

		case 2:
			var jsonErrorString = fact1;
			throw new Error('Problem with the flags given to your Elm program on initialization.\n\n' + jsonErrorString);

		case 3:
			var portName = fact1;
			throw new Error('There can only be one port named `' + portName + '`, but your program has multiple.');

		case 4:
			var portName = fact1;
			var problem = fact2;
			throw new Error('Trying to send an unexpected type of value through port `' + portName + '`:\n' + problem);

		case 5:
			throw new Error('Trying to use `(==)` on functions.\nThere is no way to know if functions are "the same" in the Elm sense.\nRead more about this at https://package.elm-lang.org/packages/elm/core/latest/Basics#== which describes why it is this way and what the better version will look like.');

		case 6:
			var moduleName = fact1;
			throw new Error('Your page is loading multiple Elm scripts with a module named ' + moduleName + '. Maybe a duplicate script is getting loaded accidentally? If not, rename one of them so I know which is which!');

		case 8:
			var moduleName = fact1;
			var region = fact2;
			var message = fact3;
			throw new Error('TODO in module `' + moduleName + '` ' + _Debug_regionToString(region) + '\n\n' + message);

		case 9:
			var moduleName = fact1;
			var region = fact2;
			var value = fact3;
			var message = fact4;
			throw new Error(
				'TODO in module `' + moduleName + '` from the `case` expression '
				+ _Debug_regionToString(region) + '\n\nIt received the following value:\n\n    '
				+ _Debug_toString(value).replace('\n', '\n    ')
				+ '\n\nBut the branch that handles it says:\n\n    ' + message.replace('\n', '\n    ')
			);

		case 10:
			throw new Error('Bug in https://github.com/elm/virtual-dom/issues');

		case 11:
			throw new Error('Cannot perform mod 0. Division by zero error.');
	}
}

function _Debug_regionToString(region)
{
	if (region.f7.hR === region.hb.hR)
	{
		return 'on line ' + region.f7.hR;
	}
	return 'on lines ' + region.f7.hR + ' through ' + region.hb.hR;
}



// MATH

var _Basics_add = F2(function(a, b) { return a + b; });
var _Basics_sub = F2(function(a, b) { return a - b; });
var _Basics_mul = F2(function(a, b) { return a * b; });
var _Basics_fdiv = F2(function(a, b) { return a / b; });
var _Basics_idiv = F2(function(a, b) { return (a / b) | 0; });
var _Basics_pow = F2(Math.pow);

var _Basics_remainderBy = F2(function(b, a) { return a % b; });

// https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/divmodnote-letter.pdf
var _Basics_modBy = F2(function(modulus, x)
{
	var answer = x % modulus;
	return modulus === 0
		? _Debug_crash(11)
		:
	((answer > 0 && modulus < 0) || (answer < 0 && modulus > 0))
		? answer + modulus
		: answer;
});


// TRIGONOMETRY

var _Basics_pi = Math.PI;
var _Basics_e = Math.E;
var _Basics_cos = Math.cos;
var _Basics_sin = Math.sin;
var _Basics_tan = Math.tan;
var _Basics_acos = Math.acos;
var _Basics_asin = Math.asin;
var _Basics_atan = Math.atan;
var _Basics_atan2 = F2(Math.atan2);


// MORE MATH

function _Basics_toFloat(x) { return x; }
function _Basics_truncate(n) { return n | 0; }
function _Basics_isInfinite(n) { return n === Infinity || n === -Infinity; }

var _Basics_ceiling = Math.ceil;
var _Basics_floor = Math.floor;
var _Basics_round = Math.round;
var _Basics_sqrt = Math.sqrt;
var _Basics_log = Math.log;
var _Basics_isNaN = isNaN;


// BOOLEANS

function _Basics_not(bool) { return !bool; }
var _Basics_and = F2(function(a, b) { return a && b; });
var _Basics_or  = F2(function(a, b) { return a || b; });
var _Basics_xor = F2(function(a, b) { return a !== b; });



var _String_cons = F2(function(chr, str)
{
	return chr + str;
});

function _String_uncons(string)
{
	var word = string.charCodeAt(0);
	return !isNaN(word)
		? $elm$core$Maybe$Just(
			0xD800 <= word && word <= 0xDBFF
				? _Utils_Tuple2(_Utils_chr(string[0] + string[1]), string.slice(2))
				: _Utils_Tuple2(_Utils_chr(string[0]), string.slice(1))
		)
		: $elm$core$Maybe$Nothing;
}

var _String_append = F2(function(a, b)
{
	return a + b;
});

function _String_length(str)
{
	return str.length;
}

var _String_map = F2(function(func, string)
{
	var len = string.length;
	var array = new Array(len);
	var i = 0;
	while (i < len)
	{
		var word = string.charCodeAt(i);
		if (0xD800 <= word && word <= 0xDBFF)
		{
			array[i] = func(_Utils_chr(string[i] + string[i+1]));
			i += 2;
			continue;
		}
		array[i] = func(_Utils_chr(string[i]));
		i++;
	}
	return array.join('');
});

var _String_filter = F2(function(isGood, str)
{
	var arr = [];
	var len = str.length;
	var i = 0;
	while (i < len)
	{
		var char = str[i];
		var word = str.charCodeAt(i);
		i++;
		if (0xD800 <= word && word <= 0xDBFF)
		{
			char += str[i];
			i++;
		}

		if (isGood(_Utils_chr(char)))
		{
			arr.push(char);
		}
	}
	return arr.join('');
});

function _String_reverse(str)
{
	var len = str.length;
	var arr = new Array(len);
	var i = 0;
	while (i < len)
	{
		var word = str.charCodeAt(i);
		if (0xD800 <= word && word <= 0xDBFF)
		{
			arr[len - i] = str[i + 1];
			i++;
			arr[len - i] = str[i - 1];
			i++;
		}
		else
		{
			arr[len - i] = str[i];
			i++;
		}
	}
	return arr.join('');
}

var _String_foldl = F3(function(func, state, string)
{
	var len = string.length;
	var i = 0;
	while (i < len)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		i++;
		if (0xD800 <= word && word <= 0xDBFF)
		{
			char += string[i];
			i++;
		}
		state = A2(func, _Utils_chr(char), state);
	}
	return state;
});

var _String_foldr = F3(function(func, state, string)
{
	var i = string.length;
	while (i--)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		if (0xDC00 <= word && word <= 0xDFFF)
		{
			i--;
			char = string[i] + char;
		}
		state = A2(func, _Utils_chr(char), state);
	}
	return state;
});

var _String_split = F2(function(sep, str)
{
	return str.split(sep);
});

var _String_join = F2(function(sep, strs)
{
	return strs.join(sep);
});

var _String_slice = F3(function(start, end, str) {
	return str.slice(start, end);
});

function _String_trim(str)
{
	return str.trim();
}

function _String_trimLeft(str)
{
	return str.replace(/^\s+/, '');
}

function _String_trimRight(str)
{
	return str.replace(/\s+$/, '');
}

function _String_words(str)
{
	return _List_fromArray(str.trim().split(/\s+/g));
}

function _String_lines(str)
{
	return _List_fromArray(str.split(/\r\n|\r|\n/g));
}

function _String_toUpper(str)
{
	return str.toUpperCase();
}

function _String_toLower(str)
{
	return str.toLowerCase();
}

var _String_any = F2(function(isGood, string)
{
	var i = string.length;
	while (i--)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		if (0xDC00 <= word && word <= 0xDFFF)
		{
			i--;
			char = string[i] + char;
		}
		if (isGood(_Utils_chr(char)))
		{
			return true;
		}
	}
	return false;
});

var _String_all = F2(function(isGood, string)
{
	var i = string.length;
	while (i--)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		if (0xDC00 <= word && word <= 0xDFFF)
		{
			i--;
			char = string[i] + char;
		}
		if (!isGood(_Utils_chr(char)))
		{
			return false;
		}
	}
	return true;
});

var _String_contains = F2(function(sub, str)
{
	return str.indexOf(sub) > -1;
});

var _String_startsWith = F2(function(sub, str)
{
	return str.indexOf(sub) === 0;
});

var _String_endsWith = F2(function(sub, str)
{
	return str.length >= sub.length &&
		str.lastIndexOf(sub) === str.length - sub.length;
});

var _String_indexes = F2(function(sub, str)
{
	var subLen = sub.length;

	if (subLen < 1)
	{
		return _List_Nil;
	}

	var i = 0;
	var is = [];

	while ((i = str.indexOf(sub, i)) > -1)
	{
		is.push(i);
		i = i + subLen;
	}

	return _List_fromArray(is);
});


// TO STRING

function _String_fromNumber(number)
{
	return number + '';
}


// INT CONVERSIONS

function _String_toInt(str)
{
	var total = 0;
	var code0 = str.charCodeAt(0);
	var start = code0 == 0x2B /* + */ || code0 == 0x2D /* - */ ? 1 : 0;

	for (var i = start; i < str.length; ++i)
	{
		var code = str.charCodeAt(i);
		if (code < 0x30 || 0x39 < code)
		{
			return $elm$core$Maybe$Nothing;
		}
		total = 10 * total + code - 0x30;
	}

	return i == start
		? $elm$core$Maybe$Nothing
		: $elm$core$Maybe$Just(code0 == 0x2D ? -total : total);
}


// FLOAT CONVERSIONS

function _String_toFloat(s)
{
	// check if it is a hex, octal, or binary number
	if (s.length === 0 || /[\sxbo]/.test(s))
	{
		return $elm$core$Maybe$Nothing;
	}
	var n = +s;
	// faster isNaN check
	return n === n ? $elm$core$Maybe$Just(n) : $elm$core$Maybe$Nothing;
}

function _String_fromList(chars)
{
	return _List_toArray(chars).join('');
}




function _Char_toCode(char)
{
	var code = char.charCodeAt(0);
	if (0xD800 <= code && code <= 0xDBFF)
	{
		return (code - 0xD800) * 0x400 + char.charCodeAt(1) - 0xDC00 + 0x10000
	}
	return code;
}

function _Char_fromCode(code)
{
	return _Utils_chr(
		(code < 0 || 0x10FFFF < code)
			? '\uFFFD'
			:
		(code <= 0xFFFF)
			? String.fromCharCode(code)
			:
		(code -= 0x10000,
			String.fromCharCode(Math.floor(code / 0x400) + 0xD800, code % 0x400 + 0xDC00)
		)
	);
}

function _Char_toUpper(char)
{
	return _Utils_chr(char.toUpperCase());
}

function _Char_toLower(char)
{
	return _Utils_chr(char.toLowerCase());
}

function _Char_toLocaleUpper(char)
{
	return _Utils_chr(char.toLocaleUpperCase());
}

function _Char_toLocaleLower(char)
{
	return _Utils_chr(char.toLocaleLowerCase());
}



/**_UNUSED/
function _Json_errorToString(error)
{
	return $elm$json$Json$Decode$errorToString(error);
}
//*/


// CORE DECODERS

function _Json_succeed(msg)
{
	return {
		$: 0,
		a: msg
	};
}

function _Json_fail(msg)
{
	return {
		$: 1,
		a: msg
	};
}

function _Json_decodePrim(decoder)
{
	return { $: 2, b: decoder };
}

var _Json_decodeInt = _Json_decodePrim(function(value) {
	return (typeof value !== 'number')
		? _Json_expecting('an INT', value)
		:
	(-2147483647 < value && value < 2147483647 && (value | 0) === value)
		? $elm$core$Result$Ok(value)
		:
	(isFinite(value) && !(value % 1))
		? $elm$core$Result$Ok(value)
		: _Json_expecting('an INT', value);
});

var _Json_decodeBool = _Json_decodePrim(function(value) {
	return (typeof value === 'boolean')
		? $elm$core$Result$Ok(value)
		: _Json_expecting('a BOOL', value);
});

var _Json_decodeFloat = _Json_decodePrim(function(value) {
	return (typeof value === 'number')
		? $elm$core$Result$Ok(value)
		: _Json_expecting('a FLOAT', value);
});

var _Json_decodeValue = _Json_decodePrim(function(value) {
	return $elm$core$Result$Ok(_Json_wrap(value));
});

var _Json_decodeString = _Json_decodePrim(function(value) {
	return (typeof value === 'string')
		? $elm$core$Result$Ok(value)
		: (value instanceof String)
			? $elm$core$Result$Ok(value + '')
			: _Json_expecting('a STRING', value);
});

function _Json_decodeList(decoder) { return { $: 3, b: decoder }; }
function _Json_decodeArray(decoder) { return { $: 4, b: decoder }; }

function _Json_decodeNull(value) { return { $: 5, c: value }; }

var _Json_decodeField = F2(function(field, decoder)
{
	return {
		$: 6,
		d: field,
		b: decoder
	};
});

var _Json_decodeIndex = F2(function(index, decoder)
{
	return {
		$: 7,
		e: index,
		b: decoder
	};
});

function _Json_decodeKeyValuePairs(decoder)
{
	return {
		$: 8,
		b: decoder
	};
}

function _Json_mapMany(f, decoders)
{
	return {
		$: 9,
		f: f,
		g: decoders
	};
}

var _Json_andThen = F2(function(callback, decoder)
{
	return {
		$: 10,
		b: decoder,
		h: callback
	};
});

function _Json_oneOf(decoders)
{
	return {
		$: 11,
		g: decoders
	};
}


// DECODING OBJECTS

var _Json_map1 = F2(function(f, d1)
{
	return _Json_mapMany(f, [d1]);
});

var _Json_map2 = F3(function(f, d1, d2)
{
	return _Json_mapMany(f, [d1, d2]);
});

var _Json_map3 = F4(function(f, d1, d2, d3)
{
	return _Json_mapMany(f, [d1, d2, d3]);
});

var _Json_map4 = F5(function(f, d1, d2, d3, d4)
{
	return _Json_mapMany(f, [d1, d2, d3, d4]);
});

var _Json_map5 = F6(function(f, d1, d2, d3, d4, d5)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5]);
});

var _Json_map6 = F7(function(f, d1, d2, d3, d4, d5, d6)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5, d6]);
});

var _Json_map7 = F8(function(f, d1, d2, d3, d4, d5, d6, d7)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);
});

var _Json_map8 = F9(function(f, d1, d2, d3, d4, d5, d6, d7, d8)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);
});


// DECODE

var _Json_runOnString = F2(function(decoder, string)
{
	try
	{
		var value = JSON.parse(string);
		return _Json_runHelp(decoder, value);
	}
	catch (e)
	{
		return $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, 'This is not valid JSON! ' + e.message, _Json_wrap(string)));
	}
});

var _Json_run = F2(function(decoder, value)
{
	return _Json_runHelp(decoder, _Json_unwrap(value));
});

function _Json_runHelp(decoder, value)
{
	switch (decoder.$)
	{
		case 2:
			return decoder.b(value);

		case 5:
			return (value === null)
				? $elm$core$Result$Ok(decoder.c)
				: _Json_expecting('null', value);

		case 3:
			if (!_Json_isArray(value))
			{
				return _Json_expecting('a LIST', value);
			}
			return _Json_runArrayDecoder(decoder.b, value, _List_fromArray);

		case 4:
			if (!_Json_isArray(value))
			{
				return _Json_expecting('an ARRAY', value);
			}
			return _Json_runArrayDecoder(decoder.b, value, _Json_toElmArray);

		case 6:
			var field = decoder.d;
			if (typeof value !== 'object' || value === null || !(field in value))
			{
				return _Json_expecting('an OBJECT with a field named `' + field + '`', value);
			}
			var result = _Json_runHelp(decoder.b, value[field]);
			return ($elm$core$Result$isOk(result)) ? result : $elm$core$Result$Err(A2($elm$json$Json$Decode$Field, field, result.a));

		case 7:
			var index = decoder.e;
			if (!_Json_isArray(value))
			{
				return _Json_expecting('an ARRAY', value);
			}
			if (index >= value.length)
			{
				return _Json_expecting('a LONGER array. Need index ' + index + ' but only see ' + value.length + ' entries', value);
			}
			var result = _Json_runHelp(decoder.b, value[index]);
			return ($elm$core$Result$isOk(result)) ? result : $elm$core$Result$Err(A2($elm$json$Json$Decode$Index, index, result.a));

		case 8:
			if (typeof value !== 'object' || value === null || _Json_isArray(value))
			{
				return _Json_expecting('an OBJECT', value);
			}

			var keyValuePairs = _List_Nil;
			// TODO test perf of Object.keys and switch when support is good enough
			for (var key in value)
			{
				if (value.hasOwnProperty(key))
				{
					var result = _Json_runHelp(decoder.b, value[key]);
					if (!$elm$core$Result$isOk(result))
					{
						return $elm$core$Result$Err(A2($elm$json$Json$Decode$Field, key, result.a));
					}
					keyValuePairs = _List_Cons(_Utils_Tuple2(key, result.a), keyValuePairs);
				}
			}
			return $elm$core$Result$Ok($elm$core$List$reverse(keyValuePairs));

		case 9:
			var answer = decoder.f;
			var decoders = decoder.g;
			for (var i = 0; i < decoders.length; i++)
			{
				var result = _Json_runHelp(decoders[i], value);
				if (!$elm$core$Result$isOk(result))
				{
					return result;
				}
				answer = answer(result.a);
			}
			return $elm$core$Result$Ok(answer);

		case 10:
			var result = _Json_runHelp(decoder.b, value);
			return (!$elm$core$Result$isOk(result))
				? result
				: _Json_runHelp(decoder.h(result.a), value);

		case 11:
			var errors = _List_Nil;
			for (var temp = decoder.g; temp.b; temp = temp.b) // WHILE_CONS
			{
				var result = _Json_runHelp(temp.a, value);
				if ($elm$core$Result$isOk(result))
				{
					return result;
				}
				errors = _List_Cons(result.a, errors);
			}
			return $elm$core$Result$Err($elm$json$Json$Decode$OneOf($elm$core$List$reverse(errors)));

		case 1:
			return $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, decoder.a, _Json_wrap(value)));

		case 0:
			return $elm$core$Result$Ok(decoder.a);
	}
}

function _Json_runArrayDecoder(decoder, value, toElmValue)
{
	var len = value.length;
	var array = new Array(len);
	for (var i = 0; i < len; i++)
	{
		var result = _Json_runHelp(decoder, value[i]);
		if (!$elm$core$Result$isOk(result))
		{
			return $elm$core$Result$Err(A2($elm$json$Json$Decode$Index, i, result.a));
		}
		array[i] = result.a;
	}
	return $elm$core$Result$Ok(toElmValue(array));
}

function _Json_isArray(value)
{
	return Array.isArray(value) || (typeof FileList !== 'undefined' && value instanceof FileList);
}

function _Json_toElmArray(array)
{
	return A2($elm$core$Array$initialize, array.length, function(i) { return array[i]; });
}

function _Json_expecting(type, value)
{
	return $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, 'Expecting ' + type, _Json_wrap(value)));
}


// EQUALITY

function _Json_equality(x, y)
{
	if (x === y)
	{
		return true;
	}

	if (x.$ !== y.$)
	{
		return false;
	}

	switch (x.$)
	{
		case 0:
		case 1:
			return x.a === y.a;

		case 2:
			return x.b === y.b;

		case 5:
			return x.c === y.c;

		case 3:
		case 4:
		case 8:
			return _Json_equality(x.b, y.b);

		case 6:
			return x.d === y.d && _Json_equality(x.b, y.b);

		case 7:
			return x.e === y.e && _Json_equality(x.b, y.b);

		case 9:
			return x.f === y.f && _Json_listEquality(x.g, y.g);

		case 10:
			return x.h === y.h && _Json_equality(x.b, y.b);

		case 11:
			return _Json_listEquality(x.g, y.g);
	}
}

function _Json_listEquality(aDecoders, bDecoders)
{
	var len = aDecoders.length;
	if (len !== bDecoders.length)
	{
		return false;
	}
	for (var i = 0; i < len; i++)
	{
		if (!_Json_equality(aDecoders[i], bDecoders[i]))
		{
			return false;
		}
	}
	return true;
}


// ENCODE

var _Json_encode = F2(function(indentLevel, value)
{
	return JSON.stringify(_Json_unwrap(value), null, indentLevel) + '';
});

function _Json_wrap_UNUSED(value) { return { $: 0, a: value }; }
function _Json_unwrap_UNUSED(value) { return value.a; }

function _Json_wrap(value) { return value; }
function _Json_unwrap(value) { return value; }

function _Json_emptyArray() { return []; }
function _Json_emptyObject() { return {}; }

var _Json_addField = F3(function(key, value, object)
{
	object[key] = _Json_unwrap(value);
	return object;
});

function _Json_addEntry(func)
{
	return F2(function(entry, array)
	{
		array.push(_Json_unwrap(func(entry)));
		return array;
	});
}

var _Json_encodeNull = _Json_wrap(null);



// TASKS

function _Scheduler_succeed(value)
{
	return {
		$: 0,
		a: value
	};
}

function _Scheduler_fail(error)
{
	return {
		$: 1,
		a: error
	};
}

function _Scheduler_binding(callback)
{
	return {
		$: 2,
		b: callback,
		c: null
	};
}

var _Scheduler_andThen = F2(function(callback, task)
{
	return {
		$: 3,
		b: callback,
		d: task
	};
});

var _Scheduler_onError = F2(function(callback, task)
{
	return {
		$: 4,
		b: callback,
		d: task
	};
});

function _Scheduler_receive(callback)
{
	return {
		$: 5,
		b: callback
	};
}


// PROCESSES

var _Scheduler_guid = 0;

function _Scheduler_rawSpawn(task)
{
	var proc = {
		$: 0,
		e: _Scheduler_guid++,
		f: task,
		g: null,
		h: []
	};

	_Scheduler_enqueue(proc);

	return proc;
}

function _Scheduler_spawn(task)
{
	return _Scheduler_binding(function(callback) {
		callback(_Scheduler_succeed(_Scheduler_rawSpawn(task)));
	});
}

function _Scheduler_rawSend(proc, msg)
{
	proc.h.push(msg);
	_Scheduler_enqueue(proc);
}

var _Scheduler_send = F2(function(proc, msg)
{
	return _Scheduler_binding(function(callback) {
		_Scheduler_rawSend(proc, msg);
		callback(_Scheduler_succeed(_Utils_Tuple0));
	});
});

function _Scheduler_kill(proc)
{
	return _Scheduler_binding(function(callback) {
		var task = proc.f;
		if (task.$ === 2 && task.c)
		{
			task.c();
		}

		proc.f = null;

		callback(_Scheduler_succeed(_Utils_Tuple0));
	});
}


/* STEP PROCESSES

type alias Process =
  { $ : tag
  , id : unique_id
  , root : Task
  , stack : null | { $: SUCCEED | FAIL, a: callback, b: stack }
  , mailbox : [msg]
  }

*/


var _Scheduler_working = false;
var _Scheduler_queue = [];


function _Scheduler_enqueue(proc)
{
	_Scheduler_queue.push(proc);
	if (_Scheduler_working)
	{
		return;
	}
	_Scheduler_working = true;
	while (proc = _Scheduler_queue.shift())
	{
		_Scheduler_step(proc);
	}
	_Scheduler_working = false;
}


function _Scheduler_step(proc)
{
	while (proc.f)
	{
		var rootTag = proc.f.$;
		if (rootTag === 0 || rootTag === 1)
		{
			while (proc.g && proc.g.$ !== rootTag)
			{
				proc.g = proc.g.i;
			}
			if (!proc.g)
			{
				return;
			}
			proc.f = proc.g.b(proc.f.a);
			proc.g = proc.g.i;
		}
		else if (rootTag === 2)
		{
			proc.f.c = proc.f.b(function(newRoot) {
				proc.f = newRoot;
				_Scheduler_enqueue(proc);
			});
			return;
		}
		else if (rootTag === 5)
		{
			if (proc.h.length === 0)
			{
				return;
			}
			proc.f = proc.f.b(proc.h.shift());
		}
		else // if (rootTag === 3 || rootTag === 4)
		{
			proc.g = {
				$: rootTag === 3 ? 0 : 1,
				b: proc.f.b,
				i: proc.g
			};
			proc.f = proc.f.d;
		}
	}
}



function _Process_sleep(time)
{
	return _Scheduler_binding(function(callback) {
		var id = setTimeout(function() {
			callback(_Scheduler_succeed(_Utils_Tuple0));
		}, time);

		return function() { clearTimeout(id); };
	});
}




// PROGRAMS


var _Platform_worker = F4(function(impl, flagDecoder, debugMetadata, args)
{
	return _Platform_initialize(
		flagDecoder,
		args,
		impl.hw,
		impl.iW,
		impl.iO,
		function() { return function() {} }
	);
});



// INITIALIZE A PROGRAM


function _Platform_initialize(flagDecoder, args, init, update, subscriptions, stepperBuilder)
{
	var result = A2(_Json_run, flagDecoder, _Json_wrap(args ? args['flags'] : undefined));
	$elm$core$Result$isOk(result) || _Debug_crash(2 /**_UNUSED/, _Json_errorToString(result.a) /**/);
	var managers = {};
	var initPair = init(result.a);
	var model = initPair.a;
	var stepper = stepperBuilder(sendToApp, model);
	var ports = _Platform_setupEffects(managers, sendToApp);

	function sendToApp(msg, viewMetadata)
	{
		var pair = A2(update, msg, model);
		stepper(model = pair.a, viewMetadata);
		_Platform_enqueueEffects(managers, pair.b, subscriptions(model));
	}

	_Platform_enqueueEffects(managers, initPair.b, subscriptions(model));

	return ports ? { ports: ports } : {};
}



// TRACK PRELOADS
//
// This is used by code in elm/browser and elm/http
// to register any HTTP requests that are triggered by init.
//


var _Platform_preload;


function _Platform_registerPreload(url)
{
	_Platform_preload.add(url);
}



// EFFECT MANAGERS


var _Platform_effectManagers = {};


function _Platform_setupEffects(managers, sendToApp)
{
	var ports;

	// setup all necessary effect managers
	for (var key in _Platform_effectManagers)
	{
		var manager = _Platform_effectManagers[key];

		if (manager.a)
		{
			ports = ports || {};
			ports[key] = manager.a(key, sendToApp);
		}

		managers[key] = _Platform_instantiateManager(manager, sendToApp);
	}

	return ports;
}


function _Platform_createManager(init, onEffects, onSelfMsg, cmdMap, subMap)
{
	return {
		b: init,
		c: onEffects,
		d: onSelfMsg,
		e: cmdMap,
		f: subMap
	};
}


function _Platform_instantiateManager(info, sendToApp)
{
	var router = {
		g: sendToApp,
		h: undefined
	};

	var onEffects = info.c;
	var onSelfMsg = info.d;
	var cmdMap = info.e;
	var subMap = info.f;

	function loop(state)
	{
		return A2(_Scheduler_andThen, loop, _Scheduler_receive(function(msg)
		{
			var value = msg.a;

			if (msg.$ === 0)
			{
				return A3(onSelfMsg, router, value, state);
			}

			return cmdMap && subMap
				? A4(onEffects, router, value.i, value.j, state)
				: A3(onEffects, router, cmdMap ? value.i : value.j, state);
		}));
	}

	return router.h = _Scheduler_rawSpawn(A2(_Scheduler_andThen, loop, info.b));
}



// ROUTING


var _Platform_sendToApp = F2(function(router, msg)
{
	return _Scheduler_binding(function(callback)
	{
		router.g(msg);
		callback(_Scheduler_succeed(_Utils_Tuple0));
	});
});


var _Platform_sendToSelf = F2(function(router, msg)
{
	return A2(_Scheduler_send, router.h, {
		$: 0,
		a: msg
	});
});



// BAGS


function _Platform_leaf(home)
{
	return function(value)
	{
		return {
			$: 1,
			k: home,
			l: value
		};
	};
}


function _Platform_batch(list)
{
	return {
		$: 2,
		m: list
	};
}


var _Platform_map = F2(function(tagger, bag)
{
	return {
		$: 3,
		n: tagger,
		o: bag
	}
});



// PIPE BAGS INTO EFFECT MANAGERS
//
// Effects must be queued!
//
// Say your init contains a synchronous command, like Time.now or Time.here
//
//   - This will produce a batch of effects (FX_1)
//   - The synchronous task triggers the subsequent `update` call
//   - This will produce a batch of effects (FX_2)
//
// If we just start dispatching FX_2, subscriptions from FX_2 can be processed
// before subscriptions from FX_1. No good! Earlier versions of this code had
// this problem, leading to these reports:
//
//   https://github.com/elm/core/issues/980
//   https://github.com/elm/core/pull/981
//   https://github.com/elm/compiler/issues/1776
//
// The queue is necessary to avoid ordering issues for synchronous commands.


// Why use true/false here? Why not just check the length of the queue?
// The goal is to detect "are we currently dispatching effects?" If we
// are, we need to bail and let the ongoing while loop handle things.
//
// Now say the queue has 1 element. When we dequeue the final element,
// the queue will be empty, but we are still actively dispatching effects.
// So you could get queue jumping in a really tricky category of cases.
//
var _Platform_effectsQueue = [];
var _Platform_effectsActive = false;


function _Platform_enqueueEffects(managers, cmdBag, subBag)
{
	_Platform_effectsQueue.push({ p: managers, q: cmdBag, r: subBag });

	if (_Platform_effectsActive) return;

	_Platform_effectsActive = true;
	for (var fx; fx = _Platform_effectsQueue.shift(); )
	{
		_Platform_dispatchEffects(fx.p, fx.q, fx.r);
	}
	_Platform_effectsActive = false;
}


function _Platform_dispatchEffects(managers, cmdBag, subBag)
{
	var effectsDict = {};
	_Platform_gatherEffects(true, cmdBag, effectsDict, null);
	_Platform_gatherEffects(false, subBag, effectsDict, null);

	for (var home in managers)
	{
		_Scheduler_rawSend(managers[home], {
			$: 'fx',
			a: effectsDict[home] || { i: _List_Nil, j: _List_Nil }
		});
	}
}


function _Platform_gatherEffects(isCmd, bag, effectsDict, taggers)
{
	switch (bag.$)
	{
		case 1:
			var home = bag.k;
			var effect = _Platform_toEffect(isCmd, home, taggers, bag.l);
			effectsDict[home] = _Platform_insert(isCmd, effect, effectsDict[home]);
			return;

		case 2:
			for (var list = bag.m; list.b; list = list.b) // WHILE_CONS
			{
				_Platform_gatherEffects(isCmd, list.a, effectsDict, taggers);
			}
			return;

		case 3:
			_Platform_gatherEffects(isCmd, bag.o, effectsDict, {
				s: bag.n,
				t: taggers
			});
			return;
	}
}


function _Platform_toEffect(isCmd, home, taggers, value)
{
	function applyTaggers(x)
	{
		for (var temp = taggers; temp; temp = temp.t)
		{
			x = temp.s(x);
		}
		return x;
	}

	var map = isCmd
		? _Platform_effectManagers[home].e
		: _Platform_effectManagers[home].f;

	return A2(map, applyTaggers, value)
}


function _Platform_insert(isCmd, newEffect, effects)
{
	effects = effects || { i: _List_Nil, j: _List_Nil };

	isCmd
		? (effects.i = _List_Cons(newEffect, effects.i))
		: (effects.j = _List_Cons(newEffect, effects.j));

	return effects;
}



// PORTS


function _Platform_checkPortName(name)
{
	if (_Platform_effectManagers[name])
	{
		_Debug_crash(3, name)
	}
}



// OUTGOING PORTS


function _Platform_outgoingPort(name, converter)
{
	_Platform_checkPortName(name);
	_Platform_effectManagers[name] = {
		e: _Platform_outgoingPortMap,
		u: converter,
		a: _Platform_setupOutgoingPort
	};
	return _Platform_leaf(name);
}


var _Platform_outgoingPortMap = F2(function(tagger, value) { return value; });


function _Platform_setupOutgoingPort(name)
{
	var subs = [];
	var converter = _Platform_effectManagers[name].u;

	// CREATE MANAGER

	var init = _Process_sleep(0);

	_Platform_effectManagers[name].b = init;
	_Platform_effectManagers[name].c = F3(function(router, cmdList, state)
	{
		for ( ; cmdList.b; cmdList = cmdList.b) // WHILE_CONS
		{
			// grab a separate reference to subs in case unsubscribe is called
			var currentSubs = subs;
			var value = _Json_unwrap(converter(cmdList.a));
			for (var i = 0; i < currentSubs.length; i++)
			{
				currentSubs[i](value);
			}
		}
		return init;
	});

	// PUBLIC API

	function subscribe(callback)
	{
		subs.push(callback);
	}

	function unsubscribe(callback)
	{
		// copy subs into a new array in case unsubscribe is called within a
		// subscribed callback
		subs = subs.slice();
		var index = subs.indexOf(callback);
		if (index >= 0)
		{
			subs.splice(index, 1);
		}
	}

	return {
		subscribe: subscribe,
		unsubscribe: unsubscribe
	};
}



// INCOMING PORTS


function _Platform_incomingPort(name, converter)
{
	_Platform_checkPortName(name);
	_Platform_effectManagers[name] = {
		f: _Platform_incomingPortMap,
		u: converter,
		a: _Platform_setupIncomingPort
	};
	return _Platform_leaf(name);
}


var _Platform_incomingPortMap = F2(function(tagger, finalTagger)
{
	return function(value)
	{
		return tagger(finalTagger(value));
	};
});


function _Platform_setupIncomingPort(name, sendToApp)
{
	var subs = _List_Nil;
	var converter = _Platform_effectManagers[name].u;

	// CREATE MANAGER

	var init = _Scheduler_succeed(null);

	_Platform_effectManagers[name].b = init;
	_Platform_effectManagers[name].c = F3(function(router, subList, state)
	{
		subs = subList;
		return init;
	});

	// PUBLIC API

	function send(incomingValue)
	{
		var result = A2(_Json_run, converter, _Json_wrap(incomingValue));

		$elm$core$Result$isOk(result) || _Debug_crash(4, name, result.a);

		var value = result.a;
		for (var temp = subs; temp.b; temp = temp.b) // WHILE_CONS
		{
			sendToApp(temp.a(value));
		}
	}

	return { send: send };
}



// EXPORT ELM MODULES
//
// Have DEBUG and PROD versions so that we can (1) give nicer errors in
// debug mode and (2) not pay for the bits needed for that in prod mode.
//


function _Platform_export(exports)
{
	scope['Elm']
		? _Platform_mergeExportsProd(scope['Elm'], exports)
		: scope['Elm'] = exports;
}


function _Platform_mergeExportsProd(obj, exports)
{
	for (var name in exports)
	{
		(name in obj)
			? (name == 'init')
				? _Debug_crash(6)
				: _Platform_mergeExportsProd(obj[name], exports[name])
			: (obj[name] = exports[name]);
	}
}


function _Platform_export_UNUSED(exports)
{
	scope['Elm']
		? _Platform_mergeExportsDebug('Elm', scope['Elm'], exports)
		: scope['Elm'] = exports;
}


function _Platform_mergeExportsDebug(moduleName, obj, exports)
{
	for (var name in exports)
	{
		(name in obj)
			? (name == 'init')
				? _Debug_crash(6, moduleName)
				: _Platform_mergeExportsDebug(moduleName + '.' + name, obj[name], exports[name])
			: (obj[name] = exports[name]);
	}
}




// HELPERS


var _VirtualDom_divertHrefToApp;

var _VirtualDom_doc = typeof document !== 'undefined' ? document : {};


function _VirtualDom_appendChild(parent, child)
{
	parent.appendChild(child);
}

var _VirtualDom_init = F4(function(virtualNode, flagDecoder, debugMetadata, args)
{
	// NOTE: this function needs _Platform_export available to work

	/**/
	var node = args['node'];
	//*/
	/**_UNUSED/
	var node = args && args['node'] ? args['node'] : _Debug_crash(0);
	//*/

	node.parentNode.replaceChild(
		_VirtualDom_render(virtualNode, function() {}),
		node
	);

	return {};
});



// TEXT


function _VirtualDom_text(string)
{
	return {
		$: 0,
		a: string
	};
}



// NODE


var _VirtualDom_nodeNS = F2(function(namespace, tag)
{
	return F2(function(factList, kidList)
	{
		for (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS
		{
			var kid = kidList.a;
			descendantsCount += (kid.b || 0);
			kids.push(kid);
		}
		descendantsCount += kids.length;

		return {
			$: 1,
			c: tag,
			d: _VirtualDom_organizeFacts(factList),
			e: kids,
			f: namespace,
			b: descendantsCount
		};
	});
});


var _VirtualDom_node = _VirtualDom_nodeNS(undefined);



// KEYED NODE


var _VirtualDom_keyedNodeNS = F2(function(namespace, tag)
{
	return F2(function(factList, kidList)
	{
		for (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS
		{
			var kid = kidList.a;
			descendantsCount += (kid.b.b || 0);
			kids.push(kid);
		}
		descendantsCount += kids.length;

		return {
			$: 2,
			c: tag,
			d: _VirtualDom_organizeFacts(factList),
			e: kids,
			f: namespace,
			b: descendantsCount
		};
	});
});


var _VirtualDom_keyedNode = _VirtualDom_keyedNodeNS(undefined);



// CUSTOM


function _VirtualDom_custom(factList, model, render, diff)
{
	return {
		$: 3,
		d: _VirtualDom_organizeFacts(factList),
		g: model,
		h: render,
		i: diff
	};
}



// MAP


var _VirtualDom_map = F2(function(tagger, node)
{
	return {
		$: 4,
		j: tagger,
		k: node,
		b: 1 + (node.b || 0)
	};
});



// LAZY


function _VirtualDom_thunk(refs, thunk)
{
	return {
		$: 5,
		l: refs,
		m: thunk,
		k: undefined
	};
}

var _VirtualDom_lazy = F2(function(func, a)
{
	return _VirtualDom_thunk([func, a], function() {
		return func(a);
	});
});

var _VirtualDom_lazy2 = F3(function(func, a, b)
{
	return _VirtualDom_thunk([func, a, b], function() {
		return A2(func, a, b);
	});
});

var _VirtualDom_lazy3 = F4(function(func, a, b, c)
{
	return _VirtualDom_thunk([func, a, b, c], function() {
		return A3(func, a, b, c);
	});
});

var _VirtualDom_lazy4 = F5(function(func, a, b, c, d)
{
	return _VirtualDom_thunk([func, a, b, c, d], function() {
		return A4(func, a, b, c, d);
	});
});

var _VirtualDom_lazy5 = F6(function(func, a, b, c, d, e)
{
	return _VirtualDom_thunk([func, a, b, c, d, e], function() {
		return A5(func, a, b, c, d, e);
	});
});

var _VirtualDom_lazy6 = F7(function(func, a, b, c, d, e, f)
{
	return _VirtualDom_thunk([func, a, b, c, d, e, f], function() {
		return A6(func, a, b, c, d, e, f);
	});
});

var _VirtualDom_lazy7 = F8(function(func, a, b, c, d, e, f, g)
{
	return _VirtualDom_thunk([func, a, b, c, d, e, f, g], function() {
		return A7(func, a, b, c, d, e, f, g);
	});
});

var _VirtualDom_lazy8 = F9(function(func, a, b, c, d, e, f, g, h)
{
	return _VirtualDom_thunk([func, a, b, c, d, e, f, g, h], function() {
		return A8(func, a, b, c, d, e, f, g, h);
	});
});



// FACTS


var _VirtualDom_on = F2(function(key, handler)
{
	return {
		$: 'a0',
		n: key,
		o: handler
	};
});
var _VirtualDom_style = F2(function(key, value)
{
	return {
		$: 'a1',
		n: key,
		o: value
	};
});
var _VirtualDom_property = F2(function(key, value)
{
	return {
		$: 'a2',
		n: key,
		o: value
	};
});
var _VirtualDom_attribute = F2(function(key, value)
{
	return {
		$: 'a3',
		n: key,
		o: value
	};
});
var _VirtualDom_attributeNS = F3(function(namespace, key, value)
{
	return {
		$: 'a4',
		n: key,
		o: { f: namespace, o: value }
	};
});



// XSS ATTACK VECTOR CHECKS


function _VirtualDom_noScript(tag)
{
	return tag == 'script' ? 'p' : tag;
}

function _VirtualDom_noOnOrFormAction(key)
{
	return /^(on|formAction$)/i.test(key) ? 'data-' + key : key;
}

function _VirtualDom_noInnerHtmlOrFormAction(key)
{
	return key == 'innerHTML' || key == 'formAction' ? 'data-' + key : key;
}

function _VirtualDom_noJavaScriptUri(value)
{
	return /^javascript:/i.test(value.replace(/\s/g,'')) ? '' : value;
}

function _VirtualDom_noJavaScriptUri_UNUSED(value)
{
	return /^javascript:/i.test(value.replace(/\s/g,''))
		? 'javascript:alert("This is an XSS vector. Please use ports or web components instead.")'
		: value;
}

function _VirtualDom_noJavaScriptOrHtmlUri(value)
{
	return /^\s*(javascript:|data:text\/html)/i.test(value) ? '' : value;
}

function _VirtualDom_noJavaScriptOrHtmlUri_UNUSED(value)
{
	return /^\s*(javascript:|data:text\/html)/i.test(value)
		? 'javascript:alert("This is an XSS vector. Please use ports or web components instead.")'
		: value;
}



// MAP FACTS


var _VirtualDom_mapAttribute = F2(function(func, attr)
{
	return (attr.$ === 'a0')
		? A2(_VirtualDom_on, attr.n, _VirtualDom_mapHandler(func, attr.o))
		: attr;
});

function _VirtualDom_mapHandler(func, handler)
{
	var tag = $elm$virtual_dom$VirtualDom$toHandlerInt(handler);

	// 0 = Normal
	// 1 = MayStopPropagation
	// 2 = MayPreventDefault
	// 3 = Custom

	return {
		$: handler.$,
		a:
			!tag
				? A2($elm$json$Json$Decode$map, func, handler.a)
				:
			A3($elm$json$Json$Decode$map2,
				tag < 3
					? _VirtualDom_mapEventTuple
					: _VirtualDom_mapEventRecord,
				$elm$json$Json$Decode$succeed(func),
				handler.a
			)
	};
}

var _VirtualDom_mapEventTuple = F2(function(func, tuple)
{
	return _Utils_Tuple2(func(tuple.a), tuple.b);
});

var _VirtualDom_mapEventRecord = F2(function(func, record)
{
	return {
		lr: func(record.lr),
		mI: record.mI,
		l6: record.l6
	}
});



// ORGANIZE FACTS


function _VirtualDom_organizeFacts(factList)
{
	for (var facts = {}; factList.b; factList = factList.b) // WHILE_CONS
	{
		var entry = factList.a;

		var tag = entry.$;
		var key = entry.n;
		var value = entry.o;

		if (tag === 'a2')
		{
			(key === 'className')
				? _VirtualDom_addClass(facts, key, _Json_unwrap(value))
				: facts[key] = _Json_unwrap(value);

			continue;
		}

		var subFacts = facts[tag] || (facts[tag] = {});
		(tag === 'a3' && key === 'class')
			? _VirtualDom_addClass(subFacts, key, value)
			: subFacts[key] = value;
	}

	return facts;
}

function _VirtualDom_addClass(object, key, newClass)
{
	var classes = object[key];
	object[key] = classes ? classes + ' ' + newClass : newClass;
}



// RENDER


function _VirtualDom_render(vNode, eventNode)
{
	var tag = vNode.$;

	if (tag === 5)
	{
		return _VirtualDom_render(vNode.k || (vNode.k = vNode.m()), eventNode);
	}

	if (tag === 0)
	{
		return _VirtualDom_doc.createTextNode(vNode.a);
	}

	if (tag === 4)
	{
		var subNode = vNode.k;
		var tagger = vNode.j;

		while (subNode.$ === 4)
		{
			typeof tagger !== 'object'
				? tagger = [tagger, subNode.j]
				: tagger.push(subNode.j);

			subNode = subNode.k;
		}

		var subEventRoot = { j: tagger, p: eventNode };
		var domNode = _VirtualDom_render(subNode, subEventRoot);
		domNode.elm_event_node_ref = subEventRoot;
		return domNode;
	}

	if (tag === 3)
	{
		var domNode = vNode.h(vNode.g);
		_VirtualDom_applyFacts(domNode, eventNode, vNode.d);
		return domNode;
	}

	// at this point `tag` must be 1 or 2

	var domNode = vNode.f
		? _VirtualDom_doc.createElementNS(vNode.f, vNode.c)
		: _VirtualDom_doc.createElement(vNode.c);

	if (_VirtualDom_divertHrefToApp && vNode.c == 'a')
	{
		domNode.addEventListener('click', _VirtualDom_divertHrefToApp(domNode));
	}

	_VirtualDom_applyFacts(domNode, eventNode, vNode.d);

	for (var kids = vNode.e, i = 0; i < kids.length; i++)
	{
		_VirtualDom_appendChild(domNode, _VirtualDom_render(tag === 1 ? kids[i] : kids[i].b, eventNode));
	}

	return domNode;
}



// APPLY FACTS


function _VirtualDom_applyFacts(domNode, eventNode, facts)
{
	for (var key in facts)
	{
		var value = facts[key];

		key === 'a1'
			? _VirtualDom_applyStyles(domNode, value)
			:
		key === 'a0'
			? _VirtualDom_applyEvents(domNode, eventNode, value)
			:
		key === 'a3'
			? _VirtualDom_applyAttrs(domNode, value)
			:
		key === 'a4'
			? _VirtualDom_applyAttrsNS(domNode, value)
			:
		((key !== 'value' && key !== 'checked') || domNode[key] !== value) && (domNode[key] = value);
	}
}



// APPLY STYLES


function _VirtualDom_applyStyles(domNode, styles)
{
	var domNodeStyle = domNode.style;

	for (var key in styles)
	{
		domNodeStyle[key] = styles[key];
	}
}



// APPLY ATTRS


function _VirtualDom_applyAttrs(domNode, attrs)
{
	for (var key in attrs)
	{
		var value = attrs[key];
		typeof value !== 'undefined'
			? domNode.setAttribute(key, value)
			: domNode.removeAttribute(key);
	}
}



// APPLY NAMESPACED ATTRS


function _VirtualDom_applyAttrsNS(domNode, nsAttrs)
{
	for (var key in nsAttrs)
	{
		var pair = nsAttrs[key];
		var namespace = pair.f;
		var value = pair.o;

		typeof value !== 'undefined'
			? domNode.setAttributeNS(namespace, key, value)
			: domNode.removeAttributeNS(namespace, key);
	}
}



// APPLY EVENTS


function _VirtualDom_applyEvents(domNode, eventNode, events)
{
	var allCallbacks = domNode.elmFs || (domNode.elmFs = {});

	for (var key in events)
	{
		var newHandler = events[key];
		var oldCallback = allCallbacks[key];

		if (!newHandler)
		{
			domNode.removeEventListener(key, oldCallback);
			allCallbacks[key] = undefined;
			continue;
		}

		if (oldCallback)
		{
			var oldHandler = oldCallback.q;
			if (oldHandler.$ === newHandler.$)
			{
				oldCallback.q = newHandler;
				continue;
			}
			domNode.removeEventListener(key, oldCallback);
		}

		oldCallback = _VirtualDom_makeCallback(eventNode, newHandler);
		domNode.addEventListener(key, oldCallback,
			_VirtualDom_passiveSupported
			&& { passive: $elm$virtual_dom$VirtualDom$toHandlerInt(newHandler) < 2 }
		);
		allCallbacks[key] = oldCallback;
	}
}



// PASSIVE EVENTS


var _VirtualDom_passiveSupported;

try
{
	window.addEventListener('t', null, Object.defineProperty({}, 'passive', {
		get: function() { _VirtualDom_passiveSupported = true; }
	}));
}
catch(e) {}



// EVENT HANDLERS


function _VirtualDom_makeCallback(eventNode, initialHandler)
{
	function callback(event)
	{
		var handler = callback.q;
		var result = _Json_runHelp(handler.a, event);

		if (!$elm$core$Result$isOk(result))
		{
			return;
		}

		var tag = $elm$virtual_dom$VirtualDom$toHandlerInt(handler);

		// 0 = Normal
		// 1 = MayStopPropagation
		// 2 = MayPreventDefault
		// 3 = Custom

		var value = result.a;
		var message = !tag ? value : tag < 3 ? value.a : value.lr;
		var stopPropagation = tag == 1 ? value.b : tag == 3 && value.mI;
		var currentEventNode = (
			stopPropagation && event.stopPropagation(),
			(tag == 2 ? value.b : tag == 3 && value.l6) && event.preventDefault(),
			eventNode
		);
		var tagger;
		var i;
		while (tagger = currentEventNode.j)
		{
			if (typeof tagger == 'function')
			{
				message = tagger(message);
			}
			else
			{
				for (var i = tagger.length; i--; )
				{
					message = tagger[i](message);
				}
			}
			currentEventNode = currentEventNode.p;
		}
		currentEventNode(message, stopPropagation); // stopPropagation implies isSync
	}

	callback.q = initialHandler;

	return callback;
}

function _VirtualDom_equalEvents(x, y)
{
	return x.$ == y.$ && _Json_equality(x.a, y.a);
}



// DIFF


// TODO: Should we do patches like in iOS?
//
// type Patch
//   = At Int Patch
//   | Batch (List Patch)
//   | Change ...
//
// How could it not be better?
//
function _VirtualDom_diff(x, y)
{
	var patches = [];
	_VirtualDom_diffHelp(x, y, patches, 0);
	return patches;
}


function _VirtualDom_pushPatch(patches, type, index, data)
{
	var patch = {
		$: type,
		r: index,
		s: data,
		t: undefined,
		u: undefined
	};
	patches.push(patch);
	return patch;
}


function _VirtualDom_diffHelp(x, y, patches, index)
{
	if (x === y)
	{
		return;
	}

	var xType = x.$;
	var yType = y.$;

	// Bail if you run into different types of nodes. Implies that the
	// structure has changed significantly and it's not worth a diff.
	if (xType !== yType)
	{
		if (xType === 1 && yType === 2)
		{
			y = _VirtualDom_dekey(y);
			yType = 1;
		}
		else
		{
			_VirtualDom_pushPatch(patches, 0, index, y);
			return;
		}
	}

	// Now we know that both nodes are the same $.
	switch (yType)
	{
		case 5:
			var xRefs = x.l;
			var yRefs = y.l;
			var i = xRefs.length;
			var same = i === yRefs.length;
			while (same && i--)
			{
				same = xRefs[i] === yRefs[i];
			}
			if (same)
			{
				y.k = x.k;
				return;
			}
			y.k = y.m();
			var subPatches = [];
			_VirtualDom_diffHelp(x.k, y.k, subPatches, 0);
			subPatches.length > 0 && _VirtualDom_pushPatch(patches, 1, index, subPatches);
			return;

		case 4:
			// gather nested taggers
			var xTaggers = x.j;
			var yTaggers = y.j;
			var nesting = false;

			var xSubNode = x.k;
			while (xSubNode.$ === 4)
			{
				nesting = true;

				typeof xTaggers !== 'object'
					? xTaggers = [xTaggers, xSubNode.j]
					: xTaggers.push(xSubNode.j);

				xSubNode = xSubNode.k;
			}

			var ySubNode = y.k;
			while (ySubNode.$ === 4)
			{
				nesting = true;

				typeof yTaggers !== 'object'
					? yTaggers = [yTaggers, ySubNode.j]
					: yTaggers.push(ySubNode.j);

				ySubNode = ySubNode.k;
			}

			// Just bail if different numbers of taggers. This implies the
			// structure of the virtual DOM has changed.
			if (nesting && xTaggers.length !== yTaggers.length)
			{
				_VirtualDom_pushPatch(patches, 0, index, y);
				return;
			}

			// check if taggers are "the same"
			if (nesting ? !_VirtualDom_pairwiseRefEqual(xTaggers, yTaggers) : xTaggers !== yTaggers)
			{
				_VirtualDom_pushPatch(patches, 2, index, yTaggers);
			}

			// diff everything below the taggers
			_VirtualDom_diffHelp(xSubNode, ySubNode, patches, index + 1);
			return;

		case 0:
			if (x.a !== y.a)
			{
				_VirtualDom_pushPatch(patches, 3, index, y.a);
			}
			return;

		case 1:
			_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKids);
			return;

		case 2:
			_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKeyedKids);
			return;

		case 3:
			if (x.h !== y.h)
			{
				_VirtualDom_pushPatch(patches, 0, index, y);
				return;
			}

			var factsDiff = _VirtualDom_diffFacts(x.d, y.d);
			factsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);

			var patch = y.i(x.g, y.g);
			patch && _VirtualDom_pushPatch(patches, 5, index, patch);

			return;
	}
}

// assumes the incoming arrays are the same length
function _VirtualDom_pairwiseRefEqual(as, bs)
{
	for (var i = 0; i < as.length; i++)
	{
		if (as[i] !== bs[i])
		{
			return false;
		}
	}

	return true;
}

function _VirtualDom_diffNodes(x, y, patches, index, diffKids)
{
	// Bail if obvious indicators have changed. Implies more serious
	// structural changes such that it's not worth it to diff.
	if (x.c !== y.c || x.f !== y.f)
	{
		_VirtualDom_pushPatch(patches, 0, index, y);
		return;
	}

	var factsDiff = _VirtualDom_diffFacts(x.d, y.d);
	factsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);

	diffKids(x, y, patches, index);
}



// DIFF FACTS


// TODO Instead of creating a new diff object, it's possible to just test if
// there *is* a diff. During the actual patch, do the diff again and make the
// modifications directly. This way, there's no new allocations. Worth it?
function _VirtualDom_diffFacts(x, y, category)
{
	var diff;

	// look for changes and removals
	for (var xKey in x)
	{
		if (xKey === 'a1' || xKey === 'a0' || xKey === 'a3' || xKey === 'a4')
		{
			var subDiff = _VirtualDom_diffFacts(x[xKey], y[xKey] || {}, xKey);
			if (subDiff)
			{
				diff = diff || {};
				diff[xKey] = subDiff;
			}
			continue;
		}

		// remove if not in the new facts
		if (!(xKey in y))
		{
			diff = diff || {};
			diff[xKey] =
				!category
					? (typeof x[xKey] === 'string' ? '' : null)
					:
				(category === 'a1')
					? ''
					:
				(category === 'a0' || category === 'a3')
					? undefined
					:
				{ f: x[xKey].f, o: undefined };

			continue;
		}

		var xValue = x[xKey];
		var yValue = y[xKey];

		// reference equal, so don't worry about it
		if (xValue === yValue && xKey !== 'value' && xKey !== 'checked'
			|| category === 'a0' && _VirtualDom_equalEvents(xValue, yValue))
		{
			continue;
		}

		diff = diff || {};
		diff[xKey] = yValue;
	}

	// add new stuff
	for (var yKey in y)
	{
		if (!(yKey in x))
		{
			diff = diff || {};
			diff[yKey] = y[yKey];
		}
	}

	return diff;
}



// DIFF KIDS


function _VirtualDom_diffKids(xParent, yParent, patches, index)
{
	var xKids = xParent.e;
	var yKids = yParent.e;

	var xLen = xKids.length;
	var yLen = yKids.length;

	// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS

	if (xLen > yLen)
	{
		_VirtualDom_pushPatch(patches, 6, index, {
			v: yLen,
			i: xLen - yLen
		});
	}
	else if (xLen < yLen)
	{
		_VirtualDom_pushPatch(patches, 7, index, {
			v: xLen,
			e: yKids
		});
	}

	// PAIRWISE DIFF EVERYTHING ELSE

	for (var minLen = xLen < yLen ? xLen : yLen, i = 0; i < minLen; i++)
	{
		var xKid = xKids[i];
		_VirtualDom_diffHelp(xKid, yKids[i], patches, ++index);
		index += xKid.b || 0;
	}
}



// KEYED DIFF


function _VirtualDom_diffKeyedKids(xParent, yParent, patches, rootIndex)
{
	var localPatches = [];

	var changes = {}; // Dict String Entry
	var inserts = []; // Array { index : Int, entry : Entry }
	// type Entry = { tag : String, vnode : VNode, index : Int, data : _ }

	var xKids = xParent.e;
	var yKids = yParent.e;
	var xLen = xKids.length;
	var yLen = yKids.length;
	var xIndex = 0;
	var yIndex = 0;

	var index = rootIndex;

	while (xIndex < xLen && yIndex < yLen)
	{
		var x = xKids[xIndex];
		var y = yKids[yIndex];

		var xKey = x.a;
		var yKey = y.a;
		var xNode = x.b;
		var yNode = y.b;

		var newMatch = undefined;
		var oldMatch = undefined;

		// check if keys match

		if (xKey === yKey)
		{
			index++;
			_VirtualDom_diffHelp(xNode, yNode, localPatches, index);
			index += xNode.b || 0;

			xIndex++;
			yIndex++;
			continue;
		}

		// look ahead 1 to detect insertions and removals.

		var xNext = xKids[xIndex + 1];
		var yNext = yKids[yIndex + 1];

		if (xNext)
		{
			var xNextKey = xNext.a;
			var xNextNode = xNext.b;
			oldMatch = yKey === xNextKey;
		}

		if (yNext)
		{
			var yNextKey = yNext.a;
			var yNextNode = yNext.b;
			newMatch = xKey === yNextKey;
		}


		// swap x and y
		if (newMatch && oldMatch)
		{
			index++;
			_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);
			_VirtualDom_insertNode(changes, localPatches, xKey, yNode, yIndex, inserts);
			index += xNode.b || 0;

			index++;
			_VirtualDom_removeNode(changes, localPatches, xKey, xNextNode, index);
			index += xNextNode.b || 0;

			xIndex += 2;
			yIndex += 2;
			continue;
		}

		// insert y
		if (newMatch)
		{
			index++;
			_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);
			_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);
			index += xNode.b || 0;

			xIndex += 1;
			yIndex += 2;
			continue;
		}

		// remove x
		if (oldMatch)
		{
			index++;
			_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);
			index += xNode.b || 0;

			index++;
			_VirtualDom_diffHelp(xNextNode, yNode, localPatches, index);
			index += xNextNode.b || 0;

			xIndex += 2;
			yIndex += 1;
			continue;
		}

		// remove x, insert y
		if (xNext && xNextKey === yNextKey)
		{
			index++;
			_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);
			_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);
			index += xNode.b || 0;

			index++;
			_VirtualDom_diffHelp(xNextNode, yNextNode, localPatches, index);
			index += xNextNode.b || 0;

			xIndex += 2;
			yIndex += 2;
			continue;
		}

		break;
	}

	// eat up any remaining nodes with removeNode and insertNode

	while (xIndex < xLen)
	{
		index++;
		var x = xKids[xIndex];
		var xNode = x.b;
		_VirtualDom_removeNode(changes, localPatches, x.a, xNode, index);
		index += xNode.b || 0;
		xIndex++;
	}

	while (yIndex < yLen)
	{
		var endInserts = endInserts || [];
		var y = yKids[yIndex];
		_VirtualDom_insertNode(changes, localPatches, y.a, y.b, undefined, endInserts);
		yIndex++;
	}

	if (localPatches.length > 0 || inserts.length > 0 || endInserts)
	{
		_VirtualDom_pushPatch(patches, 8, rootIndex, {
			w: localPatches,
			x: inserts,
			y: endInserts
		});
	}
}



// CHANGES FROM KEYED DIFF


var _VirtualDom_POSTFIX = '_elmW6BL';


function _VirtualDom_insertNode(changes, localPatches, key, vnode, yIndex, inserts)
{
	var entry = changes[key];

	// never seen this key before
	if (!entry)
	{
		entry = {
			c: 0,
			z: vnode,
			r: yIndex,
			s: undefined
		};

		inserts.push({ r: yIndex, A: entry });
		changes[key] = entry;

		return;
	}

	// this key was removed earlier, a match!
	if (entry.c === 1)
	{
		inserts.push({ r: yIndex, A: entry });

		entry.c = 2;
		var subPatches = [];
		_VirtualDom_diffHelp(entry.z, vnode, subPatches, entry.r);
		entry.r = yIndex;
		entry.s.s = {
			w: subPatches,
			A: entry
		};

		return;
	}

	// this key has already been inserted or moved, a duplicate!
	_VirtualDom_insertNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, yIndex, inserts);
}


function _VirtualDom_removeNode(changes, localPatches, key, vnode, index)
{
	var entry = changes[key];

	// never seen this key before
	if (!entry)
	{
		var patch = _VirtualDom_pushPatch(localPatches, 9, index, undefined);

		changes[key] = {
			c: 1,
			z: vnode,
			r: index,
			s: patch
		};

		return;
	}

	// this key was inserted earlier, a match!
	if (entry.c === 0)
	{
		entry.c = 2;
		var subPatches = [];
		_VirtualDom_diffHelp(vnode, entry.z, subPatches, index);

		_VirtualDom_pushPatch(localPatches, 9, index, {
			w: subPatches,
			A: entry
		});

		return;
	}

	// this key has already been removed or moved, a duplicate!
	_VirtualDom_removeNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, index);
}



// ADD DOM NODES
//
// Each DOM node has an "index" assigned in order of traversal. It is important
// to minimize our crawl over the actual DOM, so these indexes (along with the
// descendantsCount of virtual nodes) let us skip touching entire subtrees of
// the DOM if we know there are no patches there.


function _VirtualDom_addDomNodes(domNode, vNode, patches, eventNode)
{
	_VirtualDom_addDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.b, eventNode);
}


// assumes `patches` is non-empty and indexes increase monotonically.
function _VirtualDom_addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)
{
	var patch = patches[i];
	var index = patch.r;

	while (index === low)
	{
		var patchType = patch.$;

		if (patchType === 1)
		{
			_VirtualDom_addDomNodes(domNode, vNode.k, patch.s, eventNode);
		}
		else if (patchType === 8)
		{
			patch.t = domNode;
			patch.u = eventNode;

			var subPatches = patch.s.w;
			if (subPatches.length > 0)
			{
				_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);
			}
		}
		else if (patchType === 9)
		{
			patch.t = domNode;
			patch.u = eventNode;

			var data = patch.s;
			if (data)
			{
				data.A.s = domNode;
				var subPatches = data.w;
				if (subPatches.length > 0)
				{
					_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);
				}
			}
		}
		else
		{
			patch.t = domNode;
			patch.u = eventNode;
		}

		i++;

		if (!(patch = patches[i]) || (index = patch.r) > high)
		{
			return i;
		}
	}

	var tag = vNode.$;

	if (tag === 4)
	{
		var subNode = vNode.k;

		while (subNode.$ === 4)
		{
			subNode = subNode.k;
		}

		return _VirtualDom_addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);
	}

	// tag must be 1 or 2 at this point

	var vKids = vNode.e;
	var childNodes = domNode.childNodes;
	for (var j = 0; j < vKids.length; j++)
	{
		low++;
		var vKid = tag === 1 ? vKids[j] : vKids[j].b;
		var nextLow = low + (vKid.b || 0);
		if (low <= index && index <= nextLow)
		{
			i = _VirtualDom_addDomNodesHelp(childNodes[j], vKid, patches, i, low, nextLow, eventNode);
			if (!(patch = patches[i]) || (index = patch.r) > high)
			{
				return i;
			}
		}
		low = nextLow;
	}
	return i;
}



// APPLY PATCHES


function _VirtualDom_applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)
{
	if (patches.length === 0)
	{
		return rootDomNode;
	}

	_VirtualDom_addDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);
	return _VirtualDom_applyPatchesHelp(rootDomNode, patches);
}

function _VirtualDom_applyPatchesHelp(rootDomNode, patches)
{
	for (var i = 0; i < patches.length; i++)
	{
		var patch = patches[i];
		var localDomNode = patch.t
		var newNode = _VirtualDom_applyPatch(localDomNode, patch);
		if (localDomNode === rootDomNode)
		{
			rootDomNode = newNode;
		}
	}
	return rootDomNode;
}

function _VirtualDom_applyPatch(domNode, patch)
{
	switch (patch.$)
	{
		case 0:
			return _VirtualDom_applyPatchRedraw(domNode, patch.s, patch.u);

		case 4:
			_VirtualDom_applyFacts(domNode, patch.u, patch.s);
			return domNode;

		case 3:
			domNode.replaceData(0, domNode.length, patch.s);
			return domNode;

		case 1:
			return _VirtualDom_applyPatchesHelp(domNode, patch.s);

		case 2:
			if (domNode.elm_event_node_ref)
			{
				domNode.elm_event_node_ref.j = patch.s;
			}
			else
			{
				domNode.elm_event_node_ref = { j: patch.s, p: patch.u };
			}
			return domNode;

		case 6:
			var data = patch.s;
			for (var i = 0; i < data.i; i++)
			{
				domNode.removeChild(domNode.childNodes[data.v]);
			}
			return domNode;

		case 7:
			var data = patch.s;
			var kids = data.e;
			var i = data.v;
			var theEnd = domNode.childNodes[i];
			for (; i < kids.length; i++)
			{
				domNode.insertBefore(_VirtualDom_render(kids[i], patch.u), theEnd);
			}
			return domNode;

		case 9:
			var data = patch.s;
			if (!data)
			{
				domNode.parentNode.removeChild(domNode);
				return domNode;
			}
			var entry = data.A;
			if (typeof entry.r !== 'undefined')
			{
				domNode.parentNode.removeChild(domNode);
			}
			entry.s = _VirtualDom_applyPatchesHelp(domNode, data.w);
			return domNode;

		case 8:
			return _VirtualDom_applyPatchReorder(domNode, patch);

		case 5:
			return patch.s(domNode);

		default:
			_Debug_crash(10); // 'Ran into an unknown patch!'
	}
}


function _VirtualDom_applyPatchRedraw(domNode, vNode, eventNode)
{
	var parentNode = domNode.parentNode;
	var newNode = _VirtualDom_render(vNode, eventNode);

	if (!newNode.elm_event_node_ref)
	{
		newNode.elm_event_node_ref = domNode.elm_event_node_ref;
	}

	if (parentNode && newNode !== domNode)
	{
		parentNode.replaceChild(newNode, domNode);
	}
	return newNode;
}


function _VirtualDom_applyPatchReorder(domNode, patch)
{
	var data = patch.s;

	// remove end inserts
	var frag = _VirtualDom_applyPatchReorderEndInsertsHelp(data.y, patch);

	// removals
	domNode = _VirtualDom_applyPatchesHelp(domNode, data.w);

	// inserts
	var inserts = data.x;
	for (var i = 0; i < inserts.length; i++)
	{
		var insert = inserts[i];
		var entry = insert.A;
		var node = entry.c === 2
			? entry.s
			: _VirtualDom_render(entry.z, patch.u);
		domNode.insertBefore(node, domNode.childNodes[insert.r]);
	}

	// add end inserts
	if (frag)
	{
		_VirtualDom_appendChild(domNode, frag);
	}

	return domNode;
}


function _VirtualDom_applyPatchReorderEndInsertsHelp(endInserts, patch)
{
	if (!endInserts)
	{
		return;
	}

	var frag = _VirtualDom_doc.createDocumentFragment();
	for (var i = 0; i < endInserts.length; i++)
	{
		var insert = endInserts[i];
		var entry = insert.A;
		_VirtualDom_appendChild(frag, entry.c === 2
			? entry.s
			: _VirtualDom_render(entry.z, patch.u)
		);
	}
	return frag;
}


function _VirtualDom_virtualize(node)
{
	// TEXT NODES

	if (node.nodeType === 3)
	{
		return _VirtualDom_text(node.textContent);
	}


	// WEIRD NODES

	if (node.nodeType !== 1)
	{
		return _VirtualDom_text('');
	}


	// ELEMENT NODES

	var attrList = _List_Nil;
	var attrs = node.attributes;
	for (var i = attrs.length; i--; )
	{
		var attr = attrs[i];
		var name = attr.name;
		var value = attr.value;
		attrList = _List_Cons( A2(_VirtualDom_attribute, name, value), attrList );
	}

	var tag = node.tagName.toLowerCase();
	var kidList = _List_Nil;
	var kids = node.childNodes;

	for (var i = kids.length; i--; )
	{
		kidList = _List_Cons(_VirtualDom_virtualize(kids[i]), kidList);
	}
	return A3(_VirtualDom_node, tag, attrList, kidList);
}

function _VirtualDom_dekey(keyedNode)
{
	var keyedKids = keyedNode.e;
	var len = keyedKids.length;
	var kids = new Array(len);
	for (var i = 0; i < len; i++)
	{
		kids[i] = keyedKids[i].b;
	}

	return {
		$: 1,
		c: keyedNode.c,
		d: keyedNode.d,
		e: kids,
		f: keyedNode.f,
		b: keyedNode.b
	};
}




// ELEMENT


var _Debugger_element;

var _Browser_element = _Debugger_element || F4(function(impl, flagDecoder, debugMetadata, args)
{
	return _Platform_initialize(
		flagDecoder,
		args,
		impl.hw,
		impl.iW,
		impl.iO,
		function(sendToApp, initialModel) {
			var view = impl.i_;
			/**/
			var domNode = args['node'];
			//*/
			/**_UNUSED/
			var domNode = args && args['node'] ? args['node'] : _Debug_crash(0);
			//*/
			var currNode = _VirtualDom_virtualize(domNode);

			return _Browser_makeAnimator(initialModel, function(model)
			{
				var nextNode = view(model);
				var patches = _VirtualDom_diff(currNode, nextNode);
				domNode = _VirtualDom_applyPatches(domNode, currNode, patches, sendToApp);
				currNode = nextNode;
			});
		}
	);
});



// DOCUMENT


var _Debugger_document;

var _Browser_document = _Debugger_document || F4(function(impl, flagDecoder, debugMetadata, args)
{
	return _Platform_initialize(
		flagDecoder,
		args,
		impl.hw,
		impl.iW,
		impl.iO,
		function(sendToApp, initialModel) {
			var divertHrefToApp = impl.f_ && impl.f_(sendToApp)
			var view = impl.i_;
			var title = _VirtualDom_doc.title;
			var bodyNode = _VirtualDom_doc.body;
			var currNode = _VirtualDom_virtualize(bodyNode);
			return _Browser_makeAnimator(initialModel, function(model)
			{
				_VirtualDom_divertHrefToApp = divertHrefToApp;
				var doc = view(model);
				var nextNode = _VirtualDom_node('body')(_List_Nil)(doc.bM);
				var patches = _VirtualDom_diff(currNode, nextNode);
				bodyNode = _VirtualDom_applyPatches(bodyNode, currNode, patches, sendToApp);
				currNode = nextNode;
				_VirtualDom_divertHrefToApp = 0;
				(title !== doc.er) && (_VirtualDom_doc.title = title = doc.er);
			});
		}
	);
});



// ANIMATION


var _Browser_cancelAnimationFrame =
	typeof cancelAnimationFrame !== 'undefined'
		? cancelAnimationFrame
		: function(id) { clearTimeout(id); };

var _Browser_requestAnimationFrame =
	typeof requestAnimationFrame !== 'undefined'
		? requestAnimationFrame
		: function(callback) { return setTimeout(callback, 1000 / 60); };


function _Browser_makeAnimator(model, draw)
{
	draw(model);

	var state = 0;

	function updateIfNeeded()
	{
		state = state === 1
			? 0
			: ( _Browser_requestAnimationFrame(updateIfNeeded), draw(model), 1 );
	}

	return function(nextModel, isSync)
	{
		model = nextModel;

		isSync
			? ( draw(model),
				state === 2 && (state = 1)
				)
			: ( state === 0 && _Browser_requestAnimationFrame(updateIfNeeded),
				state = 2
				);
	};
}



// APPLICATION


function _Browser_application(impl)
{
	var onUrlChange = impl.h7;
	var onUrlRequest = impl.h8;
	var key = function() { key.a(onUrlChange(_Browser_getUrl())); };

	return _Browser_document({
		f_: function(sendToApp)
		{
			key.a = sendToApp;
			_Browser_window.addEventListener('popstate', key);
			_Browser_window.navigator.userAgent.indexOf('Trident') < 0 || _Browser_window.addEventListener('hashchange', key);

			return F2(function(domNode, event)
			{
				if (!event.ctrlKey && !event.metaKey && !event.shiftKey && event.button < 1 && !domNode.target && !domNode.hasAttribute('download'))
				{
					event.preventDefault();
					var href = domNode.href;
					var curr = _Browser_getUrl();
					var next = $elm$url$Url$fromString(href).a;
					sendToApp(onUrlRequest(
						(next
							&& curr.it === next.it
							&& curr.hp === next.hp
							&& curr.il.a === next.il.a
						)
							? $elm$browser$Browser$Internal(next)
							: $elm$browser$Browser$External(href)
					));
				}
			});
		},
		hw: function(flags)
		{
			return A3(impl.hw, flags, _Browser_getUrl(), key);
		},
		i_: impl.i_,
		iW: impl.iW,
		iO: impl.iO
	});
}

function _Browser_getUrl()
{
	return $elm$url$Url$fromString(_VirtualDom_doc.location.href).a || _Debug_crash(1);
}

var _Browser_go = F2(function(key, n)
{
	return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {
		n && history.go(n);
		key();
	}));
});

var _Browser_pushUrl = F2(function(key, url)
{
	return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {
		history.pushState({}, '', url);
		key();
	}));
});

var _Browser_replaceUrl = F2(function(key, url)
{
	return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {
		history.replaceState({}, '', url);
		key();
	}));
});



// GLOBAL EVENTS


var _Browser_fakeNode = { addEventListener: function() {}, removeEventListener: function() {} };
var _Browser_doc = typeof document !== 'undefined' ? document : _Browser_fakeNode;
var _Browser_window = typeof window !== 'undefined' ? window : _Browser_fakeNode;

var _Browser_on = F3(function(node, eventName, sendToSelf)
{
	return _Scheduler_spawn(_Scheduler_binding(function(callback)
	{
		function handler(event)	{ _Scheduler_rawSpawn(sendToSelf(event)); }
		node.addEventListener(eventName, handler, _VirtualDom_passiveSupported && { passive: true });
		return function() { node.removeEventListener(eventName, handler); };
	}));
});

var _Browser_decodeEvent = F2(function(decoder, event)
{
	var result = _Json_runHelp(decoder, event);
	return $elm$core$Result$isOk(result) ? $elm$core$Maybe$Just(result.a) : $elm$core$Maybe$Nothing;
});



// PAGE VISIBILITY


function _Browser_visibilityInfo()
{
	return (typeof _VirtualDom_doc.hidden !== 'undefined')
		? { kO: 'hidden', jQ: 'visibilitychange' }
		:
	(typeof _VirtualDom_doc.mozHidden !== 'undefined')
		? { kO: 'mozHidden', jQ: 'mozvisibilitychange' }
		:
	(typeof _VirtualDom_doc.msHidden !== 'undefined')
		? { kO: 'msHidden', jQ: 'msvisibilitychange' }
		:
	(typeof _VirtualDom_doc.webkitHidden !== 'undefined')
		? { kO: 'webkitHidden', jQ: 'webkitvisibilitychange' }
		: { kO: 'hidden', jQ: 'visibilitychange' };
}



// ANIMATION FRAMES


function _Browser_rAF()
{
	return _Scheduler_binding(function(callback)
	{
		var id = _Browser_requestAnimationFrame(function() {
			callback(_Scheduler_succeed(Date.now()));
		});

		return function() {
			_Browser_cancelAnimationFrame(id);
		};
	});
}


function _Browser_now()
{
	return _Scheduler_binding(function(callback)
	{
		callback(_Scheduler_succeed(Date.now()));
	});
}



// DOM STUFF


function _Browser_withNode(id, doStuff)
{
	return _Scheduler_binding(function(callback)
	{
		_Browser_requestAnimationFrame(function() {
			var node = document.getElementById(id);
			callback(node
				? _Scheduler_succeed(doStuff(node))
				: _Scheduler_fail($elm$browser$Browser$Dom$NotFound(id))
			);
		});
	});
}


function _Browser_withWindow(doStuff)
{
	return _Scheduler_binding(function(callback)
	{
		_Browser_requestAnimationFrame(function() {
			callback(_Scheduler_succeed(doStuff()));
		});
	});
}


// FOCUS and BLUR


var _Browser_call = F2(function(functionName, id)
{
	return _Browser_withNode(id, function(node) {
		node[functionName]();
		return _Utils_Tuple0;
	});
});



// WINDOW VIEWPORT


function _Browser_getViewport()
{
	return {
		iB: _Browser_getScene(),
		i0: {
			gt: _Browser_window.pageXOffset,
			nt: _Browser_window.pageYOffset,
			i5: _Browser_doc.documentElement.clientWidth,
			hm: _Browser_doc.documentElement.clientHeight
		}
	};
}

function _Browser_getScene()
{
	var body = _Browser_doc.body;
	var elem = _Browser_doc.documentElement;
	return {
		i5: Math.max(body.scrollWidth, body.offsetWidth, elem.scrollWidth, elem.offsetWidth, elem.clientWidth),
		hm: Math.max(body.scrollHeight, body.offsetHeight, elem.scrollHeight, elem.offsetHeight, elem.clientHeight)
	};
}

var _Browser_setViewport = F2(function(x, y)
{
	return _Browser_withWindow(function()
	{
		_Browser_window.scroll(x, y);
		return _Utils_Tuple0;
	});
});



// ELEMENT VIEWPORT


function _Browser_getViewportOf(id)
{
	return _Browser_withNode(id, function(node)
	{
		return {
			iB: {
				i5: node.scrollWidth,
				hm: node.scrollHeight
			},
			i0: {
				gt: node.scrollLeft,
				nt: node.scrollTop,
				i5: node.clientWidth,
				hm: node.clientHeight
			}
		};
	});
}


var _Browser_setViewportOf = F3(function(id, x, y)
{
	return _Browser_withNode(id, function(node)
	{
		node.scrollLeft = x;
		node.scrollTop = y;
		return _Utils_Tuple0;
	});
});



// ELEMENT


function _Browser_getElement(id)
{
	return _Browser_withNode(id, function(node)
	{
		var rect = node.getBoundingClientRect();
		var x = _Browser_window.pageXOffset;
		var y = _Browser_window.pageYOffset;
		return {
			iB: _Browser_getScene(),
			i0: {
				gt: x,
				nt: y,
				i5: _Browser_doc.documentElement.clientWidth,
				hm: _Browser_doc.documentElement.clientHeight
			},
			kq: {
				gt: x + rect.left,
				nt: y + rect.top,
				i5: rect.width,
				hm: rect.height
			}
		};
	});
}



// LOAD and RELOAD


function _Browser_reload(skipCache)
{
	return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function(callback)
	{
		_VirtualDom_doc.location.reload(skipCache);
	}));
}

function _Browser_load(url)
{
	return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function(callback)
	{
		try
		{
			_Browser_window.location = url;
		}
		catch(err)
		{
			// Only Firefox can throw a NS_ERROR_MALFORMED_URI exception here.
			// Other browsers reload the page, so let's be consistent about that.
			_VirtualDom_doc.location.reload(false);
		}
	}));
}




// STRINGS


var _Parser_isSubString = F5(function(smallString, offset, row, col, bigString)
{
	var smallLength = smallString.length;
	var isGood = offset + smallLength <= bigString.length;

	for (var i = 0; isGood && i < smallLength; )
	{
		var code = bigString.charCodeAt(offset);
		isGood =
			smallString[i++] === bigString[offset++]
			&& (
				code === 0x000A /* \n */
					? ( row++, col=1 )
					: ( col++, (code & 0xF800) === 0xD800 ? smallString[i++] === bigString[offset++] : 1 )
			)
	}

	return _Utils_Tuple3(isGood ? offset : -1, row, col);
});



// CHARS


var _Parser_isSubChar = F3(function(predicate, offset, string)
{
	return (
		string.length <= offset
			? -1
			:
		(string.charCodeAt(offset) & 0xF800) === 0xD800
			? (predicate(_Utils_chr(string.substr(offset, 2))) ? offset + 2 : -1)
			:
		(predicate(_Utils_chr(string[offset]))
			? ((string[offset] === '\n') ? -2 : (offset + 1))
			: -1
		)
	);
});


var _Parser_isAsciiCode = F3(function(code, offset, string)
{
	return string.charCodeAt(offset) === code;
});



// NUMBERS


var _Parser_chompBase10 = F2(function(offset, string)
{
	for (; offset < string.length; offset++)
	{
		var code = string.charCodeAt(offset);
		if (code < 0x30 || 0x39 < code)
		{
			return offset;
		}
	}
	return offset;
});


var _Parser_consumeBase = F3(function(base, offset, string)
{
	for (var total = 0; offset < string.length; offset++)
	{
		var digit = string.charCodeAt(offset) - 0x30;
		if (digit < 0 || base <= digit) break;
		total = base * total + digit;
	}
	return _Utils_Tuple2(offset, total);
});


var _Parser_consumeBase16 = F2(function(offset, string)
{
	for (var total = 0; offset < string.length; offset++)
	{
		var code = string.charCodeAt(offset);
		if (0x30 <= code && code <= 0x39)
		{
			total = 16 * total + code - 0x30;
		}
		else if (0x41 <= code && code <= 0x46)
		{
			total = 16 * total + code - 55;
		}
		else if (0x61 <= code && code <= 0x66)
		{
			total = 16 * total + code - 87;
		}
		else
		{
			break;
		}
	}
	return _Utils_Tuple2(offset, total);
});



// FIND STRING


var _Parser_findSubString = F5(function(smallString, offset, row, col, bigString)
{
	var newOffset = bigString.indexOf(smallString, offset);
	var target = newOffset < 0 ? bigString.length : newOffset + smallString.length;

	while (offset < target)
	{
		var code = bigString.charCodeAt(offset++);
		code === 0x000A /* \n */
			? ( col=1, row++ )
			: ( col++, (code & 0xF800) === 0xD800 && offset++ )
	}

	return _Utils_Tuple3(newOffset, row, col);
});



// SEND REQUEST

var _Http_toTask = F3(function(router, toTask, request)
{
	return _Scheduler_binding(function(callback)
	{
		function done(response) {
			callback(toTask(request.bV.a(response)));
		}

		var xhr = new XMLHttpRequest();
		xhr.addEventListener('error', function() { done($elm$http$Http$NetworkError_); });
		xhr.addEventListener('timeout', function() { done($elm$http$Http$Timeout_); });
		xhr.addEventListener('load', function() { done(_Http_toResponse(request.bV.b, xhr)); });
		$elm$core$Maybe$isJust(request.cE) && _Http_track(router, xhr, request.cE.a);

		try {
			xhr.open(request.cf, request.cF, true);
		} catch (e) {
			return done($elm$http$Http$BadUrl_(request.cF));
		}

		_Http_configureRequest(xhr, request);

		request.bM.a && xhr.setRequestHeader('Content-Type', request.bM.a);
		xhr.send(request.bM.b);

		return function() { xhr.c = true; xhr.abort(); };
	});
});


// CONFIGURE

function _Http_configureRequest(xhr, request)
{
	for (var headers = request.b2; headers.b; headers = headers.b) // WHILE_CONS
	{
		xhr.setRequestHeader(headers.a.a, headers.a.b);
	}
	xhr.timeout = request.cA.a || 0;
	xhr.responseType = request.bV.d;
	xhr.withCredentials = request.jq;
}


// RESPONSES

function _Http_toResponse(toBody, xhr)
{
	return A2(
		200 <= xhr.status && xhr.status < 300 ? $elm$http$Http$GoodStatus_ : $elm$http$Http$BadStatus_,
		_Http_toMetadata(xhr),
		toBody(xhr.response)
	);
}


// METADATA

function _Http_toMetadata(xhr)
{
	return {
		cF: xhr.responseURL,
		mE: xhr.status,
		mF: xhr.statusText,
		b2: _Http_parseHeaders(xhr.getAllResponseHeaders())
	};
}


// HEADERS

function _Http_parseHeaders(rawHeaders)
{
	if (!rawHeaders)
	{
		return $elm$core$Dict$empty;
	}

	var headers = $elm$core$Dict$empty;
	var headerPairs = rawHeaders.split('\r\n');
	for (var i = headerPairs.length; i--; )
	{
		var headerPair = headerPairs[i];
		var index = headerPair.indexOf(': ');
		if (index > 0)
		{
			var key = headerPair.substring(0, index);
			var value = headerPair.substring(index + 2);

			headers = A3($elm$core$Dict$update, key, function(oldValue) {
				return $elm$core$Maybe$Just($elm$core$Maybe$isJust(oldValue)
					? value + ', ' + oldValue.a
					: value
				);
			}, headers);
		}
	}
	return headers;
}


// EXPECT

var _Http_expect = F3(function(type, toBody, toValue)
{
	return {
		$: 0,
		d: type,
		b: toBody,
		a: toValue
	};
});

var _Http_mapExpect = F2(function(func, expect)
{
	return {
		$: 0,
		d: expect.d,
		b: expect.b,
		a: function(x) { return func(expect.a(x)); }
	};
});

function _Http_toDataView(arrayBuffer)
{
	return new DataView(arrayBuffer);
}


// BODY and PARTS

var _Http_emptyBody = { $: 0 };
var _Http_pair = F2(function(a, b) { return { $: 0, a: a, b: b }; });

function _Http_toFormData(parts)
{
	for (var formData = new FormData(); parts.b; parts = parts.b) // WHILE_CONS
	{
		var part = parts.a;
		formData.append(part.a, part.b);
	}
	return formData;
}

var _Http_bytesToBlob = F2(function(mime, bytes)
{
	return new Blob([bytes], { type: mime });
});


// PROGRESS

function _Http_track(router, xhr, tracker)
{
	// TODO check out lengthComputable on loadstart event

	xhr.upload.addEventListener('progress', function(event) {
		if (xhr.c) { return; }
		_Scheduler_rawSpawn(A2($elm$core$Platform$sendToSelf, router, _Utils_Tuple2(tracker, $elm$http$Http$Sending({
			mv: event.loaded,
			f$: event.total
		}))));
	});
	xhr.addEventListener('progress', function(event) {
		if (xhr.c) { return; }
		_Scheduler_rawSpawn(A2($elm$core$Platform$sendToSelf, router, _Utils_Tuple2(tracker, $elm$http$Http$Receiving({
			l9: event.loaded,
			f$: event.lengthComputable ? $elm$core$Maybe$Just(event.total) : $elm$core$Maybe$Nothing
		}))));
	});
}


var _Bitwise_and = F2(function(a, b)
{
	return a & b;
});

var _Bitwise_or = F2(function(a, b)
{
	return a | b;
});

var _Bitwise_xor = F2(function(a, b)
{
	return a ^ b;
});

function _Bitwise_complement(a)
{
	return ~a;
};

var _Bitwise_shiftLeftBy = F2(function(offset, a)
{
	return a << offset;
});

var _Bitwise_shiftRightBy = F2(function(offset, a)
{
	return a >> offset;
});

var _Bitwise_shiftRightZfBy = F2(function(offset, a)
{
	return a >>> offset;
});



function _Time_now(millisToPosix)
{
	return _Scheduler_binding(function(callback)
	{
		callback(_Scheduler_succeed(millisToPosix(Date.now())));
	});
}

var _Time_setInterval = F2(function(interval, task)
{
	return _Scheduler_binding(function(callback)
	{
		var id = setInterval(function() { _Scheduler_rawSpawn(task); }, interval);
		return function() { clearInterval(id); };
	});
});

function _Time_here()
{
	return _Scheduler_binding(function(callback)
	{
		callback(_Scheduler_succeed(
			A2($elm$time$Time$customZone, -(new Date().getTimezoneOffset()), _List_Nil)
		));
	});
}


function _Time_getZoneName()
{
	return _Scheduler_binding(function(callback)
	{
		try
		{
			var name = $elm$time$Time$Name(Intl.DateTimeFormat().resolvedOptions().timeZone);
		}
		catch (e)
		{
			var name = $elm$time$Time$Offset(new Date().getTimezoneOffset());
		}
		callback(_Scheduler_succeed(name));
	});
}


function _Url_percentEncode(string)
{
	return encodeURIComponent(string);
}

function _Url_percentDecode(string)
{
	try
	{
		return $elm$core$Maybe$Just(decodeURIComponent(string));
	}
	catch (e)
	{
		return $elm$core$Maybe$Nothing;
	}
}

// CREATE

var _Regex_never = /.^/;

var _Regex_fromStringWith = F2(function(options, string)
{
	var flags = 'g';
	if (options.ly) { flags += 'm'; }
	if (options.jO) { flags += 'i'; }

	try
	{
		return $elm$core$Maybe$Just(new RegExp(string, flags));
	}
	catch(error)
	{
		return $elm$core$Maybe$Nothing;
	}
});


// USE

var _Regex_contains = F2(function(re, string)
{
	return string.match(re) !== null;
});


var _Regex_findAtMost = F3(function(n, re, str)
{
	var out = [];
	var number = 0;
	var string = str;
	var lastIndex = re.lastIndex;
	var prevLastIndex = -1;
	var result;
	while (number++ < n && (result = re.exec(string)))
	{
		if (prevLastIndex == re.lastIndex) break;
		var i = result.length - 1;
		var subs = new Array(i);
		while (i > 0)
		{
			var submatch = result[i];
			subs[--i] = submatch
				? $elm$core$Maybe$Just(submatch)
				: $elm$core$Maybe$Nothing;
		}
		out.push(A4($elm$regex$Regex$Match, result[0], result.index, number, _List_fromArray(subs)));
		prevLastIndex = re.lastIndex;
	}
	re.lastIndex = lastIndex;
	return _List_fromArray(out);
});


var _Regex_replaceAtMost = F4(function(n, re, replacer, string)
{
	var count = 0;
	function jsReplacer(match)
	{
		if (count++ >= n)
		{
			return match;
		}
		var i = arguments.length - 3;
		var submatches = new Array(i);
		while (i > 0)
		{
			var submatch = arguments[i];
			submatches[--i] = submatch
				? $elm$core$Maybe$Just(submatch)
				: $elm$core$Maybe$Nothing;
		}
		return replacer(A4($elm$regex$Regex$Match, match, arguments[arguments.length - 2], count, _List_fromArray(submatches)));
	}
	return string.replace(re, jsReplacer);
});

var _Regex_splitAtMost = F3(function(n, re, str)
{
	var string = str;
	var out = [];
	var start = re.lastIndex;
	var restoreLastIndex = re.lastIndex;
	while (n--)
	{
		var result = re.exec(string);
		if (!result) break;
		out.push(string.slice(start, result.index));
		start = re.lastIndex;
	}
	out.push(string.slice(start));
	re.lastIndex = restoreLastIndex;
	return _List_fromArray(out);
});

var _Regex_infinity = Infinity;
var $author$project$Main$ChangedUrl = function (a) {
	return {$: 0, a: a};
};
var $author$project$Main$ClickedLink = function (a) {
	return {$: 1, a: a};
};
var $elm$core$Result$Err = function (a) {
	return {$: 1, a: a};
};
var $elm$core$Result$andThen = F2(
	function (callback, result) {
		if (!result.$) {
			var value = result.a;
			return callback(value);
		} else {
			var msg = result.a;
			return $elm$core$Result$Err(msg);
		}
	});
var $elm$core$Basics$apR = F2(
	function (x, f) {
		return f(x);
	});
var $elm$core$Basics$EQ = 1;
var $elm$core$Basics$GT = 2;
var $elm$core$Basics$LT = 0;
var $elm$core$List$cons = _List_cons;
var $elm$core$Dict$foldr = F3(
	function (func, acc, t) {
		foldr:
		while (true) {
			if (t.$ === -2) {
				return acc;
			} else {
				var key = t.b;
				var value = t.c;
				var left = t.d;
				var right = t.e;
				var $temp$func = func,
					$temp$acc = A3(
					func,
					key,
					value,
					A3($elm$core$Dict$foldr, func, acc, right)),
					$temp$t = left;
				func = $temp$func;
				acc = $temp$acc;
				t = $temp$t;
				continue foldr;
			}
		}
	});
var $elm$core$Dict$toList = function (dict) {
	return A3(
		$elm$core$Dict$foldr,
		F3(
			function (key, value, list) {
				return A2(
					$elm$core$List$cons,
					_Utils_Tuple2(key, value),
					list);
			}),
		_List_Nil,
		dict);
};
var $elm$core$Dict$keys = function (dict) {
	return A3(
		$elm$core$Dict$foldr,
		F3(
			function (key, value, keyList) {
				return A2($elm$core$List$cons, key, keyList);
			}),
		_List_Nil,
		dict);
};
var $elm$core$Set$toList = function (_v0) {
	var dict = _v0;
	return $elm$core$Dict$keys(dict);
};
var $elm$core$Elm$JsArray$foldr = _JsArray_foldr;
var $elm$core$Array$foldr = F3(
	function (func, baseCase, _v0) {
		var tree = _v0.c;
		var tail = _v0.d;
		var helper = F2(
			function (node, acc) {
				if (!node.$) {
					var subTree = node.a;
					return A3($elm$core$Elm$JsArray$foldr, helper, acc, subTree);
				} else {
					var values = node.a;
					return A3($elm$core$Elm$JsArray$foldr, func, acc, values);
				}
			});
		return A3(
			$elm$core$Elm$JsArray$foldr,
			helper,
			A3($elm$core$Elm$JsArray$foldr, func, baseCase, tail),
			tree);
	});
var $elm$core$Array$toList = function (array) {
	return A3($elm$core$Array$foldr, $elm$core$List$cons, _List_Nil, array);
};
var $elm$json$Json$Decode$Failure = F2(
	function (a, b) {
		return {$: 3, a: a, b: b};
	});
var $elm$json$Json$Decode$Field = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $elm$json$Json$Decode$Index = F2(
	function (a, b) {
		return {$: 1, a: a, b: b};
	});
var $elm$core$Result$Ok = function (a) {
	return {$: 0, a: a};
};
var $elm$json$Json$Decode$OneOf = function (a) {
	return {$: 2, a: a};
};
var $elm$core$Basics$False = 1;
var $elm$core$Basics$add = _Basics_add;
var $elm$core$Maybe$Just = function (a) {
	return {$: 0, a: a};
};
var $elm$core$Maybe$Nothing = {$: 1};
var $elm$core$String$all = _String_all;
var $elm$core$Basics$and = _Basics_and;
var $elm$core$Basics$append = _Utils_append;
var $elm$json$Json$Encode$encode = _Json_encode;
var $elm$core$String$fromInt = _String_fromNumber;
var $elm$core$String$join = F2(
	function (sep, chunks) {
		return A2(
			_String_join,
			sep,
			_List_toArray(chunks));
	});
var $elm$core$String$split = F2(
	function (sep, string) {
		return _List_fromArray(
			A2(_String_split, sep, string));
	});
var $elm$json$Json$Decode$indent = function (str) {
	return A2(
		$elm$core$String$join,
		'\n    ',
		A2($elm$core$String$split, '\n', str));
};
var $elm$core$List$foldl = F3(
	function (func, acc, list) {
		foldl:
		while (true) {
			if (!list.b) {
				return acc;
			} else {
				var x = list.a;
				var xs = list.b;
				var $temp$func = func,
					$temp$acc = A2(func, x, acc),
					$temp$list = xs;
				func = $temp$func;
				acc = $temp$acc;
				list = $temp$list;
				continue foldl;
			}
		}
	});
var $elm$core$List$length = function (xs) {
	return A3(
		$elm$core$List$foldl,
		F2(
			function (_v0, i) {
				return i + 1;
			}),
		0,
		xs);
};
var $elm$core$List$map2 = _List_map2;
var $elm$core$Basics$le = _Utils_le;
var $elm$core$Basics$sub = _Basics_sub;
var $elm$core$List$rangeHelp = F3(
	function (lo, hi, list) {
		rangeHelp:
		while (true) {
			if (_Utils_cmp(lo, hi) < 1) {
				var $temp$lo = lo,
					$temp$hi = hi - 1,
					$temp$list = A2($elm$core$List$cons, hi, list);
				lo = $temp$lo;
				hi = $temp$hi;
				list = $temp$list;
				continue rangeHelp;
			} else {
				return list;
			}
		}
	});
var $elm$core$List$range = F2(
	function (lo, hi) {
		return A3($elm$core$List$rangeHelp, lo, hi, _List_Nil);
	});
var $elm$core$List$indexedMap = F2(
	function (f, xs) {
		return A3(
			$elm$core$List$map2,
			f,
			A2(
				$elm$core$List$range,
				0,
				$elm$core$List$length(xs) - 1),
			xs);
	});
var $elm$core$Char$toCode = _Char_toCode;
var $elm$core$Char$isLower = function (_char) {
	var code = $elm$core$Char$toCode(_char);
	return (97 <= code) && (code <= 122);
};
var $elm$core$Char$isUpper = function (_char) {
	var code = $elm$core$Char$toCode(_char);
	return (code <= 90) && (65 <= code);
};
var $elm$core$Basics$or = _Basics_or;
var $elm$core$Char$isAlpha = function (_char) {
	return $elm$core$Char$isLower(_char) || $elm$core$Char$isUpper(_char);
};
var $elm$core$Char$isDigit = function (_char) {
	var code = $elm$core$Char$toCode(_char);
	return (code <= 57) && (48 <= code);
};
var $elm$core$Char$isAlphaNum = function (_char) {
	return $elm$core$Char$isLower(_char) || ($elm$core$Char$isUpper(_char) || $elm$core$Char$isDigit(_char));
};
var $elm$core$List$reverse = function (list) {
	return A3($elm$core$List$foldl, $elm$core$List$cons, _List_Nil, list);
};
var $elm$core$String$uncons = _String_uncons;
var $elm$json$Json$Decode$errorOneOf = F2(
	function (i, error) {
		return '\n\n(' + ($elm$core$String$fromInt(i + 1) + (') ' + $elm$json$Json$Decode$indent(
			$elm$json$Json$Decode$errorToString(error))));
	});
var $elm$json$Json$Decode$errorToString = function (error) {
	return A2($elm$json$Json$Decode$errorToStringHelp, error, _List_Nil);
};
var $elm$json$Json$Decode$errorToStringHelp = F2(
	function (error, context) {
		errorToStringHelp:
		while (true) {
			switch (error.$) {
				case 0:
					var f = error.a;
					var err = error.b;
					var isSimple = function () {
						var _v1 = $elm$core$String$uncons(f);
						if (_v1.$ === 1) {
							return false;
						} else {
							var _v2 = _v1.a;
							var _char = _v2.a;
							var rest = _v2.b;
							return $elm$core$Char$isAlpha(_char) && A2($elm$core$String$all, $elm$core$Char$isAlphaNum, rest);
						}
					}();
					var fieldName = isSimple ? ('.' + f) : ('[\'' + (f + '\']'));
					var $temp$error = err,
						$temp$context = A2($elm$core$List$cons, fieldName, context);
					error = $temp$error;
					context = $temp$context;
					continue errorToStringHelp;
				case 1:
					var i = error.a;
					var err = error.b;
					var indexName = '[' + ($elm$core$String$fromInt(i) + ']');
					var $temp$error = err,
						$temp$context = A2($elm$core$List$cons, indexName, context);
					error = $temp$error;
					context = $temp$context;
					continue errorToStringHelp;
				case 2:
					var errors = error.a;
					if (!errors.b) {
						return 'Ran into a Json.Decode.oneOf with no possibilities' + function () {
							if (!context.b) {
								return '!';
							} else {
								return ' at json' + A2(
									$elm$core$String$join,
									'',
									$elm$core$List$reverse(context));
							}
						}();
					} else {
						if (!errors.b.b) {
							var err = errors.a;
							var $temp$error = err,
								$temp$context = context;
							error = $temp$error;
							context = $temp$context;
							continue errorToStringHelp;
						} else {
							var starter = function () {
								if (!context.b) {
									return 'Json.Decode.oneOf';
								} else {
									return 'The Json.Decode.oneOf at json' + A2(
										$elm$core$String$join,
										'',
										$elm$core$List$reverse(context));
								}
							}();
							var introduction = starter + (' failed in the following ' + ($elm$core$String$fromInt(
								$elm$core$List$length(errors)) + ' ways:'));
							return A2(
								$elm$core$String$join,
								'\n\n',
								A2(
									$elm$core$List$cons,
									introduction,
									A2($elm$core$List$indexedMap, $elm$json$Json$Decode$errorOneOf, errors)));
						}
					}
				default:
					var msg = error.a;
					var json = error.b;
					var introduction = function () {
						if (!context.b) {
							return 'Problem with the given value:\n\n';
						} else {
							return 'Problem with the value at json' + (A2(
								$elm$core$String$join,
								'',
								$elm$core$List$reverse(context)) + ':\n\n    ');
						}
					}();
					return introduction + ($elm$json$Json$Decode$indent(
						A2($elm$json$Json$Encode$encode, 4, json)) + ('\n\n' + msg));
			}
		}
	});
var $elm$core$Array$branchFactor = 32;
var $elm$core$Array$Array_elm_builtin = F4(
	function (a, b, c, d) {
		return {$: 0, a: a, b: b, c: c, d: d};
	});
var $elm$core$Elm$JsArray$empty = _JsArray_empty;
var $elm$core$Basics$ceiling = _Basics_ceiling;
var $elm$core$Basics$fdiv = _Basics_fdiv;
var $elm$core$Basics$logBase = F2(
	function (base, number) {
		return _Basics_log(number) / _Basics_log(base);
	});
var $elm$core$Basics$toFloat = _Basics_toFloat;
var $elm$core$Array$shiftStep = $elm$core$Basics$ceiling(
	A2($elm$core$Basics$logBase, 2, $elm$core$Array$branchFactor));
var $elm$core$Array$empty = A4($elm$core$Array$Array_elm_builtin, 0, $elm$core$Array$shiftStep, $elm$core$Elm$JsArray$empty, $elm$core$Elm$JsArray$empty);
var $elm$core$Elm$JsArray$initialize = _JsArray_initialize;
var $elm$core$Array$Leaf = function (a) {
	return {$: 1, a: a};
};
var $elm$core$Basics$apL = F2(
	function (f, x) {
		return f(x);
	});
var $elm$core$Basics$eq = _Utils_equal;
var $elm$core$Basics$floor = _Basics_floor;
var $elm$core$Elm$JsArray$length = _JsArray_length;
var $elm$core$Basics$gt = _Utils_gt;
var $elm$core$Basics$max = F2(
	function (x, y) {
		return (_Utils_cmp(x, y) > 0) ? x : y;
	});
var $elm$core$Basics$mul = _Basics_mul;
var $elm$core$Array$SubTree = function (a) {
	return {$: 0, a: a};
};
var $elm$core$Elm$JsArray$initializeFromList = _JsArray_initializeFromList;
var $elm$core$Array$compressNodes = F2(
	function (nodes, acc) {
		compressNodes:
		while (true) {
			var _v0 = A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, nodes);
			var node = _v0.a;
			var remainingNodes = _v0.b;
			var newAcc = A2(
				$elm$core$List$cons,
				$elm$core$Array$SubTree(node),
				acc);
			if (!remainingNodes.b) {
				return $elm$core$List$reverse(newAcc);
			} else {
				var $temp$nodes = remainingNodes,
					$temp$acc = newAcc;
				nodes = $temp$nodes;
				acc = $temp$acc;
				continue compressNodes;
			}
		}
	});
var $elm$core$Tuple$first = function (_v0) {
	var x = _v0.a;
	return x;
};
var $elm$core$Array$treeFromBuilder = F2(
	function (nodeList, nodeListSize) {
		treeFromBuilder:
		while (true) {
			var newNodeSize = $elm$core$Basics$ceiling(nodeListSize / $elm$core$Array$branchFactor);
			if (newNodeSize === 1) {
				return A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, nodeList).a;
			} else {
				var $temp$nodeList = A2($elm$core$Array$compressNodes, nodeList, _List_Nil),
					$temp$nodeListSize = newNodeSize;
				nodeList = $temp$nodeList;
				nodeListSize = $temp$nodeListSize;
				continue treeFromBuilder;
			}
		}
	});
var $elm$core$Array$builderToArray = F2(
	function (reverseNodeList, builder) {
		if (!builder.q) {
			return A4(
				$elm$core$Array$Array_elm_builtin,
				$elm$core$Elm$JsArray$length(builder.s),
				$elm$core$Array$shiftStep,
				$elm$core$Elm$JsArray$empty,
				builder.s);
		} else {
			var treeLen = builder.q * $elm$core$Array$branchFactor;
			var depth = $elm$core$Basics$floor(
				A2($elm$core$Basics$logBase, $elm$core$Array$branchFactor, treeLen - 1));
			var correctNodeList = reverseNodeList ? $elm$core$List$reverse(builder.t) : builder.t;
			var tree = A2($elm$core$Array$treeFromBuilder, correctNodeList, builder.q);
			return A4(
				$elm$core$Array$Array_elm_builtin,
				$elm$core$Elm$JsArray$length(builder.s) + treeLen,
				A2($elm$core$Basics$max, 5, depth * $elm$core$Array$shiftStep),
				tree,
				builder.s);
		}
	});
var $elm$core$Basics$idiv = _Basics_idiv;
var $elm$core$Basics$lt = _Utils_lt;
var $elm$core$Array$initializeHelp = F5(
	function (fn, fromIndex, len, nodeList, tail) {
		initializeHelp:
		while (true) {
			if (fromIndex < 0) {
				return A2(
					$elm$core$Array$builderToArray,
					false,
					{t: nodeList, q: (len / $elm$core$Array$branchFactor) | 0, s: tail});
			} else {
				var leaf = $elm$core$Array$Leaf(
					A3($elm$core$Elm$JsArray$initialize, $elm$core$Array$branchFactor, fromIndex, fn));
				var $temp$fn = fn,
					$temp$fromIndex = fromIndex - $elm$core$Array$branchFactor,
					$temp$len = len,
					$temp$nodeList = A2($elm$core$List$cons, leaf, nodeList),
					$temp$tail = tail;
				fn = $temp$fn;
				fromIndex = $temp$fromIndex;
				len = $temp$len;
				nodeList = $temp$nodeList;
				tail = $temp$tail;
				continue initializeHelp;
			}
		}
	});
var $elm$core$Basics$remainderBy = _Basics_remainderBy;
var $elm$core$Array$initialize = F2(
	function (len, fn) {
		if (len <= 0) {
			return $elm$core$Array$empty;
		} else {
			var tailLen = len % $elm$core$Array$branchFactor;
			var tail = A3($elm$core$Elm$JsArray$initialize, tailLen, len - tailLen, fn);
			var initialFromIndex = (len - tailLen) - $elm$core$Array$branchFactor;
			return A5($elm$core$Array$initializeHelp, fn, initialFromIndex, len, _List_Nil, tail);
		}
	});
var $elm$core$Basics$True = 0;
var $elm$core$Result$isOk = function (result) {
	if (!result.$) {
		return true;
	} else {
		return false;
	}
};
var $elm$json$Json$Decode$map = _Json_map1;
var $elm$json$Json$Decode$map2 = _Json_map2;
var $elm$json$Json$Decode$succeed = _Json_succeed;
var $elm$virtual_dom$VirtualDom$toHandlerInt = function (handler) {
	switch (handler.$) {
		case 0:
			return 0;
		case 1:
			return 1;
		case 2:
			return 2;
		default:
			return 3;
	}
};
var $elm$browser$Browser$External = function (a) {
	return {$: 1, a: a};
};
var $elm$browser$Browser$Internal = function (a) {
	return {$: 0, a: a};
};
var $elm$core$Basics$identity = function (x) {
	return x;
};
var $elm$browser$Browser$Dom$NotFound = $elm$core$Basics$identity;
var $elm$url$Url$Http = 0;
var $elm$url$Url$Https = 1;
var $elm$url$Url$Url = F6(
	function (protocol, host, port_, path, query, fragment) {
		return {kI: fragment, hp: host, $8: path, il: port_, it: protocol, bz: query};
	});
var $elm$core$String$contains = _String_contains;
var $elm$core$String$length = _String_length;
var $elm$core$String$slice = _String_slice;
var $elm$core$String$dropLeft = F2(
	function (n, string) {
		return (n < 1) ? string : A3(
			$elm$core$String$slice,
			n,
			$elm$core$String$length(string),
			string);
	});
var $elm$core$String$indexes = _String_indexes;
var $elm$core$String$isEmpty = function (string) {
	return string === '';
};
var $elm$core$String$left = F2(
	function (n, string) {
		return (n < 1) ? '' : A3($elm$core$String$slice, 0, n, string);
	});
var $elm$core$String$toInt = _String_toInt;
var $elm$url$Url$chompBeforePath = F5(
	function (protocol, path, params, frag, str) {
		if ($elm$core$String$isEmpty(str) || A2($elm$core$String$contains, '@', str)) {
			return $elm$core$Maybe$Nothing;
		} else {
			var _v0 = A2($elm$core$String$indexes, ':', str);
			if (!_v0.b) {
				return $elm$core$Maybe$Just(
					A6($elm$url$Url$Url, protocol, str, $elm$core$Maybe$Nothing, path, params, frag));
			} else {
				if (!_v0.b.b) {
					var i = _v0.a;
					var _v1 = $elm$core$String$toInt(
						A2($elm$core$String$dropLeft, i + 1, str));
					if (_v1.$ === 1) {
						return $elm$core$Maybe$Nothing;
					} else {
						var port_ = _v1;
						return $elm$core$Maybe$Just(
							A6(
								$elm$url$Url$Url,
								protocol,
								A2($elm$core$String$left, i, str),
								port_,
								path,
								params,
								frag));
					}
				} else {
					return $elm$core$Maybe$Nothing;
				}
			}
		}
	});
var $elm$url$Url$chompBeforeQuery = F4(
	function (protocol, params, frag, str) {
		if ($elm$core$String$isEmpty(str)) {
			return $elm$core$Maybe$Nothing;
		} else {
			var _v0 = A2($elm$core$String$indexes, '/', str);
			if (!_v0.b) {
				return A5($elm$url$Url$chompBeforePath, protocol, '/', params, frag, str);
			} else {
				var i = _v0.a;
				return A5(
					$elm$url$Url$chompBeforePath,
					protocol,
					A2($elm$core$String$dropLeft, i, str),
					params,
					frag,
					A2($elm$core$String$left, i, str));
			}
		}
	});
var $elm$url$Url$chompBeforeFragment = F3(
	function (protocol, frag, str) {
		if ($elm$core$String$isEmpty(str)) {
			return $elm$core$Maybe$Nothing;
		} else {
			var _v0 = A2($elm$core$String$indexes, '?', str);
			if (!_v0.b) {
				return A4($elm$url$Url$chompBeforeQuery, protocol, $elm$core$Maybe$Nothing, frag, str);
			} else {
				var i = _v0.a;
				return A4(
					$elm$url$Url$chompBeforeQuery,
					protocol,
					$elm$core$Maybe$Just(
						A2($elm$core$String$dropLeft, i + 1, str)),
					frag,
					A2($elm$core$String$left, i, str));
			}
		}
	});
var $elm$url$Url$chompAfterProtocol = F2(
	function (protocol, str) {
		if ($elm$core$String$isEmpty(str)) {
			return $elm$core$Maybe$Nothing;
		} else {
			var _v0 = A2($elm$core$String$indexes, '#', str);
			if (!_v0.b) {
				return A3($elm$url$Url$chompBeforeFragment, protocol, $elm$core$Maybe$Nothing, str);
			} else {
				var i = _v0.a;
				return A3(
					$elm$url$Url$chompBeforeFragment,
					protocol,
					$elm$core$Maybe$Just(
						A2($elm$core$String$dropLeft, i + 1, str)),
					A2($elm$core$String$left, i, str));
			}
		}
	});
var $elm$core$String$startsWith = _String_startsWith;
var $elm$url$Url$fromString = function (str) {
	return A2($elm$core$String$startsWith, 'http://', str) ? A2(
		$elm$url$Url$chompAfterProtocol,
		0,
		A2($elm$core$String$dropLeft, 7, str)) : (A2($elm$core$String$startsWith, 'https://', str) ? A2(
		$elm$url$Url$chompAfterProtocol,
		1,
		A2($elm$core$String$dropLeft, 8, str)) : $elm$core$Maybe$Nothing);
};
var $elm$core$Basics$never = function (_v0) {
	never:
	while (true) {
		var nvr = _v0;
		var $temp$_v0 = nvr;
		_v0 = $temp$_v0;
		continue never;
	}
};
var $elm$core$Task$Perform = $elm$core$Basics$identity;
var $elm$core$Task$succeed = _Scheduler_succeed;
var $elm$core$Task$init = $elm$core$Task$succeed(0);
var $elm$core$List$foldrHelper = F4(
	function (fn, acc, ctr, ls) {
		if (!ls.b) {
			return acc;
		} else {
			var a = ls.a;
			var r1 = ls.b;
			if (!r1.b) {
				return A2(fn, a, acc);
			} else {
				var b = r1.a;
				var r2 = r1.b;
				if (!r2.b) {
					return A2(
						fn,
						a,
						A2(fn, b, acc));
				} else {
					var c = r2.a;
					var r3 = r2.b;
					if (!r3.b) {
						return A2(
							fn,
							a,
							A2(
								fn,
								b,
								A2(fn, c, acc)));
					} else {
						var d = r3.a;
						var r4 = r3.b;
						var res = (ctr > 500) ? A3(
							$elm$core$List$foldl,
							fn,
							acc,
							$elm$core$List$reverse(r4)) : A4($elm$core$List$foldrHelper, fn, acc, ctr + 1, r4);
						return A2(
							fn,
							a,
							A2(
								fn,
								b,
								A2(
									fn,
									c,
									A2(fn, d, res))));
					}
				}
			}
		}
	});
var $elm$core$List$foldr = F3(
	function (fn, acc, ls) {
		return A4($elm$core$List$foldrHelper, fn, acc, 0, ls);
	});
var $elm$core$List$map = F2(
	function (f, xs) {
		return A3(
			$elm$core$List$foldr,
			F2(
				function (x, acc) {
					return A2(
						$elm$core$List$cons,
						f(x),
						acc);
				}),
			_List_Nil,
			xs);
	});
var $elm$core$Task$andThen = _Scheduler_andThen;
var $elm$core$Task$map = F2(
	function (func, taskA) {
		return A2(
			$elm$core$Task$andThen,
			function (a) {
				return $elm$core$Task$succeed(
					func(a));
			},
			taskA);
	});
var $elm$core$Task$map2 = F3(
	function (func, taskA, taskB) {
		return A2(
			$elm$core$Task$andThen,
			function (a) {
				return A2(
					$elm$core$Task$andThen,
					function (b) {
						return $elm$core$Task$succeed(
							A2(func, a, b));
					},
					taskB);
			},
			taskA);
	});
var $elm$core$Task$sequence = function (tasks) {
	return A3(
		$elm$core$List$foldr,
		$elm$core$Task$map2($elm$core$List$cons),
		$elm$core$Task$succeed(_List_Nil),
		tasks);
};
var $elm$core$Platform$sendToApp = _Platform_sendToApp;
var $elm$core$Task$spawnCmd = F2(
	function (router, _v0) {
		var task = _v0;
		return _Scheduler_spawn(
			A2(
				$elm$core$Task$andThen,
				$elm$core$Platform$sendToApp(router),
				task));
	});
var $elm$core$Task$onEffects = F3(
	function (router, commands, state) {
		return A2(
			$elm$core$Task$map,
			function (_v0) {
				return 0;
			},
			$elm$core$Task$sequence(
				A2(
					$elm$core$List$map,
					$elm$core$Task$spawnCmd(router),
					commands)));
	});
var $elm$core$Task$onSelfMsg = F3(
	function (_v0, _v1, _v2) {
		return $elm$core$Task$succeed(0);
	});
var $elm$core$Task$cmdMap = F2(
	function (tagger, _v0) {
		var task = _v0;
		return A2($elm$core$Task$map, tagger, task);
	});
_Platform_effectManagers['Task'] = _Platform_createManager($elm$core$Task$init, $elm$core$Task$onEffects, $elm$core$Task$onSelfMsg, $elm$core$Task$cmdMap);
var $elm$core$Task$command = _Platform_leaf('Task');
var $elm$core$Task$perform = F2(
	function (toMessage, task) {
		return $elm$core$Task$command(
			A2($elm$core$Task$map, toMessage, task));
	});
var $elm$browser$Browser$application = _Browser_application;
var $author$project$Runtime$Runtime = F4(
	function (environment, rollbarToken, codeVersion, today) {
		return {jX: codeVersion, kx: environment, mf: rollbarToken, F: today};
	});
var $author$project$Runtime$CodeVersion = $elm$core$Basics$identity;
var $elm$json$Json$Decode$andThen = _Json_andThen;
var $elm$json$Json$Decode$string = _Json_decodeString;
var $author$project$Runtime$decodeCodeVersion = A2(
	$elm$json$Json$Decode$andThen,
	function (str) {
		return $elm$json$Json$Decode$succeed(str);
	},
	$elm$json$Json$Decode$string);
var $elm$time$Time$Jan = 0;
var $author$project$Runtime$Production = 2;
var $author$project$Runtime$RollbarToken = $elm$core$Basics$identity;
var $justinmimbs$date$Date$RD = $elm$core$Basics$identity;
var $elm$core$Basics$clamp = F3(
	function (low, high, number) {
		return (_Utils_cmp(number, low) < 0) ? low : ((_Utils_cmp(number, high) > 0) ? high : number);
	});
var $elm$core$Basics$modBy = _Basics_modBy;
var $elm$core$Basics$neq = _Utils_notEqual;
var $justinmimbs$date$Date$isLeapYear = function (y) {
	return ((!A2($elm$core$Basics$modBy, 4, y)) && (!(!A2($elm$core$Basics$modBy, 100, y)))) || (!A2($elm$core$Basics$modBy, 400, y));
};
var $justinmimbs$date$Date$daysBeforeMonth = F2(
	function (y, m) {
		var leapDays = $justinmimbs$date$Date$isLeapYear(y) ? 1 : 0;
		switch (m) {
			case 0:
				return 0;
			case 1:
				return 31;
			case 2:
				return 59 + leapDays;
			case 3:
				return 90 + leapDays;
			case 4:
				return 120 + leapDays;
			case 5:
				return 151 + leapDays;
			case 6:
				return 181 + leapDays;
			case 7:
				return 212 + leapDays;
			case 8:
				return 243 + leapDays;
			case 9:
				return 273 + leapDays;
			case 10:
				return 304 + leapDays;
			default:
				return 334 + leapDays;
		}
	});
var $justinmimbs$date$Date$floorDiv = F2(
	function (a, b) {
		return $elm$core$Basics$floor(a / b);
	});
var $justinmimbs$date$Date$daysBeforeYear = function (y1) {
	var y = y1 - 1;
	var leapYears = (A2($justinmimbs$date$Date$floorDiv, y, 4) - A2($justinmimbs$date$Date$floorDiv, y, 100)) + A2($justinmimbs$date$Date$floorDiv, y, 400);
	return (365 * y) + leapYears;
};
var $justinmimbs$date$Date$daysInMonth = F2(
	function (y, m) {
		switch (m) {
			case 0:
				return 31;
			case 1:
				return $justinmimbs$date$Date$isLeapYear(y) ? 29 : 28;
			case 2:
				return 31;
			case 3:
				return 30;
			case 4:
				return 31;
			case 5:
				return 30;
			case 6:
				return 31;
			case 7:
				return 31;
			case 8:
				return 30;
			case 9:
				return 31;
			case 10:
				return 30;
			default:
				return 31;
		}
	});
var $justinmimbs$date$Date$fromCalendarDate = F3(
	function (y, m, d) {
		return ($justinmimbs$date$Date$daysBeforeYear(y) + A2($justinmimbs$date$Date$daysBeforeMonth, y, m)) + A3(
			$elm$core$Basics$clamp,
			1,
			A2($justinmimbs$date$Date$daysInMonth, y, m),
			d);
	});
var $author$project$Runtime$default = {
	jX: 'missing',
	kx: 2,
	mf: 'missing',
	F: A3($justinmimbs$date$Date$fromCalendarDate, 2021, 0, 1)
};
var $elm$core$Basics$always = F2(
	function (a, _v0) {
		return a;
	});
var $elm$parser$Parser$Advanced$Bad = F2(
	function (a, b) {
		return {$: 1, a: a, b: b};
	});
var $elm$parser$Parser$Advanced$Good = F3(
	function (a, b, c) {
		return {$: 0, a: a, b: b, c: c};
	});
var $elm$parser$Parser$Advanced$Parser = $elm$core$Basics$identity;
var $elm$parser$Parser$Advanced$andThen = F2(
	function (callback, _v0) {
		var parseA = _v0;
		return function (s0) {
			var _v1 = parseA(s0);
			if (_v1.$ === 1) {
				var p = _v1.a;
				var x = _v1.b;
				return A2($elm$parser$Parser$Advanced$Bad, p, x);
			} else {
				var p1 = _v1.a;
				var a = _v1.b;
				var s1 = _v1.c;
				var _v2 = callback(a);
				var parseB = _v2;
				var _v3 = parseB(s1);
				if (_v3.$ === 1) {
					var p2 = _v3.a;
					var x = _v3.b;
					return A2($elm$parser$Parser$Advanced$Bad, p1 || p2, x);
				} else {
					var p2 = _v3.a;
					var b = _v3.b;
					var s2 = _v3.c;
					return A3($elm$parser$Parser$Advanced$Good, p1 || p2, b, s2);
				}
			}
		};
	});
var $elm$parser$Parser$andThen = $elm$parser$Parser$Advanced$andThen;
var $elm$parser$Parser$UnexpectedChar = {$: 11};
var $elm$parser$Parser$Advanced$AddRight = F2(
	function (a, b) {
		return {$: 1, a: a, b: b};
	});
var $elm$parser$Parser$Advanced$DeadEnd = F4(
	function (row, col, problem, contextStack) {
		return {gQ: col, j4: contextStack, ir: problem, iy: row};
	});
var $elm$parser$Parser$Advanced$Empty = {$: 0};
var $elm$parser$Parser$Advanced$fromState = F2(
	function (s, x) {
		return A2(
			$elm$parser$Parser$Advanced$AddRight,
			$elm$parser$Parser$Advanced$Empty,
			A4($elm$parser$Parser$Advanced$DeadEnd, s.iy, s.gQ, x, s.h));
	});
var $elm$parser$Parser$Advanced$isSubChar = _Parser_isSubChar;
var $elm$core$Basics$negate = function (n) {
	return -n;
};
var $elm$parser$Parser$Advanced$chompIf = F2(
	function (isGood, expecting) {
		return function (s) {
			var newOffset = A3($elm$parser$Parser$Advanced$isSubChar, isGood, s.lG, s.eo);
			return _Utils_eq(newOffset, -1) ? A2(
				$elm$parser$Parser$Advanced$Bad,
				false,
				A2($elm$parser$Parser$Advanced$fromState, s, expecting)) : (_Utils_eq(newOffset, -2) ? A3(
				$elm$parser$Parser$Advanced$Good,
				true,
				0,
				{gQ: 1, h: s.h, m: s.m, lG: s.lG + 1, iy: s.iy + 1, eo: s.eo}) : A3(
				$elm$parser$Parser$Advanced$Good,
				true,
				0,
				{gQ: s.gQ + 1, h: s.h, m: s.m, lG: newOffset, iy: s.iy, eo: s.eo}));
		};
	});
var $elm$parser$Parser$chompIf = function (isGood) {
	return A2($elm$parser$Parser$Advanced$chompIf, isGood, $elm$parser$Parser$UnexpectedChar);
};
var $elm$core$Basics$composeR = F3(
	function (f, g, x) {
		return g(
			f(x));
	});
var $justinmimbs$date$Date$deadEndToString = function (_v0) {
	var problem = _v0.ir;
	if (problem.$ === 12) {
		var message = problem.a;
		return message;
	} else {
		return 'Expected a date in ISO 8601 format';
	}
};
var $elm$parser$Parser$ExpectingEnd = {$: 10};
var $elm$parser$Parser$Advanced$end = function (x) {
	return function (s) {
		return _Utils_eq(
			$elm$core$String$length(s.eo),
			s.lG) ? A3($elm$parser$Parser$Advanced$Good, false, 0, s) : A2(
			$elm$parser$Parser$Advanced$Bad,
			false,
			A2($elm$parser$Parser$Advanced$fromState, s, x));
	};
};
var $elm$parser$Parser$end = $elm$parser$Parser$Advanced$end($elm$parser$Parser$ExpectingEnd);
var $elm$core$List$head = function (list) {
	if (list.b) {
		var x = list.a;
		var xs = list.b;
		return $elm$core$Maybe$Just(x);
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $elm$parser$Parser$Advanced$map2 = F3(
	function (func, _v0, _v1) {
		var parseA = _v0;
		var parseB = _v1;
		return function (s0) {
			var _v2 = parseA(s0);
			if (_v2.$ === 1) {
				var p = _v2.a;
				var x = _v2.b;
				return A2($elm$parser$Parser$Advanced$Bad, p, x);
			} else {
				var p1 = _v2.a;
				var a = _v2.b;
				var s1 = _v2.c;
				var _v3 = parseB(s1);
				if (_v3.$ === 1) {
					var p2 = _v3.a;
					var x = _v3.b;
					return A2($elm$parser$Parser$Advanced$Bad, p1 || p2, x);
				} else {
					var p2 = _v3.a;
					var b = _v3.b;
					var s2 = _v3.c;
					return A3(
						$elm$parser$Parser$Advanced$Good,
						p1 || p2,
						A2(func, a, b),
						s2);
				}
			}
		};
	});
var $elm$parser$Parser$Advanced$ignorer = F2(
	function (keepParser, ignoreParser) {
		return A3($elm$parser$Parser$Advanced$map2, $elm$core$Basics$always, keepParser, ignoreParser);
	});
var $elm$parser$Parser$ignorer = $elm$parser$Parser$Advanced$ignorer;
var $elm$parser$Parser$Advanced$keeper = F2(
	function (parseFunc, parseArg) {
		return A3($elm$parser$Parser$Advanced$map2, $elm$core$Basics$apL, parseFunc, parseArg);
	});
var $elm$parser$Parser$keeper = $elm$parser$Parser$Advanced$keeper;
var $elm$core$Maybe$map = F2(
	function (f, maybe) {
		if (!maybe.$) {
			var value = maybe.a;
			return $elm$core$Maybe$Just(
				f(value));
		} else {
			return $elm$core$Maybe$Nothing;
		}
	});
var $elm$parser$Parser$Advanced$map = F2(
	function (func, _v0) {
		var parse = _v0;
		return function (s0) {
			var _v1 = parse(s0);
			if (!_v1.$) {
				var p = _v1.a;
				var a = _v1.b;
				var s1 = _v1.c;
				return A3(
					$elm$parser$Parser$Advanced$Good,
					p,
					func(a),
					s1);
			} else {
				var p = _v1.a;
				var x = _v1.b;
				return A2($elm$parser$Parser$Advanced$Bad, p, x);
			}
		};
	});
var $elm$parser$Parser$map = $elm$parser$Parser$Advanced$map;
var $elm$core$Result$mapError = F2(
	function (f, result) {
		if (!result.$) {
			var v = result.a;
			return $elm$core$Result$Ok(v);
		} else {
			var e = result.a;
			return $elm$core$Result$Err(
				f(e));
		}
	});
var $elm$parser$Parser$Advanced$Append = F2(
	function (a, b) {
		return {$: 2, a: a, b: b};
	});
var $elm$parser$Parser$Advanced$oneOfHelp = F3(
	function (s0, bag, parsers) {
		oneOfHelp:
		while (true) {
			if (!parsers.b) {
				return A2($elm$parser$Parser$Advanced$Bad, false, bag);
			} else {
				var parse = parsers.a;
				var remainingParsers = parsers.b;
				var _v1 = parse(s0);
				if (!_v1.$) {
					var step = _v1;
					return step;
				} else {
					var step = _v1;
					var p = step.a;
					var x = step.b;
					if (p) {
						return step;
					} else {
						var $temp$s0 = s0,
							$temp$bag = A2($elm$parser$Parser$Advanced$Append, bag, x),
							$temp$parsers = remainingParsers;
						s0 = $temp$s0;
						bag = $temp$bag;
						parsers = $temp$parsers;
						continue oneOfHelp;
					}
				}
			}
		}
	});
var $elm$parser$Parser$Advanced$oneOf = function (parsers) {
	return function (s) {
		return A3($elm$parser$Parser$Advanced$oneOfHelp, s, $elm$parser$Parser$Advanced$Empty, parsers);
	};
};
var $elm$parser$Parser$oneOf = $elm$parser$Parser$Advanced$oneOf;
var $justinmimbs$date$Date$MonthAndDay = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $justinmimbs$date$Date$OrdinalDay = function (a) {
	return {$: 2, a: a};
};
var $justinmimbs$date$Date$WeekAndWeekday = F2(
	function (a, b) {
		return {$: 1, a: a, b: b};
	});
var $elm$parser$Parser$Advanced$backtrackable = function (_v0) {
	var parse = _v0;
	return function (s0) {
		var _v1 = parse(s0);
		if (_v1.$ === 1) {
			var x = _v1.b;
			return A2($elm$parser$Parser$Advanced$Bad, false, x);
		} else {
			var a = _v1.b;
			var s1 = _v1.c;
			return A3($elm$parser$Parser$Advanced$Good, false, a, s1);
		}
	};
};
var $elm$parser$Parser$backtrackable = $elm$parser$Parser$Advanced$backtrackable;
var $elm$parser$Parser$Advanced$commit = function (a) {
	return function (s) {
		return A3($elm$parser$Parser$Advanced$Good, true, a, s);
	};
};
var $elm$parser$Parser$commit = $elm$parser$Parser$Advanced$commit;
var $elm$parser$Parser$Advanced$mapChompedString = F2(
	function (func, _v0) {
		var parse = _v0;
		return function (s0) {
			var _v1 = parse(s0);
			if (_v1.$ === 1) {
				var p = _v1.a;
				var x = _v1.b;
				return A2($elm$parser$Parser$Advanced$Bad, p, x);
			} else {
				var p = _v1.a;
				var a = _v1.b;
				var s1 = _v1.c;
				return A3(
					$elm$parser$Parser$Advanced$Good,
					p,
					A2(
						func,
						A3($elm$core$String$slice, s0.lG, s1.lG, s0.eo),
						a),
					s1);
			}
		};
	});
var $elm$parser$Parser$mapChompedString = $elm$parser$Parser$Advanced$mapChompedString;
var $elm$core$Maybe$withDefault = F2(
	function (_default, maybe) {
		if (!maybe.$) {
			var value = maybe.a;
			return value;
		} else {
			return _default;
		}
	});
var $justinmimbs$date$Date$int1 = A2(
	$elm$parser$Parser$mapChompedString,
	F2(
		function (str, _v0) {
			return A2(
				$elm$core$Maybe$withDefault,
				0,
				$elm$core$String$toInt(str));
		}),
	$elm$parser$Parser$chompIf($elm$core$Char$isDigit));
var $elm$parser$Parser$Advanced$succeed = function (a) {
	return function (s) {
		return A3($elm$parser$Parser$Advanced$Good, false, a, s);
	};
};
var $elm$parser$Parser$succeed = $elm$parser$Parser$Advanced$succeed;
var $justinmimbs$date$Date$int2 = A2(
	$elm$parser$Parser$mapChompedString,
	F2(
		function (str, _v0) {
			return A2(
				$elm$core$Maybe$withDefault,
				0,
				$elm$core$String$toInt(str));
		}),
	A2(
		$elm$parser$Parser$ignorer,
		A2(
			$elm$parser$Parser$ignorer,
			$elm$parser$Parser$succeed(0),
			$elm$parser$Parser$chompIf($elm$core$Char$isDigit)),
		$elm$parser$Parser$chompIf($elm$core$Char$isDigit)));
var $justinmimbs$date$Date$int3 = A2(
	$elm$parser$Parser$mapChompedString,
	F2(
		function (str, _v0) {
			return A2(
				$elm$core$Maybe$withDefault,
				0,
				$elm$core$String$toInt(str));
		}),
	A2(
		$elm$parser$Parser$ignorer,
		A2(
			$elm$parser$Parser$ignorer,
			A2(
				$elm$parser$Parser$ignorer,
				$elm$parser$Parser$succeed(0),
				$elm$parser$Parser$chompIf($elm$core$Char$isDigit)),
			$elm$parser$Parser$chompIf($elm$core$Char$isDigit)),
		$elm$parser$Parser$chompIf($elm$core$Char$isDigit)));
var $elm$parser$Parser$Expecting = function (a) {
	return {$: 0, a: a};
};
var $elm$parser$Parser$Advanced$Token = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $elm$parser$Parser$toToken = function (str) {
	return A2(
		$elm$parser$Parser$Advanced$Token,
		str,
		$elm$parser$Parser$Expecting(str));
};
var $elm$parser$Parser$Advanced$isSubString = _Parser_isSubString;
var $elm$core$Basics$not = _Basics_not;
var $elm$parser$Parser$Advanced$token = function (_v0) {
	var str = _v0.a;
	var expecting = _v0.b;
	var progress = !$elm$core$String$isEmpty(str);
	return function (s) {
		var _v1 = A5($elm$parser$Parser$Advanced$isSubString, str, s.lG, s.iy, s.gQ, s.eo);
		var newOffset = _v1.a;
		var newRow = _v1.b;
		var newCol = _v1.c;
		return _Utils_eq(newOffset, -1) ? A2(
			$elm$parser$Parser$Advanced$Bad,
			false,
			A2($elm$parser$Parser$Advanced$fromState, s, expecting)) : A3(
			$elm$parser$Parser$Advanced$Good,
			progress,
			0,
			{gQ: newCol, h: s.h, m: s.m, lG: newOffset, iy: newRow, eo: s.eo});
	};
};
var $elm$parser$Parser$token = function (str) {
	return $elm$parser$Parser$Advanced$token(
		$elm$parser$Parser$toToken(str));
};
var $justinmimbs$date$Date$dayOfYear = $elm$parser$Parser$oneOf(
	_List_fromArray(
		[
			A2(
			$elm$parser$Parser$keeper,
			A2(
				$elm$parser$Parser$ignorer,
				$elm$parser$Parser$succeed($elm$core$Basics$identity),
				$elm$parser$Parser$token('-')),
			$elm$parser$Parser$oneOf(
				_List_fromArray(
					[
						$elm$parser$Parser$backtrackable(
						A2(
							$elm$parser$Parser$andThen,
							$elm$parser$Parser$commit,
							A2($elm$parser$Parser$map, $justinmimbs$date$Date$OrdinalDay, $justinmimbs$date$Date$int3))),
						A2(
						$elm$parser$Parser$keeper,
						A2(
							$elm$parser$Parser$keeper,
							$elm$parser$Parser$succeed($justinmimbs$date$Date$MonthAndDay),
							$justinmimbs$date$Date$int2),
						$elm$parser$Parser$oneOf(
							_List_fromArray(
								[
									A2(
									$elm$parser$Parser$keeper,
									A2(
										$elm$parser$Parser$ignorer,
										$elm$parser$Parser$succeed($elm$core$Basics$identity),
										$elm$parser$Parser$token('-')),
									$justinmimbs$date$Date$int2),
									$elm$parser$Parser$succeed(1)
								]))),
						A2(
						$elm$parser$Parser$keeper,
						A2(
							$elm$parser$Parser$keeper,
							A2(
								$elm$parser$Parser$ignorer,
								$elm$parser$Parser$succeed($justinmimbs$date$Date$WeekAndWeekday),
								$elm$parser$Parser$token('W')),
							$justinmimbs$date$Date$int2),
						$elm$parser$Parser$oneOf(
							_List_fromArray(
								[
									A2(
									$elm$parser$Parser$keeper,
									A2(
										$elm$parser$Parser$ignorer,
										$elm$parser$Parser$succeed($elm$core$Basics$identity),
										$elm$parser$Parser$token('-')),
									$justinmimbs$date$Date$int1),
									$elm$parser$Parser$succeed(1)
								])))
					]))),
			$elm$parser$Parser$backtrackable(
			A2(
				$elm$parser$Parser$andThen,
				$elm$parser$Parser$commit,
				A2(
					$elm$parser$Parser$keeper,
					A2(
						$elm$parser$Parser$keeper,
						$elm$parser$Parser$succeed($justinmimbs$date$Date$MonthAndDay),
						$justinmimbs$date$Date$int2),
					$elm$parser$Parser$oneOf(
						_List_fromArray(
							[
								$justinmimbs$date$Date$int2,
								$elm$parser$Parser$succeed(1)
							]))))),
			A2($elm$parser$Parser$map, $justinmimbs$date$Date$OrdinalDay, $justinmimbs$date$Date$int3),
			A2(
			$elm$parser$Parser$keeper,
			A2(
				$elm$parser$Parser$keeper,
				A2(
					$elm$parser$Parser$ignorer,
					$elm$parser$Parser$succeed($justinmimbs$date$Date$WeekAndWeekday),
					$elm$parser$Parser$token('W')),
				$justinmimbs$date$Date$int2),
			$elm$parser$Parser$oneOf(
				_List_fromArray(
					[
						$justinmimbs$date$Date$int1,
						$elm$parser$Parser$succeed(1)
					]))),
			$elm$parser$Parser$succeed(
			$justinmimbs$date$Date$OrdinalDay(1))
		]));
var $justinmimbs$date$Date$isBetweenInt = F3(
	function (a, b, x) {
		return (_Utils_cmp(a, x) < 1) && (_Utils_cmp(x, b) < 1);
	});
var $elm$time$Time$Apr = 3;
var $elm$time$Time$Aug = 7;
var $elm$time$Time$Dec = 11;
var $elm$time$Time$Feb = 1;
var $elm$time$Time$Jul = 6;
var $elm$time$Time$Jun = 5;
var $elm$time$Time$Mar = 2;
var $elm$time$Time$May = 4;
var $elm$time$Time$Nov = 10;
var $elm$time$Time$Oct = 9;
var $elm$time$Time$Sep = 8;
var $justinmimbs$date$Date$numberToMonth = function (mn) {
	var _v0 = A2($elm$core$Basics$max, 1, mn);
	switch (_v0) {
		case 1:
			return 0;
		case 2:
			return 1;
		case 3:
			return 2;
		case 4:
			return 3;
		case 5:
			return 4;
		case 6:
			return 5;
		case 7:
			return 6;
		case 8:
			return 7;
		case 9:
			return 8;
		case 10:
			return 9;
		case 11:
			return 10;
		default:
			return 11;
	}
};
var $justinmimbs$date$Date$fromCalendarParts = F3(
	function (y, mn, d) {
		return (A3($justinmimbs$date$Date$isBetweenInt, 1, 12, mn) && A3(
			$justinmimbs$date$Date$isBetweenInt,
			1,
			A2(
				$justinmimbs$date$Date$daysInMonth,
				y,
				$justinmimbs$date$Date$numberToMonth(mn)),
			d)) ? $elm$core$Result$Ok(
			($justinmimbs$date$Date$daysBeforeYear(y) + A2(
				$justinmimbs$date$Date$daysBeforeMonth,
				y,
				$justinmimbs$date$Date$numberToMonth(mn))) + d) : $elm$core$Result$Err(
			'Invalid calendar date (' + ($elm$core$String$fromInt(y) + (', ' + ($elm$core$String$fromInt(mn) + (', ' + ($elm$core$String$fromInt(d) + ')'))))));
	});
var $justinmimbs$date$Date$fromOrdinalParts = F2(
	function (y, od) {
		return (A3($justinmimbs$date$Date$isBetweenInt, 1, 365, od) || ((od === 366) && $justinmimbs$date$Date$isLeapYear(y))) ? $elm$core$Result$Ok(
			$justinmimbs$date$Date$daysBeforeYear(y) + od) : $elm$core$Result$Err(
			'Invalid ordinal date (' + ($elm$core$String$fromInt(y) + (', ' + ($elm$core$String$fromInt(od) + ')'))));
	});
var $justinmimbs$date$Date$weekdayNumber = function (_v0) {
	var rd = _v0;
	var _v1 = A2($elm$core$Basics$modBy, 7, rd);
	if (!_v1) {
		return 7;
	} else {
		var n = _v1;
		return n;
	}
};
var $justinmimbs$date$Date$daysBeforeWeekYear = function (y) {
	var jan4 = $justinmimbs$date$Date$daysBeforeYear(y) + 4;
	return jan4 - $justinmimbs$date$Date$weekdayNumber(jan4);
};
var $justinmimbs$date$Date$firstOfYear = function (y) {
	return $justinmimbs$date$Date$daysBeforeYear(y) + 1;
};
var $justinmimbs$date$Date$is53WeekYear = function (y) {
	var wdnJan1 = $justinmimbs$date$Date$weekdayNumber(
		$justinmimbs$date$Date$firstOfYear(y));
	return (wdnJan1 === 4) || ((wdnJan1 === 3) && $justinmimbs$date$Date$isLeapYear(y));
};
var $justinmimbs$date$Date$fromWeekParts = F3(
	function (wy, wn, wdn) {
		return (A3($justinmimbs$date$Date$isBetweenInt, 1, 7, wdn) && (A3($justinmimbs$date$Date$isBetweenInt, 1, 52, wn) || ((wn === 53) && $justinmimbs$date$Date$is53WeekYear(wy)))) ? $elm$core$Result$Ok(
			($justinmimbs$date$Date$daysBeforeWeekYear(wy) + ((wn - 1) * 7)) + wdn) : $elm$core$Result$Err(
			'Invalid week date (' + ($elm$core$String$fromInt(wy) + (', ' + ($elm$core$String$fromInt(wn) + (', ' + ($elm$core$String$fromInt(wdn) + ')'))))));
	});
var $justinmimbs$date$Date$fromYearAndDayOfYear = function (_v0) {
	var y = _v0.a;
	var doy = _v0.b;
	switch (doy.$) {
		case 0:
			var mn = doy.a;
			var d = doy.b;
			return A3($justinmimbs$date$Date$fromCalendarParts, y, mn, d);
		case 1:
			var wn = doy.a;
			var wdn = doy.b;
			return A3($justinmimbs$date$Date$fromWeekParts, y, wn, wdn);
		default:
			var od = doy.a;
			return A2($justinmimbs$date$Date$fromOrdinalParts, y, od);
	}
};
var $justinmimbs$date$Date$int4 = A2(
	$elm$parser$Parser$mapChompedString,
	F2(
		function (str, _v0) {
			return A2(
				$elm$core$Maybe$withDefault,
				0,
				$elm$core$String$toInt(str));
		}),
	A2(
		$elm$parser$Parser$ignorer,
		A2(
			$elm$parser$Parser$ignorer,
			A2(
				$elm$parser$Parser$ignorer,
				A2(
					$elm$parser$Parser$ignorer,
					A2(
						$elm$parser$Parser$ignorer,
						$elm$parser$Parser$succeed(0),
						$elm$parser$Parser$oneOf(
							_List_fromArray(
								[
									$elm$parser$Parser$chompIf(
									function (c) {
										return c === '-';
									}),
									$elm$parser$Parser$succeed(0)
								]))),
					$elm$parser$Parser$chompIf($elm$core$Char$isDigit)),
				$elm$parser$Parser$chompIf($elm$core$Char$isDigit)),
			$elm$parser$Parser$chompIf($elm$core$Char$isDigit)),
		$elm$parser$Parser$chompIf($elm$core$Char$isDigit)));
var $elm$core$Tuple$pair = F2(
	function (a, b) {
		return _Utils_Tuple2(a, b);
	});
var $elm$parser$Parser$Problem = function (a) {
	return {$: 12, a: a};
};
var $elm$parser$Parser$Advanced$problem = function (x) {
	return function (s) {
		return A2(
			$elm$parser$Parser$Advanced$Bad,
			false,
			A2($elm$parser$Parser$Advanced$fromState, s, x));
	};
};
var $elm$parser$Parser$problem = function (msg) {
	return $elm$parser$Parser$Advanced$problem(
		$elm$parser$Parser$Problem(msg));
};
var $justinmimbs$date$Date$resultToParser = function (result) {
	if (!result.$) {
		var x = result.a;
		return $elm$parser$Parser$succeed(x);
	} else {
		var message = result.a;
		return $elm$parser$Parser$problem(message);
	}
};
var $justinmimbs$date$Date$parser = A2(
	$elm$parser$Parser$andThen,
	A2($elm$core$Basics$composeR, $justinmimbs$date$Date$fromYearAndDayOfYear, $justinmimbs$date$Date$resultToParser),
	A2(
		$elm$parser$Parser$keeper,
		A2(
			$elm$parser$Parser$keeper,
			$elm$parser$Parser$succeed($elm$core$Tuple$pair),
			$justinmimbs$date$Date$int4),
		$justinmimbs$date$Date$dayOfYear));
var $elm$parser$Parser$DeadEnd = F3(
	function (row, col, problem) {
		return {gQ: col, ir: problem, iy: row};
	});
var $elm$parser$Parser$problemToDeadEnd = function (p) {
	return A3($elm$parser$Parser$DeadEnd, p.iy, p.gQ, p.ir);
};
var $elm$parser$Parser$Advanced$bagToList = F2(
	function (bag, list) {
		bagToList:
		while (true) {
			switch (bag.$) {
				case 0:
					return list;
				case 1:
					var bag1 = bag.a;
					var x = bag.b;
					var $temp$bag = bag1,
						$temp$list = A2($elm$core$List$cons, x, list);
					bag = $temp$bag;
					list = $temp$list;
					continue bagToList;
				default:
					var bag1 = bag.a;
					var bag2 = bag.b;
					var $temp$bag = bag1,
						$temp$list = A2($elm$parser$Parser$Advanced$bagToList, bag2, list);
					bag = $temp$bag;
					list = $temp$list;
					continue bagToList;
			}
		}
	});
var $elm$parser$Parser$Advanced$run = F2(
	function (_v0, src) {
		var parse = _v0;
		var _v1 = parse(
			{gQ: 1, h: _List_Nil, m: 1, lG: 0, iy: 1, eo: src});
		if (!_v1.$) {
			var value = _v1.b;
			return $elm$core$Result$Ok(value);
		} else {
			var bag = _v1.b;
			return $elm$core$Result$Err(
				A2($elm$parser$Parser$Advanced$bagToList, bag, _List_Nil));
		}
	});
var $elm$parser$Parser$run = F2(
	function (parser, source) {
		var _v0 = A2($elm$parser$Parser$Advanced$run, parser, source);
		if (!_v0.$) {
			var a = _v0.a;
			return $elm$core$Result$Ok(a);
		} else {
			var problems = _v0.a;
			return $elm$core$Result$Err(
				A2($elm$core$List$map, $elm$parser$Parser$problemToDeadEnd, problems));
		}
	});
var $justinmimbs$date$Date$fromIsoString = A2(
	$elm$core$Basics$composeR,
	$elm$parser$Parser$run(
		A2(
			$elm$parser$Parser$keeper,
			$elm$parser$Parser$succeed($elm$core$Basics$identity),
			A2(
				$elm$parser$Parser$ignorer,
				$justinmimbs$date$Date$parser,
				A2(
					$elm$parser$Parser$andThen,
					$justinmimbs$date$Date$resultToParser,
					$elm$parser$Parser$oneOf(
						_List_fromArray(
							[
								A2($elm$parser$Parser$map, $elm$core$Result$Ok, $elm$parser$Parser$end),
								A2(
								$elm$parser$Parser$map,
								$elm$core$Basics$always(
									$elm$core$Result$Err('Expected a date only, not a date and time')),
								$elm$parser$Parser$chompIf(
									$elm$core$Basics$eq('T'))),
								$elm$parser$Parser$succeed(
								$elm$core$Result$Err('Expected a date only'))
							])))))),
	$elm$core$Result$mapError(
		A2(
			$elm$core$Basics$composeR,
			$elm$core$List$head,
			A2(
				$elm$core$Basics$composeR,
				$elm$core$Maybe$map($justinmimbs$date$Date$deadEndToString),
				$elm$core$Maybe$withDefault('')))));
var $elm$core$Result$map = F2(
	function (func, ra) {
		if (!ra.$) {
			var a = ra.a;
			return $elm$core$Result$Ok(
				func(a));
		} else {
			var e = ra.a;
			return $elm$core$Result$Err(e);
		}
	});
var $elm$core$Result$withDefault = F2(
	function (def, result) {
		if (!result.$) {
			var a = result.a;
			return a;
		} else {
			return def;
		}
	});
var $author$project$Runtime$decodeDate = A2(
	$elm$json$Json$Decode$andThen,
	function (str) {
		return A2(
			$elm$core$Result$withDefault,
			$elm$json$Json$Decode$succeed($author$project$Runtime$default.F),
			A2(
				$elm$core$Result$map,
				$elm$json$Json$Decode$succeed,
				$justinmimbs$date$Date$fromIsoString(str)));
	},
	$elm$json$Json$Decode$string);
var $author$project$Runtime$Development = 0;
var $author$project$Runtime$Staging = 1;
var $author$project$Runtime$decodeEnvironment = A2(
	$elm$json$Json$Decode$andThen,
	function (key) {
		return $elm$json$Json$Decode$succeed(
			function () {
				switch (key) {
					case 'development':
						return 0;
					case 'staging':
						return 1;
					case 'production':
						return 2;
					default:
						return 2;
				}
			}());
	},
	$elm$json$Json$Decode$string);
var $author$project$Runtime$decodeToken = A2(
	$elm$json$Json$Decode$andThen,
	function (str) {
		return $elm$json$Json$Decode$succeed(str);
	},
	$elm$json$Json$Decode$string);
var $elm$json$Json$Decode$field = _Json_decodeField;
var $elm$json$Json$Decode$map4 = _Json_map4;
var $author$project$Runtime$decode = A5(
	$elm$json$Json$Decode$map4,
	$author$project$Runtime$Runtime,
	A2($elm$json$Json$Decode$field, 'environment', $author$project$Runtime$decodeEnvironment),
	A2($elm$json$Json$Decode$field, 'rollbarToken', $author$project$Runtime$decodeToken),
	A2($elm$json$Json$Decode$field, 'codeVersion', $author$project$Runtime$decodeCodeVersion),
	A2($elm$json$Json$Decode$field, 'today', $author$project$Runtime$decodeDate));
var $elm$json$Json$Decode$decodeString = _Json_runOnString;
var $elm$json$Json$Decode$decodeValue = _Json_run;
var $author$project$Api$Cred = $elm$core$Basics$identity;
var $NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$custom = $elm$json$Json$Decode$map2($elm$core$Basics$apR);
var $NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required = F3(
	function (key, valDecoder, decoder) {
		return A2(
			$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$custom,
			A2($elm$json$Json$Decode$field, key, valDecoder),
			decoder);
	});
var $author$project$Api$credDecoder = A3(
	$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
	'authentication_token',
	$elm$json$Json$Decode$string,
	$elm$json$Json$Decode$succeed($elm$core$Basics$identity));
var $author$project$Api$decoderFromCred = function (decoder) {
	return A3(
		$elm$json$Json$Decode$map2,
		F2(
			function (fromCred, cred) {
				return fromCred(cred);
			}),
		decoder,
		$author$project$Api$credDecoder);
};
var $author$project$Api$storageDecoder = function (viewerDecoder) {
	return A2(
		$elm$json$Json$Decode$field,
		'user',
		$author$project$Api$decoderFromCred(viewerDecoder));
};
var $elm$core$Result$toMaybe = function (result) {
	if (!result.$) {
		var v = result.a;
		return $elm$core$Maybe$Just(v);
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $author$project$Api$Window = F2(
	function (width, height) {
		return {hm: height, i5: width};
	});
var $elm$json$Json$Decode$int = _Json_decodeInt;
var $author$project$Api$windowDecoder = A3(
	$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
	'height',
	$elm$json$Json$Decode$int,
	A3(
		$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
		'width',
		$elm$json$Json$Decode$int,
		$elm$json$Json$Decode$succeed($author$project$Api$Window)));
var $author$project$Api$application = F2(
	function (viewerDecoder, config) {
		var init = F3(
			function (flags, url, navKey) {
				var window = A2(
					$elm$core$Result$withDefault,
					{hm: 0, i5: 0},
					A2(
						$elm$json$Json$Decode$decodeValue,
						A2($elm$json$Json$Decode$field, 'window', $author$project$Api$windowDecoder),
						flags));
				var runtime = A2(
					$elm$core$Result$withDefault,
					$author$project$Runtime$default,
					A2(
						$elm$json$Json$Decode$decodeValue,
						A2($elm$json$Json$Decode$field, 'runtime', $author$project$Runtime$decode),
						flags));
				var maybeViewer = $elm$core$Result$toMaybe(
					A2(
						$elm$core$Result$andThen,
						$elm$json$Json$Decode$decodeString(
							$author$project$Api$storageDecoder(viewerDecoder)),
						A2(
							$elm$json$Json$Decode$decodeValue,
							A2($elm$json$Json$Decode$field, 'viewer', $elm$json$Json$Decode$string),
							flags)));
				return A3(
					config.hw,
					{iz: runtime, i$: maybeViewer, i8: window},
					url,
					navKey);
			});
		return $elm$browser$Browser$application(
			{hw: init, h7: config.h7, h8: config.h8, iO: config.iO, iW: config.iW, i_: config.i_});
	});
var $author$project$Viewer$Viewer = $elm$core$Basics$identity;
var $author$project$Viewer$decoder = $elm$json$Json$Decode$succeed($elm$core$Basics$identity);
var $author$project$Main$GotProfile = function (a) {
	return {$: 18, a: a};
};
var $author$project$Main$Redirect = function (a) {
	return {$: 0, a: a};
};
var $elm$core$Platform$Cmd$batch = _Platform_batch;
var $author$project$Main$About = function (a) {
	return {$: 5, a: a};
};
var $author$project$Main$Actions = function (a) {
	return {$: 6, a: a};
};
var $author$project$Main$CampaignOverview = F2(
	function (a, b) {
		return {$: 9, a: a, b: b};
	});
var $author$project$Main$DetainerWarrantCreation = F2(
	function (a, b) {
		return {$: 12, a: a, b: b};
	});
var $author$project$Main$Event = F3(
	function (a, b, c) {
		return {$: 10, a: a, b: b, c: c};
	});
var $author$project$Main$Glossary = function (a) {
	return {$: 7, a: a};
};
var $author$project$Main$GotAboutMsg = function (a) {
	return {$: 5, a: a};
};
var $author$project$Main$GotActionsMsg = function (a) {
	return {$: 7, a: a};
};
var $author$project$Main$GotCampaignOverviewMsg = function (a) {
	return {$: 10, a: a};
};
var $author$project$Main$GotDetainerWarrantCreationMsg = function (a) {
	return {$: 13, a: a};
};
var $author$project$Main$GotEventMsg = function (a) {
	return {$: 11, a: a};
};
var $author$project$Main$GotGlossaryMsg = function (a) {
	return {$: 8, a: a};
};
var $author$project$Main$GotLoginMsg = function (a) {
	return {$: 2, a: a};
};
var $author$project$Main$GotLogoutMsg = function (a) {
	return {$: 3, a: a};
};
var $author$project$Main$GotManageDetainerWarrantsMsg = function (a) {
	return {$: 12, a: a};
};
var $author$project$Main$GotManagePlaintiffsMsg = function (a) {
	return {$: 14, a: a};
};
var $author$project$Main$GotOrganizerDashboardMsg = function (a) {
	return {$: 9, a: a};
};
var $author$project$Main$GotPlaintiffCreationMsg = function (a) {
	return {$: 15, a: a};
};
var $author$project$Main$GotTrendsMsg = function (a) {
	return {$: 4, a: a};
};
var $author$project$Main$GotWarrantHelpMsg = function (a) {
	return {$: 6, a: a};
};
var $author$project$Main$Login = function (a) {
	return {$: 2, a: a};
};
var $author$project$Main$ManageDetainerWarrants = function (a) {
	return {$: 11, a: a};
};
var $author$project$Main$ManagePlaintiffs = function (a) {
	return {$: 13, a: a};
};
var $author$project$Main$NotFound = function (a) {
	return {$: 1, a: a};
};
var $author$project$Main$OrganizerDashboard = function (a) {
	return {$: 8, a: a};
};
var $author$project$Main$PlaintiffCreation = F2(
	function (a, b) {
		return {$: 14, a: a, b: b};
	});
var $author$project$Main$Trends = function (a) {
	return {$: 3, a: a};
};
var $author$project$Route$Trends = {$: 3};
var $author$project$Main$WarrantHelp = function (a) {
	return {$: 4, a: a};
};
var $author$project$Viewer$cred = function (_v0) {
	var val = _v0;
	return val;
};
var $author$project$Session$cred = function (session) {
	if (!session.$) {
		var val = session.b;
		return $elm$core$Maybe$Just(
			$author$project$Viewer$cred(val));
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $elm$core$Platform$Cmd$none = $elm$core$Platform$Cmd$batch(_List_Nil);
var $author$project$Page$About$init = function (session) {
	return _Utils_Tuple2(
		{fY: session},
		$elm$core$Platform$Cmd$none);
};
var $author$project$Page$Actions$init = function (session) {
	return _Utils_Tuple2(
		{fY: session},
		$elm$core$Platform$Cmd$none);
};
var $author$project$Page$Glossary$ScrollToTerm = function (a) {
	return {$: 2, a: a};
};
var $elm$core$Basics$composeL = F3(
	function (g, f, x) {
		return g(
			f(x));
	});
var $elm$core$Task$onError = _Scheduler_onError;
var $elm$core$Task$attempt = F2(
	function (resultToMessage, task) {
		return $elm$core$Task$command(
			A2(
				$elm$core$Task$onError,
				A2(
					$elm$core$Basics$composeL,
					A2($elm$core$Basics$composeL, $elm$core$Task$succeed, resultToMessage),
					$elm$core$Result$Err),
				A2(
					$elm$core$Task$andThen,
					A2(
						$elm$core$Basics$composeL,
						A2($elm$core$Basics$composeL, $elm$core$Task$succeed, resultToMessage),
						$elm$core$Result$Ok),
					task)));
	});
var $elm$core$List$filter = F2(
	function (isGood, list) {
		return A3(
			$elm$core$List$foldr,
			F2(
				function (x, xs) {
					return isGood(x) ? A2($elm$core$List$cons, x, xs) : xs;
				}),
			_List_Nil,
			list);
	});
var $elm$browser$Browser$Dom$getElement = _Browser_getElement;
var $elm$browser$Browser$Dom$setViewport = _Browser_setViewport;
var $author$project$Page$Glossary$Term = F4(
	function (id, name, definition, link) {
		return {g1: definition, hs: id, hT: link, h1: name};
	});
var $author$project$Page$Glossary$terms = _List_fromArray(
	[
		A4($author$project$Page$Glossary$Term, 'action-network', 'Action Network', 'Another organizing tool, this is set-up and run through the Middle TN DSA account and requires some steps to implement. We have initially used it with our Pressure Campaign in February 2021. Part of an AN campaign requires writing one or more letters and thank you responses. Then we collect targets and collect email contacts. Then we publish the campaign and elicit signatures through social media and personal contact with coalition partners. It’s beneficial to include coalition partners within the planning process to include their logos and have them boost for greater visibility.', $elm$core$Maybe$Nothing),
		A4($author$project$Page$Glossary$Term, 'agitation', 'Agitation', 'This is not pestering, annoying or bothering someone with “bad faith” attacks. Agitation is asking probing questions to identify self-interest in potential leaders. It is reminding the person who they wish to be and encouraging them to make the necessary steps to do so. It is holding a conversation with the specific goal of activating their imagination and guiding them to action.', $elm$core$Maybe$Nothing),
		A4($author$project$Page$Glossary$Term, 'data committee', 'Data Committee', 'Our data committee works to collect the information and insight into the climate of evictions in Nashville. Filing a detainer warrant is the first step a landlord (or property manager) will take to begin the eviction process. Our team focuses on collecting the pertinent information that is found in these detainers: plaintiffs, attorneys, court dates, addresses and names of the defendants. In addition we collect information of closed cases such as verdicts, presiding judge names, monetary judgements sought. With this information, the data team seeks to find contact information for the defendants, to build phone outreach and inform them of their rights when being evicted. In addition, the Data committee creates graphs, maps, charts and visuals to better define the housing crisis in Davidson county.', $elm$core$Maybe$Nothing),
		A4($author$project$Page$Glossary$Term, 'default-of-defendant', 'Default of Defendant', 'Legalese to state the defendant (tenant) or their lawyer were not present for their court date and a letter for extension was not filed. This typically results in a judgement awarded to the plaintiff (landlord) and means that a writ of restitution is likely to be filed with the sheriff’s office to complete the eviction process.', $elm$core$Maybe$Nothing),
		A4($author$project$Page$Glossary$Term, 'detainer-warrant', 'Detainer Warrant', 'In the eviction process, after a 14-day notice to evict (which may be waived within a TN tenant’s lease), the landlord or property manager files a detainer warrant through the County Circuit Court Clerk. In Davidson county, this is Richard Rooker (2021). Once the detainer is filed, a process server delivers the warrant to the defendant’s address. While it is suggested they hand the warrant to the defendant, it is not required. Warrants can be posted on doors and may be served within one week of the defendant’s court date.', $elm$core$Maybe$Nothing),
		A4($author$project$Page$Glossary$Term, 'one-on-one', 'One-on-one', 'A vital tool in organizing. This is a very personalized individual conversation, with a loose agenda. The purpose of one-on-ones is twofold: To build a relationship and to agitate towards organizing. We use one-on-ones it two primary committees: Organizing and Outreach. We must constantly be building relationships, develop trust in one another and the leaders we meet through organizing.', $elm$core$Maybe$Nothing),
		A4($author$project$Page$Glossary$Term, 'phone-banking', 'Phone-banking', 'This is an organizing tool developed to reach large numbers of individuals. By organizing phone-banking sessions we make calls or text individuals for a variety of reasons. Most used by three committees in Red Door Collective: Organizing, Outreach and Communications', $elm$core$Maybe$Nothing),
		A4($author$project$Page$Glossary$Term, 'tenant-union', 'Tenant Union', 'A collection of renters (tenants) that are working together to develop plans and take action (!) to make REAL change, together. Individually we are unable to build the power to force change and a union is the best way to collectively move to make demands (and take the power).', $elm$core$Maybe$Nothing),
		A4($author$project$Page$Glossary$Term, 'text-banking', 'Text-banking', 'Similar to phone-banking. We use a tool called Spoke to generate and distribute mass texts to a wide group of individuals. Not as personal as a phone call, but useful for sending concise messages or reminders. Commonly used in all committees within Red Door Collective.', $elm$core$Maybe$Nothing),
		A4($author$project$Page$Glossary$Term, 'hotline', 'Hotline', 'This is our Google Voice number. When tenants call the hotline, they are directed to a voicemail. They can also send texts to this number. Should be considered a tool to connect with tenants. Response to hotline calls and texts should be handled by committees working with these neighbors: Organizing and Outreach.', $elm$core$Maybe$Nothing),
		A4($author$project$Page$Glossary$Term, 'section-8-housing', 'Section 8 Housing', 'The Housing Choice Vouchers Program (often referred to as “Section 8”) is the federal government\'s primary program to provide housing for very low-income families, as well as the elderly and disabled. It provides qualifying families with assistance in paying their monthly rent', $elm$core$Maybe$Nothing),
		A4($author$project$Page$Glossary$Term, 'hrdc', 'Housing Resource Diversionary Court (HRDC)', 'This is the L.E.G.A.C.Y Court that Judge Bell created (Let Every Goal Achieve Continuous Yields). “Provides tools to support and foster mutual trust between landlords and tenants while seeking CARES Grant relief money” (however the applications for CARES relief money is now closed…they’re distributing money through MAC now)', $elm$core$Maybe$Nothing),
		A4(
		$author$project$Page$Glossary$Term,
		'mdha',
		'Metropolitan Development and Housing Agency (MDHA)',
		'Affordable housing agency.',
		$elm$core$Maybe$Just('http://www.nashville-mdha.org/')),
		A4(
		$author$project$Page$Glossary$Term,
		'ncrc',
		'Nashville Conflict Resolution Center (NCRC)',
		'Mediation service between landlords and tenants',
		$elm$core$Maybe$Just('https://nashvilleconflict.org/what-is-mediation/')),
		A4(
		$author$project$Page$Glossary$Term,
		'noah',
		'Nashville Organized for Action and Hope (NOAH)',
		'Faith-based housing justice group.',
		$elm$core$Maybe$Just('https://www.noahtn.org/affordable_housing1')),
		A4(
		$author$project$Page$Glossary$Term,
		'nlihc',
		'National Low Income Housing Coalition (NLIHC)',
		'Housing policy advocacy group.',
		$elm$core$Maybe$Just('https://nlihc.org/rental-assistance')),
		A4(
		$author$project$Page$Glossary$Term,
		'mac',
		'Metropolitan Action Commission (MAC)',
		'Administers the Emergency Rental Assistance program as part of its HOPE (Housing, Opportunity, Partnership and Employment) Program. This housing assistance “will help renters impacted by COVID-19 catch up on past due payments that are behind as much as 12 months” and this can be rent or utilities',
		$elm$core$Maybe$Just('https://www.nashville.gov/Services/Frequently-Asked-Question-Center.aspx?sid=838')),
		A4(
		$author$project$Page$Glossary$Term,
		'united-way-help-line',
		'United Way Help Line',
		'United Way is acting as a grant administrator for both State and Local CARES programs. United Way is not able to provide funds or assistance directly to individuals and families',
		$elm$core$Maybe$Just('https://www.nashvilleresponsefund.com/individuals')),
		A4(
		$author$project$Page$Glossary$Term,
		'department-of-human-service',
		'Department of Human Services',
		'Government department in charge of distributing TANF reserve money',
		$elm$core$Maybe$Just('https://law.justia.com/codes/tennessee/2010/title-71/chapter-1/part-1/71-1-105/')),
		A4(
		$author$project$Page$Glossary$Term,
		'lsc',
		'Legal Services Corporation (LSC)',
		'an independent nonprofit established by Congress in 1974 to provide financial support for civil legal aid to low-income Americans. LSC promotes equal access to justice by providing funding to 132 independent non-profit legal aid programs in every state, the District of Columbia, and US Territories.',
		$elm$core$Maybe$Just('https://www.lsc.gov/')),
		A4(
		$author$project$Page$Glossary$Term,
		'tanf',
		'TANF Reserve (Temporary Assistance for Needy Families)',
		'In fall 2019, the media reported that Tennessee had accumulated over $700 million of federal money related to the Temporary Assistance for Needy Families (TANF) program. Typically, federal grants have \" use it or lose it \" provisions where states lose the federal funding they have not spent after a specified period of time (e.g., two years). TANF, however, is unusually flexible in allowing states to keep the grant funding they have not spent forever without limitation. Because Tennessee has spent a small portion of its federal grant in recent years, the unspent funds have carried over each year and built up to the $700+ million balance.',
		$elm$core$Maybe$Just('https://comptroller.tn.gov/office-functions/research-and-education-accountability/collections/tanf-inquiry.html ')),
		A4(
		$author$project$Page$Glossary$Term,
		'pbc',
		'People’s Budget Coalition (PBC)',
		'The Nashville People’s Budget Coalition is building a Nashville where public safety includes communities with fully funded education, access to housing and health care, and freedom from policing and jails.',
		$elm$core$Maybe$Just('https://nashvillepeoplesbudget.org/'))
	]);
var $author$project$Page$Glossary$init = F2(
	function (fragment, session) {
		var match = function () {
			if (!fragment.$) {
				var termId = fragment.a;
				return $elm$core$List$head(
					A2(
						$elm$core$List$filter,
						function (term) {
							return _Utils_eq(term.hs, termId);
						},
						$author$project$Page$Glossary$terms));
			} else {
				return $elm$core$Maybe$Nothing;
			}
		}();
		return _Utils_Tuple2(
			{fY: session, ds: $elm$core$Maybe$Nothing},
			function () {
				if (!match.$) {
					var term = match.a;
					return A2(
						$elm$core$Task$attempt,
						$author$project$Page$Glossary$ScrollToTerm,
						A2(
							$elm$core$Task$andThen,
							function (info) {
								return A2($elm$browser$Browser$Dom$setViewport, 0, info.kq.nt);
							},
							$elm$browser$Browser$Dom$getElement(term.hs)));
				} else {
					return $elm$core$Platform$Cmd$none;
				}
			}());
	});
var $author$project$Page$Login$init = function (session) {
	return _Utils_Tuple2(
		{
			bZ: {aT: '', a$: ''},
			bx: _List_Nil,
			fY: session
		},
		$elm$core$Platform$Cmd$none);
};
var $author$project$Page$Organize$CampaignOverview$GotCampaign = $elm$core$Basics$identity;
var $author$project$Api$Endpoint$Endpoint = $elm$core$Basics$identity;
var $elm$url$Url$Builder$toQueryPair = function (_v0) {
	var key = _v0.a;
	var value = _v0.b;
	return key + ('=' + value);
};
var $elm$url$Url$Builder$toQuery = function (parameters) {
	if (!parameters.b) {
		return '';
	} else {
		return '?' + A2(
			$elm$core$String$join,
			'&',
			A2($elm$core$List$map, $elm$url$Url$Builder$toQueryPair, parameters));
	}
};
var $elm$url$Url$Builder$absolute = F2(
	function (pathSegments, parameters) {
		return '/' + (A2($elm$core$String$join, '/', pathSegments) + $elm$url$Url$Builder$toQuery(parameters));
	});
var $author$project$Api$Endpoint$url = F2(
	function (paths, queryParams) {
		return A2(
			$elm$url$Url$Builder$absolute,
			A2(
				$elm$core$List$cons,
				'api',
				A2($elm$core$List$cons, 'v1', paths)),
			queryParams);
	});
var $author$project$Api$Endpoint$campaign = function (id) {
	return A2(
		$author$project$Api$Endpoint$url,
		_List_fromArray(
			[
				'campaigns',
				$elm$core$String$fromInt(id)
			]),
		_List_Nil);
};
var $author$project$Campaign$Campaign = F3(
	function (id, name, events) {
		return {kz: events, hs: id, h1: name};
	});
var $elm$json$Json$Decode$list = _Json_decodeList;
var $author$project$Campaign$ShallowEvent = F2(
	function (id, name) {
		return {hs: id, h1: name};
	});
var $author$project$Campaign$shallowEventDecoder = A3(
	$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
	'name',
	$elm$json$Json$Decode$string,
	A3(
		$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
		'id',
		$elm$json$Json$Decode$int,
		$elm$json$Json$Decode$succeed($author$project$Campaign$ShallowEvent)));
var $author$project$Campaign$decoder = A3(
	$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
	'events',
	$elm$json$Json$Decode$list($author$project$Campaign$shallowEventDecoder),
	A3(
		$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
		'name',
		$elm$json$Json$Decode$string,
		A3(
			$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
			'id',
			$elm$json$Json$Decode$int,
			$elm$json$Json$Decode$succeed($author$project$Campaign$Campaign))));
var $elm$http$Http$Header = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $elm$http$Http$header = $elm$http$Http$Header;
var $author$project$Api$credHeaders = function (_v0) {
	var str = _v0;
	return _List_fromArray(
		[
			A2($elm$http$Http$header, 'authorization', 'Bearer ' + str),
			A2($elm$http$Http$header, 'authentication-token', str)
		]);
};
var $elm$http$Http$BadStatus_ = F2(
	function (a, b) {
		return {$: 3, a: a, b: b};
	});
var $elm$http$Http$BadUrl_ = function (a) {
	return {$: 0, a: a};
};
var $elm$http$Http$GoodStatus_ = F2(
	function (a, b) {
		return {$: 4, a: a, b: b};
	});
var $elm$http$Http$NetworkError_ = {$: 2};
var $elm$http$Http$Receiving = function (a) {
	return {$: 1, a: a};
};
var $elm$http$Http$Sending = function (a) {
	return {$: 0, a: a};
};
var $elm$http$Http$Timeout_ = {$: 1};
var $elm$core$Dict$RBEmpty_elm_builtin = {$: -2};
var $elm$core$Dict$empty = $elm$core$Dict$RBEmpty_elm_builtin;
var $elm$core$Maybe$isJust = function (maybe) {
	if (!maybe.$) {
		return true;
	} else {
		return false;
	}
};
var $elm$core$Platform$sendToSelf = _Platform_sendToSelf;
var $elm$core$Basics$compare = _Utils_compare;
var $elm$core$Dict$get = F2(
	function (targetKey, dict) {
		get:
		while (true) {
			if (dict.$ === -2) {
				return $elm$core$Maybe$Nothing;
			} else {
				var key = dict.b;
				var value = dict.c;
				var left = dict.d;
				var right = dict.e;
				var _v1 = A2($elm$core$Basics$compare, targetKey, key);
				switch (_v1) {
					case 0:
						var $temp$targetKey = targetKey,
							$temp$dict = left;
						targetKey = $temp$targetKey;
						dict = $temp$dict;
						continue get;
					case 1:
						return $elm$core$Maybe$Just(value);
					default:
						var $temp$targetKey = targetKey,
							$temp$dict = right;
						targetKey = $temp$targetKey;
						dict = $temp$dict;
						continue get;
				}
			}
		}
	});
var $elm$core$Dict$Black = 1;
var $elm$core$Dict$RBNode_elm_builtin = F5(
	function (a, b, c, d, e) {
		return {$: -1, a: a, b: b, c: c, d: d, e: e};
	});
var $elm$core$Dict$Red = 0;
var $elm$core$Dict$balance = F5(
	function (color, key, value, left, right) {
		if ((right.$ === -1) && (!right.a)) {
			var _v1 = right.a;
			var rK = right.b;
			var rV = right.c;
			var rLeft = right.d;
			var rRight = right.e;
			if ((left.$ === -1) && (!left.a)) {
				var _v3 = left.a;
				var lK = left.b;
				var lV = left.c;
				var lLeft = left.d;
				var lRight = left.e;
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					0,
					key,
					value,
					A5($elm$core$Dict$RBNode_elm_builtin, 1, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, 1, rK, rV, rLeft, rRight));
			} else {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					color,
					rK,
					rV,
					A5($elm$core$Dict$RBNode_elm_builtin, 0, key, value, left, rLeft),
					rRight);
			}
		} else {
			if ((((left.$ === -1) && (!left.a)) && (left.d.$ === -1)) && (!left.d.a)) {
				var _v5 = left.a;
				var lK = left.b;
				var lV = left.c;
				var _v6 = left.d;
				var _v7 = _v6.a;
				var llK = _v6.b;
				var llV = _v6.c;
				var llLeft = _v6.d;
				var llRight = _v6.e;
				var lRight = left.e;
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					0,
					lK,
					lV,
					A5($elm$core$Dict$RBNode_elm_builtin, 1, llK, llV, llLeft, llRight),
					A5($elm$core$Dict$RBNode_elm_builtin, 1, key, value, lRight, right));
			} else {
				return A5($elm$core$Dict$RBNode_elm_builtin, color, key, value, left, right);
			}
		}
	});
var $elm$core$Dict$insertHelp = F3(
	function (key, value, dict) {
		if (dict.$ === -2) {
			return A5($elm$core$Dict$RBNode_elm_builtin, 0, key, value, $elm$core$Dict$RBEmpty_elm_builtin, $elm$core$Dict$RBEmpty_elm_builtin);
		} else {
			var nColor = dict.a;
			var nKey = dict.b;
			var nValue = dict.c;
			var nLeft = dict.d;
			var nRight = dict.e;
			var _v1 = A2($elm$core$Basics$compare, key, nKey);
			switch (_v1) {
				case 0:
					return A5(
						$elm$core$Dict$balance,
						nColor,
						nKey,
						nValue,
						A3($elm$core$Dict$insertHelp, key, value, nLeft),
						nRight);
				case 1:
					return A5($elm$core$Dict$RBNode_elm_builtin, nColor, nKey, value, nLeft, nRight);
				default:
					return A5(
						$elm$core$Dict$balance,
						nColor,
						nKey,
						nValue,
						nLeft,
						A3($elm$core$Dict$insertHelp, key, value, nRight));
			}
		}
	});
var $elm$core$Dict$insert = F3(
	function (key, value, dict) {
		var _v0 = A3($elm$core$Dict$insertHelp, key, value, dict);
		if ((_v0.$ === -1) && (!_v0.a)) {
			var _v1 = _v0.a;
			var k = _v0.b;
			var v = _v0.c;
			var l = _v0.d;
			var r = _v0.e;
			return A5($elm$core$Dict$RBNode_elm_builtin, 1, k, v, l, r);
		} else {
			var x = _v0;
			return x;
		}
	});
var $elm$core$Dict$getMin = function (dict) {
	getMin:
	while (true) {
		if ((dict.$ === -1) && (dict.d.$ === -1)) {
			var left = dict.d;
			var $temp$dict = left;
			dict = $temp$dict;
			continue getMin;
		} else {
			return dict;
		}
	}
};
var $elm$core$Dict$moveRedLeft = function (dict) {
	if (((dict.$ === -1) && (dict.d.$ === -1)) && (dict.e.$ === -1)) {
		if ((dict.e.d.$ === -1) && (!dict.e.d.a)) {
			var clr = dict.a;
			var k = dict.b;
			var v = dict.c;
			var _v1 = dict.d;
			var lClr = _v1.a;
			var lK = _v1.b;
			var lV = _v1.c;
			var lLeft = _v1.d;
			var lRight = _v1.e;
			var _v2 = dict.e;
			var rClr = _v2.a;
			var rK = _v2.b;
			var rV = _v2.c;
			var rLeft = _v2.d;
			var _v3 = rLeft.a;
			var rlK = rLeft.b;
			var rlV = rLeft.c;
			var rlL = rLeft.d;
			var rlR = rLeft.e;
			var rRight = _v2.e;
			return A5(
				$elm$core$Dict$RBNode_elm_builtin,
				0,
				rlK,
				rlV,
				A5(
					$elm$core$Dict$RBNode_elm_builtin,
					1,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),
					rlL),
				A5($elm$core$Dict$RBNode_elm_builtin, 1, rK, rV, rlR, rRight));
		} else {
			var clr = dict.a;
			var k = dict.b;
			var v = dict.c;
			var _v4 = dict.d;
			var lClr = _v4.a;
			var lK = _v4.b;
			var lV = _v4.c;
			var lLeft = _v4.d;
			var lRight = _v4.e;
			var _v5 = dict.e;
			var rClr = _v5.a;
			var rK = _v5.b;
			var rV = _v5.c;
			var rLeft = _v5.d;
			var rRight = _v5.e;
			if (clr === 1) {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					1,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight));
			} else {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					1,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight));
			}
		}
	} else {
		return dict;
	}
};
var $elm$core$Dict$moveRedRight = function (dict) {
	if (((dict.$ === -1) && (dict.d.$ === -1)) && (dict.e.$ === -1)) {
		if ((dict.d.d.$ === -1) && (!dict.d.d.a)) {
			var clr = dict.a;
			var k = dict.b;
			var v = dict.c;
			var _v1 = dict.d;
			var lClr = _v1.a;
			var lK = _v1.b;
			var lV = _v1.c;
			var _v2 = _v1.d;
			var _v3 = _v2.a;
			var llK = _v2.b;
			var llV = _v2.c;
			var llLeft = _v2.d;
			var llRight = _v2.e;
			var lRight = _v1.e;
			var _v4 = dict.e;
			var rClr = _v4.a;
			var rK = _v4.b;
			var rV = _v4.c;
			var rLeft = _v4.d;
			var rRight = _v4.e;
			return A5(
				$elm$core$Dict$RBNode_elm_builtin,
				0,
				lK,
				lV,
				A5($elm$core$Dict$RBNode_elm_builtin, 1, llK, llV, llLeft, llRight),
				A5(
					$elm$core$Dict$RBNode_elm_builtin,
					1,
					k,
					v,
					lRight,
					A5($elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight)));
		} else {
			var clr = dict.a;
			var k = dict.b;
			var v = dict.c;
			var _v5 = dict.d;
			var lClr = _v5.a;
			var lK = _v5.b;
			var lV = _v5.c;
			var lLeft = _v5.d;
			var lRight = _v5.e;
			var _v6 = dict.e;
			var rClr = _v6.a;
			var rK = _v6.b;
			var rV = _v6.c;
			var rLeft = _v6.d;
			var rRight = _v6.e;
			if (clr === 1) {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					1,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight));
			} else {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					1,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight));
			}
		}
	} else {
		return dict;
	}
};
var $elm$core$Dict$removeHelpPrepEQGT = F7(
	function (targetKey, dict, color, key, value, left, right) {
		if ((left.$ === -1) && (!left.a)) {
			var _v1 = left.a;
			var lK = left.b;
			var lV = left.c;
			var lLeft = left.d;
			var lRight = left.e;
			return A5(
				$elm$core$Dict$RBNode_elm_builtin,
				color,
				lK,
				lV,
				lLeft,
				A5($elm$core$Dict$RBNode_elm_builtin, 0, key, value, lRight, right));
		} else {
			_v2$2:
			while (true) {
				if ((right.$ === -1) && (right.a === 1)) {
					if (right.d.$ === -1) {
						if (right.d.a === 1) {
							var _v3 = right.a;
							var _v4 = right.d;
							var _v5 = _v4.a;
							return $elm$core$Dict$moveRedRight(dict);
						} else {
							break _v2$2;
						}
					} else {
						var _v6 = right.a;
						var _v7 = right.d;
						return $elm$core$Dict$moveRedRight(dict);
					}
				} else {
					break _v2$2;
				}
			}
			return dict;
		}
	});
var $elm$core$Dict$removeMin = function (dict) {
	if ((dict.$ === -1) && (dict.d.$ === -1)) {
		var color = dict.a;
		var key = dict.b;
		var value = dict.c;
		var left = dict.d;
		var lColor = left.a;
		var lLeft = left.d;
		var right = dict.e;
		if (lColor === 1) {
			if ((lLeft.$ === -1) && (!lLeft.a)) {
				var _v3 = lLeft.a;
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					color,
					key,
					value,
					$elm$core$Dict$removeMin(left),
					right);
			} else {
				var _v4 = $elm$core$Dict$moveRedLeft(dict);
				if (_v4.$ === -1) {
					var nColor = _v4.a;
					var nKey = _v4.b;
					var nValue = _v4.c;
					var nLeft = _v4.d;
					var nRight = _v4.e;
					return A5(
						$elm$core$Dict$balance,
						nColor,
						nKey,
						nValue,
						$elm$core$Dict$removeMin(nLeft),
						nRight);
				} else {
					return $elm$core$Dict$RBEmpty_elm_builtin;
				}
			}
		} else {
			return A5(
				$elm$core$Dict$RBNode_elm_builtin,
				color,
				key,
				value,
				$elm$core$Dict$removeMin(left),
				right);
		}
	} else {
		return $elm$core$Dict$RBEmpty_elm_builtin;
	}
};
var $elm$core$Dict$removeHelp = F2(
	function (targetKey, dict) {
		if (dict.$ === -2) {
			return $elm$core$Dict$RBEmpty_elm_builtin;
		} else {
			var color = dict.a;
			var key = dict.b;
			var value = dict.c;
			var left = dict.d;
			var right = dict.e;
			if (_Utils_cmp(targetKey, key) < 0) {
				if ((left.$ === -1) && (left.a === 1)) {
					var _v4 = left.a;
					var lLeft = left.d;
					if ((lLeft.$ === -1) && (!lLeft.a)) {
						var _v6 = lLeft.a;
						return A5(
							$elm$core$Dict$RBNode_elm_builtin,
							color,
							key,
							value,
							A2($elm$core$Dict$removeHelp, targetKey, left),
							right);
					} else {
						var _v7 = $elm$core$Dict$moveRedLeft(dict);
						if (_v7.$ === -1) {
							var nColor = _v7.a;
							var nKey = _v7.b;
							var nValue = _v7.c;
							var nLeft = _v7.d;
							var nRight = _v7.e;
							return A5(
								$elm$core$Dict$balance,
								nColor,
								nKey,
								nValue,
								A2($elm$core$Dict$removeHelp, targetKey, nLeft),
								nRight);
						} else {
							return $elm$core$Dict$RBEmpty_elm_builtin;
						}
					}
				} else {
					return A5(
						$elm$core$Dict$RBNode_elm_builtin,
						color,
						key,
						value,
						A2($elm$core$Dict$removeHelp, targetKey, left),
						right);
				}
			} else {
				return A2(
					$elm$core$Dict$removeHelpEQGT,
					targetKey,
					A7($elm$core$Dict$removeHelpPrepEQGT, targetKey, dict, color, key, value, left, right));
			}
		}
	});
var $elm$core$Dict$removeHelpEQGT = F2(
	function (targetKey, dict) {
		if (dict.$ === -1) {
			var color = dict.a;
			var key = dict.b;
			var value = dict.c;
			var left = dict.d;
			var right = dict.e;
			if (_Utils_eq(targetKey, key)) {
				var _v1 = $elm$core$Dict$getMin(right);
				if (_v1.$ === -1) {
					var minKey = _v1.b;
					var minValue = _v1.c;
					return A5(
						$elm$core$Dict$balance,
						color,
						minKey,
						minValue,
						left,
						$elm$core$Dict$removeMin(right));
				} else {
					return $elm$core$Dict$RBEmpty_elm_builtin;
				}
			} else {
				return A5(
					$elm$core$Dict$balance,
					color,
					key,
					value,
					left,
					A2($elm$core$Dict$removeHelp, targetKey, right));
			}
		} else {
			return $elm$core$Dict$RBEmpty_elm_builtin;
		}
	});
var $elm$core$Dict$remove = F2(
	function (key, dict) {
		var _v0 = A2($elm$core$Dict$removeHelp, key, dict);
		if ((_v0.$ === -1) && (!_v0.a)) {
			var _v1 = _v0.a;
			var k = _v0.b;
			var v = _v0.c;
			var l = _v0.d;
			var r = _v0.e;
			return A5($elm$core$Dict$RBNode_elm_builtin, 1, k, v, l, r);
		} else {
			var x = _v0;
			return x;
		}
	});
var $elm$core$Dict$update = F3(
	function (targetKey, alter, dictionary) {
		var _v0 = alter(
			A2($elm$core$Dict$get, targetKey, dictionary));
		if (!_v0.$) {
			var value = _v0.a;
			return A3($elm$core$Dict$insert, targetKey, value, dictionary);
		} else {
			return A2($elm$core$Dict$remove, targetKey, dictionary);
		}
	});
var $elm$http$Http$emptyBody = _Http_emptyBody;
var $elm$http$Http$expectStringResponse = F2(
	function (toMsg, toResult) {
		return A3(
			_Http_expect,
			'',
			$elm$core$Basics$identity,
			A2($elm$core$Basics$composeR, toResult, toMsg));
	});
var $elm$http$Http$BadBody = function (a) {
	return {$: 4, a: a};
};
var $elm$http$Http$BadStatus = function (a) {
	return {$: 3, a: a};
};
var $elm$http$Http$BadUrl = function (a) {
	return {$: 0, a: a};
};
var $elm$http$Http$NetworkError = {$: 2};
var $elm$http$Http$Timeout = {$: 1};
var $elm$http$Http$resolve = F2(
	function (toResult, response) {
		switch (response.$) {
			case 0:
				var url = response.a;
				return $elm$core$Result$Err(
					$elm$http$Http$BadUrl(url));
			case 1:
				return $elm$core$Result$Err($elm$http$Http$Timeout);
			case 2:
				return $elm$core$Result$Err($elm$http$Http$NetworkError);
			case 3:
				var metadata = response.a;
				return $elm$core$Result$Err(
					$elm$http$Http$BadStatus(metadata.mE));
			default:
				var body = response.b;
				return A2(
					$elm$core$Result$mapError,
					$elm$http$Http$BadBody,
					toResult(body));
		}
	});
var $elm$http$Http$expectJson = F2(
	function (toMsg, decoder) {
		return A2(
			$elm$http$Http$expectStringResponse,
			toMsg,
			$elm$http$Http$resolve(
				function (string) {
					return A2(
						$elm$core$Result$mapError,
						$elm$json$Json$Decode$errorToString,
						A2($elm$json$Json$Decode$decodeString, decoder, string));
				}));
	});
var $elm$http$Http$Request = function (a) {
	return {$: 1, a: a};
};
var $elm$http$Http$State = F2(
	function (reqs, subs) {
		return {iv: reqs, iN: subs};
	});
var $elm$http$Http$init = $elm$core$Task$succeed(
	A2($elm$http$Http$State, $elm$core$Dict$empty, _List_Nil));
var $elm$core$Process$kill = _Scheduler_kill;
var $elm$core$Process$spawn = _Scheduler_spawn;
var $elm$http$Http$updateReqs = F3(
	function (router, cmds, reqs) {
		updateReqs:
		while (true) {
			if (!cmds.b) {
				return $elm$core$Task$succeed(reqs);
			} else {
				var cmd = cmds.a;
				var otherCmds = cmds.b;
				if (!cmd.$) {
					var tracker = cmd.a;
					var _v2 = A2($elm$core$Dict$get, tracker, reqs);
					if (_v2.$ === 1) {
						var $temp$router = router,
							$temp$cmds = otherCmds,
							$temp$reqs = reqs;
						router = $temp$router;
						cmds = $temp$cmds;
						reqs = $temp$reqs;
						continue updateReqs;
					} else {
						var pid = _v2.a;
						return A2(
							$elm$core$Task$andThen,
							function (_v3) {
								return A3(
									$elm$http$Http$updateReqs,
									router,
									otherCmds,
									A2($elm$core$Dict$remove, tracker, reqs));
							},
							$elm$core$Process$kill(pid));
					}
				} else {
					var req = cmd.a;
					return A2(
						$elm$core$Task$andThen,
						function (pid) {
							var _v4 = req.cE;
							if (_v4.$ === 1) {
								return A3($elm$http$Http$updateReqs, router, otherCmds, reqs);
							} else {
								var tracker = _v4.a;
								return A3(
									$elm$http$Http$updateReqs,
									router,
									otherCmds,
									A3($elm$core$Dict$insert, tracker, pid, reqs));
							}
						},
						$elm$core$Process$spawn(
							A3(
								_Http_toTask,
								router,
								$elm$core$Platform$sendToApp(router),
								req)));
				}
			}
		}
	});
var $elm$http$Http$onEffects = F4(
	function (router, cmds, subs, state) {
		return A2(
			$elm$core$Task$andThen,
			function (reqs) {
				return $elm$core$Task$succeed(
					A2($elm$http$Http$State, reqs, subs));
			},
			A3($elm$http$Http$updateReqs, router, cmds, state.iv));
	});
var $elm$core$List$maybeCons = F3(
	function (f, mx, xs) {
		var _v0 = f(mx);
		if (!_v0.$) {
			var x = _v0.a;
			return A2($elm$core$List$cons, x, xs);
		} else {
			return xs;
		}
	});
var $elm$core$List$filterMap = F2(
	function (f, xs) {
		return A3(
			$elm$core$List$foldr,
			$elm$core$List$maybeCons(f),
			_List_Nil,
			xs);
	});
var $elm$http$Http$maybeSend = F4(
	function (router, desiredTracker, progress, _v0) {
		var actualTracker = _v0.a;
		var toMsg = _v0.b;
		return _Utils_eq(desiredTracker, actualTracker) ? $elm$core$Maybe$Just(
			A2(
				$elm$core$Platform$sendToApp,
				router,
				toMsg(progress))) : $elm$core$Maybe$Nothing;
	});
var $elm$http$Http$onSelfMsg = F3(
	function (router, _v0, state) {
		var tracker = _v0.a;
		var progress = _v0.b;
		return A2(
			$elm$core$Task$andThen,
			function (_v1) {
				return $elm$core$Task$succeed(state);
			},
			$elm$core$Task$sequence(
				A2(
					$elm$core$List$filterMap,
					A3($elm$http$Http$maybeSend, router, tracker, progress),
					state.iN)));
	});
var $elm$http$Http$Cancel = function (a) {
	return {$: 0, a: a};
};
var $elm$http$Http$cmdMap = F2(
	function (func, cmd) {
		if (!cmd.$) {
			var tracker = cmd.a;
			return $elm$http$Http$Cancel(tracker);
		} else {
			var r = cmd.a;
			return $elm$http$Http$Request(
				{
					jq: r.jq,
					bM: r.bM,
					bV: A2(_Http_mapExpect, func, r.bV),
					b2: r.b2,
					cf: r.cf,
					cA: r.cA,
					cE: r.cE,
					cF: r.cF
				});
		}
	});
var $elm$http$Http$MySub = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $elm$http$Http$subMap = F2(
	function (func, _v0) {
		var tracker = _v0.a;
		var toMsg = _v0.b;
		return A2(
			$elm$http$Http$MySub,
			tracker,
			A2($elm$core$Basics$composeR, toMsg, func));
	});
_Platform_effectManagers['Http'] = _Platform_createManager($elm$http$Http$init, $elm$http$Http$onEffects, $elm$http$Http$onSelfMsg, $elm$http$Http$cmdMap, $elm$http$Http$subMap);
var $elm$http$Http$command = _Platform_leaf('Http');
var $elm$http$Http$subscription = _Platform_leaf('Http');
var $elm$http$Http$request = function (r) {
	return $elm$http$Http$command(
		$elm$http$Http$Request(
			{jq: false, bM: r.bM, bV: r.bV, b2: r.b2, cf: r.cf, cA: r.cA, cE: r.cE, cF: r.cF}));
};
var $author$project$Api$Endpoint$unwrap = function (_v0) {
	var str = _v0;
	return str;
};
var $author$project$Api$Endpoint$request = function (config) {
	return $elm$http$Http$request(
		{
			bM: config.bM,
			bV: config.bV,
			b2: config.b2,
			cf: config.cf,
			cA: config.cA,
			cE: config.cE,
			cF: $author$project$Api$Endpoint$unwrap(config.cF)
		});
};
var $author$project$Api$get = F4(
	function (url, maybeCred, toMsg, decoder) {
		return $author$project$Api$Endpoint$request(
			{
				bM: $elm$http$Http$emptyBody,
				bV: A2($elm$http$Http$expectJson, toMsg, decoder),
				b2: function () {
					if (!maybeCred.$) {
						var cred = maybeCred.a;
						return $author$project$Api$credHeaders(cred);
					} else {
						return _List_Nil;
					}
				}(),
				cf: 'GET',
				cA: $elm$core$Maybe$Nothing,
				cE: $elm$core$Maybe$Nothing,
				cF: url
			});
	});
var $author$project$Api$Item = F2(
	function (data, meta) {
		return {eN: data, hX: meta};
	});
var $author$project$Api$ItemMeta = function (cursor) {
	return {j5: cursor};
};
var $author$project$Api$itemMetaDecoder = A2(
	$elm$json$Json$Decode$map,
	$author$project$Api$ItemMeta,
	A2($elm$json$Json$Decode$field, 'cursor', $elm$json$Json$Decode$string));
var $author$project$Api$itemDecoder = function (dataDecoder) {
	return A3(
		$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
		'meta',
		$author$project$Api$itemMetaDecoder,
		A3(
			$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
			'data',
			dataDecoder,
			$elm$json$Json$Decode$succeed($author$project$Api$Item)));
};
var $author$project$Page$Organize$CampaignOverview$getCampaign = F2(
	function (maybeCred, id) {
		return A4(
			$author$project$Api$get,
			$author$project$Api$Endpoint$campaign(id),
			maybeCred,
			$elm$core$Basics$identity,
			$author$project$Api$itemDecoder($author$project$Campaign$decoder));
	});
var $author$project$Page$Organize$CampaignOverview$init = F2(
	function (campaignId, session) {
		var maybeCred = $author$project$Session$cred(session);
		return _Utils_Tuple2(
			{dP: $elm$core$Maybe$Nothing, fY: session},
			A2($author$project$Page$Organize$CampaignOverview$getCampaign, maybeCred, campaignId));
	});
var $author$project$Page$Organize$Dashboard$GotCampaigns = $elm$core$Basics$identity;
var $author$project$Api$Collection = F2(
	function (data, meta) {
		return {eN: data, hX: meta};
	});
var $author$project$Api$PageMeta = F3(
	function (afterCursor, hasNextPage, totalMatches) {
		return {jg: afterCursor, kM: hasNextPage, ne: totalMatches};
	});
var $elm$json$Json$Decode$bool = _Json_decodeBool;
var $elm$json$Json$Decode$null = _Json_decodeNull;
var $elm$json$Json$Decode$oneOf = _Json_oneOf;
var $elm$json$Json$Decode$nullable = function (decoder) {
	return $elm$json$Json$Decode$oneOf(
		_List_fromArray(
			[
				$elm$json$Json$Decode$null($elm$core$Maybe$Nothing),
				A2($elm$json$Json$Decode$map, $elm$core$Maybe$Just, decoder)
			]));
};
var $author$project$Api$pageMetaDecoder = A3(
	$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
	'total_matches',
	$elm$json$Json$Decode$int,
	A3(
		$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
		'has_next_page',
		$elm$json$Json$Decode$bool,
		A3(
			$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
			'after_cursor',
			$elm$json$Json$Decode$nullable($elm$json$Json$Decode$string),
			$elm$json$Json$Decode$succeed($author$project$Api$PageMeta))));
var $author$project$Api$campaignApiDecoder = A3(
	$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
	'meta',
	$author$project$Api$pageMetaDecoder,
	A3(
		$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
		'data',
		$elm$json$Json$Decode$list($author$project$Campaign$decoder),
		$elm$json$Json$Decode$succeed($author$project$Api$Collection)));
var $author$project$Api$Endpoint$campaigns = A2(
	$author$project$Api$Endpoint$url,
	_List_fromArray(
		['campaigns']),
	_List_Nil);
var $author$project$Page$Organize$Dashboard$getCampaigns = function (maybeCred) {
	return A4($author$project$Api$get, $author$project$Api$Endpoint$campaigns, maybeCred, $elm$core$Basics$identity, $author$project$Api$campaignApiDecoder);
};
var $author$project$Page$Organize$Dashboard$init = function (session) {
	var maybeCred = $author$project$Session$cred(session);
	return _Utils_Tuple2(
		{dQ: _List_Nil, fY: session},
		$author$project$Page$Organize$Dashboard$getCampaigns(maybeCred));
};
var $author$project$Page$Organize$DetainerWarrantCreation$Done = {$: 3};
var $author$project$Page$Organize$DetainerWarrantCreation$GotToday = function (a) {
	return {$: 1, a: a};
};
var $author$project$Page$Organize$DetainerWarrantCreation$Initializing = function (a) {
	return {$: 0, a: a};
};
var $author$project$Page$Organize$DetainerWarrantCreation$Ready = function (a) {
	return {$: 1, a: a};
};
var $author$project$DetainerWarrant$NotApplicable = 3;
var $PaackEng$elm_ui_dropdown$Dropdown$State = $elm$core$Basics$identity;
var $PaackEng$elm_ui_dropdown$Dropdown$init = function (id) {
	return {bX: '', ac: 0, hs: id, ad: false};
};
var $russelldavies$elm_ui_searchbox$SearchBox$init = {da: false, dg: false, cr: 0};
var $author$project$Page$Organize$DetainerWarrantCreation$initAttorneyForm = function (attorney) {
	return {
		ih: attorney,
		ms: $russelldavies$elm_ui_searchbox$SearchBox$init,
		mR: A2(
			$elm$core$Maybe$withDefault,
			'',
			A2(
				$elm$core$Maybe$map,
				function ($) {
					return $.h1;
				},
				attorney))
	};
};
var $author$project$Page$Organize$DetainerWarrantCreation$initCourtroomForm = function (courtroom) {
	return {
		ms: $russelldavies$elm_ui_searchbox$SearchBox$init,
		a4: courtroom,
		mR: A2(
			$elm$core$Maybe$withDefault,
			'',
			A2(
				$elm$core$Maybe$map,
				function ($) {
					return $.h1;
				},
				courtroom))
	};
};
var $fabhof$elm_ui_datepicker$DatePicker$Model = $elm$core$Basics$identity;
var $justinmimbs$date$Date$fromOrdinalDate = F2(
	function (y, od) {
		var daysInY = $justinmimbs$date$Date$isLeapYear(y) ? 366 : 365;
		return $justinmimbs$date$Date$daysBeforeYear(y) + A3($elm$core$Basics$clamp, 1, daysInY, od);
	});
var $fabhof$elm_ui_datepicker$DatePicker$init = {
	lP: false,
	F: A2($justinmimbs$date$Date$fromOrdinalDate, 1, 1),
	_: A2($justinmimbs$date$Date$fromOrdinalDate, 1, 1)
};
var $justinmimbs$date$Date$monthToNumber = function (m) {
	switch (m) {
		case 0:
			return 1;
		case 1:
			return 2;
		case 2:
			return 3;
		case 3:
			return 4;
		case 4:
			return 5;
		case 5:
			return 6;
		case 6:
			return 7;
		case 7:
			return 8;
		case 8:
			return 9;
		case 9:
			return 10;
		case 10:
			return 11;
		default:
			return 12;
	}
};
var $justinmimbs$date$Date$toCalendarDateHelp = F3(
	function (y, m, d) {
		toCalendarDateHelp:
		while (true) {
			var monthDays = A2($justinmimbs$date$Date$daysInMonth, y, m);
			var mn = $justinmimbs$date$Date$monthToNumber(m);
			if ((mn < 12) && (_Utils_cmp(d, monthDays) > 0)) {
				var $temp$y = y,
					$temp$m = $justinmimbs$date$Date$numberToMonth(mn + 1),
					$temp$d = d - monthDays;
				y = $temp$y;
				m = $temp$m;
				d = $temp$d;
				continue toCalendarDateHelp;
			} else {
				return {ka: d, lw: m, nx: y};
			}
		}
	});
var $justinmimbs$date$Date$divWithRemainder = F2(
	function (a, b) {
		return _Utils_Tuple2(
			A2($justinmimbs$date$Date$floorDiv, a, b),
			A2($elm$core$Basics$modBy, b, a));
	});
var $justinmimbs$date$Date$year = function (_v0) {
	var rd = _v0;
	var _v1 = A2($justinmimbs$date$Date$divWithRemainder, rd, 146097);
	var n400 = _v1.a;
	var r400 = _v1.b;
	var _v2 = A2($justinmimbs$date$Date$divWithRemainder, r400, 36524);
	var n100 = _v2.a;
	var r100 = _v2.b;
	var _v3 = A2($justinmimbs$date$Date$divWithRemainder, r100, 1461);
	var n4 = _v3.a;
	var r4 = _v3.b;
	var _v4 = A2($justinmimbs$date$Date$divWithRemainder, r4, 365);
	var n1 = _v4.a;
	var r1 = _v4.b;
	var n = (!r1) ? 0 : 1;
	return ((((n400 * 400) + (n100 * 100)) + (n4 * 4)) + n1) + n;
};
var $justinmimbs$date$Date$toOrdinalDate = function (_v0) {
	var rd = _v0;
	var y = $justinmimbs$date$Date$year(rd);
	return {
		fA: rd - $justinmimbs$date$Date$daysBeforeYear(y),
		nx: y
	};
};
var $justinmimbs$date$Date$toCalendarDate = function (_v0) {
	var rd = _v0;
	var date = $justinmimbs$date$Date$toOrdinalDate(rd);
	return A3($justinmimbs$date$Date$toCalendarDateHelp, date.nx, 0, date.fA);
};
var $justinmimbs$date$Date$day = A2(
	$elm$core$Basics$composeR,
	$justinmimbs$date$Date$toCalendarDate,
	function ($) {
		return $.ka;
	});
var $justinmimbs$date$Date$month = A2(
	$elm$core$Basics$composeR,
	$justinmimbs$date$Date$toCalendarDate,
	function ($) {
		return $.lw;
	});
var $justinmimbs$date$Date$monthNumber = A2($elm$core$Basics$composeR, $justinmimbs$date$Date$month, $justinmimbs$date$Date$monthToNumber);
var $justinmimbs$date$Date$ordinalDay = A2(
	$elm$core$Basics$composeR,
	$justinmimbs$date$Date$toOrdinalDate,
	function ($) {
		return $.fA;
	});
var $elm$core$String$cons = _String_cons;
var $elm$core$String$fromChar = function (_char) {
	return A2($elm$core$String$cons, _char, '');
};
var $elm$core$Bitwise$and = _Bitwise_and;
var $elm$core$Bitwise$shiftRightBy = _Bitwise_shiftRightBy;
var $elm$core$String$repeatHelp = F3(
	function (n, chunk, result) {
		return (n <= 0) ? result : A3(
			$elm$core$String$repeatHelp,
			n >> 1,
			_Utils_ap(chunk, chunk),
			(!(n & 1)) ? result : _Utils_ap(result, chunk));
	});
var $elm$core$String$repeat = F2(
	function (n, chunk) {
		return A3($elm$core$String$repeatHelp, n, chunk, '');
	});
var $elm$core$String$padLeft = F3(
	function (n, _char, string) {
		return _Utils_ap(
			A2(
				$elm$core$String$repeat,
				n - $elm$core$String$length(string),
				$elm$core$String$fromChar(_char)),
			string);
	});
var $elm$core$Basics$abs = function (n) {
	return (n < 0) ? (-n) : n;
};
var $justinmimbs$date$Date$padSignedInt = F2(
	function (length, _int) {
		return _Utils_ap(
			(_int < 0) ? '-' : '',
			A3(
				$elm$core$String$padLeft,
				length,
				'0',
				$elm$core$String$fromInt(
					$elm$core$Basics$abs(_int))));
	});
var $justinmimbs$date$Date$monthToQuarter = function (m) {
	return (($justinmimbs$date$Date$monthToNumber(m) + 2) / 3) | 0;
};
var $justinmimbs$date$Date$quarter = A2($elm$core$Basics$composeR, $justinmimbs$date$Date$month, $justinmimbs$date$Date$monthToQuarter);
var $elm$core$String$right = F2(
	function (n, string) {
		return (n < 1) ? '' : A3(
			$elm$core$String$slice,
			-n,
			$elm$core$String$length(string),
			string);
	});
var $elm$time$Time$Fri = 4;
var $elm$time$Time$Mon = 0;
var $elm$time$Time$Sat = 5;
var $elm$time$Time$Sun = 6;
var $elm$time$Time$Thu = 3;
var $elm$time$Time$Tue = 1;
var $elm$time$Time$Wed = 2;
var $justinmimbs$date$Date$numberToWeekday = function (wdn) {
	var _v0 = A2($elm$core$Basics$max, 1, wdn);
	switch (_v0) {
		case 1:
			return 0;
		case 2:
			return 1;
		case 3:
			return 2;
		case 4:
			return 3;
		case 5:
			return 4;
		case 6:
			return 5;
		default:
			return 6;
	}
};
var $justinmimbs$date$Date$toWeekDate = function (_v0) {
	var rd = _v0;
	var wdn = $justinmimbs$date$Date$weekdayNumber(rd);
	var wy = $justinmimbs$date$Date$year(rd + (4 - wdn));
	var week1Day1 = $justinmimbs$date$Date$daysBeforeWeekYear(wy) + 1;
	return {
		i3: 1 + (((rd - week1Day1) / 7) | 0),
		i4: wy,
		nl: $justinmimbs$date$Date$numberToWeekday(wdn)
	};
};
var $justinmimbs$date$Date$weekNumber = A2(
	$elm$core$Basics$composeR,
	$justinmimbs$date$Date$toWeekDate,
	function ($) {
		return $.i3;
	});
var $justinmimbs$date$Date$weekYear = A2(
	$elm$core$Basics$composeR,
	$justinmimbs$date$Date$toWeekDate,
	function ($) {
		return $.i4;
	});
var $justinmimbs$date$Date$weekday = A2($elm$core$Basics$composeR, $justinmimbs$date$Date$weekdayNumber, $justinmimbs$date$Date$numberToWeekday);
var $elm$core$Basics$min = F2(
	function (x, y) {
		return (_Utils_cmp(x, y) < 0) ? x : y;
	});
var $justinmimbs$date$Date$ordinalSuffix = function (n) {
	var nn = A2($elm$core$Basics$modBy, 100, n);
	var _v0 = A2(
		$elm$core$Basics$min,
		(nn < 20) ? nn : A2($elm$core$Basics$modBy, 10, nn),
		4);
	switch (_v0) {
		case 1:
			return 'st';
		case 2:
			return 'nd';
		case 3:
			return 'rd';
		default:
			return 'th';
	}
};
var $justinmimbs$date$Date$withOrdinalSuffix = function (n) {
	return _Utils_ap(
		$elm$core$String$fromInt(n),
		$justinmimbs$date$Date$ordinalSuffix(n));
};
var $justinmimbs$date$Date$formatField = F4(
	function (language, _char, length, date) {
		switch (_char) {
			case 'y':
				if (length === 2) {
					return A2(
						$elm$core$String$right,
						2,
						A3(
							$elm$core$String$padLeft,
							2,
							'0',
							$elm$core$String$fromInt(
								$justinmimbs$date$Date$year(date))));
				} else {
					return A2(
						$justinmimbs$date$Date$padSignedInt,
						length,
						$justinmimbs$date$Date$year(date));
				}
			case 'Y':
				if (length === 2) {
					return A2(
						$elm$core$String$right,
						2,
						A3(
							$elm$core$String$padLeft,
							2,
							'0',
							$elm$core$String$fromInt(
								$justinmimbs$date$Date$weekYear(date))));
				} else {
					return A2(
						$justinmimbs$date$Date$padSignedInt,
						length,
						$justinmimbs$date$Date$weekYear(date));
				}
			case 'Q':
				switch (length) {
					case 1:
						return $elm$core$String$fromInt(
							$justinmimbs$date$Date$quarter(date));
					case 2:
						return $elm$core$String$fromInt(
							$justinmimbs$date$Date$quarter(date));
					case 3:
						return 'Q' + $elm$core$String$fromInt(
							$justinmimbs$date$Date$quarter(date));
					case 4:
						return $justinmimbs$date$Date$withOrdinalSuffix(
							$justinmimbs$date$Date$quarter(date));
					case 5:
						return $elm$core$String$fromInt(
							$justinmimbs$date$Date$quarter(date));
					default:
						return '';
				}
			case 'M':
				switch (length) {
					case 1:
						return $elm$core$String$fromInt(
							$justinmimbs$date$Date$monthNumber(date));
					case 2:
						return A3(
							$elm$core$String$padLeft,
							2,
							'0',
							$elm$core$String$fromInt(
								$justinmimbs$date$Date$monthNumber(date)));
					case 3:
						return language.ee(
							$justinmimbs$date$Date$month(date));
					case 4:
						return language.ft(
							$justinmimbs$date$Date$month(date));
					case 5:
						return A2(
							$elm$core$String$left,
							1,
							language.ee(
								$justinmimbs$date$Date$month(date)));
					default:
						return '';
				}
			case 'w':
				switch (length) {
					case 1:
						return $elm$core$String$fromInt(
							$justinmimbs$date$Date$weekNumber(date));
					case 2:
						return A3(
							$elm$core$String$padLeft,
							2,
							'0',
							$elm$core$String$fromInt(
								$justinmimbs$date$Date$weekNumber(date)));
					default:
						return '';
				}
			case 'd':
				switch (length) {
					case 1:
						return $elm$core$String$fromInt(
							$justinmimbs$date$Date$day(date));
					case 2:
						return A3(
							$elm$core$String$padLeft,
							2,
							'0',
							$elm$core$String$fromInt(
								$justinmimbs$date$Date$day(date)));
					case 3:
						return language.eP(
							$justinmimbs$date$Date$day(date));
					default:
						return '';
				}
			case 'D':
				switch (length) {
					case 1:
						return $elm$core$String$fromInt(
							$justinmimbs$date$Date$ordinalDay(date));
					case 2:
						return A3(
							$elm$core$String$padLeft,
							2,
							'0',
							$elm$core$String$fromInt(
								$justinmimbs$date$Date$ordinalDay(date)));
					case 3:
						return A3(
							$elm$core$String$padLeft,
							3,
							'0',
							$elm$core$String$fromInt(
								$justinmimbs$date$Date$ordinalDay(date)));
					default:
						return '';
				}
			case 'E':
				switch (length) {
					case 1:
						return language.bK(
							$justinmimbs$date$Date$weekday(date));
					case 2:
						return language.bK(
							$justinmimbs$date$Date$weekday(date));
					case 3:
						return language.bK(
							$justinmimbs$date$Date$weekday(date));
					case 4:
						return language.gn(
							$justinmimbs$date$Date$weekday(date));
					case 5:
						return A2(
							$elm$core$String$left,
							1,
							language.bK(
								$justinmimbs$date$Date$weekday(date)));
					case 6:
						return A2(
							$elm$core$String$left,
							2,
							language.bK(
								$justinmimbs$date$Date$weekday(date)));
					default:
						return '';
				}
			case 'e':
				switch (length) {
					case 1:
						return $elm$core$String$fromInt(
							$justinmimbs$date$Date$weekdayNumber(date));
					case 2:
						return $elm$core$String$fromInt(
							$justinmimbs$date$Date$weekdayNumber(date));
					default:
						return A4($justinmimbs$date$Date$formatField, language, 'E', length, date);
				}
			default:
				return '';
		}
	});
var $justinmimbs$date$Date$formatWithTokens = F3(
	function (language, tokens, date) {
		return A3(
			$elm$core$List$foldl,
			F2(
				function (token, formatted) {
					if (!token.$) {
						var _char = token.a;
						var length = token.b;
						return _Utils_ap(
							A4($justinmimbs$date$Date$formatField, language, _char, length, date),
							formatted);
					} else {
						var str = token.a;
						return _Utils_ap(str, formatted);
					}
				}),
			'',
			tokens);
	});
var $justinmimbs$date$Pattern$Literal = function (a) {
	return {$: 1, a: a};
};
var $justinmimbs$date$Pattern$escapedQuote = A2(
	$elm$parser$Parser$ignorer,
	$elm$parser$Parser$succeed(
		$justinmimbs$date$Pattern$Literal('\'')),
	$elm$parser$Parser$token('\'\''));
var $justinmimbs$date$Pattern$Field = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $elm$parser$Parser$Advanced$chompWhileHelp = F5(
	function (isGood, offset, row, col, s0) {
		chompWhileHelp:
		while (true) {
			var newOffset = A3($elm$parser$Parser$Advanced$isSubChar, isGood, offset, s0.eo);
			if (_Utils_eq(newOffset, -1)) {
				return A3(
					$elm$parser$Parser$Advanced$Good,
					_Utils_cmp(s0.lG, offset) < 0,
					0,
					{gQ: col, h: s0.h, m: s0.m, lG: offset, iy: row, eo: s0.eo});
			} else {
				if (_Utils_eq(newOffset, -2)) {
					var $temp$isGood = isGood,
						$temp$offset = offset + 1,
						$temp$row = row + 1,
						$temp$col = 1,
						$temp$s0 = s0;
					isGood = $temp$isGood;
					offset = $temp$offset;
					row = $temp$row;
					col = $temp$col;
					s0 = $temp$s0;
					continue chompWhileHelp;
				} else {
					var $temp$isGood = isGood,
						$temp$offset = newOffset,
						$temp$row = row,
						$temp$col = col + 1,
						$temp$s0 = s0;
					isGood = $temp$isGood;
					offset = $temp$offset;
					row = $temp$row;
					col = $temp$col;
					s0 = $temp$s0;
					continue chompWhileHelp;
				}
			}
		}
	});
var $elm$parser$Parser$Advanced$chompWhile = function (isGood) {
	return function (s) {
		return A5($elm$parser$Parser$Advanced$chompWhileHelp, isGood, s.lG, s.iy, s.gQ, s);
	};
};
var $elm$parser$Parser$chompWhile = $elm$parser$Parser$Advanced$chompWhile;
var $elm$parser$Parser$Advanced$getOffset = function (s) {
	return A3($elm$parser$Parser$Advanced$Good, false, s.lG, s);
};
var $elm$parser$Parser$getOffset = $elm$parser$Parser$Advanced$getOffset;
var $elm$core$String$foldr = _String_foldr;
var $elm$core$String$toList = function (string) {
	return A3($elm$core$String$foldr, $elm$core$List$cons, _List_Nil, string);
};
var $justinmimbs$date$Pattern$fieldRepeats = function (str) {
	var _v0 = $elm$core$String$toList(str);
	if (_v0.b && (!_v0.b.b)) {
		var _char = _v0.a;
		return A2(
			$elm$parser$Parser$keeper,
			A2(
				$elm$parser$Parser$keeper,
				$elm$parser$Parser$succeed(
					F2(
						function (x, y) {
							return A2($justinmimbs$date$Pattern$Field, _char, 1 + (y - x));
						})),
				A2(
					$elm$parser$Parser$ignorer,
					$elm$parser$Parser$getOffset,
					$elm$parser$Parser$chompWhile(
						$elm$core$Basics$eq(_char)))),
			$elm$parser$Parser$getOffset);
	} else {
		return $elm$parser$Parser$problem('expected exactly one char');
	}
};
var $elm$parser$Parser$Advanced$getChompedString = function (parser) {
	return A2($elm$parser$Parser$Advanced$mapChompedString, $elm$core$Basics$always, parser);
};
var $elm$parser$Parser$getChompedString = $elm$parser$Parser$Advanced$getChompedString;
var $justinmimbs$date$Pattern$field = A2(
	$elm$parser$Parser$andThen,
	$justinmimbs$date$Pattern$fieldRepeats,
	$elm$parser$Parser$getChompedString(
		$elm$parser$Parser$chompIf($elm$core$Char$isAlpha)));
var $justinmimbs$date$Pattern$finalize = A2(
	$elm$core$List$foldl,
	F2(
		function (token, tokens) {
			var _v0 = _Utils_Tuple2(token, tokens);
			if (((_v0.a.$ === 1) && _v0.b.b) && (_v0.b.a.$ === 1)) {
				var x = _v0.a.a;
				var _v1 = _v0.b;
				var y = _v1.a.a;
				var rest = _v1.b;
				return A2(
					$elm$core$List$cons,
					$justinmimbs$date$Pattern$Literal(
						_Utils_ap(x, y)),
					rest);
			} else {
				return A2($elm$core$List$cons, token, tokens);
			}
		}),
	_List_Nil);
var $elm$parser$Parser$Advanced$lazy = function (thunk) {
	return function (s) {
		var _v0 = thunk(0);
		var parse = _v0;
		return parse(s);
	};
};
var $elm$parser$Parser$lazy = $elm$parser$Parser$Advanced$lazy;
var $justinmimbs$date$Pattern$isLiteralChar = function (_char) {
	return (_char !== '\'') && (!$elm$core$Char$isAlpha(_char));
};
var $justinmimbs$date$Pattern$literal = A2(
	$elm$parser$Parser$map,
	$justinmimbs$date$Pattern$Literal,
	$elm$parser$Parser$getChompedString(
		A2(
			$elm$parser$Parser$ignorer,
			A2(
				$elm$parser$Parser$ignorer,
				$elm$parser$Parser$succeed(0),
				$elm$parser$Parser$chompIf($justinmimbs$date$Pattern$isLiteralChar)),
			$elm$parser$Parser$chompWhile($justinmimbs$date$Pattern$isLiteralChar))));
var $justinmimbs$date$Pattern$quotedHelp = function (result) {
	return $elm$parser$Parser$oneOf(
		_List_fromArray(
			[
				A2(
				$elm$parser$Parser$andThen,
				function (str) {
					return $justinmimbs$date$Pattern$quotedHelp(
						_Utils_ap(result, str));
				},
				$elm$parser$Parser$getChompedString(
					A2(
						$elm$parser$Parser$ignorer,
						A2(
							$elm$parser$Parser$ignorer,
							$elm$parser$Parser$succeed(0),
							$elm$parser$Parser$chompIf(
								$elm$core$Basics$neq('\''))),
						$elm$parser$Parser$chompWhile(
							$elm$core$Basics$neq('\''))))),
				A2(
				$elm$parser$Parser$andThen,
				function (_v0) {
					return $justinmimbs$date$Pattern$quotedHelp(result + '\'');
				},
				$elm$parser$Parser$token('\'\'')),
				$elm$parser$Parser$succeed(result)
			]));
};
var $justinmimbs$date$Pattern$quoted = A2(
	$elm$parser$Parser$keeper,
	A2(
		$elm$parser$Parser$ignorer,
		$elm$parser$Parser$succeed($justinmimbs$date$Pattern$Literal),
		$elm$parser$Parser$chompIf(
			$elm$core$Basics$eq('\''))),
	A2(
		$elm$parser$Parser$ignorer,
		$justinmimbs$date$Pattern$quotedHelp(''),
		$elm$parser$Parser$oneOf(
			_List_fromArray(
				[
					$elm$parser$Parser$chompIf(
					$elm$core$Basics$eq('\'')),
					$elm$parser$Parser$end
				]))));
var $justinmimbs$date$Pattern$patternHelp = function (tokens) {
	return $elm$parser$Parser$oneOf(
		_List_fromArray(
			[
				A2(
				$elm$parser$Parser$andThen,
				function (token) {
					return $justinmimbs$date$Pattern$patternHelp(
						A2($elm$core$List$cons, token, tokens));
				},
				$elm$parser$Parser$oneOf(
					_List_fromArray(
						[$justinmimbs$date$Pattern$field, $justinmimbs$date$Pattern$literal, $justinmimbs$date$Pattern$escapedQuote, $justinmimbs$date$Pattern$quoted]))),
				$elm$parser$Parser$lazy(
				function (_v0) {
					return $elm$parser$Parser$succeed(
						$justinmimbs$date$Pattern$finalize(tokens));
				})
			]));
};
var $justinmimbs$date$Pattern$fromString = function (str) {
	return A2(
		$elm$core$Result$withDefault,
		_List_fromArray(
			[
				$justinmimbs$date$Pattern$Literal(str)
			]),
		A2(
			$elm$parser$Parser$run,
			$justinmimbs$date$Pattern$patternHelp(_List_Nil),
			str));
};
var $justinmimbs$date$Date$formatWithLanguage = F2(
	function (language, pattern) {
		var tokens = $elm$core$List$reverse(
			$justinmimbs$date$Pattern$fromString(pattern));
		return A2($justinmimbs$date$Date$formatWithTokens, language, tokens);
	});
var $justinmimbs$date$Date$monthToName = function (m) {
	switch (m) {
		case 0:
			return 'January';
		case 1:
			return 'February';
		case 2:
			return 'March';
		case 3:
			return 'April';
		case 4:
			return 'May';
		case 5:
			return 'June';
		case 6:
			return 'July';
		case 7:
			return 'August';
		case 8:
			return 'September';
		case 9:
			return 'October';
		case 10:
			return 'November';
		default:
			return 'December';
	}
};
var $justinmimbs$date$Date$weekdayToName = function (wd) {
	switch (wd) {
		case 0:
			return 'Monday';
		case 1:
			return 'Tuesday';
		case 2:
			return 'Wednesday';
		case 3:
			return 'Thursday';
		case 4:
			return 'Friday';
		case 5:
			return 'Saturday';
		default:
			return 'Sunday';
	}
};
var $justinmimbs$date$Date$language_en = {
	eP: $justinmimbs$date$Date$withOrdinalSuffix,
	ft: $justinmimbs$date$Date$monthToName,
	ee: A2(
		$elm$core$Basics$composeR,
		$justinmimbs$date$Date$monthToName,
		$elm$core$String$left(3)),
	gn: $justinmimbs$date$Date$weekdayToName,
	bK: A2(
		$elm$core$Basics$composeR,
		$justinmimbs$date$Date$weekdayToName,
		$elm$core$String$left(3))
};
var $justinmimbs$date$Date$format = function (pattern) {
	return A2($justinmimbs$date$Date$formatWithLanguage, $justinmimbs$date$Date$language_en, pattern);
};
var $justinmimbs$date$Date$toIsoString = $justinmimbs$date$Date$format('yyyy-MM-dd');
var $author$project$Page$Organize$DetainerWarrantCreation$initDatePicker = function (date) {
	return {
		gZ: date,
		j9: A2(
			$elm$core$Maybe$withDefault,
			'',
			A2($elm$core$Maybe$map, $justinmimbs$date$Date$toIsoString, date)),
		l2: $fabhof$elm_ui_datepicker$DatePicker$init
	};
};
var $elm$core$Maybe$andThen = F2(
	function (callback, maybeValue) {
		if (!maybeValue.$) {
			var value = maybeValue.a;
			return callback(value);
		} else {
			return $elm$core$Maybe$Nothing;
		}
	});
var $author$project$Page$Organize$DetainerWarrantCreation$initDefendantForm = function (defendant) {
	return {
		kE: A2(
			$elm$core$Maybe$withDefault,
			'',
			A2(
				$elm$core$Maybe$map,
				function ($) {
					return $.kE;
				},
				defendant)),
		hs: A2(
			$elm$core$Maybe$map,
			function ($) {
				return $.hs;
			},
			defendant),
		lh: A2(
			$elm$core$Maybe$withDefault,
			'',
			A2(
				$elm$core$Maybe$map,
				function ($) {
					return $.lh;
				},
				defendant)),
		ls: A2(
			$elm$core$Maybe$withDefault,
			'',
			A2(
				$elm$core$Maybe$andThen,
				function ($) {
					return $.ls;
				},
				defendant)),
		l5: A2(
			$elm$core$Maybe$withDefault,
			_List_fromArray(
				['']),
			A2(
				$elm$core$Maybe$map,
				$elm$core$String$split(','),
				A2(
					$elm$core$Maybe$andThen,
					function ($) {
						return $.l5;
					},
					defendant))),
		mM: A2(
			$elm$core$Maybe$withDefault,
			'',
			A2(
				$elm$core$Maybe$andThen,
				function ($) {
					return $.mM;
				},
				defendant))
	};
};
var $author$project$Page$Organize$DetainerWarrantCreation$initJudgeForm = function (judge) {
	return {
		ih: judge,
		ms: $russelldavies$elm_ui_searchbox$SearchBox$init,
		mR: A2(
			$elm$core$Maybe$withDefault,
			'',
			A2(
				$elm$core$Maybe$map,
				function ($) {
					return $.h1;
				},
				judge))
	};
};
var $author$project$Page$Organize$DetainerWarrantCreation$initPlaintiffForm = function (plaintiff) {
	return {
		ih: plaintiff,
		ms: $russelldavies$elm_ui_searchbox$SearchBox$init,
		mR: A2(
			$elm$core$Maybe$withDefault,
			'',
			A2(
				$elm$core$Maybe$map,
				function ($) {
					return $.h1;
				},
				plaintiff))
	};
};
var $author$project$Page$Organize$DetainerWarrantCreation$initCreate = {
	je: '',
	gH: '',
	gI: 3,
	bP: $PaackEng$elm_ui_dropdown$Dropdown$init('cares-dropdown'),
	bi: $PaackEng$elm_ui_dropdown$Dropdown$init('amount-claimed-category-dropdown'),
	bj: $author$project$Page$Organize$DetainerWarrantCreation$initDatePicker($elm$core$Maybe$Nothing),
	gW: $author$project$Page$Organize$DetainerWarrantCreation$initCourtroomForm($elm$core$Maybe$Nothing),
	g0: _List_fromArray(
		[
			$author$project$Page$Organize$DetainerWarrantCreation$initDefendantForm($elm$core$Maybe$Nothing)
		]),
	g4: '',
	hg: $author$project$Page$Organize$DetainerWarrantCreation$initDatePicker($elm$core$Maybe$Nothing),
	hF: $elm$core$Maybe$Nothing,
	hH: $elm$core$Maybe$Nothing,
	aD: $elm$core$Maybe$Nothing,
	lf: _List_Nil,
	cb: $PaackEng$elm_ui_dropdown$Dropdown$init('legacy-dropdown'),
	cl: $PaackEng$elm_ui_dropdown$Dropdown$init('nonpayment-dropdown'),
	aZ: '',
	ij: $author$project$Page$Organize$DetainerWarrantCreation$initPlaintiffForm($elm$core$Maybe$Nothing),
	ik: $author$project$Page$Organize$DetainerWarrantCreation$initAttorneyForm($elm$core$Maybe$Nothing),
	ip: $author$project$Page$Organize$DetainerWarrantCreation$initJudgeForm($elm$core$Maybe$Nothing),
	iM: $elm$core$Maybe$Nothing,
	bC: $PaackEng$elm_ui_dropdown$Dropdown$init('status-dropdown')
};
var $elm$time$Time$flooredDiv = F2(
	function (numerator, denominator) {
		return $elm$core$Basics$floor(numerator / denominator);
	});
var $elm$time$Time$posixToMillis = function (_v0) {
	var millis = _v0;
	return millis;
};
var $elm$time$Time$toAdjustedMinutesHelp = F3(
	function (defaultOffset, posixMinutes, eras) {
		toAdjustedMinutesHelp:
		while (true) {
			if (!eras.b) {
				return posixMinutes + defaultOffset;
			} else {
				var era = eras.a;
				var olderEras = eras.b;
				if (_Utils_cmp(era.f7, posixMinutes) < 0) {
					return posixMinutes + era.lG;
				} else {
					var $temp$defaultOffset = defaultOffset,
						$temp$posixMinutes = posixMinutes,
						$temp$eras = olderEras;
					defaultOffset = $temp$defaultOffset;
					posixMinutes = $temp$posixMinutes;
					eras = $temp$eras;
					continue toAdjustedMinutesHelp;
				}
			}
		}
	});
var $elm$time$Time$toAdjustedMinutes = F2(
	function (_v0, time) {
		var defaultOffset = _v0.a;
		var eras = _v0.b;
		return A3(
			$elm$time$Time$toAdjustedMinutesHelp,
			defaultOffset,
			A2(
				$elm$time$Time$flooredDiv,
				$elm$time$Time$posixToMillis(time),
				60000),
			eras);
	});
var $elm$core$Basics$ge = _Utils_ge;
var $elm$time$Time$toCivil = function (minutes) {
	var rawDay = A2($elm$time$Time$flooredDiv, minutes, 60 * 24) + 719468;
	var era = (((rawDay >= 0) ? rawDay : (rawDay - 146096)) / 146097) | 0;
	var dayOfEra = rawDay - (era * 146097);
	var yearOfEra = ((((dayOfEra - ((dayOfEra / 1460) | 0)) + ((dayOfEra / 36524) | 0)) - ((dayOfEra / 146096) | 0)) / 365) | 0;
	var dayOfYear = dayOfEra - (((365 * yearOfEra) + ((yearOfEra / 4) | 0)) - ((yearOfEra / 100) | 0));
	var mp = (((5 * dayOfYear) + 2) / 153) | 0;
	var month = mp + ((mp < 10) ? 3 : (-9));
	var year = yearOfEra + (era * 400);
	return {
		ka: (dayOfYear - ((((153 * mp) + 2) / 5) | 0)) + 1,
		lw: month,
		nx: year + ((month <= 2) ? 1 : 0)
	};
};
var $elm$time$Time$toDay = F2(
	function (zone, time) {
		return $elm$time$Time$toCivil(
			A2($elm$time$Time$toAdjustedMinutes, zone, time)).ka;
	});
var $elm$time$Time$toMonth = F2(
	function (zone, time) {
		var _v0 = $elm$time$Time$toCivil(
			A2($elm$time$Time$toAdjustedMinutes, zone, time)).lw;
		switch (_v0) {
			case 1:
				return 0;
			case 2:
				return 1;
			case 3:
				return 2;
			case 4:
				return 3;
			case 5:
				return 4;
			case 6:
				return 5;
			case 7:
				return 6;
			case 8:
				return 7;
			case 9:
				return 8;
			case 10:
				return 9;
			case 11:
				return 10;
			default:
				return 11;
		}
	});
var $elm$time$Time$toYear = F2(
	function (zone, time) {
		return $elm$time$Time$toCivil(
			A2($elm$time$Time$toAdjustedMinutes, zone, time)).nx;
	});
var $justinmimbs$date$Date$fromPosix = F2(
	function (zone, posix) {
		return A3(
			$justinmimbs$date$Date$fromCalendarDate,
			A2($elm$time$Time$toYear, zone, posix),
			A2($elm$time$Time$toMonth, zone, posix),
			A2($elm$time$Time$toDay, zone, posix));
	});
var $elm$time$Time$Name = function (a) {
	return {$: 0, a: a};
};
var $elm$time$Time$Offset = function (a) {
	return {$: 1, a: a};
};
var $elm$time$Time$Zone = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $elm$time$Time$customZone = $elm$time$Time$Zone;
var $elm$time$Time$here = _Time_here(0);
var $elm$time$Time$Posix = $elm$core$Basics$identity;
var $elm$time$Time$millisToPosix = $elm$core$Basics$identity;
var $elm$time$Time$now = _Time_now($elm$time$Time$millisToPosix);
var $justinmimbs$date$Date$today = A3($elm$core$Task$map2, $justinmimbs$date$Date$fromPosix, $elm$time$Time$here, $elm$time$Time$now);
var $author$project$Page$Organize$DetainerWarrantCreation$init = F3(
	function (maybeId, runtime, session) {
		var maybeCred = $author$project$Session$cred(session);
		return _Utils_Tuple2(
			{
				be: _List_Nil,
				bk: _List_Nil,
				g4: maybeId,
				bZ: function () {
					if (!maybeId.$) {
						var id = maybeId.a;
						return $author$project$Page$Organize$DetainerWarrantCreation$Initializing(id);
					} else {
						return $author$project$Page$Organize$DetainerWarrantCreation$Ready($author$project$Page$Organize$DetainerWarrantCreation$initCreate);
					}
				}(),
				aV: _List_Nil,
				cj: false,
				bv: _List_Nil,
				bx: _List_Nil,
				iz: runtime,
				n: $author$project$Page$Organize$DetainerWarrantCreation$Done,
				fY: session,
				F: $elm$core$Maybe$Nothing,
				a: $elm$core$Maybe$Nothing,
				cI: $elm$core$Maybe$Nothing
			},
			A2($elm$core$Task$perform, $author$project$Page$Organize$DetainerWarrantCreation$GotToday, $justinmimbs$date$Date$today));
	});
var $FabienHenon$elm_infinite_scroll$InfiniteScroll$Bottom = 1;
var $author$project$Search$NewSearch = {$: 0};
var $FabienHenon$elm_infinite_scroll$InfiniteScroll$Model = $elm$core$Basics$identity;
var $FabienHenon$elm_infinite_scroll$InfiniteScroll$direction = F2(
	function (newDirection, _v0) {
		var model = _v0;
		return _Utils_update(
			model,
			{g3: newDirection});
	});
var $FabienHenon$elm_infinite_scroll$InfiniteScroll$init = function (loadMoreFunc) {
	return {
		g3: 1,
		b8: false,
		d8: $elm$time$Time$millisToPosix(0),
		eb: loadMoreFunc,
		lG: 50,
		cA: 5 * 1000
	};
};
var $fabhof$elm_ui_datepicker$DatePicker$setToday = F2(
	function (today, _v0) {
		var picker = _v0;
		return _Utils_update(
			picker,
			{F: today, _: today});
	});
var $author$project$Page$Organize$DetainerWarrants$initDatePicker = F2(
	function (today, date) {
		return {
			gZ: date,
			j9: A2(
				$elm$core$Maybe$withDefault,
				'',
				A2($elm$core$Maybe$map, $justinmimbs$date$Date$toIsoString, date)),
			l2: A2($fabhof$elm_ui_datepicker$DatePicker$setToday, today, $fabhof$elm_ui_datepicker$DatePicker$init)
		};
	});
var $author$project$Page$Organize$DetainerWarrants$GotWarrants = function (a) {
	return {$: 10, a: a};
};
var $author$project$DetainerWarrant$DetainerWarrant = function (docketId) {
	return function (fileDate) {
		return function (status) {
			return function (plaintiff) {
				return function (plaintiffAttorney) {
					return function (courtDate) {
						return function (courtroom) {
							return function (presidingJudge) {
								return function (amountClaimed) {
									return function (amountClaimedCategory) {
										return function (isCares) {
											return function (isLegacy) {
												return function (nonpayment) {
													return function (defendants) {
														return function (judgements) {
															return function (notes) {
																return {gH: amountClaimed, gI: amountClaimedCategory, bj: courtDate, gW: courtroom, g0: defendants, g4: docketId, hg: fileDate, hF: isCares, hH: isLegacy, lf: judgements, h3: nonpayment, aZ: notes, ij: plaintiff, ik: plaintiffAttorney, ip: presidingJudge, iM: status};
															};
														};
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var $author$project$DetainerWarrant$Both = 2;
var $author$project$DetainerWarrant$Fees = 1;
var $author$project$DetainerWarrant$Possession = 0;
var $elm$json$Json$Decode$fail = _Json_fail;
var $author$project$DetainerWarrant$amountClaimedCategoryDecoder = A2(
	$elm$json$Json$Decode$andThen,
	function (str) {
		switch (str) {
			case 'POSS':
				return $elm$json$Json$Decode$succeed(0);
			case 'FEES':
				return $elm$json$Json$Decode$succeed(1);
			case 'BOTH':
				return $elm$json$Json$Decode$succeed(2);
			case 'N/A':
				return $elm$json$Json$Decode$succeed(3);
			default:
				var somethingElse = str;
				return $elm$json$Json$Decode$fail('Unknown amount claimed category:' + somethingElse);
		}
	},
	$elm$json$Json$Decode$string);
var $author$project$DetainerWarrant$Attorney = F3(
	function (id, name, aliases) {
		return {jh: aliases, hs: id, h1: name};
	});
var $author$project$DetainerWarrant$attorneyDecoder = A3(
	$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
	'aliases',
	$elm$json$Json$Decode$list($elm$json$Json$Decode$string),
	A3(
		$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
		'name',
		$elm$json$Json$Decode$string,
		A3(
			$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
			'id',
			$elm$json$Json$Decode$int,
			$elm$json$Json$Decode$succeed($author$project$DetainerWarrant$Attorney))));
var $author$project$DetainerWarrant$Courtroom = F2(
	function (id, name) {
		return {hs: id, h1: name};
	});
var $author$project$DetainerWarrant$courtroomDecoder = A3(
	$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
	'name',
	$elm$json$Json$Decode$string,
	A3(
		$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
		'id',
		$elm$json$Json$Decode$int,
		$elm$json$Json$Decode$succeed($author$project$DetainerWarrant$Courtroom)));
var $author$project$DetainerWarrant$dateDecoder = A2(
	$elm$json$Json$Decode$map,
	A2(
		$elm$core$Basics$composeL,
		A2(
			$elm$core$Basics$composeL,
			$elm$core$Maybe$withDefault(
				A3($justinmimbs$date$Date$fromCalendarDate, 2021, 0, 1)),
			$elm$core$Result$toMaybe),
		$justinmimbs$date$Date$fromIsoString),
	$elm$json$Json$Decode$string);
var $author$project$Defendant$Defendant = function (id) {
	return function (name) {
		return function (firstName) {
			return function (middleName) {
				return function (lastName) {
					return function (suffix) {
						return function (aliases) {
							return function (address) {
								return function (potentialPhones) {
									return function (verifiedPhone) {
										return {je: address, jh: aliases, kE: firstName, hs: id, lh: lastName, ls: middleName, h1: name, l5: potentialPhones, mM: suffix, nj: verifiedPhone};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var $elm$json$Json$Decode$value = _Json_decodeValue;
var $NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optionalDecoder = F3(
	function (pathDecoder, valDecoder, fallback) {
		var nullOr = function (decoder) {
			return $elm$json$Json$Decode$oneOf(
				_List_fromArray(
					[
						decoder,
						$elm$json$Json$Decode$null(fallback)
					]));
		};
		var handleResult = function (input) {
			var _v0 = A2($elm$json$Json$Decode$decodeValue, pathDecoder, input);
			if (!_v0.$) {
				var rawValue = _v0.a;
				var _v1 = A2(
					$elm$json$Json$Decode$decodeValue,
					nullOr(valDecoder),
					rawValue);
				if (!_v1.$) {
					var finalResult = _v1.a;
					return $elm$json$Json$Decode$succeed(finalResult);
				} else {
					var finalErr = _v1.a;
					return $elm$json$Json$Decode$fail(
						$elm$json$Json$Decode$errorToString(finalErr));
				}
			} else {
				return $elm$json$Json$Decode$succeed(fallback);
			}
		};
		return A2($elm$json$Json$Decode$andThen, handleResult, $elm$json$Json$Decode$value);
	});
var $NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional = F4(
	function (key, valDecoder, fallback, decoder) {
		return A2(
			$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$custom,
			A3(
				$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optionalDecoder,
				A2($elm$json$Json$Decode$field, key, $elm$json$Json$Decode$value),
				valDecoder,
				fallback),
			decoder);
	});
var $author$project$Defendant$VerifiedPhone = F3(
	function (callerName, phoneType, nationalFormat) {
		return {jM: callerName, lA: nationalFormat, l1: phoneType};
	});
var $author$project$Defendant$verifiedPhoneDecoder = A3(
	$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
	'national_format',
	$elm$json$Json$Decode$string,
	A3(
		$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
		'phone_type',
		$elm$json$Json$Decode$nullable($elm$json$Json$Decode$string),
		A3(
			$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
			'caller_name',
			$elm$json$Json$Decode$nullable($elm$json$Json$Decode$string),
			$elm$json$Json$Decode$succeed($author$project$Defendant$VerifiedPhone))));
var $author$project$Defendant$decoder = A3(
	$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
	'verified_phone',
	$elm$json$Json$Decode$nullable($author$project$Defendant$verifiedPhoneDecoder),
	A3(
		$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
		'potential_phones',
		$elm$json$Json$Decode$nullable($elm$json$Json$Decode$string),
		A4(
			$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
			'address',
			$elm$json$Json$Decode$string,
			'',
			A3(
				$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
				'aliases',
				$elm$json$Json$Decode$list($elm$json$Json$Decode$string),
				A3(
					$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
					'suffix',
					$elm$json$Json$Decode$nullable($elm$json$Json$Decode$string),
					A4(
						$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
						'last_name',
						$elm$json$Json$Decode$string,
						'',
						A3(
							$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
							'middle_name',
							$elm$json$Json$Decode$nullable($elm$json$Json$Decode$string),
							A4(
								$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
								'first_name',
								$elm$json$Json$Decode$string,
								'',
								A3(
									$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
									'name',
									$elm$json$Json$Decode$string,
									A3(
										$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
										'id',
										$elm$json$Json$Decode$int,
										$elm$json$Json$Decode$succeed($author$project$Defendant$Defendant)))))))))));
var $author$project$Plaintiff$Plaintiff = F3(
	function (id, name, aliases) {
		return {jh: aliases, hs: id, h1: name};
	});
var $author$project$Plaintiff$decoder = A3(
	$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
	'aliases',
	$elm$json$Json$Decode$list($elm$json$Json$Decode$string),
	A3(
		$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
		'name',
		$elm$json$Json$Decode$string,
		A3(
			$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
			'id',
			$elm$json$Json$Decode$int,
			$elm$json$Json$Decode$succeed($author$project$Plaintiff$Plaintiff))));
var $elm$json$Json$Decode$float = _Json_decodeFloat;
var $author$project$DetainerWarrant$Judge = F3(
	function (id, name, aliases) {
		return {jh: aliases, hs: id, h1: name};
	});
var $author$project$DetainerWarrant$judgeDecoder = A3(
	$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
	'aliases',
	$elm$json$Json$Decode$list($elm$json$Json$Decode$string),
	A3(
		$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
		'name',
		$elm$json$Json$Decode$string,
		A3(
			$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
			'id',
			$elm$json$Json$Decode$int,
			$elm$json$Json$Decode$succeed($author$project$DetainerWarrant$Judge))));
var $author$project$DetainerWarrant$DefendantConditions = function (a) {
	return {$: 1, a: a};
};
var $author$project$DetainerWarrant$PlaintiffConditions = function (a) {
	return {$: 0, a: a};
};
var $author$project$DetainerWarrant$DismissalConditions = F2(
	function (basis, withPrejudice) {
		return {jy: basis, dI: withPrejudice};
	});
var $author$project$DetainerWarrant$FailureToProsecute = 0;
var $author$project$DetainerWarrant$FindingInFavorOfDefendant = 1;
var $author$project$DetainerWarrant$NonSuitByPlaintiff = 2;
var $author$project$DetainerWarrant$dismissalBasisDecoder = A2(
	$elm$json$Json$Decode$andThen,
	function (str) {
		switch (str) {
			case 'FAILURE_TO_PROSECUTE':
				return $elm$json$Json$Decode$succeed(0);
			case 'FINDING_IN_FAVOR_OF_DEFENDANT':
				return $elm$json$Json$Decode$succeed(1);
			case 'NON_SUIT_BY_PLAINTIFF':
				return $elm$json$Json$Decode$succeed(2);
			default:
				return $elm$json$Json$Decode$fail('oops');
		}
	},
	$elm$json$Json$Decode$string);
var $author$project$DetainerWarrant$dismissalConditionsDecoder = A4(
	$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
	'with_prejudice',
	$elm$json$Json$Decode$bool,
	false,
	A4(
		$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
		'dismissal_basis',
		$author$project$DetainerWarrant$dismissalBasisDecoder,
		0,
		$elm$json$Json$Decode$succeed($author$project$DetainerWarrant$DismissalConditions)));
var $author$project$DetainerWarrant$Judgement = F6(
	function (id, notes, courtDate, enteredBy, judge, conditions) {
		return {j$: conditions, bj: courtDate, c3: enteredBy, hs: id, dd: judge, aZ: notes};
	});
var $author$project$DetainerWarrant$AgreementOfParties = 1;
var $author$project$DetainerWarrant$Default = 0;
var $author$project$DetainerWarrant$TrialInCourt = 2;
var $author$project$DetainerWarrant$entranceDecoder = A2(
	$elm$json$Json$Decode$andThen,
	function (str) {
		switch (str) {
			case 'DEFAULT':
				return $elm$json$Json$Decode$succeed(0);
			case 'AGREEMENT_OF_PARTIES':
				return $elm$json$Json$Decode$succeed(1);
			case 'TRIAL_IN_COURT':
				return $elm$json$Json$Decode$succeed(2);
			default:
				return $elm$json$Json$Decode$fail('oops');
		}
	},
	$elm$json$Json$Decode$string);
var $author$project$DetainerWarrant$fromConditions = function (conditions) {
	return A2(
		$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$custom,
		$elm$json$Json$Decode$succeed(conditions),
		A3(
			$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
			'judge',
			$elm$json$Json$Decode$nullable($author$project$DetainerWarrant$judgeDecoder),
			A3(
				$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
				'entered_by',
				$author$project$DetainerWarrant$entranceDecoder,
				A3(
					$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
					'court_date',
					$elm$json$Json$Decode$nullable($author$project$DetainerWarrant$dateDecoder),
					A3(
						$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
						'notes',
						$elm$json$Json$Decode$nullable($elm$json$Json$Decode$string),
						A3(
							$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
							'id',
							$elm$json$Json$Decode$int,
							$elm$json$Json$Decode$succeed($author$project$DetainerWarrant$Judgement)))))));
};
var $author$project$DetainerWarrant$OwedConditions = F3(
	function (awardsFees, awardsPossession, interest) {
		return {bL: awardsFees, cK: awardsPossession, k4: interest};
	});
var $author$project$DetainerWarrant$FollowsSite = {$: 1};
var $author$project$DetainerWarrant$WithRate = function (a) {
	return {$: 0, a: a};
};
var $author$project$DetainerWarrant$interestConditionsDecoder = A2(
	$elm$json$Json$Decode$andThen,
	function (rate) {
		return $elm$json$Json$Decode$succeed(
			function () {
				if (rate.$ === 1) {
					return $author$project$DetainerWarrant$FollowsSite;
				} else {
					var someRate = rate.a;
					return $author$project$DetainerWarrant$WithRate(someRate);
				}
			}());
	},
	A2(
		$elm$json$Json$Decode$field,
		'interest_rate',
		$elm$json$Json$Decode$nullable($elm$json$Json$Decode$float)));
var $author$project$DetainerWarrant$interestDecoder = A2(
	$elm$json$Json$Decode$andThen,
	function (maybeHasInterest) {
		return A2(
			$elm$core$Maybe$withDefault,
			$elm$json$Json$Decode$succeed($elm$core$Maybe$Nothing),
			A2(
				$elm$core$Maybe$map,
				function (hasInterest) {
					return hasInterest ? A2($elm$json$Json$Decode$map, $elm$core$Maybe$Just, $author$project$DetainerWarrant$interestConditionsDecoder) : $elm$json$Json$Decode$succeed($elm$core$Maybe$Nothing);
				},
				maybeHasInterest));
	},
	A2(
		$elm$json$Json$Decode$field,
		'interest',
		$elm$json$Json$Decode$nullable($elm$json$Json$Decode$bool)));
var $author$project$DetainerWarrant$owedConditionsDecoder = A2(
	$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$custom,
	$author$project$DetainerWarrant$interestDecoder,
	A3(
		$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
		'awards_possession',
		$elm$json$Json$Decode$bool,
		A3(
			$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
			'awards_fees',
			$elm$json$Json$Decode$nullable($elm$json$Json$Decode$float),
			$elm$json$Json$Decode$succeed($author$project$DetainerWarrant$OwedConditions))));
var $author$project$DetainerWarrant$judgementDecoder = A2(
	$elm$json$Json$Decode$andThen,
	$author$project$DetainerWarrant$fromConditions,
	A2(
		$elm$json$Json$Decode$andThen,
		function (maybeStr) {
			_v0$2:
			while (true) {
				if (!maybeStr.$) {
					switch (maybeStr.a) {
						case 'PLAINTIFF':
							return A2(
								$elm$json$Json$Decode$map,
								A2($elm$core$Basics$composeL, $elm$core$Maybe$Just, $author$project$DetainerWarrant$PlaintiffConditions),
								$author$project$DetainerWarrant$owedConditionsDecoder);
						case 'DEFENDANT':
							return A2(
								$elm$json$Json$Decode$map,
								A2($elm$core$Basics$composeL, $elm$core$Maybe$Just, $author$project$DetainerWarrant$DefendantConditions),
								$author$project$DetainerWarrant$dismissalConditionsDecoder);
						default:
							break _v0$2;
					}
				} else {
					break _v0$2;
				}
			}
			return $elm$json$Json$Decode$succeed($elm$core$Maybe$Nothing);
		},
		A2(
			$elm$json$Json$Decode$field,
			'in_favor_of',
			$elm$json$Json$Decode$nullable($elm$json$Json$Decode$string))));
var $author$project$DetainerWarrant$Closed = 0;
var $author$project$DetainerWarrant$Pending = 1;
var $author$project$DetainerWarrant$statusDecoder = A2(
	$elm$json$Json$Decode$andThen,
	function (str) {
		switch (str) {
			case 'CLOSED':
				return $elm$json$Json$Decode$succeed(0);
			case 'PENDING':
				return $elm$json$Json$Decode$succeed(1);
			default:
				var somethingElse = str;
				return $elm$json$Json$Decode$fail('Unknown status:' + somethingElse);
		}
	},
	$elm$json$Json$Decode$string);
var $author$project$DetainerWarrant$decoder = A3(
	$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
	'notes',
	$elm$json$Json$Decode$nullable($elm$json$Json$Decode$string),
	A3(
		$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
		'judgements',
		$elm$json$Json$Decode$list($author$project$DetainerWarrant$judgementDecoder),
		A3(
			$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
			'defendants',
			$elm$json$Json$Decode$list($author$project$Defendant$decoder),
			A3(
				$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
				'nonpayment',
				$elm$json$Json$Decode$nullable($elm$json$Json$Decode$bool),
				A3(
					$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
					'is_legacy',
					$elm$json$Json$Decode$nullable($elm$json$Json$Decode$bool),
					A3(
						$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
						'is_cares',
						$elm$json$Json$Decode$nullable($elm$json$Json$Decode$bool),
						A3(
							$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
							'amount_claimed_category',
							$author$project$DetainerWarrant$amountClaimedCategoryDecoder,
							A3(
								$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
								'amount_claimed',
								$elm$json$Json$Decode$nullable($elm$json$Json$Decode$float),
								A3(
									$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
									'presiding_judge',
									$elm$json$Json$Decode$nullable($author$project$DetainerWarrant$judgeDecoder),
									A3(
										$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
										'courtroom',
										$elm$json$Json$Decode$nullable($author$project$DetainerWarrant$courtroomDecoder),
										A3(
											$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
											'court_date',
											$elm$json$Json$Decode$nullable($author$project$DetainerWarrant$dateDecoder),
											A3(
												$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
												'plaintiff_attorney',
												$elm$json$Json$Decode$nullable($author$project$DetainerWarrant$attorneyDecoder),
												A3(
													$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
													'plaintiff',
													$elm$json$Json$Decode$nullable($author$project$Plaintiff$decoder),
													A3(
														$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
														'status',
														$elm$json$Json$Decode$nullable($author$project$DetainerWarrant$statusDecoder),
														A3(
															$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
															'file_date',
															$elm$json$Json$Decode$nullable($author$project$DetainerWarrant$dateDecoder),
															A3(
																$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
																'docket_id',
																$elm$json$Json$Decode$string,
																$elm$json$Json$Decode$succeed($author$project$DetainerWarrant$DetainerWarrant)))))))))))))))));
var $author$project$Api$detainerWarrantApiDecoder = A3(
	$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
	'meta',
	$author$project$Api$pageMetaDecoder,
	A3(
		$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
		'data',
		$elm$json$Json$Decode$list($author$project$DetainerWarrant$decoder),
		$elm$json$Json$Decode$succeed($author$project$Api$Collection)));
var $elm$url$Url$Builder$QueryParameter = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $elm$url$Url$percentEncode = _Url_percentEncode;
var $elm$url$Url$Builder$string = F2(
	function (key, value) {
		return A2(
			$elm$url$Url$Builder$QueryParameter,
			$elm$url$Url$percentEncode(key),
			$elm$url$Url$percentEncode(value));
	});
var $author$project$Api$Endpoint$toQueryArgs = function (params) {
	return A2(
		$elm$core$List$map,
		function (_v0) {
			var k = _v0.a;
			var v = _v0.b;
			return A2($elm$url$Url$Builder$string, k, v);
		},
		params);
};
var $author$project$Api$Endpoint$detainerWarrantsSearch = function (params) {
	return A2(
		$author$project$Api$Endpoint$url,
		_List_fromArray(
			['detainer-warrants']),
		$author$project$Api$Endpoint$toQueryArgs(params));
};
var $author$project$Search$toPair = F2(
	function (key, field) {
		if (!field.$) {
			var value = field.a;
			return (value !== '') ? _List_fromArray(
				[
					_Utils_Tuple2(key, value)
				]) : _List_Nil;
		} else {
			return _List_Nil;
		}
	});
var $author$project$Search$detainerWarrantsArgs = function (filters) {
	return _Utils_ap(
		A2($author$project$Search$toPair, 'docket_id', filters.g4),
		_Utils_ap(
			A2(
				$author$project$Search$toPair,
				'file_date',
				A2($elm$core$Maybe$map, $justinmimbs$date$Date$toIsoString, filters.hg)),
			_Utils_ap(
				A2(
					$author$project$Search$toPair,
					'court_date',
					A2($elm$core$Maybe$map, $justinmimbs$date$Date$toIsoString, filters.bj)),
				_Utils_ap(
					A2($author$project$Search$toPair, 'plaintiff', filters.ij),
					_Utils_ap(
						A2($author$project$Search$toPair, 'plaintiff_attorney', filters.ik),
						_Utils_ap(
							A2($author$project$Search$toPair, 'defendant_name', filters.eQ),
							A2($author$project$Search$toPair, 'address', filters.je)))))));
};
var $author$project$Page$Organize$DetainerWarrants$queryArgsWithPagination = function (search) {
	var filters = search.ab;
	var queryArgs = $author$project$Search$detainerWarrantsArgs(filters);
	if (_Utils_eq(
		$elm$core$Maybe$Just(search.ab),
		search.dk)) {
		var _v0 = search.j5;
		switch (_v0.$) {
			case 0:
				return queryArgs;
			case 1:
				var warrantsCursor = _v0.a;
				return A2(
					$elm$core$List$cons,
					_Utils_Tuple2('cursor', warrantsCursor),
					queryArgs);
			default:
				return queryArgs;
		}
	} else {
		return queryArgs;
	}
};
var $author$project$Page$Organize$DetainerWarrants$searchWarrants = F2(
	function (maybeCred, search) {
		return A4(
			$author$project$Api$get,
			$author$project$Api$Endpoint$detainerWarrantsSearch(
				$author$project$Page$Organize$DetainerWarrants$queryArgsWithPagination(search)),
			maybeCred,
			$author$project$Page$Organize$DetainerWarrants$GotWarrants,
			$author$project$Api$detainerWarrantApiDecoder);
	});
var $author$project$Page$Organize$DetainerWarrants$loadMore = F3(
	function (maybeCred, search, dir) {
		var _v0 = search.j5;
		switch (_v0.$) {
			case 0:
				return $elm$core$Platform$Cmd$none;
			case 1:
				return A2($author$project$Page$Organize$DetainerWarrants$searchWarrants, maybeCred, search);
			default:
				return $elm$core$Platform$Cmd$none;
		}
	});
var $author$project$Page$Organize$DetainerWarrants$init = F3(
	function (filters, runtime, session) {
		var search = {
			j5: $author$project$Search$NewSearch,
			ab: filters,
			dk: $elm$core$Maybe$Just(filters),
			ne: $elm$core$Maybe$Nothing
		};
		var maybeCred = $author$project$Session$cred(session);
		return _Utils_Tuple2(
			{
				bj: A2($author$project$Page$Organize$DetainerWarrants$initDatePicker, runtime.F, filters.bj),
				hg: A2($author$project$Page$Organize$DetainerWarrants$initDatePicker, runtime.F, filters.hg),
				bq: $elm$core$Maybe$Nothing,
				aC: A2(
					$FabienHenon$elm_infinite_scroll$InfiniteScroll$direction,
					1,
					$FabienHenon$elm_infinite_scroll$InfiniteScroll$init(
						A2($author$project$Page$Organize$DetainerWarrants$loadMore, maybeCred, search))),
				iz: runtime,
				y: search,
				a3: $elm$core$Maybe$Nothing,
				fY: session,
				nk: _List_Nil
			},
			A2($author$project$Page$Organize$DetainerWarrants$searchWarrants, maybeCred, search));
	});
var $author$project$Page$Organize$Event$GotEvent = function (a) {
	return {$: 0, a: a};
};
var $author$project$Event$Canvass = function (a) {
	return {$: 1, a: a};
};
var $author$project$Event$Generic = function (a) {
	return {$: 2, a: a};
};
var $author$project$Event$PhoneBank = function (a) {
	return {$: 0, a: a};
};
var $author$project$Event$CanvassEvent = F3(
	function (id, name, warrants) {
		return {hs: id, h1: name, nk: warrants};
	});
var $author$project$Event$canvassEventDecoder = A3(
	$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
	'warrants',
	$elm$json$Json$Decode$list($author$project$DetainerWarrant$decoder),
	A3(
		$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
		'name',
		$elm$json$Json$Decode$string,
		A3(
			$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
			'id',
			$elm$json$Json$Decode$int,
			$elm$json$Json$Decode$succeed($author$project$Event$CanvassEvent))));
var $author$project$Event$GenericEvent = F2(
	function (id, name) {
		return {hs: id, h1: name};
	});
var $author$project$Event$genericEventDecoder = A3(
	$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
	'name',
	$elm$json$Json$Decode$string,
	A3(
		$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
		'id',
		$elm$json$Json$Decode$int,
		$elm$json$Json$Decode$succeed($author$project$Event$GenericEvent)));
var $author$project$Event$PhoneBankEvent = F3(
	function (id, name, tenants) {
		return {hs: id, h1: name, mQ: tenants};
	});
var $author$project$Event$phoneBankEventDecoder = A3(
	$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
	'tenants',
	$elm$json$Json$Decode$list($author$project$Defendant$decoder),
	A3(
		$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
		'name',
		$elm$json$Json$Decode$string,
		A3(
			$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
			'id',
			$elm$json$Json$Decode$int,
			$elm$json$Json$Decode$succeed($author$project$Event$PhoneBankEvent))));
var $author$project$Event$decoder = A2(
	$elm$json$Json$Decode$andThen,
	function (eventType) {
		switch (eventType) {
			case 'phone_bank_event':
				return A2($elm$json$Json$Decode$map, $author$project$Event$PhoneBank, $author$project$Event$phoneBankEventDecoder);
			case 'canvass_event':
				return A2($elm$json$Json$Decode$map, $author$project$Event$Canvass, $author$project$Event$canvassEventDecoder);
			default:
				return A2($elm$json$Json$Decode$map, $author$project$Event$Generic, $author$project$Event$genericEventDecoder);
		}
	},
	A2($elm$json$Json$Decode$field, 'type', $elm$json$Json$Decode$string));
var $author$project$Api$Endpoint$event = function (id) {
	return A2(
		$author$project$Api$Endpoint$url,
		_List_fromArray(
			[
				'events',
				$elm$core$String$fromInt(id)
			]),
		_List_Nil);
};
var $author$project$Page$Organize$Event$getEvent = F2(
	function (maybeCred, id) {
		return A4(
			$author$project$Api$get,
			$author$project$Api$Endpoint$event(id),
			maybeCred,
			$author$project$Page$Organize$Event$GotEvent,
			$author$project$Api$itemDecoder($author$project$Event$decoder));
	});
var $author$project$Page$Organize$Event$init = F3(
	function (campaignId, eventId, session) {
		var maybeCred = $author$project$Session$cred(session);
		return _Utils_Tuple2(
			{d0: $elm$core$Maybe$Nothing, dj: $elm$core$Maybe$Nothing, fY: session},
			A2($author$project$Page$Organize$Event$getEvent, maybeCred, eventId));
	});
var $author$project$Page$Organize$PlaintiffCreation$Done = 1;
var $author$project$Page$Organize$PlaintiffCreation$Initializing = function (a) {
	return {$: 0, a: a};
};
var $author$project$Page$Organize$PlaintiffCreation$Ready = function (a) {
	return {$: 1, a: a};
};
var $author$project$Page$Organize$PlaintiffCreation$GotPlaintiff = function (a) {
	return {$: 0, a: a};
};
var $author$project$Api$Endpoint$plaintiff = function (id) {
	return A2(
		$author$project$Api$Endpoint$url,
		_List_fromArray(
			[
				'plaintiffs',
				$elm$core$String$fromInt(id)
			]),
		_List_Nil);
};
var $author$project$Page$Organize$PlaintiffCreation$getPlaintiff = F2(
	function (id, maybeCred) {
		return A4(
			$author$project$Api$get,
			$author$project$Api$Endpoint$plaintiff(id),
			maybeCred,
			$author$project$Page$Organize$PlaintiffCreation$GotPlaintiff,
			$author$project$Api$itemDecoder($author$project$Plaintiff$decoder));
	});
var $author$project$Page$Organize$PlaintiffCreation$aliasesId = 'aliases-input';
var $author$project$MultiInput$init = function (id) {
	return {hs: id, aX: false, ao: ''};
};
var $author$project$Page$Organize$PlaintiffCreation$initCreate = {
	jh: _List_Nil,
	bb: $author$project$MultiInput$init($author$project$Page$Organize$PlaintiffCreation$aliasesId),
	eU: '',
	h1: '',
	aZ: ''
};
var $author$project$Page$Organize$PlaintiffCreation$init = F3(
	function (maybeId, runtime, session) {
		var maybeCred = $author$project$Session$cred(session);
		return _Utils_Tuple2(
			{
				bZ: function () {
					if (!maybeId.$) {
						var id = maybeId.a;
						return $author$project$Page$Organize$PlaintiffCreation$Initializing(id);
					} else {
						return $author$project$Page$Organize$PlaintiffCreation$Ready($author$project$Page$Organize$PlaintiffCreation$initCreate);
					}
				}(),
				hs: maybeId,
				cj: false,
				ij: $elm$core$Maybe$Nothing,
				bx: _List_Nil,
				iz: runtime,
				n: 1,
				fY: session,
				a: $elm$core$Maybe$Nothing
			},
			function () {
				if (!maybeId.$) {
					var id = maybeId.a;
					return A2($author$project$Page$Organize$PlaintiffCreation$getPlaintiff, id, maybeCred);
				} else {
					return $elm$core$Platform$Cmd$none;
				}
			}());
	});
var $author$project$Page$Organize$Plaintiffs$GotPlaintiffs = function (a) {
	return {$: 4, a: a};
};
var $author$project$Api$collectionDecoder = function (dataDecoder) {
	return A3(
		$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
		'meta',
		$author$project$Api$pageMetaDecoder,
		A3(
			$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
			'data',
			$elm$json$Json$Decode$list(dataDecoder),
			$elm$json$Json$Decode$succeed($author$project$Api$Collection)));
};
var $author$project$Api$Endpoint$plaintiffsSearch = function (params) {
	return A2(
		$author$project$Api$Endpoint$url,
		_List_fromArray(
			['plaintiffs']),
		$author$project$Api$Endpoint$toQueryArgs(params));
};
var $author$project$Search$plaintiffsArgs = function (filters) {
	return A2($author$project$Search$toPair, 'name', filters.h1);
};
var $author$project$Page$Organize$Plaintiffs$queryArgsWithPagination = function (search) {
	var filters = search.ab;
	var queryArgs = $author$project$Search$plaintiffsArgs(filters);
	if (_Utils_eq(
		$elm$core$Maybe$Just(search.ab),
		search.dk)) {
		var _v0 = search.j5;
		switch (_v0.$) {
			case 0:
				return queryArgs;
			case 1:
				var plaintiffsCursor = _v0.a;
				return A2(
					$elm$core$List$cons,
					_Utils_Tuple2('cursor', plaintiffsCursor),
					queryArgs);
			default:
				return queryArgs;
		}
	} else {
		return queryArgs;
	}
};
var $author$project$Page$Organize$Plaintiffs$searchPlaintiffs = F2(
	function (maybeCred, search) {
		return A4(
			$author$project$Api$get,
			$author$project$Api$Endpoint$plaintiffsSearch(
				$author$project$Page$Organize$Plaintiffs$queryArgsWithPagination(search)),
			maybeCred,
			$author$project$Page$Organize$Plaintiffs$GotPlaintiffs,
			$author$project$Api$collectionDecoder($author$project$Plaintiff$decoder));
	});
var $author$project$Page$Organize$Plaintiffs$loadMore = F3(
	function (maybeCred, search, dir) {
		var _v0 = search.j5;
		switch (_v0.$) {
			case 0:
				return $elm$core$Platform$Cmd$none;
			case 1:
				return A2($author$project$Page$Organize$Plaintiffs$searchPlaintiffs, maybeCred, search);
			default:
				return $elm$core$Platform$Cmd$none;
		}
	});
var $author$project$Page$Organize$Plaintiffs$init = F3(
	function (filters, runtime, session) {
		var search = {
			j5: $author$project$Search$NewSearch,
			ab: filters,
			dk: $elm$core$Maybe$Just(filters),
			ne: $elm$core$Maybe$Nothing
		};
		var maybeCred = $author$project$Session$cred(session);
		return _Utils_Tuple2(
			{
				bq: $elm$core$Maybe$Nothing,
				aC: A2(
					$FabienHenon$elm_infinite_scroll$InfiniteScroll$direction,
					1,
					$FabienHenon$elm_infinite_scroll$InfiniteScroll$init(
						A2($author$project$Page$Organize$Plaintiffs$loadMore, maybeCred, search))),
				bv: _List_Nil,
				iz: runtime,
				y: search,
				a3: $elm$core$Maybe$Nothing,
				fY: session
			},
			A2($author$project$Page$Organize$Plaintiffs$searchPlaintiffs, maybeCred, search));
	});
var $author$project$Page$Trends$GotAmountAwardedHistory = function (a) {
	return {$: 4, a: a};
};
var $author$project$Api$Endpoint$amountAwardedHistory = A2(
	$author$project$Api$Endpoint$url,
	_List_fromArray(
		['rollup', 'amount-awarded', 'history']),
	_List_Nil);
var $author$project$Stats$AmountAwardedMonth = F2(
	function (time, totalAmount) {
		return {aJ: time, ge: totalAmount};
	});
var $author$project$Api$posix = A2($elm$json$Json$Decode$map, $elm$time$Time$millisToPosix, $elm$json$Json$Decode$int);
var $author$project$Stats$amountAwardedMonthDecoder = A3(
	$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
	'total_amount',
	$elm$json$Json$Decode$int,
	A3(
		$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
		'time',
		$author$project$Api$posix,
		$elm$json$Json$Decode$succeed($author$project$Stats$AmountAwardedMonth)));
var $author$project$Api$UnpaginatedCollection = function (data) {
	return {eN: data};
};
var $author$project$Api$unpaginatedCollectionDecoder = function (dataDecoder) {
	return A3(
		$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
		'data',
		$elm$json$Json$Decode$list(dataDecoder),
		$elm$json$Json$Decode$succeed($author$project$Api$UnpaginatedCollection));
};
var $author$project$Page$Trends$getAmountAwardedHistory = A4(
	$author$project$Api$get,
	$author$project$Api$Endpoint$amountAwardedHistory,
	$elm$core$Maybe$Nothing,
	$author$project$Page$Trends$GotAmountAwardedHistory,
	$author$project$Api$unpaginatedCollectionDecoder($author$project$Stats$amountAwardedMonthDecoder));
var $author$project$Page$Trends$GotApiMeta = function (a) {
	return {$: 3, a: a};
};
var $elm$http$Http$get = function (r) {
	return $elm$http$Http$request(
		{bM: $elm$http$Http$emptyBody, bV: r.bV, b2: _List_Nil, cf: 'GET', cA: $elm$core$Maybe$Nothing, cE: $elm$core$Maybe$Nothing, cF: r.cF});
};
var $author$project$Api$RollupMetadata = function (lastWarrantUpdatedAt) {
	return {li: lastWarrantUpdatedAt};
};
var $author$project$Api$rollupMetadataDecoder = A3(
	$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
	'last_detainer_warrant_update',
	$author$project$Api$posix,
	$elm$json$Json$Decode$succeed($author$project$Api$RollupMetadata));
var $author$project$Page$Trends$getApiMetadata = $elm$http$Http$get(
	{
		bV: A2($elm$http$Http$expectJson, $author$project$Page$Trends$GotApiMeta, $author$project$Api$rollupMetadataDecoder),
		cF: '/api/v1/rollup/meta'
	});
var $author$project$Page$Trends$GotDetainerWarrantData = function (a) {
	return {$: 1, a: a};
};
var $author$project$Stats$DetainerWarrantsPerMonth = F2(
	function (time, totalWarrants) {
		return {aJ: time, nf: totalWarrants};
	});
var $author$project$Stats$detainerWarrantsPerMonthDecoder = A3(
	$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
	'total_warrants',
	$elm$json$Json$Decode$int,
	A3(
		$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
		'time',
		$author$project$Api$posix,
		$elm$json$Json$Decode$succeed($author$project$Stats$DetainerWarrantsPerMonth)));
var $author$project$Page$Trends$getDetainerWarrantsPerMonth = $elm$http$Http$get(
	{
		bV: A2(
			$elm$http$Http$expectJson,
			$author$project$Page$Trends$GotDetainerWarrantData,
			$elm$json$Json$Decode$list($author$project$Stats$detainerWarrantsPerMonthDecoder)),
		cF: '/api/v1/rollup/detainer-warrants'
	});
var $author$project$Page$Trends$GotEvictionData = function (a) {
	return {$: 0, a: a};
};
var $author$project$Stats$TopEvictor = F2(
	function (name, history) {
		return {kP: history, h1: name};
	});
var $author$project$Stats$EvictionHistory = F2(
	function (date, evictionCount) {
		return {gZ: date, hd: evictionCount};
	});
var $author$project$Stats$evictionHistoryDecoder = A3(
	$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
	'eviction_count',
	$elm$json$Json$Decode$float,
	A3(
		$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
		'date',
		$elm$json$Json$Decode$float,
		$elm$json$Json$Decode$succeed($author$project$Stats$EvictionHistory)));
var $author$project$Stats$topEvictorDecoder = A3(
	$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
	'history',
	$elm$json$Json$Decode$list($author$project$Stats$evictionHistoryDecoder),
	A3(
		$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
		'name',
		$elm$json$Json$Decode$string,
		$elm$json$Json$Decode$succeed($author$project$Stats$TopEvictor)));
var $author$project$Page$Trends$getEvictionData = $elm$http$Http$get(
	{
		bV: A2(
			$elm$http$Http$expectJson,
			$author$project$Page$Trends$GotEvictionData,
			$elm$json$Json$Decode$list($author$project$Stats$topEvictorDecoder)),
		cF: '/api/v1/rollup/plaintiffs'
	});
var $author$project$Page$Trends$GotPlaintiffAttorneyWarrantCount = function (a) {
	return {$: 2, a: a};
};
var $author$project$Stats$PlaintiffAttorneyWarrantCount = F4(
	function (warrantCount, plaintiffAttorneyName, startDate, endDate) {
		return {kw: endDate, l3: plaintiffAttorneyName, mD: startDate, i2: warrantCount};
	});
var $author$project$Stats$plaintiffAttorneyWarrantCountDecoder = A3(
	$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
	'end_date',
	$author$project$Api$posix,
	A3(
		$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
		'start_date',
		$author$project$Api$posix,
		A3(
			$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
			'plaintiff_attorney_name',
			$elm$json$Json$Decode$string,
			A3(
				$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
				'warrant_count',
				$elm$json$Json$Decode$int,
				$elm$json$Json$Decode$succeed($author$project$Stats$PlaintiffAttorneyWarrantCount)))));
var $author$project$Page$Trends$getPlaintiffAttorneyWarrantCountPerMonth = $elm$http$Http$get(
	{
		bV: A2(
			$elm$http$Http$expectJson,
			$author$project$Page$Trends$GotPlaintiffAttorneyWarrantCount,
			$elm$json$Json$Decode$list($author$project$Stats$plaintiffAttorneyWarrantCountDecoder)),
		cF: '/api/v1/rollup/plaintiff-attorney'
	});
var $author$project$Page$Trends$init = F2(
	function (runtime, session) {
		return _Utils_Tuple2(
			{dK: $elm$core$Maybe$Nothing, kS: _List_Nil, dc: _List_Nil, ej: _List_Nil, el: $elm$core$Maybe$Nothing, iz: runtime, fY: session, es: _List_Nil, ew: _List_Nil},
			$elm$core$Platform$Cmd$batch(
				_List_fromArray(
					[$author$project$Page$Trends$getEvictionData, $author$project$Page$Trends$getDetainerWarrantsPerMonth, $author$project$Page$Trends$getPlaintiffAttorneyWarrantCountPerMonth, $author$project$Page$Trends$getApiMetadata, $author$project$Page$Trends$getAmountAwardedHistory])));
	});
var $author$project$Page$WarrantHelp$GotWarrants = function (a) {
	return {$: 2, a: a};
};
var $author$project$Api$Endpoint$detainerWarrants = A2(
	$author$project$Api$Endpoint$url,
	_List_fromArray(
		['detainer-warrants']),
	_List_Nil);
var $author$project$Page$WarrantHelp$getWarrants = function (viewer) {
	return A4($author$project$Api$get, $author$project$Api$Endpoint$detainerWarrants, viewer, $author$project$Page$WarrantHelp$GotWarrants, $author$project$Api$detainerWarrantApiDecoder);
};
var $author$project$Page$WarrantHelp$init = function (session) {
	var maybeCred = $author$project$Session$cred(session);
	return _Utils_Tuple2(
		{bz: '', fY: session, nk: _List_Nil, gl: $elm$core$Maybe$Nothing},
		$author$project$Page$WarrantHelp$getWarrants(maybeCred));
};
var $author$project$Api$Endpoint$logout = A2(
	$author$project$Api$Endpoint$url,
	_List_fromArray(
		['accounts', 'logout']),
	_List_Nil);
var $elm$core$Maybe$destruct = F3(
	function (_default, func, maybe) {
		if (!maybe.$) {
			var a = maybe.a;
			return func(a);
		} else {
			return _default;
		}
	});
var $elm$json$Json$Encode$null = _Json_encodeNull;
var $author$project$Api$storeCache = _Platform_outgoingPort(
	'storeCache',
	function ($) {
		return A3($elm$core$Maybe$destruct, $elm$json$Json$Encode$null, $elm$core$Basics$identity, $);
	});
var $elm$http$Http$expectBytesResponse = F2(
	function (toMsg, toResult) {
		return A3(
			_Http_expect,
			'arraybuffer',
			_Http_toDataView,
			A2($elm$core$Basics$composeR, toResult, toMsg));
	});
var $elm$http$Http$expectWhatever = function (toMsg) {
	return A2(
		$elm$http$Http$expectBytesResponse,
		toMsg,
		$elm$http$Http$resolve(
			function (_v0) {
				return $elm$core$Result$Ok(0);
			}));
};
var $author$project$Api$throwaway = F3(
	function (url, maybeCred, toMsg) {
		return $author$project$Api$Endpoint$request(
			{
				bM: $elm$http$Http$emptyBody,
				bV: $elm$http$Http$expectWhatever(toMsg),
				b2: function () {
					if (!maybeCred.$) {
						var cred = maybeCred.a;
						return $author$project$Api$credHeaders(cred);
					} else {
						return _List_Nil;
					}
				}(),
				cf: 'GET',
				cA: $elm$core$Maybe$Nothing,
				cE: $elm$core$Maybe$Nothing,
				cF: url
			});
	});
var $author$project$Api$logout = F2(
	function (cred, toMsg) {
		return $elm$core$Platform$Cmd$batch(
			_List_fromArray(
				[
					A3($author$project$Api$throwaway, $author$project$Api$Endpoint$logout, cred, toMsg),
					$author$project$Api$storeCache($elm$core$Maybe$Nothing)
				]));
	});
var $author$project$Session$navKey = function (session) {
	if (!session.$) {
		var key = session.a;
		return key;
	} else {
		var key = session.a;
		return key;
	}
};
var $elm$browser$Browser$Navigation$replaceUrl = _Browser_replaceUrl;
var $author$project$Search$detainerWarrantsQuery = function (filters) {
	return $elm$url$Url$Builder$toQuery(
		$author$project$Api$Endpoint$toQueryArgs(
			$author$project$Search$detainerWarrantsArgs(filters)));
};
var $author$project$Search$plaintiffsQuery = function (filters) {
	return $elm$url$Url$Builder$toQuery(
		$author$project$Api$Endpoint$toQueryArgs(
			$author$project$Search$plaintiffsArgs(filters)));
};
var $author$project$Route$routeToPieces = function (page) {
	switch (page.$) {
		case 0:
			return _List_Nil;
		case 1:
			return _List_fromArray(
				['login']);
		case 2:
			return _List_fromArray(
				['logout']);
		case 3:
			return _List_fromArray(
				['trends']);
		case 4:
			return _List_fromArray(
				['about']);
		case 7:
			var fragment = page.a;
			return _Utils_ap(
				_List_fromArray(
					['glossary']),
				function () {
					if (!fragment.$) {
						var termId = fragment.a;
						return _List_fromArray(
							[termId]);
					} else {
						return _List_Nil;
					}
				}());
		case 5:
			return _List_fromArray(
				['warrant-help']);
		case 6:
			return _List_fromArray(
				['actions']);
		case 8:
			return _List_fromArray(
				['organize', 'dashboard']);
		case 9:
			var id = page.a;
			return _List_fromArray(
				[
					'organize',
					'campaigns',
					$elm$core$String$fromInt(id)
				]);
		case 10:
			var campaignId = page.a;
			var eventId = page.b;
			return _List_fromArray(
				[
					'organize',
					'campaigns',
					$elm$core$String$fromInt(campaignId),
					'events',
					$elm$core$String$fromInt(eventId)
				]);
		case 11:
			var filters = page.a;
			return _List_fromArray(
				[
					'organize',
					'detainer-warrants' + $author$project$Search$detainerWarrantsQuery(filters)
				]);
		case 12:
			var maybeId = page.a;
			return _Utils_ap(
				_List_fromArray(
					['organize', 'detainer-warrants', 'edit']),
				function () {
					if (!maybeId.$) {
						var id = maybeId.a;
						return _List_fromArray(
							[id]);
					} else {
						return _List_Nil;
					}
				}());
		case 13:
			var filters = page.a;
			return _List_fromArray(
				[
					'organize',
					'plaintiffs' + $author$project$Search$plaintiffsQuery(filters)
				]);
		default:
			var maybeId = page.a;
			return _Utils_ap(
				_List_fromArray(
					['organize', 'plaintiffs', 'edit']),
				function () {
					if (!maybeId.$) {
						var id = maybeId.a;
						return _List_fromArray(
							[
								$elm$core$String$fromInt(id)
							]);
					} else {
						return _List_Nil;
					}
				}());
	}
};
var $author$project$Route$routeToString = function (page) {
	return '/' + A2(
		$elm$core$String$join,
		'/',
		$author$project$Route$routeToPieces(page));
};
var $author$project$Route$replaceUrl = F2(
	function (key, route) {
		return A2(
			$elm$browser$Browser$Navigation$replaceUrl,
			key,
			$author$project$Route$routeToString(route));
	});
var $author$project$Page$About$toSession = function (model) {
	return model.fY;
};
var $author$project$Page$Actions$toSession = function (model) {
	return model.fY;
};
var $author$project$Page$Glossary$toSession = function (model) {
	return model.fY;
};
var $author$project$Page$Login$toSession = function (model) {
	return model.fY;
};
var $author$project$Page$Organize$CampaignOverview$toSession = function (model) {
	return model.fY;
};
var $author$project$Page$Organize$Dashboard$toSession = function (model) {
	return model.fY;
};
var $author$project$Page$Organize$DetainerWarrantCreation$toSession = function (model) {
	return model.fY;
};
var $author$project$Page$Organize$DetainerWarrants$toSession = function (model) {
	return model.fY;
};
var $author$project$Page$Organize$Event$toSession = function (model) {
	return model.fY;
};
var $author$project$Page$Organize$PlaintiffCreation$toSession = function (model) {
	return model.fY;
};
var $author$project$Page$Organize$Plaintiffs$toSession = function (model) {
	return model.fY;
};
var $author$project$Page$Trends$toSession = function (model) {
	return model.fY;
};
var $author$project$Page$WarrantHelp$toSession = function (model) {
	return model.fY;
};
var $author$project$Main$toSession = function (model) {
	var _v0 = model.aG;
	switch (_v0.$) {
		case 0:
			var session = _v0.a;
			return session;
		case 1:
			var session = _v0.a;
			return session;
		case 2:
			var login = _v0.a;
			return $author$project$Page$Login$toSession(login);
		case 3:
			var home = _v0.a;
			return $author$project$Page$Trends$toSession(home);
		case 5:
			var about = _v0.a;
			return $author$project$Page$About$toSession(about);
		case 7:
			var glossary = _v0.a;
			return $author$project$Page$Glossary$toSession(glossary);
		case 4:
			var warrantHelp = _v0.a;
			return $author$project$Page$WarrantHelp$toSession(warrantHelp);
		case 6:
			var actions = _v0.a;
			return $author$project$Page$Actions$toSession(actions);
		case 8:
			var dashboard = _v0.a;
			return $author$project$Page$Organize$Dashboard$toSession(dashboard);
		case 10:
			var event = _v0.c;
			return $author$project$Page$Organize$Event$toSession(event);
		case 9:
			var campaign = _v0.b;
			return $author$project$Page$Organize$CampaignOverview$toSession(campaign);
		case 11:
			var dw = _v0.a;
			return $author$project$Page$Organize$DetainerWarrants$toSession(dw);
		case 12:
			var dwc = _v0.b;
			return $author$project$Page$Organize$DetainerWarrantCreation$toSession(dwc);
		case 13:
			var plaintiffs = _v0.a;
			return $author$project$Page$Organize$Plaintiffs$toSession(plaintiffs);
		default:
			var plaintiff = _v0.b;
			return $author$project$Page$Organize$PlaintiffCreation$toSession(plaintiff);
	}
};
var $elm$core$Platform$Cmd$map = _Platform_map;
var $author$project$Main$updateWith = F4(
	function (toModel, toMsg, model, _v0) {
		var subModel = _v0.a;
		var subCmd = _v0.b;
		return _Utils_Tuple2(
			_Utils_update(
				model,
				{
					aG: toModel(subModel)
				}),
			A2($elm$core$Platform$Cmd$map, toMsg, subCmd));
	});
var $author$project$Main$changeRouteTo = F2(
	function (maybeRoute, model) {
		var session = $author$project$Main$toSession(model);
		var runtime = model.iz;
		if (maybeRoute.$ === 1) {
			return _Utils_Tuple2(
				_Utils_update(
					model,
					{
						aG: $author$project$Main$NotFound(session)
					}),
				$elm$core$Platform$Cmd$none);
		} else {
			switch (maybeRoute.a.$) {
				case 0:
					var _v1 = maybeRoute.a;
					return _Utils_Tuple2(
						model,
						A2(
							$author$project$Route$replaceUrl,
							$author$project$Session$navKey(session),
							$author$project$Route$Trends));
				case 1:
					var _v2 = maybeRoute.a;
					return A4(
						$author$project$Main$updateWith,
						$author$project$Main$Login,
						$author$project$Main$GotLoginMsg,
						model,
						$author$project$Page$Login$init(session));
				case 2:
					var _v3 = maybeRoute.a;
					return _Utils_Tuple2(
						model,
						A2(
							$author$project$Api$logout,
							$author$project$Session$cred(session),
							$author$project$Main$GotLogoutMsg));
				case 3:
					var _v4 = maybeRoute.a;
					return A4(
						$author$project$Main$updateWith,
						$author$project$Main$Trends,
						$author$project$Main$GotTrendsMsg,
						model,
						A2($author$project$Page$Trends$init, runtime, session));
				case 4:
					var _v5 = maybeRoute.a;
					return A4(
						$author$project$Main$updateWith,
						$author$project$Main$About,
						$author$project$Main$GotAboutMsg,
						model,
						$author$project$Page$About$init(session));
				case 7:
					var fragment = maybeRoute.a.a;
					return A4(
						$author$project$Main$updateWith,
						$author$project$Main$Glossary,
						$author$project$Main$GotGlossaryMsg,
						model,
						A2($author$project$Page$Glossary$init, fragment, session));
				case 5:
					var _v6 = maybeRoute.a;
					return A4(
						$author$project$Main$updateWith,
						$author$project$Main$WarrantHelp,
						$author$project$Main$GotWarrantHelpMsg,
						model,
						$author$project$Page$WarrantHelp$init(session));
				case 6:
					var _v7 = maybeRoute.a;
					return A4(
						$author$project$Main$updateWith,
						$author$project$Main$Actions,
						$author$project$Main$GotActionsMsg,
						model,
						$author$project$Page$Actions$init(session));
				case 9:
					var id = maybeRoute.a.a;
					return A4(
						$author$project$Main$updateWith,
						$author$project$Main$CampaignOverview(id),
						$author$project$Main$GotCampaignOverviewMsg,
						model,
						A2($author$project$Page$Organize$CampaignOverview$init, id, session));
				case 10:
					var _v8 = maybeRoute.a;
					var campaignId = _v8.a;
					var eventId = _v8.b;
					return A4(
						$author$project$Main$updateWith,
						A2($author$project$Main$Event, campaignId, eventId),
						$author$project$Main$GotEventMsg,
						model,
						A3($author$project$Page$Organize$Event$init, campaignId, eventId, session));
				case 8:
					var _v9 = maybeRoute.a;
					return A4(
						$author$project$Main$updateWith,
						$author$project$Main$OrganizerDashboard,
						$author$project$Main$GotOrganizerDashboardMsg,
						model,
						$author$project$Page$Organize$Dashboard$init(session));
				case 11:
					var filters = maybeRoute.a.a;
					return A4(
						$author$project$Main$updateWith,
						$author$project$Main$ManageDetainerWarrants,
						$author$project$Main$GotManageDetainerWarrantsMsg,
						model,
						A3($author$project$Page$Organize$DetainerWarrants$init, filters, runtime, session));
				case 12:
					var maybeId = maybeRoute.a.a;
					return A4(
						$author$project$Main$updateWith,
						$author$project$Main$DetainerWarrantCreation(maybeId),
						$author$project$Main$GotDetainerWarrantCreationMsg,
						model,
						A3($author$project$Page$Organize$DetainerWarrantCreation$init, maybeId, runtime, session));
				case 13:
					var filters = maybeRoute.a.a;
					return A4(
						$author$project$Main$updateWith,
						$author$project$Main$ManagePlaintiffs,
						$author$project$Main$GotManagePlaintiffsMsg,
						model,
						A3($author$project$Page$Organize$Plaintiffs$init, filters, runtime, session));
				default:
					var maybeId = maybeRoute.a.a;
					return A4(
						$author$project$Main$updateWith,
						$author$project$Main$PlaintiffCreation(maybeId),
						$author$project$Main$GotPlaintiffCreationMsg,
						model,
						A3($author$project$Page$Organize$PlaintiffCreation$init, maybeId, runtime, session));
			}
		}
	});
var $author$project$Api$Endpoint$currentUser = A2(
	$author$project$Api$Endpoint$url,
	_List_fromArray(
		['current_user']),
	_List_Nil);
var $author$project$Api$currentUser = F3(
	function (maybeCred, toMsg, decoder) {
		return A4($author$project$Api$get, $author$project$Api$Endpoint$currentUser, maybeCred, toMsg, decoder);
	});
var $elm$url$Url$Parser$State = F5(
	function (visited, unvisited, params, frag, value) {
		return {bn: frag, bu: params, a8: unvisited, Z: value, bJ: visited};
	});
var $elm$url$Url$Parser$getFirstMatch = function (states) {
	getFirstMatch:
	while (true) {
		if (!states.b) {
			return $elm$core$Maybe$Nothing;
		} else {
			var state = states.a;
			var rest = states.b;
			var _v1 = state.a8;
			if (!_v1.b) {
				return $elm$core$Maybe$Just(state.Z);
			} else {
				if ((_v1.a === '') && (!_v1.b.b)) {
					return $elm$core$Maybe$Just(state.Z);
				} else {
					var $temp$states = rest;
					states = $temp$states;
					continue getFirstMatch;
				}
			}
		}
	}
};
var $elm$url$Url$Parser$removeFinalEmpty = function (segments) {
	if (!segments.b) {
		return _List_Nil;
	} else {
		if ((segments.a === '') && (!segments.b.b)) {
			return _List_Nil;
		} else {
			var segment = segments.a;
			var rest = segments.b;
			return A2(
				$elm$core$List$cons,
				segment,
				$elm$url$Url$Parser$removeFinalEmpty(rest));
		}
	}
};
var $elm$url$Url$Parser$preparePath = function (path) {
	var _v0 = A2($elm$core$String$split, '/', path);
	if (_v0.b && (_v0.a === '')) {
		var segments = _v0.b;
		return $elm$url$Url$Parser$removeFinalEmpty(segments);
	} else {
		var segments = _v0;
		return $elm$url$Url$Parser$removeFinalEmpty(segments);
	}
};
var $elm$url$Url$Parser$addToParametersHelp = F2(
	function (value, maybeList) {
		if (maybeList.$ === 1) {
			return $elm$core$Maybe$Just(
				_List_fromArray(
					[value]));
		} else {
			var list = maybeList.a;
			return $elm$core$Maybe$Just(
				A2($elm$core$List$cons, value, list));
		}
	});
var $elm$url$Url$percentDecode = _Url_percentDecode;
var $elm$url$Url$Parser$addParam = F2(
	function (segment, dict) {
		var _v0 = A2($elm$core$String$split, '=', segment);
		if ((_v0.b && _v0.b.b) && (!_v0.b.b.b)) {
			var rawKey = _v0.a;
			var _v1 = _v0.b;
			var rawValue = _v1.a;
			var _v2 = $elm$url$Url$percentDecode(rawKey);
			if (_v2.$ === 1) {
				return dict;
			} else {
				var key = _v2.a;
				var _v3 = $elm$url$Url$percentDecode(rawValue);
				if (_v3.$ === 1) {
					return dict;
				} else {
					var value = _v3.a;
					return A3(
						$elm$core$Dict$update,
						key,
						$elm$url$Url$Parser$addToParametersHelp(value),
						dict);
				}
			}
		} else {
			return dict;
		}
	});
var $elm$url$Url$Parser$prepareQuery = function (maybeQuery) {
	if (maybeQuery.$ === 1) {
		return $elm$core$Dict$empty;
	} else {
		var qry = maybeQuery.a;
		return A3(
			$elm$core$List$foldr,
			$elm$url$Url$Parser$addParam,
			$elm$core$Dict$empty,
			A2($elm$core$String$split, '&', qry));
	}
};
var $elm$url$Url$Parser$parse = F2(
	function (_v0, url) {
		var parser = _v0;
		return $elm$url$Url$Parser$getFirstMatch(
			parser(
				A5(
					$elm$url$Url$Parser$State,
					_List_Nil,
					$elm$url$Url$Parser$preparePath(url.$8),
					$elm$url$Url$Parser$prepareQuery(url.bz),
					url.kI,
					$elm$core$Basics$identity)));
	});
var $author$project$Route$About = {$: 4};
var $author$project$Route$Actions = {$: 6};
var $author$project$Route$CampaignOverview = function (a) {
	return {$: 9, a: a};
};
var $author$project$Route$DetainerWarrantCreation = function (a) {
	return {$: 12, a: a};
};
var $author$project$Route$Event = F2(
	function (a, b) {
		return {$: 10, a: a, b: b};
	});
var $author$project$Route$Glossary = function (a) {
	return {$: 7, a: a};
};
var $author$project$Route$Login = {$: 1};
var $author$project$Route$Logout = {$: 2};
var $author$project$Route$ManageDetainerWarrants = function (a) {
	return {$: 11, a: a};
};
var $author$project$Route$ManagePlaintiffs = function (a) {
	return {$: 13, a: a};
};
var $author$project$Route$OrganizerDashboard = {$: 8};
var $author$project$Route$PlaintiffCreation = function (a) {
	return {$: 14, a: a};
};
var $author$project$Route$WarrantHelp = {$: 5};
var $elm$url$Url$Parser$Parser = $elm$core$Basics$identity;
var $elm$url$Url$Parser$fragment = function (toFrag) {
	return function (_v0) {
		var visited = _v0.bJ;
		var unvisited = _v0.a8;
		var params = _v0.bu;
		var frag = _v0.bn;
		var value = _v0.Z;
		return _List_fromArray(
			[
				A5(
				$elm$url$Url$Parser$State,
				visited,
				unvisited,
				params,
				frag,
				value(
					toFrag(frag)))
			]);
	};
};
var $elm$url$Url$Parser$custom = F2(
	function (tipe, stringToSomething) {
		return function (_v0) {
			var visited = _v0.bJ;
			var unvisited = _v0.a8;
			var params = _v0.bu;
			var frag = _v0.bn;
			var value = _v0.Z;
			if (!unvisited.b) {
				return _List_Nil;
			} else {
				var next = unvisited.a;
				var rest = unvisited.b;
				var _v2 = stringToSomething(next);
				if (!_v2.$) {
					var nextValue = _v2.a;
					return _List_fromArray(
						[
							A5(
							$elm$url$Url$Parser$State,
							A2($elm$core$List$cons, next, visited),
							rest,
							params,
							frag,
							value(nextValue))
						]);
				} else {
					return _List_Nil;
				}
			}
		};
	});
var $elm$url$Url$Parser$int = A2($elm$url$Url$Parser$custom, 'NUMBER', $elm$core$String$toInt);
var $elm$url$Url$Parser$mapState = F2(
	function (func, _v0) {
		var visited = _v0.bJ;
		var unvisited = _v0.a8;
		var params = _v0.bu;
		var frag = _v0.bn;
		var value = _v0.Z;
		return A5(
			$elm$url$Url$Parser$State,
			visited,
			unvisited,
			params,
			frag,
			func(value));
	});
var $elm$url$Url$Parser$map = F2(
	function (subValue, _v0) {
		var parseArg = _v0;
		return function (_v1) {
			var visited = _v1.bJ;
			var unvisited = _v1.a8;
			var params = _v1.bu;
			var frag = _v1.bn;
			var value = _v1.Z;
			return A2(
				$elm$core$List$map,
				$elm$url$Url$Parser$mapState(value),
				parseArg(
					A5($elm$url$Url$Parser$State, visited, unvisited, params, frag, subValue)));
		};
	});
var $elm$core$List$append = F2(
	function (xs, ys) {
		if (!ys.b) {
			return xs;
		} else {
			return A3($elm$core$List$foldr, $elm$core$List$cons, ys, xs);
		}
	});
var $elm$core$List$concat = function (lists) {
	return A3($elm$core$List$foldr, $elm$core$List$append, _List_Nil, lists);
};
var $elm$core$List$concatMap = F2(
	function (f, list) {
		return $elm$core$List$concat(
			A2($elm$core$List$map, f, list));
	});
var $elm$url$Url$Parser$oneOf = function (parsers) {
	return function (state) {
		return A2(
			$elm$core$List$concatMap,
			function (_v0) {
				var parser = _v0;
				return parser(state);
			},
			parsers);
	};
};
var $elm$url$Url$Parser$query = function (_v0) {
	var queryParser = _v0;
	return function (_v1) {
		var visited = _v1.bJ;
		var unvisited = _v1.a8;
		var params = _v1.bu;
		var frag = _v1.bn;
		var value = _v1.Z;
		return _List_fromArray(
			[
				A5(
				$elm$url$Url$Parser$State,
				visited,
				unvisited,
				params,
				frag,
				value(
					queryParser(params)))
			]);
	};
};
var $elm$url$Url$Parser$slash = F2(
	function (_v0, _v1) {
		var parseBefore = _v0;
		var parseAfter = _v1;
		return function (state) {
			return A2(
				$elm$core$List$concatMap,
				parseAfter,
				parseBefore(state));
		};
	});
var $elm$url$Url$Parser$questionMark = F2(
	function (parser, queryParser) {
		return A2(
			$elm$url$Url$Parser$slash,
			parser,
			$elm$url$Url$Parser$query(queryParser));
	});
var $elm$url$Url$Parser$s = function (str) {
	return function (_v0) {
		var visited = _v0.bJ;
		var unvisited = _v0.a8;
		var params = _v0.bu;
		var frag = _v0.bn;
		var value = _v0.Z;
		if (!unvisited.b) {
			return _List_Nil;
		} else {
			var next = unvisited.a;
			var rest = unvisited.b;
			return _Utils_eq(next, str) ? _List_fromArray(
				[
					A5(
					$elm$url$Url$Parser$State,
					A2($elm$core$List$cons, next, visited),
					rest,
					params,
					frag,
					value)
				]) : _List_Nil;
		}
	};
};
var $author$project$Search$Plaintiffs = function (name) {
	return {h1: name};
};
var $elm$url$Url$Parser$Internal$Parser = $elm$core$Basics$identity;
var $elm$url$Url$Parser$Query$map = F2(
	function (func, _v0) {
		var a = _v0;
		return function (dict) {
			return func(
				a(dict));
		};
	});
var $elm$url$Url$Parser$Query$custom = F2(
	function (key, func) {
		return function (dict) {
			return func(
				A2(
					$elm$core$Maybe$withDefault,
					_List_Nil,
					A2($elm$core$Dict$get, key, dict)));
		};
	});
var $elm$url$Url$Parser$Query$string = function (key) {
	return A2(
		$elm$url$Url$Parser$Query$custom,
		key,
		function (stringList) {
			if (stringList.b && (!stringList.b.b)) {
				var str = stringList.a;
				return $elm$core$Maybe$Just(str);
			} else {
				return $elm$core$Maybe$Nothing;
			}
		});
};
var $author$project$Route$searchPlaintiffsParser = A2(
	$elm$url$Url$Parser$Query$map,
	$author$project$Search$Plaintiffs,
	$elm$url$Url$Parser$Query$string('name'));
var $author$project$Search$DetainerWarrants = F7(
	function (docketId, fileDate, courtDate, plaintiff, plaintiffAttorney, defendant, address) {
		return {je: address, bj: courtDate, eQ: defendant, g4: docketId, hg: fileDate, ij: plaintiff, ik: plaintiffAttorney};
	});
var $elm$url$Url$Parser$Query$map7 = F8(
	function (func, _v0, _v1, _v2, _v3, _v4, _v5, _v6) {
		var a = _v0;
		var b = _v1;
		var c = _v2;
		var d = _v3;
		var e = _v4;
		var f = _v5;
		var g = _v6;
		return function (dict) {
			return A7(
				func,
				a(dict),
				b(dict),
				c(dict),
				d(dict),
				e(dict),
				f(dict),
				g(dict));
		};
	});
var $author$project$Route$searchWarrantsParser = A8(
	$elm$url$Url$Parser$Query$map7,
	$author$project$Search$DetainerWarrants,
	$elm$url$Url$Parser$Query$string('docket_id'),
	A2(
		$elm$url$Url$Parser$Query$map,
		A2(
			$elm$core$Basics$composeL,
			A2($elm$core$Basics$composeL, $elm$core$Result$toMaybe, $justinmimbs$date$Date$fromIsoString),
			$elm$core$Maybe$withDefault('')),
		$elm$url$Url$Parser$Query$string('file_date')),
	A2(
		$elm$url$Url$Parser$Query$map,
		A2(
			$elm$core$Basics$composeL,
			A2($elm$core$Basics$composeL, $elm$core$Result$toMaybe, $justinmimbs$date$Date$fromIsoString),
			$elm$core$Maybe$withDefault('')),
		$elm$url$Url$Parser$Query$string('court_date')),
	$elm$url$Url$Parser$Query$string('plaintiff'),
	$elm$url$Url$Parser$Query$string('plaintiff_attorney'),
	$elm$url$Url$Parser$Query$string('defendant_name'),
	$elm$url$Url$Parser$Query$string('address'));
var $elm$url$Url$Parser$string = A2($elm$url$Url$Parser$custom, 'STRING', $elm$core$Maybe$Just);
var $elm$url$Url$Parser$top = function (state) {
	return _List_fromArray(
		[state]);
};
var $author$project$Route$parser = $elm$url$Url$Parser$oneOf(
	_List_fromArray(
		[
			A2($elm$url$Url$Parser$map, $author$project$Route$Trends, $elm$url$Url$Parser$top),
			A2(
			$elm$url$Url$Parser$map,
			$author$project$Route$Login,
			$elm$url$Url$Parser$s('login')),
			A2(
			$elm$url$Url$Parser$map,
			$author$project$Route$Logout,
			$elm$url$Url$Parser$s('logout')),
			A2(
			$elm$url$Url$Parser$map,
			$author$project$Route$Trends,
			$elm$url$Url$Parser$s('trends')),
			A2(
			$elm$url$Url$Parser$map,
			$author$project$Route$About,
			$elm$url$Url$Parser$s('about')),
			A2(
			$elm$url$Url$Parser$map,
			$author$project$Route$WarrantHelp,
			$elm$url$Url$Parser$s('warrant-help')),
			A2(
			$elm$url$Url$Parser$map,
			$author$project$Route$Actions,
			$elm$url$Url$Parser$s('actions')),
			A2(
			$elm$url$Url$Parser$map,
			$author$project$Route$Glossary,
			A2(
				$elm$url$Url$Parser$slash,
				$elm$url$Url$Parser$s('glossary'),
				$elm$url$Url$Parser$fragment($elm$core$Basics$identity))),
			A2(
			$elm$url$Url$Parser$map,
			$author$project$Route$OrganizerDashboard,
			A2(
				$elm$url$Url$Parser$slash,
				$elm$url$Url$Parser$s('organize'),
				$elm$url$Url$Parser$s('dashboard'))),
			A2(
			$elm$url$Url$Parser$map,
			$author$project$Route$CampaignOverview,
			A2(
				$elm$url$Url$Parser$slash,
				$elm$url$Url$Parser$s('organize'),
				A2(
					$elm$url$Url$Parser$slash,
					$elm$url$Url$Parser$s('campaigns'),
					$elm$url$Url$Parser$int))),
			A2(
			$elm$url$Url$Parser$map,
			$author$project$Route$Event,
			A2(
				$elm$url$Url$Parser$slash,
				$elm$url$Url$Parser$s('organize'),
				A2(
					$elm$url$Url$Parser$slash,
					$elm$url$Url$Parser$s('campaigns'),
					A2(
						$elm$url$Url$Parser$slash,
						$elm$url$Url$Parser$int,
						A2(
							$elm$url$Url$Parser$slash,
							$elm$url$Url$Parser$s('events'),
							$elm$url$Url$Parser$int))))),
			A2(
			$elm$url$Url$Parser$map,
			$author$project$Route$ManageDetainerWarrants,
			A2(
				$elm$url$Url$Parser$slash,
				$elm$url$Url$Parser$s('organize'),
				A2(
					$elm$url$Url$Parser$questionMark,
					$elm$url$Url$Parser$s('detainer-warrants'),
					$author$project$Route$searchWarrantsParser))),
			A2(
			$elm$url$Url$Parser$map,
			$author$project$Route$DetainerWarrantCreation($elm$core$Maybe$Nothing),
			A2(
				$elm$url$Url$Parser$slash,
				$elm$url$Url$Parser$s('organize'),
				A2(
					$elm$url$Url$Parser$slash,
					$elm$url$Url$Parser$s('detainer-warrants'),
					$elm$url$Url$Parser$s('edit')))),
			A2(
			$elm$url$Url$Parser$map,
			A2($elm$core$Basics$composeL, $author$project$Route$DetainerWarrantCreation, $elm$core$Maybe$Just),
			A2(
				$elm$url$Url$Parser$slash,
				$elm$url$Url$Parser$s('organize'),
				A2(
					$elm$url$Url$Parser$slash,
					$elm$url$Url$Parser$s('detainer-warrants'),
					A2(
						$elm$url$Url$Parser$slash,
						$elm$url$Url$Parser$s('edit'),
						$elm$url$Url$Parser$string)))),
			A2(
			$elm$url$Url$Parser$map,
			$author$project$Route$ManagePlaintiffs,
			A2(
				$elm$url$Url$Parser$slash,
				$elm$url$Url$Parser$s('organize'),
				A2(
					$elm$url$Url$Parser$questionMark,
					$elm$url$Url$Parser$s('plaintiffs'),
					$author$project$Route$searchPlaintiffsParser))),
			A2(
			$elm$url$Url$Parser$map,
			$author$project$Route$PlaintiffCreation($elm$core$Maybe$Nothing),
			A2(
				$elm$url$Url$Parser$slash,
				$elm$url$Url$Parser$s('organize'),
				A2(
					$elm$url$Url$Parser$slash,
					$elm$url$Url$Parser$s('plaintiffs'),
					$elm$url$Url$Parser$s('edit')))),
			A2(
			$elm$url$Url$Parser$map,
			A2($elm$core$Basics$composeL, $author$project$Route$PlaintiffCreation, $elm$core$Maybe$Just),
			A2(
				$elm$url$Url$Parser$slash,
				$elm$url$Url$Parser$s('organize'),
				A2(
					$elm$url$Url$Parser$slash,
					$elm$url$Url$Parser$s('plaintiffs'),
					A2(
						$elm$url$Url$Parser$slash,
						$elm$url$Url$Parser$s('edit'),
						$elm$url$Url$Parser$int))))
		]));
var $author$project$Route$fromUrl = function (url) {
	return A2($elm$url$Url$Parser$parse, $author$project$Route$parser, url);
};
var $author$project$Session$Guest = function (a) {
	return {$: 1, a: a};
};
var $author$project$Session$LoggedIn = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $author$project$Session$fromViewer = F2(
	function (key, maybeViewer) {
		if (!maybeViewer.$) {
			var viewerVal = maybeViewer.a;
			return A2($author$project$Session$LoggedIn, key, viewerVal);
		} else {
			return $author$project$Session$Guest(key);
		}
	});
var $elm$core$Tuple$mapSecond = F2(
	function (func, _v0) {
		var x = _v0.a;
		var y = _v0.b;
		return _Utils_Tuple2(
			x,
			func(y));
	});
var $author$project$User$User = F5(
	function (id, firstName, lastName, name, roles) {
		return {kE: firstName, hs: id, lh: lastName, h1: name, dn: roles};
	});
var $author$project$User$Role = F3(
	function (id, name, description) {
		return {d_: description, hs: id, h1: name};
	});
var $author$project$User$roleDecoder = A3(
	$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
	'description',
	$elm$json$Json$Decode$nullable($elm$json$Json$Decode$string),
	A3(
		$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
		'name',
		$elm$json$Json$Decode$string,
		A3(
			$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
			'id',
			$elm$json$Json$Decode$int,
			$elm$json$Json$Decode$succeed($author$project$User$Role))));
var $author$project$User$userDecoder = A3(
	$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
	'roles',
	$elm$json$Json$Decode$list($author$project$User$roleDecoder),
	A3(
		$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
		'name',
		$elm$json$Json$Decode$string,
		A3(
			$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
			'last_name',
			$elm$json$Json$Decode$string,
			A3(
				$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
				'first_name',
				$elm$json$Json$Decode$string,
				A3(
					$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
					'id',
					$elm$json$Json$Decode$int,
					$elm$json$Json$Decode$succeed($author$project$User$User))))));
var $author$project$Main$init = F3(
	function (_v0, url, navKey) {
		var window = _v0.i8;
		var viewer = _v0.i$;
		var runtime = _v0.iz;
		var session = A2($author$project$Session$fromViewer, navKey, viewer);
		var maybeCred = $author$project$Session$cred(session);
		return A2(
			$elm$core$Tuple$mapSecond,
			function (cmd) {
				return $elm$core$Platform$Cmd$batch(
					_List_fromArray(
						[
							cmd,
							A3($author$project$Api$currentUser, maybeCred, $author$project$Main$GotProfile, $author$project$User$userDecoder)
						]));
			},
			A2(
				$author$project$Main$changeRouteTo,
				$author$project$Route$fromUrl(url),
				{
					b$: false,
					aG: $author$project$Main$Redirect(session),
					dl: $elm$core$Maybe$Nothing,
					iz: runtime,
					i8: window
				}));
	});
var $author$project$Main$GotSession = function (a) {
	return {$: 16, a: a};
};
var $author$project$Main$OnResize = F2(
	function (a, b) {
		return {$: 19, a: a, b: b};
	});
var $elm$core$Platform$Sub$batch = _Platform_batch;
var $author$project$Api$decodeFromChange = F2(
	function (viewerDecoder, val) {
		return $elm$core$Result$toMaybe(
			A2(
				$elm$json$Json$Decode$decodeValue,
				$author$project$Api$storageDecoder(viewerDecoder),
				val));
	});
var $author$project$Api$onStoreChange = _Platform_incomingPort('onStoreChange', $elm$json$Json$Decode$value);
var $author$project$Api$viewerChanges = F2(
	function (toMsg, decoder) {
		return $author$project$Api$onStoreChange(
			function (value) {
				return toMsg(
					A2($author$project$Api$decodeFromChange, decoder, value));
			});
	});
var $author$project$Session$changes = F2(
	function (toMsg, key) {
		return A2(
			$author$project$Api$viewerChanges,
			function (maybeViewer) {
				return toMsg(
					A2($author$project$Session$fromViewer, key, maybeViewer));
			},
			$author$project$Viewer$decoder);
	});
var $elm$core$Platform$Sub$map = _Platform_map;
var $elm$core$Platform$Sub$none = $elm$core$Platform$Sub$batch(_List_Nil);
var $elm$browser$Browser$Events$Window = 1;
var $elm$browser$Browser$Events$MySub = F3(
	function (a, b, c) {
		return {$: 0, a: a, b: b, c: c};
	});
var $elm$browser$Browser$Events$State = F2(
	function (subs, pids) {
		return {ii: pids, iN: subs};
	});
var $elm$browser$Browser$Events$init = $elm$core$Task$succeed(
	A2($elm$browser$Browser$Events$State, _List_Nil, $elm$core$Dict$empty));
var $elm$browser$Browser$Events$nodeToKey = function (node) {
	if (!node) {
		return 'd_';
	} else {
		return 'w_';
	}
};
var $elm$browser$Browser$Events$addKey = function (sub) {
	var node = sub.a;
	var name = sub.b;
	return _Utils_Tuple2(
		_Utils_ap(
			$elm$browser$Browser$Events$nodeToKey(node),
			name),
		sub);
};
var $elm$core$Dict$fromList = function (assocs) {
	return A3(
		$elm$core$List$foldl,
		F2(
			function (_v0, dict) {
				var key = _v0.a;
				var value = _v0.b;
				return A3($elm$core$Dict$insert, key, value, dict);
			}),
		$elm$core$Dict$empty,
		assocs);
};
var $elm$core$Dict$foldl = F3(
	function (func, acc, dict) {
		foldl:
		while (true) {
			if (dict.$ === -2) {
				return acc;
			} else {
				var key = dict.b;
				var value = dict.c;
				var left = dict.d;
				var right = dict.e;
				var $temp$func = func,
					$temp$acc = A3(
					func,
					key,
					value,
					A3($elm$core$Dict$foldl, func, acc, left)),
					$temp$dict = right;
				func = $temp$func;
				acc = $temp$acc;
				dict = $temp$dict;
				continue foldl;
			}
		}
	});
var $elm$core$Dict$merge = F6(
	function (leftStep, bothStep, rightStep, leftDict, rightDict, initialResult) {
		var stepState = F3(
			function (rKey, rValue, _v0) {
				stepState:
				while (true) {
					var list = _v0.a;
					var result = _v0.b;
					if (!list.b) {
						return _Utils_Tuple2(
							list,
							A3(rightStep, rKey, rValue, result));
					} else {
						var _v2 = list.a;
						var lKey = _v2.a;
						var lValue = _v2.b;
						var rest = list.b;
						if (_Utils_cmp(lKey, rKey) < 0) {
							var $temp$rKey = rKey,
								$temp$rValue = rValue,
								$temp$_v0 = _Utils_Tuple2(
								rest,
								A3(leftStep, lKey, lValue, result));
							rKey = $temp$rKey;
							rValue = $temp$rValue;
							_v0 = $temp$_v0;
							continue stepState;
						} else {
							if (_Utils_cmp(lKey, rKey) > 0) {
								return _Utils_Tuple2(
									list,
									A3(rightStep, rKey, rValue, result));
							} else {
								return _Utils_Tuple2(
									rest,
									A4(bothStep, lKey, lValue, rValue, result));
							}
						}
					}
				}
			});
		var _v3 = A3(
			$elm$core$Dict$foldl,
			stepState,
			_Utils_Tuple2(
				$elm$core$Dict$toList(leftDict),
				initialResult),
			rightDict);
		var leftovers = _v3.a;
		var intermediateResult = _v3.b;
		return A3(
			$elm$core$List$foldl,
			F2(
				function (_v4, result) {
					var k = _v4.a;
					var v = _v4.b;
					return A3(leftStep, k, v, result);
				}),
			intermediateResult,
			leftovers);
	});
var $elm$browser$Browser$Events$Event = F2(
	function (key, event) {
		return {d0: event, hK: key};
	});
var $elm$browser$Browser$Events$spawn = F3(
	function (router, key, _v0) {
		var node = _v0.a;
		var name = _v0.b;
		var actualNode = function () {
			if (!node) {
				return _Browser_doc;
			} else {
				return _Browser_window;
			}
		}();
		return A2(
			$elm$core$Task$map,
			function (value) {
				return _Utils_Tuple2(key, value);
			},
			A3(
				_Browser_on,
				actualNode,
				name,
				function (event) {
					return A2(
						$elm$core$Platform$sendToSelf,
						router,
						A2($elm$browser$Browser$Events$Event, key, event));
				}));
	});
var $elm$core$Dict$union = F2(
	function (t1, t2) {
		return A3($elm$core$Dict$foldl, $elm$core$Dict$insert, t2, t1);
	});
var $elm$browser$Browser$Events$onEffects = F3(
	function (router, subs, state) {
		var stepRight = F3(
			function (key, sub, _v6) {
				var deads = _v6.a;
				var lives = _v6.b;
				var news = _v6.c;
				return _Utils_Tuple3(
					deads,
					lives,
					A2(
						$elm$core$List$cons,
						A3($elm$browser$Browser$Events$spawn, router, key, sub),
						news));
			});
		var stepLeft = F3(
			function (_v4, pid, _v5) {
				var deads = _v5.a;
				var lives = _v5.b;
				var news = _v5.c;
				return _Utils_Tuple3(
					A2($elm$core$List$cons, pid, deads),
					lives,
					news);
			});
		var stepBoth = F4(
			function (key, pid, _v2, _v3) {
				var deads = _v3.a;
				var lives = _v3.b;
				var news = _v3.c;
				return _Utils_Tuple3(
					deads,
					A3($elm$core$Dict$insert, key, pid, lives),
					news);
			});
		var newSubs = A2($elm$core$List$map, $elm$browser$Browser$Events$addKey, subs);
		var _v0 = A6(
			$elm$core$Dict$merge,
			stepLeft,
			stepBoth,
			stepRight,
			state.ii,
			$elm$core$Dict$fromList(newSubs),
			_Utils_Tuple3(_List_Nil, $elm$core$Dict$empty, _List_Nil));
		var deadPids = _v0.a;
		var livePids = _v0.b;
		var makeNewPids = _v0.c;
		return A2(
			$elm$core$Task$andThen,
			function (pids) {
				return $elm$core$Task$succeed(
					A2(
						$elm$browser$Browser$Events$State,
						newSubs,
						A2(
							$elm$core$Dict$union,
							livePids,
							$elm$core$Dict$fromList(pids))));
			},
			A2(
				$elm$core$Task$andThen,
				function (_v1) {
					return $elm$core$Task$sequence(makeNewPids);
				},
				$elm$core$Task$sequence(
					A2($elm$core$List$map, $elm$core$Process$kill, deadPids))));
	});
var $elm$browser$Browser$Events$onSelfMsg = F3(
	function (router, _v0, state) {
		var key = _v0.hK;
		var event = _v0.d0;
		var toMessage = function (_v2) {
			var subKey = _v2.a;
			var _v3 = _v2.b;
			var node = _v3.a;
			var name = _v3.b;
			var decoder = _v3.c;
			return _Utils_eq(subKey, key) ? A2(_Browser_decodeEvent, decoder, event) : $elm$core$Maybe$Nothing;
		};
		var messages = A2($elm$core$List$filterMap, toMessage, state.iN);
		return A2(
			$elm$core$Task$andThen,
			function (_v1) {
				return $elm$core$Task$succeed(state);
			},
			$elm$core$Task$sequence(
				A2(
					$elm$core$List$map,
					$elm$core$Platform$sendToApp(router),
					messages)));
	});
var $elm$browser$Browser$Events$subMap = F2(
	function (func, _v0) {
		var node = _v0.a;
		var name = _v0.b;
		var decoder = _v0.c;
		return A3(
			$elm$browser$Browser$Events$MySub,
			node,
			name,
			A2($elm$json$Json$Decode$map, func, decoder));
	});
_Platform_effectManagers['Browser.Events'] = _Platform_createManager($elm$browser$Browser$Events$init, $elm$browser$Browser$Events$onEffects, $elm$browser$Browser$Events$onSelfMsg, 0, $elm$browser$Browser$Events$subMap);
var $elm$browser$Browser$Events$subscription = _Platform_leaf('Browser.Events');
var $elm$browser$Browser$Events$on = F3(
	function (node, name, decoder) {
		return $elm$browser$Browser$Events$subscription(
			A3($elm$browser$Browser$Events$MySub, node, name, decoder));
	});
var $elm$browser$Browser$Events$onResize = function (func) {
	return A3(
		$elm$browser$Browser$Events$on,
		1,
		'resize',
		A2(
			$elm$json$Json$Decode$field,
			'target',
			A3(
				$elm$json$Json$Decode$map2,
				func,
				A2($elm$json$Json$Decode$field, 'innerWidth', $elm$json$Json$Decode$int),
				A2($elm$json$Json$Decode$field, 'innerHeight', $elm$json$Json$Decode$int))));
};
var $author$project$Page$About$subscriptions = function (model) {
	return $elm$core$Platform$Sub$none;
};
var $author$project$Page$Actions$subscriptions = function (model) {
	return $elm$core$Platform$Sub$none;
};
var $author$project$Page$Glossary$subscriptions = function (model) {
	return $elm$core$Platform$Sub$none;
};
var $author$project$Page$Login$GotSession = function (a) {
	return {$: 4, a: a};
};
var $author$project$Page$Login$subscriptions = function (model) {
	return A2(
		$author$project$Session$changes,
		$author$project$Page$Login$GotSession,
		$author$project$Session$navKey(model.fY));
};
var $author$project$Page$Organize$CampaignOverview$subscriptions = function (model) {
	return $elm$core$Platform$Sub$none;
};
var $author$project$Page$Organize$Dashboard$subscriptions = function (model) {
	return $elm$core$Platform$Sub$none;
};
var $author$project$Page$Organize$DetainerWarrantCreation$CategoryDropdownMsg = function (a) {
	return {$: 16, a: a};
};
var $author$project$Page$Organize$DetainerWarrantCreation$StatusDropdownMsg = function (a) {
	return {$: 10, a: a};
};
var $elm$browser$Browser$Events$Document = 0;
var $elm$browser$Browser$Events$onMouseDown = A2($elm$browser$Browser$Events$on, 0, 'mousedown');
var $PaackEng$elm_ui_dropdown$Dropdown$OnClickOutside = {$: 6};
var $elm$json$Json$Decode$lazy = function (thunk) {
	return A2(
		$elm$json$Json$Decode$andThen,
		thunk,
		$elm$json$Json$Decode$succeed(0));
};
var $PaackEng$elm_ui_dropdown$Dropdown$isOutsideDropdown = function (dropdownId) {
	return $elm$json$Json$Decode$oneOf(
		_List_fromArray(
			[
				A2(
				$elm$json$Json$Decode$andThen,
				function (id) {
					return _Utils_eq(dropdownId, id) ? $elm$json$Json$Decode$succeed(false) : $elm$json$Json$Decode$fail('continue');
				},
				A2($elm$json$Json$Decode$field, 'id', $elm$json$Json$Decode$string)),
				$elm$json$Json$Decode$lazy(
				function (_v0) {
					return A2(
						$elm$json$Json$Decode$field,
						'parentNode',
						$PaackEng$elm_ui_dropdown$Dropdown$isOutsideDropdown(dropdownId));
				}),
				$elm$json$Json$Decode$succeed(true)
			]));
};
var $PaackEng$elm_ui_dropdown$Dropdown$outsideTarget = F2(
	function (dropdownId, dropdownMsg) {
		return A2(
			$elm$json$Json$Decode$andThen,
			function (isOutside) {
				return isOutside ? $elm$json$Json$Decode$succeed(
					dropdownMsg($PaackEng$elm_ui_dropdown$Dropdown$OnClickOutside)) : $elm$json$Json$Decode$fail('inside dropdown');
			},
			A2(
				$elm$json$Json$Decode$field,
				'target',
				$PaackEng$elm_ui_dropdown$Dropdown$isOutsideDropdown(dropdownId)));
	});
var $PaackEng$elm_ui_dropdown$Dropdown$onOutsideClick = F2(
	function (_v0, dropdownMsg) {
		var state = _v0;
		return $elm$browser$Browser$Events$onMouseDown(
			A2($PaackEng$elm_ui_dropdown$Dropdown$outsideTarget, state.hs, dropdownMsg));
	});
var $author$project$Page$Organize$DetainerWarrantCreation$CloseTooltip = {$: 3};
var $author$project$Page$Organize$DetainerWarrantCreation$isOutsideTooltip = function (tooltipId) {
	return $elm$json$Json$Decode$oneOf(
		_List_fromArray(
			[
				A2(
				$elm$json$Json$Decode$andThen,
				function (id) {
					return _Utils_eq(tooltipId, id) ? $elm$json$Json$Decode$succeed(false) : $elm$json$Json$Decode$fail('continue');
				},
				A2($elm$json$Json$Decode$field, 'id', $elm$json$Json$Decode$string)),
				$elm$json$Json$Decode$lazy(
				function (_v0) {
					return A2(
						$elm$json$Json$Decode$field,
						'parentNode',
						$author$project$Page$Organize$DetainerWarrantCreation$isOutsideTooltip(tooltipId));
				}),
				$elm$json$Json$Decode$succeed(true)
			]));
};
var $author$project$Page$Organize$DetainerWarrantCreation$outsideTarget = F2(
	function (tooltipId, msg) {
		return A2(
			$elm$json$Json$Decode$andThen,
			function (isOutside) {
				return isOutside ? $elm$json$Json$Decode$succeed(msg) : $elm$json$Json$Decode$fail('inside dropdown');
			},
			A2(
				$elm$json$Json$Decode$field,
				'target',
				$author$project$Page$Organize$DetainerWarrantCreation$isOutsideTooltip(tooltipId)));
	});
var $author$project$Page$Organize$DetainerWarrantCreation$judgementInfoText = F2(
	function (index, detail) {
		return 'judgement-' + (function () {
			switch (detail) {
				case 0:
					return 'file-date-detail';
				case 1:
					return 'summary';
				case 2:
					return 'fees-claimed-info';
				case 3:
					return 'possession-claimed-info';
				case 4:
					return 'fees-have-interest-info';
				case 5:
					return 'interest-rate-follows-site-info';
				case 6:
					return 'interest-rate-info';
				case 7:
					return 'dismissal-basis-info';
				case 8:
					return 'with-prejudice-info';
				default:
					return 'notes-detail';
			}
		}() + ('-' + $elm$core$String$fromInt(index)));
	});
var $author$project$Page$Organize$DetainerWarrantCreation$tooltipToString = function (tip) {
	switch (tip.$) {
		case 0:
			return 'detainer-warrant-info';
		case 1:
			return 'docket-id-info';
		case 2:
			return 'file-date-info';
		case 3:
			return 'status-info';
		case 4:
			return 'plaintiff-info';
		case 5:
			return 'plaintiff-attorney-info';
		case 6:
			return 'court-date-info';
		case 7:
			return 'courtroom-info';
		case 8:
			return 'presiding-judge-info';
		case 9:
			return 'amount-claimed-info';
		case 10:
			return 'amount-claimed-category-info';
		case 11:
			return 'cares-info';
		case 12:
			return 'legacy-info';
		case 13:
			return 'nonpayment-info';
		case 14:
			return 'address-info';
		case 15:
			var index = tip.a;
			return 'potential-phone-numbers-info-' + $elm$core$String$fromInt(index);
		case 16:
			var index = tip.a;
			var detail = tip.b;
			return A2($author$project$Page$Organize$DetainerWarrantCreation$judgementInfoText, index, detail);
		default:
			return 'notes-info';
	}
};
var $author$project$Page$Organize$DetainerWarrantCreation$onOutsideClick = function (tip) {
	return $elm$browser$Browser$Events$onMouseDown(
		A2(
			$author$project$Page$Organize$DetainerWarrantCreation$outsideTarget,
			$author$project$Page$Organize$DetainerWarrantCreation$tooltipToString(tip),
			$author$project$Page$Organize$DetainerWarrantCreation$CloseTooltip));
};
var $elm$core$List$singleton = function (value) {
	return _List_fromArray(
		[value]);
};
var $author$project$Page$Organize$DetainerWarrantCreation$subscriptions = function (model) {
	var _v0 = model.bZ;
	if (!_v0.$) {
		return $elm$core$Platform$Sub$none;
	} else {
		var form = _v0.a;
		return $elm$core$Platform$Sub$batch(
			_Utils_ap(
				_List_fromArray(
					[
						A2($PaackEng$elm_ui_dropdown$Dropdown$onOutsideClick, form.bC, $author$project$Page$Organize$DetainerWarrantCreation$StatusDropdownMsg),
						A2($PaackEng$elm_ui_dropdown$Dropdown$onOutsideClick, form.bi, $author$project$Page$Organize$DetainerWarrantCreation$CategoryDropdownMsg)
					]),
				A2(
					$elm$core$Maybe$withDefault,
					_List_Nil,
					A2(
						$elm$core$Maybe$map,
						A2($elm$core$Basics$composeL, $elm$core$List$singleton, $author$project$Page$Organize$DetainerWarrantCreation$onOutsideClick),
						model.a))));
	}
};
var $author$project$Page$Organize$DetainerWarrants$subscriptions = function (model) {
	return $elm$core$Platform$Sub$none;
};
var $author$project$Page$Organize$Event$subscriptions = function (model) {
	return $elm$core$Platform$Sub$none;
};
var $author$project$Page$Organize$PlaintiffCreation$ChangedAliases = function (a) {
	return {$: 4, a: a};
};
var $author$project$Page$Organize$PlaintiffCreation$CloseTooltip = {$: 2};
var $author$project$Page$Organize$PlaintiffCreation$isOutsideTooltip = function (tooltipId) {
	return $elm$json$Json$Decode$oneOf(
		_List_fromArray(
			[
				A2(
				$elm$json$Json$Decode$andThen,
				function (id) {
					return _Utils_eq(tooltipId, id) ? $elm$json$Json$Decode$succeed(false) : $elm$json$Json$Decode$fail('continue');
				},
				A2($elm$json$Json$Decode$field, 'id', $elm$json$Json$Decode$string)),
				$elm$json$Json$Decode$lazy(
				function (_v0) {
					return A2(
						$elm$json$Json$Decode$field,
						'parentNode',
						$author$project$Page$Organize$PlaintiffCreation$isOutsideTooltip(tooltipId));
				}),
				$elm$json$Json$Decode$succeed(true)
			]));
};
var $author$project$Page$Organize$PlaintiffCreation$outsideTarget = F2(
	function (tooltipId, msg) {
		return A2(
			$elm$json$Json$Decode$andThen,
			function (isOutside) {
				return isOutside ? $elm$json$Json$Decode$succeed(msg) : $elm$json$Json$Decode$fail('inside dropdown');
			},
			A2(
				$elm$json$Json$Decode$field,
				'target',
				$author$project$Page$Organize$PlaintiffCreation$isOutsideTooltip(tooltipId)));
	});
var $author$project$Page$Organize$PlaintiffCreation$tooltipToString = function (tip) {
	switch (tip) {
		case 0:
			return 'plaintiff-info';
		case 1:
			return 'name-info';
		case 2:
			return 'aliases-info';
		default:
			return 'notes-info';
	}
};
var $author$project$Page$Organize$PlaintiffCreation$onOutsideClick = function (tip) {
	return $elm$browser$Browser$Events$onMouseDown(
		A2(
			$author$project$Page$Organize$PlaintiffCreation$outsideTarget,
			$author$project$Page$Organize$PlaintiffCreation$tooltipToString(tip),
			$author$project$Page$Organize$PlaintiffCreation$CloseTooltip));
};
var $author$project$MultiInput$FocusElement = {$: 0};
var $elm$browser$Browser$AnimationManager$Time = function (a) {
	return {$: 0, a: a};
};
var $elm$browser$Browser$AnimationManager$State = F3(
	function (subs, request, oldTime) {
		return {fz: oldTime, iw: request, iN: subs};
	});
var $elm$browser$Browser$AnimationManager$init = $elm$core$Task$succeed(
	A3($elm$browser$Browser$AnimationManager$State, _List_Nil, $elm$core$Maybe$Nothing, 0));
var $elm$browser$Browser$AnimationManager$now = _Browser_now(0);
var $elm$browser$Browser$AnimationManager$rAF = _Browser_rAF(0);
var $elm$browser$Browser$AnimationManager$onEffects = F3(
	function (router, subs, _v0) {
		var request = _v0.iw;
		var oldTime = _v0.fz;
		var _v1 = _Utils_Tuple2(request, subs);
		if (_v1.a.$ === 1) {
			if (!_v1.b.b) {
				var _v2 = _v1.a;
				return $elm$browser$Browser$AnimationManager$init;
			} else {
				var _v4 = _v1.a;
				return A2(
					$elm$core$Task$andThen,
					function (pid) {
						return A2(
							$elm$core$Task$andThen,
							function (time) {
								return $elm$core$Task$succeed(
									A3(
										$elm$browser$Browser$AnimationManager$State,
										subs,
										$elm$core$Maybe$Just(pid),
										time));
							},
							$elm$browser$Browser$AnimationManager$now);
					},
					$elm$core$Process$spawn(
						A2(
							$elm$core$Task$andThen,
							$elm$core$Platform$sendToSelf(router),
							$elm$browser$Browser$AnimationManager$rAF)));
			}
		} else {
			if (!_v1.b.b) {
				var pid = _v1.a.a;
				return A2(
					$elm$core$Task$andThen,
					function (_v3) {
						return $elm$browser$Browser$AnimationManager$init;
					},
					$elm$core$Process$kill(pid));
			} else {
				return $elm$core$Task$succeed(
					A3($elm$browser$Browser$AnimationManager$State, subs, request, oldTime));
			}
		}
	});
var $elm$browser$Browser$AnimationManager$onSelfMsg = F3(
	function (router, newTime, _v0) {
		var subs = _v0.iN;
		var oldTime = _v0.fz;
		var send = function (sub) {
			if (!sub.$) {
				var tagger = sub.a;
				return A2(
					$elm$core$Platform$sendToApp,
					router,
					tagger(
						$elm$time$Time$millisToPosix(newTime)));
			} else {
				var tagger = sub.a;
				return A2(
					$elm$core$Platform$sendToApp,
					router,
					tagger(newTime - oldTime));
			}
		};
		return A2(
			$elm$core$Task$andThen,
			function (pid) {
				return A2(
					$elm$core$Task$andThen,
					function (_v1) {
						return $elm$core$Task$succeed(
							A3(
								$elm$browser$Browser$AnimationManager$State,
								subs,
								$elm$core$Maybe$Just(pid),
								newTime));
					},
					$elm$core$Task$sequence(
						A2($elm$core$List$map, send, subs)));
			},
			$elm$core$Process$spawn(
				A2(
					$elm$core$Task$andThen,
					$elm$core$Platform$sendToSelf(router),
					$elm$browser$Browser$AnimationManager$rAF)));
	});
var $elm$browser$Browser$AnimationManager$Delta = function (a) {
	return {$: 1, a: a};
};
var $elm$browser$Browser$AnimationManager$subMap = F2(
	function (func, sub) {
		if (!sub.$) {
			var tagger = sub.a;
			return $elm$browser$Browser$AnimationManager$Time(
				A2($elm$core$Basics$composeL, func, tagger));
		} else {
			var tagger = sub.a;
			return $elm$browser$Browser$AnimationManager$Delta(
				A2($elm$core$Basics$composeL, func, tagger));
		}
	});
_Platform_effectManagers['Browser.AnimationManager'] = _Platform_createManager($elm$browser$Browser$AnimationManager$init, $elm$browser$Browser$AnimationManager$onEffects, $elm$browser$Browser$AnimationManager$onSelfMsg, 0, $elm$browser$Browser$AnimationManager$subMap);
var $elm$browser$Browser$AnimationManager$subscription = _Platform_leaf('Browser.AnimationManager');
var $elm$browser$Browser$AnimationManager$onAnimationFrame = function (tagger) {
	return $elm$browser$Browser$AnimationManager$subscription(
		$elm$browser$Browser$AnimationManager$Time(tagger));
};
var $elm$browser$Browser$Events$onAnimationFrame = $elm$browser$Browser$AnimationManager$onAnimationFrame;
var $author$project$MultiInput$subscriptions = function (state) {
	return state.aX ? $elm$browser$Browser$Events$onAnimationFrame(
		$elm$core$Basics$always($author$project$MultiInput$FocusElement)) : $elm$core$Platform$Sub$none;
};
var $author$project$Page$Organize$PlaintiffCreation$subscriptions = function (model) {
	var _v0 = model.bZ;
	if (!_v0.$) {
		return $elm$core$Platform$Sub$none;
	} else {
		var form = _v0.a;
		return $elm$core$Platform$Sub$batch(
			$elm$core$List$concat(
				_List_fromArray(
					[
						_List_fromArray(
						[
							A2(
							$elm$core$Platform$Sub$map,
							$author$project$Page$Organize$PlaintiffCreation$ChangedAliases,
							$author$project$MultiInput$subscriptions(form.bb))
						]),
						A2(
						$elm$core$Maybe$withDefault,
						_List_Nil,
						A2(
							$elm$core$Maybe$map,
							A2($elm$core$Basics$composeL, $elm$core$List$singleton, $author$project$Page$Organize$PlaintiffCreation$onOutsideClick),
							model.a))
					])));
	}
};
var $author$project$Page$Organize$Plaintiffs$subscriptions = function (model) {
	return $elm$core$Platform$Sub$none;
};
var $author$project$Page$Trends$subscriptions = function (model) {
	return $elm$core$Platform$Sub$none;
};
var $author$project$Page$WarrantHelp$subscriptions = function (model) {
	return $elm$core$Platform$Sub$none;
};
var $author$project$Main$subscriptions = function (model) {
	return $elm$core$Platform$Sub$batch(
		_List_fromArray(
			[
				function () {
				var _v0 = model.aG;
				switch (_v0.$) {
					case 0:
						return $elm$core$Platform$Sub$none;
					case 1:
						return $elm$core$Platform$Sub$none;
					case 2:
						var login = _v0.a;
						return A2(
							$elm$core$Platform$Sub$map,
							$author$project$Main$GotLoginMsg,
							$author$project$Page$Login$subscriptions(login));
					case 3:
						var trends = _v0.a;
						return A2(
							$elm$core$Platform$Sub$map,
							$author$project$Main$GotTrendsMsg,
							$author$project$Page$Trends$subscriptions(trends));
					case 5:
						var about = _v0.a;
						return A2(
							$elm$core$Platform$Sub$map,
							$author$project$Main$GotAboutMsg,
							$author$project$Page$About$subscriptions(about));
					case 4:
						var warrantHelp = _v0.a;
						return A2(
							$elm$core$Platform$Sub$map,
							$author$project$Main$GotWarrantHelpMsg,
							$author$project$Page$WarrantHelp$subscriptions(warrantHelp));
					case 6:
						var actions = _v0.a;
						return A2(
							$elm$core$Platform$Sub$map,
							$author$project$Main$GotActionsMsg,
							$author$project$Page$Actions$subscriptions(actions));
					case 7:
						var glossary = _v0.a;
						return A2(
							$elm$core$Platform$Sub$map,
							$author$project$Main$GotGlossaryMsg,
							$author$project$Page$Glossary$subscriptions(glossary));
					case 8:
						var dashboard = _v0.a;
						return A2(
							$elm$core$Platform$Sub$map,
							$author$project$Main$GotOrganizerDashboardMsg,
							$author$project$Page$Organize$Dashboard$subscriptions(dashboard));
					case 9:
						var campaign = _v0.b;
						return A2(
							$elm$core$Platform$Sub$map,
							$author$project$Main$GotCampaignOverviewMsg,
							$author$project$Page$Organize$CampaignOverview$subscriptions(campaign));
					case 10:
						var event = _v0.c;
						return A2(
							$elm$core$Platform$Sub$map,
							$author$project$Main$GotEventMsg,
							$author$project$Page$Organize$Event$subscriptions(event));
					case 11:
						var dw = _v0.a;
						return A2(
							$elm$core$Platform$Sub$map,
							$author$project$Main$GotManageDetainerWarrantsMsg,
							$author$project$Page$Organize$DetainerWarrants$subscriptions(dw));
					case 12:
						var dwc = _v0.b;
						return A2(
							$elm$core$Platform$Sub$map,
							$author$project$Main$GotDetainerWarrantCreationMsg,
							$author$project$Page$Organize$DetainerWarrantCreation$subscriptions(dwc));
					case 13:
						var dw = _v0.a;
						return A2(
							$elm$core$Platform$Sub$map,
							$author$project$Main$GotManagePlaintiffsMsg,
							$author$project$Page$Organize$Plaintiffs$subscriptions(dw));
					default:
						var dwc = _v0.b;
						return A2(
							$elm$core$Platform$Sub$map,
							$author$project$Main$GotPlaintiffCreationMsg,
							$author$project$Page$Organize$PlaintiffCreation$subscriptions(dwc));
				}
			}(),
				$elm$browser$Browser$Events$onResize($author$project$Main$OnResize),
				$elm$browser$Browser$Events$onResize($author$project$Main$OnResize),
				A2(
				$author$project$Session$changes,
				$author$project$Main$GotSession,
				$author$project$Session$navKey(
					$author$project$Main$toSession(model)))
			]));
};
var $elm$browser$Browser$Navigation$load = _Browser_load;
var $elm$browser$Browser$Navigation$pushUrl = _Browser_pushUrl;
var $elm$url$Url$addPort = F2(
	function (maybePort, starter) {
		if (maybePort.$ === 1) {
			return starter;
		} else {
			var port_ = maybePort.a;
			return starter + (':' + $elm$core$String$fromInt(port_));
		}
	});
var $elm$url$Url$addPrefixed = F3(
	function (prefix, maybeSegment, starter) {
		if (maybeSegment.$ === 1) {
			return starter;
		} else {
			var segment = maybeSegment.a;
			return _Utils_ap(
				starter,
				_Utils_ap(prefix, segment));
		}
	});
var $elm$url$Url$toString = function (url) {
	var http = function () {
		var _v0 = url.it;
		if (!_v0) {
			return 'http://';
		} else {
			return 'https://';
		}
	}();
	return A3(
		$elm$url$Url$addPrefixed,
		'#',
		url.kI,
		A3(
			$elm$url$Url$addPrefixed,
			'?',
			url.bz,
			_Utils_ap(
				A2(
					$elm$url$Url$addPort,
					url.il,
					_Utils_ap(http, url.hp)),
				url.$8)));
};
var $author$project$Page$About$update = F2(
	function (msg, model) {
		return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
	});
var $author$project$Page$Actions$update = F2(
	function (msg, model) {
		return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
	});
var $author$project$Page$Glossary$update = F2(
	function (msg, model) {
		switch (msg.$) {
			case 0:
				var term = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							ds: $elm$core$Maybe$Just(term)
						}),
					$elm$core$Platform$Cmd$none);
			case 1:
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{ds: $elm$core$Maybe$Nothing}),
					$elm$core$Platform$Cmd$none);
			default:
				return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
		}
	});
var $author$project$Route$Root = {$: 0};
var $author$project$Page$Login$ServerError = function (a) {
	return {$: 1, a: a};
};
var $author$project$Api$decodeErrors = function (error) {
	if (error.$ === 3) {
		return _List_fromArray(
			['Server error']);
	} else {
		var err = error;
		return _List_fromArray(
			['Server error']);
	}
};
var $author$project$Page$Login$CompletedLogin = function (a) {
	return {$: 3, a: a};
};
var $elm$http$Http$jsonBody = function (value) {
	return A2(
		_Http_pair,
		'application/json',
		A2($elm$json$Json$Encode$encode, 0, value));
};
var $author$project$Api$Endpoint$login = A2(
	$author$project$Api$Endpoint$url,
	_List_fromArray(
		['accounts', 'login']),
	_List_fromArray(
		[
			A2($elm$url$Url$Builder$string, 'include_auth_token', 'true')
		]));
var $author$project$Api$post = F5(
	function (url, maybeCred, body, toMsg, decoder) {
		return $author$project$Api$Endpoint$request(
			{
				bM: body,
				bV: A2($elm$http$Http$expectJson, toMsg, decoder),
				b2: function () {
					if (!maybeCred.$) {
						var cred = maybeCred.a;
						return $author$project$Api$credHeaders(cred);
					} else {
						return _List_Nil;
					}
				}(),
				cf: 'POST',
				cA: $elm$core$Maybe$Nothing,
				cE: $elm$core$Maybe$Nothing,
				cF: url
			});
	});
var $author$project$Api$login = F3(
	function (body, toMsg, decoder) {
		return A5(
			$author$project$Api$post,
			$author$project$Api$Endpoint$login,
			$elm$core$Maybe$Nothing,
			body,
			toMsg,
			A2(
				$elm$json$Json$Decode$field,
				'response',
				A2(
					$elm$json$Json$Decode$field,
					'user',
					$author$project$Api$decoderFromCred(decoder))));
	});
var $elm$json$Json$Encode$object = function (pairs) {
	return _Json_wrap(
		A3(
			$elm$core$List$foldl,
			F2(
				function (_v0, obj) {
					var k = _v0.a;
					var v = _v0.b;
					return A3(_Json_addField, k, v, obj);
				}),
			_Json_emptyObject(0),
			pairs));
};
var $elm$json$Json$Encode$string = _Json_wrap;
var $author$project$Page$Login$login = function (_v0) {
	var form = _v0;
	var user = $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'email',
				$elm$json$Json$Encode$string(form.aT)),
				_Utils_Tuple2(
				'password',
				$elm$json$Json$Encode$string(form.a$))
			]));
	var body = $elm$http$Http$jsonBody(user);
	return A3($author$project$Api$login, body, $author$project$Page$Login$CompletedLogin, $author$project$Viewer$decoder);
};
var $author$project$Api$storeCred = function (_v0) {
	var token = _v0;
	var json = $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'user',
				$elm$json$Json$Encode$object(
					_List_fromArray(
						[
							_Utils_Tuple2(
							'authentication_token',
							$elm$json$Json$Encode$string(token))
						])))
			]));
	return $author$project$Api$storeCache(
		$elm$core$Maybe$Just(json));
};
var $author$project$Viewer$store = function (_v0) {
	var credVal = _v0;
	return $author$project$Api$storeCred(credVal);
};
var $author$project$Page$Login$updateForm = F2(
	function (transform, model) {
		return _Utils_Tuple2(
			_Utils_update(
				model,
				{
					bZ: transform(model.bZ)
				}),
			$elm$core$Platform$Cmd$none);
	});
var $author$project$Page$Login$Email = 0;
var $author$project$Page$Login$Password = 1;
var $author$project$Page$Login$fieldsToValidate = _List_fromArray(
	[0, 1]);
var $author$project$Page$Login$Trimmed = $elm$core$Basics$identity;
var $elm$core$String$trim = _String_trim;
var $author$project$Page$Login$trimFields = function (form) {
	return {
		aT: $elm$core$String$trim(form.aT),
		a$: $elm$core$String$trim(form.a$)
	};
};
var $author$project$Page$Login$InvalidEntry = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $author$project$Page$Login$validateField = F2(
	function (_v0, field) {
		var form = _v0;
		return A2(
			$elm$core$List$map,
			$author$project$Page$Login$InvalidEntry(field),
			function () {
				if (!field) {
					return $elm$core$String$isEmpty(form.aT) ? _List_fromArray(
						['email can\'t be blank.']) : _List_Nil;
				} else {
					return $elm$core$String$isEmpty(form.a$) ? _List_fromArray(
						['password can\'t be blank.']) : _List_Nil;
				}
			}());
	});
var $author$project$Page$Login$validate = function (form) {
	var trimmedForm = $author$project$Page$Login$trimFields(form);
	var _v0 = A2(
		$elm$core$List$concatMap,
		$author$project$Page$Login$validateField(trimmedForm),
		$author$project$Page$Login$fieldsToValidate);
	if (!_v0.b) {
		return $elm$core$Result$Ok(trimmedForm);
	} else {
		var problems = _v0;
		return $elm$core$Result$Err(problems);
	}
};
var $author$project$Page$Login$update = F2(
	function (msg, model) {
		switch (msg.$) {
			case 0:
				var _v1 = $author$project$Page$Login$validate(model.bZ);
				if (!_v1.$) {
					var validForm = _v1.a;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{bx: _List_Nil}),
						$author$project$Page$Login$login(validForm));
				} else {
					var problems = _v1.a;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{bx: problems}),
						$elm$core$Platform$Cmd$none);
				}
			case 1:
				var email = msg.a;
				return A2(
					$author$project$Page$Login$updateForm,
					function (form) {
						return _Utils_update(
							form,
							{aT: email});
					},
					model);
			case 2:
				var password = msg.a;
				return A2(
					$author$project$Page$Login$updateForm,
					function (form) {
						return _Utils_update(
							form,
							{a$: password});
					},
					model);
			case 3:
				if (msg.a.$ === 1) {
					var error = msg.a.a;
					var serverErrors = A2(
						$elm$core$List$map,
						$author$project$Page$Login$ServerError,
						$author$project$Api$decodeErrors(error));
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{
								bx: A2($elm$core$List$append, model.bx, serverErrors)
							}),
						$elm$core$Platform$Cmd$none);
				} else {
					var viewer = msg.a.a;
					return _Utils_Tuple2(
						model,
						$author$project$Viewer$store(viewer));
				}
			default:
				var session = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{fY: session}),
					A2(
						$author$project$Route$replaceUrl,
						$author$project$Session$navKey(session),
						$author$project$Route$Root));
		}
	});
var $author$project$Page$Organize$CampaignOverview$update = F2(
	function (msg, model) {
		var result = msg;
		if (!result.$) {
			var campaignPage = result.a;
			return _Utils_Tuple2(
				_Utils_update(
					model,
					{
						dP: $elm$core$Maybe$Just(campaignPage.eN)
					}),
				$elm$core$Platform$Cmd$none);
		} else {
			var errMsg = result.a;
			return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
		}
	});
var $author$project$Page$Organize$Dashboard$update = F2(
	function (msg, model) {
		var result = msg;
		if (!result.$) {
			var campaignsPage = result.a;
			return _Utils_Tuple2(
				_Utils_update(
					model,
					{dQ: campaignsPage.eN}),
				$elm$core$Platform$Cmd$none);
		} else {
			var errMsg = result.a;
			return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
		}
	});
var $author$project$Page$Organize$DetainerWarrantCreation$GotAttorneys = function (a) {
	return {$: 61, a: a};
};
var $author$project$Page$Organize$DetainerWarrantCreation$GotCourtrooms = function (a) {
	return {$: 63, a: a};
};
var $author$project$Page$Organize$DetainerWarrantCreation$GotJudges = function (a) {
	return {$: 62, a: a};
};
var $author$project$Page$Organize$DetainerWarrantCreation$GotPlaintiffs = function (a) {
	return {$: 60, a: a};
};
var $author$project$Page$Organize$DetainerWarrantCreation$JudgementFileDateDetail = 0;
var $author$project$Page$Organize$DetainerWarrantCreation$NoOp = {$: 64};
var $author$project$Page$Organize$DetainerWarrantCreation$SavingJudgements = function (a) {
	return {$: 2, a: a};
};
var $author$project$Page$Organize$DetainerWarrantCreation$SavingRelatedModels = function (a) {
	return {$: 0, a: a};
};
var $author$project$DetainerWarrant$amountClaimedCategoryOptions = _List_fromArray(
	[3, 0, 1, 2]);
var $author$project$Api$Endpoint$attorneys = A2(
	$elm$core$Basics$composeL,
	$author$project$Api$Endpoint$url(
		_List_fromArray(
			['attorneys', ''])),
	$author$project$Api$Endpoint$toQueryArgs);
var $author$project$Page$Organize$DetainerWarrantCreation$CaresDropdownMsg = function (a) {
	return {$: 17, a: a};
};
var $author$project$Page$Organize$DetainerWarrantCreation$PickedCares = function (a) {
	return {$: 18, a: a};
};
var $PaackEng$elm_ui_dropdown$Dropdown$Basic = 0;
var $PaackEng$elm_ui_dropdown$Dropdown$Config = $elm$core$Basics$identity;
var $PaackEng$elm_ui_dropdown$Dropdown$OnSelectSingleItem = function (a) {
	return {$: 0, a: a};
};
var $PaackEng$elm_ui_dropdown$Dropdown$SingleItem = function (a) {
	return {$: 0, a: a};
};
var $PaackEng$elm_ui_dropdown$Dropdown$SingleItemToPrompt = function (a) {
	return {$: 0, a: a};
};
var $mdgriffith$elm_ui$Internal$Model$Unkeyed = function (a) {
	return {$: 0, a: a};
};
var $mdgriffith$elm_ui$Internal$Model$AsEl = 2;
var $mdgriffith$elm_ui$Internal$Model$asEl = 2;
var $mdgriffith$elm_ui$Internal$Model$Generic = {$: 0};
var $mdgriffith$elm_ui$Internal$Model$div = $mdgriffith$elm_ui$Internal$Model$Generic;
var $mdgriffith$elm_ui$Internal$Model$NoNearbyChildren = {$: 0};
var $mdgriffith$elm_ui$Internal$Style$classes = {jd: 'a', gy: 'atv', ji: 'ab', jj: 'cx', jk: 'cy', jl: 'acb', jm: 'accx', jn: 'accy', jo: 'acr', gD: 'al', gE: 'ar', jp: 'at', ex: 'ah', ey: 'av', js: 's', jz: 'bh', jA: 'b', jE: 'w7', jG: 'bd', jH: 'bdt', dN: 'bn', jI: 'bs', dR: 'cpe', jT: 'cp', jU: 'cpx', jV: 'cpy', aR: 'c', gS: 'ctr', dU: 'cb', dV: 'ccx', aS: 'ccy', cQ: 'cl', dW: 'cr', j3: 'ct', j6: 'cptr', j7: 'ctxt', kF: 'fcs', hi: 'focus-within', kJ: 'fs', d4: 'g', eZ: 'hbh', e$: 'hc', hn: 'he', e0: 'hf', ho: 'hfp', kR: 'hv', kU: 'ic', kW: 'fr', d5: 'lbl', k_: 'iml', k$: 'imlf', k0: 'imlp', k1: 'implw', k2: 'it', la: 'i', hT: 'lnk', ci: 'nb', h2: 'notxt', lL: 'ol', lN: 'or', bt: 'oq', lZ: 'oh', aG: 'pg', id: 'p', l0: 'ppe', mg: 'ui', iy: 'r', mn: 'sb', mo: 'sbx', mp: 'sby', mr: 'sbt', my: 'e', mz: 'cap', mA: 'sev', mJ: 'sk', mR: 't', mS: 'tc', mT: 'w8', mU: 'w2', mV: 'w9', mW: 'tj', eq: 'tja', mX: 'tl', mY: 'w3', mZ: 'w5', m_: 'w4', m$: 'tr', m0: 'w6', m1: 'w1', m2: 'tun', Y: 'ts', bI: 'clr', nh: 'u', gp: 'wc', i6: 'we', gq: 'wf', i7: 'wfp', gr: 'wrp'};
var $mdgriffith$elm_ui$Internal$Model$columnClass = $mdgriffith$elm_ui$Internal$Style$classes.js + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.aR);
var $mdgriffith$elm_ui$Internal$Model$gridClass = $mdgriffith$elm_ui$Internal$Style$classes.js + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.d4);
var $mdgriffith$elm_ui$Internal$Model$pageClass = $mdgriffith$elm_ui$Internal$Style$classes.js + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.aG);
var $mdgriffith$elm_ui$Internal$Model$paragraphClass = $mdgriffith$elm_ui$Internal$Style$classes.js + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.id);
var $mdgriffith$elm_ui$Internal$Model$rowClass = $mdgriffith$elm_ui$Internal$Style$classes.js + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.iy);
var $mdgriffith$elm_ui$Internal$Model$singleClass = $mdgriffith$elm_ui$Internal$Style$classes.js + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.my);
var $mdgriffith$elm_ui$Internal$Model$contextClasses = function (context) {
	switch (context) {
		case 0:
			return $mdgriffith$elm_ui$Internal$Model$rowClass;
		case 1:
			return $mdgriffith$elm_ui$Internal$Model$columnClass;
		case 2:
			return $mdgriffith$elm_ui$Internal$Model$singleClass;
		case 3:
			return $mdgriffith$elm_ui$Internal$Model$gridClass;
		case 4:
			return $mdgriffith$elm_ui$Internal$Model$paragraphClass;
		default:
			return $mdgriffith$elm_ui$Internal$Model$pageClass;
	}
};
var $mdgriffith$elm_ui$Internal$Model$Keyed = function (a) {
	return {$: 1, a: a};
};
var $mdgriffith$elm_ui$Internal$Model$NoStyleSheet = {$: 0};
var $mdgriffith$elm_ui$Internal$Model$Styled = function (a) {
	return {$: 1, a: a};
};
var $mdgriffith$elm_ui$Internal$Model$Unstyled = function (a) {
	return {$: 0, a: a};
};
var $mdgriffith$elm_ui$Internal$Model$addChildren = F2(
	function (existing, nearbyChildren) {
		switch (nearbyChildren.$) {
			case 0:
				return existing;
			case 1:
				var behind = nearbyChildren.a;
				return _Utils_ap(behind, existing);
			case 2:
				var inFront = nearbyChildren.a;
				return _Utils_ap(existing, inFront);
			default:
				var behind = nearbyChildren.a;
				var inFront = nearbyChildren.b;
				return _Utils_ap(
					behind,
					_Utils_ap(existing, inFront));
		}
	});
var $mdgriffith$elm_ui$Internal$Model$addKeyedChildren = F3(
	function (key, existing, nearbyChildren) {
		switch (nearbyChildren.$) {
			case 0:
				return existing;
			case 1:
				var behind = nearbyChildren.a;
				return _Utils_ap(
					A2(
						$elm$core$List$map,
						function (x) {
							return _Utils_Tuple2(key, x);
						},
						behind),
					existing);
			case 2:
				var inFront = nearbyChildren.a;
				return _Utils_ap(
					existing,
					A2(
						$elm$core$List$map,
						function (x) {
							return _Utils_Tuple2(key, x);
						},
						inFront));
			default:
				var behind = nearbyChildren.a;
				var inFront = nearbyChildren.b;
				return _Utils_ap(
					A2(
						$elm$core$List$map,
						function (x) {
							return _Utils_Tuple2(key, x);
						},
						behind),
					_Utils_ap(
						existing,
						A2(
							$elm$core$List$map,
							function (x) {
								return _Utils_Tuple2(key, x);
							},
							inFront)));
		}
	});
var $mdgriffith$elm_ui$Internal$Model$AsParagraph = 4;
var $mdgriffith$elm_ui$Internal$Model$asParagraph = 4;
var $mdgriffith$elm_ui$Internal$Flag$Flag = function (a) {
	return {$: 0, a: a};
};
var $mdgriffith$elm_ui$Internal$Flag$Second = function (a) {
	return {$: 1, a: a};
};
var $elm$core$Bitwise$shiftLeftBy = _Bitwise_shiftLeftBy;
var $mdgriffith$elm_ui$Internal$Flag$flag = function (i) {
	return (i > 31) ? $mdgriffith$elm_ui$Internal$Flag$Second(1 << (i - 32)) : $mdgriffith$elm_ui$Internal$Flag$Flag(1 << i);
};
var $mdgriffith$elm_ui$Internal$Flag$alignBottom = $mdgriffith$elm_ui$Internal$Flag$flag(41);
var $mdgriffith$elm_ui$Internal$Flag$alignRight = $mdgriffith$elm_ui$Internal$Flag$flag(40);
var $mdgriffith$elm_ui$Internal$Flag$centerX = $mdgriffith$elm_ui$Internal$Flag$flag(42);
var $mdgriffith$elm_ui$Internal$Flag$centerY = $mdgriffith$elm_ui$Internal$Flag$flag(43);
var $elm$html$Html$Attributes$stringProperty = F2(
	function (key, string) {
		return A2(
			_VirtualDom_property,
			key,
			$elm$json$Json$Encode$string(string));
	});
var $elm$html$Html$Attributes$class = $elm$html$Html$Attributes$stringProperty('className');
var $elm$html$Html$div = _VirtualDom_node('div');
var $elm$core$Set$Set_elm_builtin = $elm$core$Basics$identity;
var $elm$core$Set$empty = $elm$core$Dict$empty;
var $mdgriffith$elm_ui$Internal$Model$lengthClassName = function (x) {
	switch (x.$) {
		case 0:
			var px = x.a;
			return $elm$core$String$fromInt(px) + 'px';
		case 1:
			return 'auto';
		case 2:
			var i = x.a;
			return $elm$core$String$fromInt(i) + 'fr';
		case 3:
			var min = x.a;
			var len = x.b;
			return 'min' + ($elm$core$String$fromInt(min) + $mdgriffith$elm_ui$Internal$Model$lengthClassName(len));
		default:
			var max = x.a;
			var len = x.b;
			return 'max' + ($elm$core$String$fromInt(max) + $mdgriffith$elm_ui$Internal$Model$lengthClassName(len));
	}
};
var $elm$core$Tuple$second = function (_v0) {
	var y = _v0.b;
	return y;
};
var $elm$core$Basics$round = _Basics_round;
var $mdgriffith$elm_ui$Internal$Model$floatClass = function (x) {
	return $elm$core$String$fromInt(
		$elm$core$Basics$round(x * 255));
};
var $mdgriffith$elm_ui$Internal$Model$transformClass = function (transform) {
	switch (transform.$) {
		case 0:
			return $elm$core$Maybe$Nothing;
		case 1:
			var _v1 = transform.a;
			var x = _v1.a;
			var y = _v1.b;
			var z = _v1.c;
			return $elm$core$Maybe$Just(
				'mv-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(x) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(y) + ('-' + $mdgriffith$elm_ui$Internal$Model$floatClass(z))))));
		default:
			var _v2 = transform.a;
			var tx = _v2.a;
			var ty = _v2.b;
			var tz = _v2.c;
			var _v3 = transform.b;
			var sx = _v3.a;
			var sy = _v3.b;
			var sz = _v3.c;
			var _v4 = transform.c;
			var ox = _v4.a;
			var oy = _v4.b;
			var oz = _v4.c;
			var angle = transform.d;
			return $elm$core$Maybe$Just(
				'tfrm-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(tx) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(ty) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(tz) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(sx) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(sy) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(sz) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(ox) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(oy) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(oz) + ('-' + $mdgriffith$elm_ui$Internal$Model$floatClass(angle))))))))))))))))))));
	}
};
var $mdgriffith$elm_ui$Internal$Model$getStyleName = function (style) {
	switch (style.$) {
		case 13:
			var name = style.a;
			return name;
		case 12:
			var name = style.a;
			var o = style.b;
			return name;
		case 0:
			var _class = style.a;
			return _class;
		case 1:
			var name = style.a;
			return name;
		case 2:
			var i = style.a;
			return 'font-size-' + $elm$core$String$fromInt(i);
		case 3:
			var _class = style.a;
			return _class;
		case 4:
			var _class = style.a;
			return _class;
		case 5:
			var cls = style.a;
			var x = style.b;
			var y = style.c;
			return cls;
		case 7:
			var cls = style.a;
			var top = style.b;
			var right = style.c;
			var bottom = style.d;
			var left = style.e;
			return cls;
		case 6:
			var cls = style.a;
			var top = style.b;
			var right = style.c;
			var bottom = style.d;
			var left = style.e;
			return cls;
		case 8:
			var template = style.a;
			return 'grid-rows-' + (A2(
				$elm$core$String$join,
				'-',
				A2($elm$core$List$map, $mdgriffith$elm_ui$Internal$Model$lengthClassName, template.mh)) + ('-cols-' + (A2(
				$elm$core$String$join,
				'-',
				A2($elm$core$List$map, $mdgriffith$elm_ui$Internal$Model$lengthClassName, template.jY)) + ('-space-x-' + ($mdgriffith$elm_ui$Internal$Model$lengthClassName(template.mB.a) + ('-space-y-' + $mdgriffith$elm_ui$Internal$Model$lengthClassName(template.mB.b)))))));
		case 9:
			var pos = style.a;
			return 'gp grid-pos-' + ($elm$core$String$fromInt(pos.iy) + ('-' + ($elm$core$String$fromInt(pos.gQ) + ('-' + ($elm$core$String$fromInt(pos.i5) + ('-' + $elm$core$String$fromInt(pos.hm)))))));
		case 11:
			var selector = style.a;
			var subStyle = style.b;
			var name = function () {
				switch (selector) {
					case 0:
						return 'fs';
					case 1:
						return 'hv';
					default:
						return 'act';
				}
			}();
			return A2(
				$elm$core$String$join,
				' ',
				A2(
					$elm$core$List$map,
					function (sty) {
						var _v1 = $mdgriffith$elm_ui$Internal$Model$getStyleName(sty);
						if (_v1 === '') {
							return '';
						} else {
							var styleName = _v1;
							return styleName + ('-' + name);
						}
					},
					subStyle));
		default:
			var x = style.a;
			return A2(
				$elm$core$Maybe$withDefault,
				'',
				$mdgriffith$elm_ui$Internal$Model$transformClass(x));
	}
};
var $elm$core$Set$insert = F2(
	function (key, _v0) {
		var dict = _v0;
		return A3($elm$core$Dict$insert, key, 0, dict);
	});
var $elm$core$Dict$member = F2(
	function (key, dict) {
		var _v0 = A2($elm$core$Dict$get, key, dict);
		if (!_v0.$) {
			return true;
		} else {
			return false;
		}
	});
var $elm$core$Set$member = F2(
	function (key, _v0) {
		var dict = _v0;
		return A2($elm$core$Dict$member, key, dict);
	});
var $mdgriffith$elm_ui$Internal$Model$reduceStyles = F2(
	function (style, nevermind) {
		var cache = nevermind.a;
		var existing = nevermind.b;
		var styleName = $mdgriffith$elm_ui$Internal$Model$getStyleName(style);
		return A2($elm$core$Set$member, styleName, cache) ? nevermind : _Utils_Tuple2(
			A2($elm$core$Set$insert, styleName, cache),
			A2($elm$core$List$cons, style, existing));
	});
var $mdgriffith$elm_ui$Internal$Model$Property = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Model$Style = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Style$dot = function (c) {
	return '.' + c;
};
var $elm$core$String$fromFloat = _String_fromNumber;
var $mdgriffith$elm_ui$Internal$Model$formatColor = function (_v0) {
	var red = _v0.a;
	var green = _v0.b;
	var blue = _v0.c;
	var alpha = _v0.d;
	return 'rgba(' + ($elm$core$String$fromInt(
		$elm$core$Basics$round(red * 255)) + ((',' + $elm$core$String$fromInt(
		$elm$core$Basics$round(green * 255))) + ((',' + $elm$core$String$fromInt(
		$elm$core$Basics$round(blue * 255))) + (',' + ($elm$core$String$fromFloat(alpha) + ')')))));
};
var $mdgriffith$elm_ui$Internal$Model$formatBoxShadow = function (shadow) {
	return A2(
		$elm$core$String$join,
		' ',
		A2(
			$elm$core$List$filterMap,
			$elm$core$Basics$identity,
			_List_fromArray(
				[
					shadow.hy ? $elm$core$Maybe$Just('inset') : $elm$core$Maybe$Nothing,
					$elm$core$Maybe$Just(
					$elm$core$String$fromFloat(shadow.lG.a) + 'px'),
					$elm$core$Maybe$Just(
					$elm$core$String$fromFloat(shadow.lG.b) + 'px'),
					$elm$core$Maybe$Just(
					$elm$core$String$fromFloat(shadow.jD) + 'px'),
					$elm$core$Maybe$Just(
					$elm$core$String$fromFloat(shadow.f$) + 'px'),
					$elm$core$Maybe$Just(
					$mdgriffith$elm_ui$Internal$Model$formatColor(shadow.eL))
				])));
};
var $elm$core$Tuple$mapFirst = F2(
	function (func, _v0) {
		var x = _v0.a;
		var y = _v0.b;
		return _Utils_Tuple2(
			func(x),
			y);
	});
var $mdgriffith$elm_ui$Internal$Model$renderFocusStyle = function (focus) {
	return _List_fromArray(
		[
			A2(
			$mdgriffith$elm_ui$Internal$Model$Style,
			$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.hi) + ':focus-within',
			A2(
				$elm$core$List$filterMap,
				$elm$core$Basics$identity,
				_List_fromArray(
					[
						A2(
						$elm$core$Maybe$map,
						function (color) {
							return A2(
								$mdgriffith$elm_ui$Internal$Model$Property,
								'border-color',
								$mdgriffith$elm_ui$Internal$Model$formatColor(color));
						},
						focus.jF),
						A2(
						$elm$core$Maybe$map,
						function (color) {
							return A2(
								$mdgriffith$elm_ui$Internal$Model$Property,
								'background-color',
								$mdgriffith$elm_ui$Internal$Model$formatColor(color));
						},
						focus.jw),
						A2(
						$elm$core$Maybe$map,
						function (shadow) {
							return A2(
								$mdgriffith$elm_ui$Internal$Model$Property,
								'box-shadow',
								$mdgriffith$elm_ui$Internal$Model$formatBoxShadow(
									{
										jD: shadow.jD,
										eL: shadow.eL,
										hy: false,
										lG: A2(
											$elm$core$Tuple$mapSecond,
											$elm$core$Basics$toFloat,
											A2($elm$core$Tuple$mapFirst, $elm$core$Basics$toFloat, shadow.lG)),
										f$: shadow.f$
									}));
						},
						focus.mw),
						$elm$core$Maybe$Just(
						A2($mdgriffith$elm_ui$Internal$Model$Property, 'outline', 'none'))
					]))),
			A2(
			$mdgriffith$elm_ui$Internal$Model$Style,
			($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.js) + ':focus .focusable, ') + (($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.js) + '.focusable:focus, ') + ('.ui-slide-bar:focus + ' + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.js) + ' .focusable-thumb'))),
			A2(
				$elm$core$List$filterMap,
				$elm$core$Basics$identity,
				_List_fromArray(
					[
						A2(
						$elm$core$Maybe$map,
						function (color) {
							return A2(
								$mdgriffith$elm_ui$Internal$Model$Property,
								'border-color',
								$mdgriffith$elm_ui$Internal$Model$formatColor(color));
						},
						focus.jF),
						A2(
						$elm$core$Maybe$map,
						function (color) {
							return A2(
								$mdgriffith$elm_ui$Internal$Model$Property,
								'background-color',
								$mdgriffith$elm_ui$Internal$Model$formatColor(color));
						},
						focus.jw),
						A2(
						$elm$core$Maybe$map,
						function (shadow) {
							return A2(
								$mdgriffith$elm_ui$Internal$Model$Property,
								'box-shadow',
								$mdgriffith$elm_ui$Internal$Model$formatBoxShadow(
									{
										jD: shadow.jD,
										eL: shadow.eL,
										hy: false,
										lG: A2(
											$elm$core$Tuple$mapSecond,
											$elm$core$Basics$toFloat,
											A2($elm$core$Tuple$mapFirst, $elm$core$Basics$toFloat, shadow.lG)),
										f$: shadow.f$
									}));
						},
						focus.mw),
						$elm$core$Maybe$Just(
						A2($mdgriffith$elm_ui$Internal$Model$Property, 'outline', 'none'))
					])))
		]);
};
var $elm$virtual_dom$VirtualDom$node = function (tag) {
	return _VirtualDom_node(
		_VirtualDom_noScript(tag));
};
var $elm$virtual_dom$VirtualDom$property = F2(
	function (key, value) {
		return A2(
			_VirtualDom_property,
			_VirtualDom_noInnerHtmlOrFormAction(key),
			_VirtualDom_noJavaScriptOrHtmlUri(value));
	});
var $mdgriffith$elm_ui$Internal$Style$AllChildren = F2(
	function (a, b) {
		return {$: 2, a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Style$Batch = function (a) {
	return {$: 6, a: a};
};
var $mdgriffith$elm_ui$Internal$Style$Child = F2(
	function (a, b) {
		return {$: 1, a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Style$Class = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Style$Descriptor = F2(
	function (a, b) {
		return {$: 4, a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Style$Left = 3;
var $mdgriffith$elm_ui$Internal$Style$Prop = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Style$Right = 2;
var $mdgriffith$elm_ui$Internal$Style$Self = $elm$core$Basics$identity;
var $mdgriffith$elm_ui$Internal$Style$Supports = F2(
	function (a, b) {
		return {$: 3, a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Style$Content = $elm$core$Basics$identity;
var $mdgriffith$elm_ui$Internal$Style$Bottom = 1;
var $mdgriffith$elm_ui$Internal$Style$CenterX = 4;
var $mdgriffith$elm_ui$Internal$Style$CenterY = 5;
var $mdgriffith$elm_ui$Internal$Style$Top = 0;
var $mdgriffith$elm_ui$Internal$Style$alignments = _List_fromArray(
	[0, 1, 2, 3, 4, 5]);
var $mdgriffith$elm_ui$Internal$Style$contentName = function (desc) {
	switch (desc) {
		case 0:
			var _v1 = desc;
			return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.j3);
		case 1:
			var _v2 = desc;
			return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.dU);
		case 2:
			var _v3 = desc;
			return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.dW);
		case 3:
			var _v4 = desc;
			return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.cQ);
		case 4:
			var _v5 = desc;
			return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.dV);
		default:
			var _v6 = desc;
			return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.aS);
	}
};
var $mdgriffith$elm_ui$Internal$Style$selfName = function (desc) {
	switch (desc) {
		case 0:
			var _v1 = desc;
			return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.jp);
		case 1:
			var _v2 = desc;
			return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.ji);
		case 2:
			var _v3 = desc;
			return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gE);
		case 3:
			var _v4 = desc;
			return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gD);
		case 4:
			var _v5 = desc;
			return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.jj);
		default:
			var _v6 = desc;
			return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.jk);
	}
};
var $mdgriffith$elm_ui$Internal$Style$describeAlignment = function (values) {
	var createDescription = function (alignment) {
		var _v0 = values(alignment);
		var content = _v0.a;
		var indiv = _v0.b;
		return _List_fromArray(
			[
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$contentName(alignment),
				content),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Child,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.js),
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Internal$Style$Descriptor,
						$mdgriffith$elm_ui$Internal$Style$selfName(alignment),
						indiv)
					]))
			]);
	};
	return $mdgriffith$elm_ui$Internal$Style$Batch(
		A2($elm$core$List$concatMap, createDescription, $mdgriffith$elm_ui$Internal$Style$alignments));
};
var $mdgriffith$elm_ui$Internal$Style$elDescription = _List_fromArray(
	[
		A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex'),
		A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-direction', 'column'),
		A2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'pre'),
		A2(
		$mdgriffith$elm_ui$Internal$Style$Descriptor,
		$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.eZ),
		_List_fromArray(
			[
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '0'),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Child,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.jz),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '-1')
					]))
			])),
		A2(
		$mdgriffith$elm_ui$Internal$Style$Descriptor,
		$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.mr),
		_List_fromArray(
			[
				A2(
				$mdgriffith$elm_ui$Internal$Style$Child,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.mR),
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Internal$Style$Descriptor,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.e0),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '0')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Descriptor,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gq),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'auto !important')
							]))
					]))
			])),
		A2(
		$mdgriffith$elm_ui$Internal$Style$Child,
		$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.e$),
		_List_fromArray(
			[
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', 'auto')
			])),
		A2(
		$mdgriffith$elm_ui$Internal$Style$Child,
		$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.e0),
		_List_fromArray(
			[
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '100000')
			])),
		A2(
		$mdgriffith$elm_ui$Internal$Style$Child,
		$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gq),
		_List_fromArray(
			[
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%')
			])),
		A2(
		$mdgriffith$elm_ui$Internal$Style$Child,
		$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.i7),
		_List_fromArray(
			[
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%')
			])),
		A2(
		$mdgriffith$elm_ui$Internal$Style$Child,
		$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gp),
		_List_fromArray(
			[
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-start')
			])),
		$mdgriffith$elm_ui$Internal$Style$describeAlignment(
		function (alignment) {
			switch (alignment) {
				case 0:
					return _Utils_Tuple2(
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-start')
							]),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', 'auto !important'),
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', '0 !important')
							]));
				case 1:
					return _Utils_Tuple2(
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-end')
							]),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', 'auto !important'),
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', '0 !important')
							]));
				case 2:
					return _Utils_Tuple2(
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-end')
							]),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-end')
							]));
				case 3:
					return _Utils_Tuple2(
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-start')
							]),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-start')
							]));
				case 4:
					return _Utils_Tuple2(
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'center')
							]),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'center')
							]));
				default:
					return _Utils_Tuple2(
						_List_fromArray(
							[
								A2(
								$mdgriffith$elm_ui$Internal$Style$Child,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.js),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', 'auto'),
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', 'auto')
									]))
							]),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', 'auto !important'),
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', 'auto !important')
							]));
			}
		})
	]);
var $mdgriffith$elm_ui$Internal$Style$gridAlignments = function (values) {
	var createDescription = function (alignment) {
		return _List_fromArray(
			[
				A2(
				$mdgriffith$elm_ui$Internal$Style$Child,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.js),
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Internal$Style$Descriptor,
						$mdgriffith$elm_ui$Internal$Style$selfName(alignment),
						values(alignment))
					]))
			]);
	};
	return $mdgriffith$elm_ui$Internal$Style$Batch(
		A2($elm$core$List$concatMap, createDescription, $mdgriffith$elm_ui$Internal$Style$alignments));
};
var $mdgriffith$elm_ui$Internal$Style$Above = 0;
var $mdgriffith$elm_ui$Internal$Style$Behind = 5;
var $mdgriffith$elm_ui$Internal$Style$Below = 1;
var $mdgriffith$elm_ui$Internal$Style$OnLeft = 3;
var $mdgriffith$elm_ui$Internal$Style$OnRight = 2;
var $mdgriffith$elm_ui$Internal$Style$Within = 4;
var $mdgriffith$elm_ui$Internal$Style$locations = function () {
	var loc = 0;
	var _v0 = function () {
		switch (loc) {
			case 0:
				return 0;
			case 1:
				return 0;
			case 2:
				return 0;
			case 3:
				return 0;
			case 4:
				return 0;
			default:
				return 0;
		}
	}();
	return _List_fromArray(
		[0, 1, 2, 3, 4, 5]);
}();
var $mdgriffith$elm_ui$Internal$Style$baseSheet = _List_fromArray(
	[
		A2(
		$mdgriffith$elm_ui$Internal$Style$Class,
		'html,body',
		_List_fromArray(
			[
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'padding', '0'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0')
			])),
		A2(
		$mdgriffith$elm_ui$Internal$Style$Class,
		_Utils_ap(
			$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.js),
			_Utils_ap(
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.my),
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.kU))),
		_List_fromArray(
			[
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'block'),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.e0),
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						'img',
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'max-height', '100%'),
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'object-fit', 'cover')
							]))
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gq),
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						'img',
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'max-width', '100%'),
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'object-fit', 'cover')
							]))
					]))
			])),
		A2(
		$mdgriffith$elm_ui$Internal$Style$Class,
		$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.js) + ':focus',
		_List_fromArray(
			[
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'outline', 'none')
			])),
		A2(
		$mdgriffith$elm_ui$Internal$Style$Class,
		$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.mg),
		_List_fromArray(
			[
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', 'auto'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'min-height', '100%'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '0'),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				_Utils_ap(
					$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.js),
					$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.e0)),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.e0),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%')
							]))
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Child,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.kW),
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Internal$Style$Descriptor,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.ci),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'fixed'),
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '20')
							]))
					]))
			])),
		A2(
		$mdgriffith$elm_ui$Internal$Style$Class,
		$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.ci),
		_List_fromArray(
			[
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'relative'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'border', 'none'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-direction', 'row'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto'),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.my),
				$mdgriffith$elm_ui$Internal$Style$elDescription),
				$mdgriffith$elm_ui$Internal$Style$Batch(
				function (fn) {
					return A2($elm$core$List$map, fn, $mdgriffith$elm_ui$Internal$Style$locations);
				}(
					function (loc) {
						switch (loc) {
							case 0:
								return A2(
									$mdgriffith$elm_ui$Internal$Style$Descriptor,
									$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.jd),
									_List_fromArray(
										[
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'absolute'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'bottom', '100%'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'left', '0'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '20'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important'),
											A2(
											$mdgriffith$elm_ui$Internal$Style$Child,
											$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.e0),
											_List_fromArray(
												[
													A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', 'auto')
												])),
											A2(
											$mdgriffith$elm_ui$Internal$Style$Child,
											$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gq),
											_List_fromArray(
												[
													A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%')
												])),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none'),
											A2(
											$mdgriffith$elm_ui$Internal$Style$Child,
											'*',
											_List_fromArray(
												[
													A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'auto')
												]))
										]));
							case 1:
								return A2(
									$mdgriffith$elm_ui$Internal$Style$Descriptor,
									$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.jA),
									_List_fromArray(
										[
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'absolute'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'bottom', '0'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'left', '0'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '0'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '20'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none'),
											A2(
											$mdgriffith$elm_ui$Internal$Style$Child,
											'*',
											_List_fromArray(
												[
													A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'auto')
												])),
											A2(
											$mdgriffith$elm_ui$Internal$Style$Child,
											$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.e0),
											_List_fromArray(
												[
													A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', 'auto')
												]))
										]));
							case 2:
								return A2(
									$mdgriffith$elm_ui$Internal$Style$Descriptor,
									$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.lN),
									_List_fromArray(
										[
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'absolute'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'left', '100%'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'top', '0'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '20'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none'),
											A2(
											$mdgriffith$elm_ui$Internal$Style$Child,
											'*',
											_List_fromArray(
												[
													A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'auto')
												]))
										]));
							case 3:
								return A2(
									$mdgriffith$elm_ui$Internal$Style$Descriptor,
									$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.lL),
									_List_fromArray(
										[
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'absolute'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'right', '100%'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'top', '0'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '20'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none'),
											A2(
											$mdgriffith$elm_ui$Internal$Style$Child,
											'*',
											_List_fromArray(
												[
													A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'auto')
												]))
										]));
							case 4:
								return A2(
									$mdgriffith$elm_ui$Internal$Style$Descriptor,
									$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.kW),
									_List_fromArray(
										[
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'absolute'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'left', '0'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'top', '0'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none'),
											A2(
											$mdgriffith$elm_ui$Internal$Style$Child,
											'*',
											_List_fromArray(
												[
													A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'auto')
												]))
										]));
							default:
								return A2(
									$mdgriffith$elm_ui$Internal$Style$Descriptor,
									$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.jz),
									_List_fromArray(
										[
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'absolute'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'left', '0'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'top', '0'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '0'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none'),
											A2(
											$mdgriffith$elm_ui$Internal$Style$Child,
											'*',
											_List_fromArray(
												[
													A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'auto')
												]))
										]));
						}
					}))
			])),
		A2(
		$mdgriffith$elm_ui$Internal$Style$Class,
		$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.js),
		_List_fromArray(
			[
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'relative'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'border', 'none'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-shrink', '0'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-direction', 'row'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'resize', 'none'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-feature-settings', 'inherit'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'box-sizing', 'border-box'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'padding', '0'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'border-width', '0'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'border-style', 'solid'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-size', 'inherit'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'color', 'inherit'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-family', 'inherit'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'line-height', '1'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', 'inherit'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration', 'none'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-style', 'inherit'),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gr),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-wrap', 'wrap')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.h2),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, '-moz-user-select', 'none'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, '-webkit-user-select', 'none'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, '-ms-user-select', 'none'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'user-select', 'none')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.j6),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'cursor', 'pointer')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.j7),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'cursor', 'text')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.l0),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none !important')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.dR),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'auto !important')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.bI),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '0')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.bt),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '1')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot(
					_Utils_ap($mdgriffith$elm_ui$Internal$Style$classes.kR, $mdgriffith$elm_ui$Internal$Style$classes.bI)) + ':hover',
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '0')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot(
					_Utils_ap($mdgriffith$elm_ui$Internal$Style$classes.kR, $mdgriffith$elm_ui$Internal$Style$classes.bt)) + ':hover',
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '1')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot(
					_Utils_ap($mdgriffith$elm_ui$Internal$Style$classes.kF, $mdgriffith$elm_ui$Internal$Style$classes.bI)) + ':focus',
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '0')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot(
					_Utils_ap($mdgriffith$elm_ui$Internal$Style$classes.kF, $mdgriffith$elm_ui$Internal$Style$classes.bt)) + ':focus',
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '1')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot(
					_Utils_ap($mdgriffith$elm_ui$Internal$Style$classes.gy, $mdgriffith$elm_ui$Internal$Style$classes.bI)) + ':active',
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '0')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot(
					_Utils_ap($mdgriffith$elm_ui$Internal$Style$classes.gy, $mdgriffith$elm_ui$Internal$Style$classes.bt)) + ':active',
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '1')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.Y),
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Internal$Style$Prop,
						'transition',
						A2(
							$elm$core$String$join,
							', ',
							A2(
								$elm$core$List$map,
								function (x) {
									return x + ' 160ms';
								},
								_List_fromArray(
									['transform', 'opacity', 'filter', 'background-color', 'color', 'font-size']))))
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.mn),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'overflow', 'auto'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-shrink', '1')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.mo),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'overflow-x', 'auto'),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Descriptor,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.iy),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-shrink', '1')
							]))
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.mp),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'overflow-y', 'auto'),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Descriptor,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.aR),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-shrink', '1')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Descriptor,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.my),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-shrink', '1')
							]))
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.jT),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'overflow', 'hidden')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.jU),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'overflow-x', 'hidden')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.jV),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'overflow-y', 'hidden')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gp),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', 'auto')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.dN),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'border-width', '0')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.jG),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'border-style', 'dashed')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.jH),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'border-style', 'dotted')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.jI),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'border-style', 'solid')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.mR),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'pre'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline-block')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.k2),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'line-height', '1.05'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'background', 'transparent'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-align', 'inherit')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.my),
				$mdgriffith$elm_ui$Internal$Style$elDescription),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.iy),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-direction', 'row'),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.js),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', '0%'),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Descriptor,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.i6),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto')
									])),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Descriptor,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.hT),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto')
									]))
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.e0),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'stretch !important')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.ho),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'stretch !important')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gq),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '100000')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gS),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '0'),
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto'),
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'stretch')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						'u:first-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.jo,
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						's:first-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.jm,
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1'),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Child,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.jj),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-left', 'auto !important')
									]))
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						's:last-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.jm,
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1'),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Child,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.jj),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-right', 'auto !important')
									]))
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						's:only-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.jm,
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1'),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Child,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.jk),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', 'auto !important'),
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', 'auto !important')
									]))
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						's:last-of-type.' + ($mdgriffith$elm_ui$Internal$Style$classes.jm + ' ~ u'),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '0')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						'u:first-of-type.' + ($mdgriffith$elm_ui$Internal$Style$classes.jo + (' ~ s.' + $mdgriffith$elm_ui$Internal$Style$classes.jm)),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '0')
							])),
						$mdgriffith$elm_ui$Internal$Style$describeAlignment(
						function (alignment) {
							switch (alignment) {
								case 0:
									return _Utils_Tuple2(
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-start')
											]),
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-start')
											]));
								case 1:
									return _Utils_Tuple2(
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-end')
											]),
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-end')
											]));
								case 2:
									return _Utils_Tuple2(
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-end')
											]),
										_List_Nil);
								case 3:
									return _Utils_Tuple2(
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-start')
											]),
										_List_Nil);
								case 4:
									return _Utils_Tuple2(
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'center')
											]),
										_List_Nil);
								default:
									return _Utils_Tuple2(
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'center')
											]),
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'center')
											]));
							}
						}),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Descriptor,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.mA),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'space-between')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Descriptor,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.d5),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'baseline')
							]))
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.aR),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-direction', 'column'),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.js),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', '0px'),
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'min-height', 'min-content'),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Descriptor,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.hn),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto')
									]))
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.e0),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '100000')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gq),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.i7),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gp),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-start')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						'u:first-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.jl,
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						's:first-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.jn,
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1'),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Child,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.jk),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', 'auto !important'),
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', '0 !important')
									]))
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						's:last-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.jn,
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1'),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Child,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.jk),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', 'auto !important'),
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', '0 !important')
									]))
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						's:only-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.jn,
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1'),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Child,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.jk),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', 'auto !important'),
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', 'auto !important')
									]))
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						's:last-of-type.' + ($mdgriffith$elm_ui$Internal$Style$classes.jn + ' ~ u'),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '0')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						'u:first-of-type.' + ($mdgriffith$elm_ui$Internal$Style$classes.jl + (' ~ s.' + $mdgriffith$elm_ui$Internal$Style$classes.jn)),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '0')
							])),
						$mdgriffith$elm_ui$Internal$Style$describeAlignment(
						function (alignment) {
							switch (alignment) {
								case 0:
									return _Utils_Tuple2(
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-start')
											]),
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', 'auto')
											]));
								case 1:
									return _Utils_Tuple2(
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-end')
											]),
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', 'auto')
											]));
								case 2:
									return _Utils_Tuple2(
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-end')
											]),
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-end')
											]));
								case 3:
									return _Utils_Tuple2(
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-start')
											]),
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-start')
											]));
								case 4:
									return _Utils_Tuple2(
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'center')
											]),
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'center')
											]));
								default:
									return _Utils_Tuple2(
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'center')
											]),
										_List_Nil);
							}
						}),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gS),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '0'),
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto'),
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'stretch !important')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Descriptor,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.mA),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'space-between')
							]))
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.d4),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', '-ms-grid'),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						'.gp',
						_List_fromArray(
							[
								A2(
								$mdgriffith$elm_ui$Internal$Style$Child,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.js),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%')
									]))
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Supports,
						_Utils_Tuple2('display', 'grid'),
						_List_fromArray(
							[
								_Utils_Tuple2('display', 'grid')
							])),
						$mdgriffith$elm_ui$Internal$Style$gridAlignments(
						function (alignment) {
							switch (alignment) {
								case 0:
									return _List_fromArray(
										[
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-start')
										]);
								case 1:
									return _List_fromArray(
										[
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-end')
										]);
								case 2:
									return _List_fromArray(
										[
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-end')
										]);
								case 3:
									return _List_fromArray(
										[
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-start')
										]);
								case 4:
									return _List_fromArray(
										[
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'center')
										]);
								default:
									return _List_fromArray(
										[
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'center')
										]);
							}
						})
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.aG),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'block'),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.js + ':first-child'),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot(
							$mdgriffith$elm_ui$Internal$Style$classes.js + ($mdgriffith$elm_ui$Internal$Style$selfName(3) + (':first-child + .' + $mdgriffith$elm_ui$Internal$Style$classes.js))),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot(
							$mdgriffith$elm_ui$Internal$Style$classes.js + ($mdgriffith$elm_ui$Internal$Style$selfName(2) + (':first-child + .' + $mdgriffith$elm_ui$Internal$Style$classes.js))),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important')
							])),
						$mdgriffith$elm_ui$Internal$Style$describeAlignment(
						function (alignment) {
							switch (alignment) {
								case 0:
									return _Utils_Tuple2(_List_Nil, _List_Nil);
								case 1:
									return _Utils_Tuple2(_List_Nil, _List_Nil);
								case 2:
									return _Utils_Tuple2(
										_List_Nil,
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'float', 'right'),
												A2(
												$mdgriffith$elm_ui$Internal$Style$Descriptor,
												'::after',
												_List_fromArray(
													[
														A2($mdgriffith$elm_ui$Internal$Style$Prop, 'content', '\"\"'),
														A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'table'),
														A2($mdgriffith$elm_ui$Internal$Style$Prop, 'clear', 'both')
													]))
											]));
								case 3:
									return _Utils_Tuple2(
										_List_Nil,
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'float', 'left'),
												A2(
												$mdgriffith$elm_ui$Internal$Style$Descriptor,
												'::after',
												_List_fromArray(
													[
														A2($mdgriffith$elm_ui$Internal$Style$Prop, 'content', '\"\"'),
														A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'table'),
														A2($mdgriffith$elm_ui$Internal$Style$Prop, 'clear', 'both')
													]))
											]));
								case 4:
									return _Utils_Tuple2(_List_Nil, _List_Nil);
								default:
									return _Utils_Tuple2(_List_Nil, _List_Nil);
							}
						})
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.k_),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'pre-wrap !important'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'background-color', 'transparent')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.k1),
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Internal$Style$Descriptor,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.my),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto')
							]))
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.k0),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'pre-wrap !important'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'cursor', 'text'),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.k$),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'pre-wrap !important'),
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'color', 'transparent')
							]))
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.id),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'block'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'normal'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'overflow-wrap', 'break-word'),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Descriptor,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.eZ),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '0'),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Child,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.jz),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '-1')
									]))
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$AllChildren,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.mR),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline'),
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'normal')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$AllChildren,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.id),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline'),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Descriptor,
								'::after',
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'content', 'none')
									])),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Descriptor,
								'::before',
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'content', 'none')
									]))
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$AllChildren,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.my),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline'),
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'normal'),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Descriptor,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.i6),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline-block')
									])),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Descriptor,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.kW),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex')
									])),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Descriptor,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.jz),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex')
									])),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Descriptor,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.jd),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex')
									])),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Descriptor,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.jA),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex')
									])),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Descriptor,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.lN),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex')
									])),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Descriptor,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.lL),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex')
									])),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Child,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.mR),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline'),
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'normal')
									]))
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.iy),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.aR),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline-flex')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.d4),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline-grid')
							])),
						$mdgriffith$elm_ui$Internal$Style$describeAlignment(
						function (alignment) {
							switch (alignment) {
								case 0:
									return _Utils_Tuple2(_List_Nil, _List_Nil);
								case 1:
									return _Utils_Tuple2(_List_Nil, _List_Nil);
								case 2:
									return _Utils_Tuple2(
										_List_Nil,
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'float', 'right')
											]));
								case 3:
									return _Utils_Tuple2(
										_List_Nil,
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'float', 'left')
											]));
								case 4:
									return _Utils_Tuple2(_List_Nil, _List_Nil);
								default:
									return _Utils_Tuple2(_List_Nil, _List_Nil);
							}
						})
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				'.hidden',
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'none')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.m1),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '100')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.mU),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '200')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.mY),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '300')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.m_),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '400')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.mZ),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '500')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.m0),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '600')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.jE),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '700')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.mT),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '800')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.mV),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '900')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.la),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-style', 'italic')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.mJ),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration', 'line-through')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.nh),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration', 'underline'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration-skip-ink', 'auto'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration-skip', 'ink')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				_Utils_ap(
					$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.nh),
					$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.mJ)),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration', 'line-through underline'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration-skip-ink', 'auto'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration-skip', 'ink')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.m2),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-style', 'normal')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.mW),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-align', 'justify')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.eq),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-align', 'justify-all')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.mS),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-align', 'center')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.m$),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-align', 'right')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.mX),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-align', 'left')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				'.modal',
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'fixed'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'left', '0'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'top', '0'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none')
					]))
			]))
	]);
var $mdgriffith$elm_ui$Internal$Style$fontVariant = function (_var) {
	return _List_fromArray(
		[
			A2(
			$mdgriffith$elm_ui$Internal$Style$Class,
			'.v-' + _var,
			_List_fromArray(
				[
					A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-feature-settings', '\"' + (_var + '\"'))
				])),
			A2(
			$mdgriffith$elm_ui$Internal$Style$Class,
			'.v-' + (_var + '-off'),
			_List_fromArray(
				[
					A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-feature-settings', '\"' + (_var + '\" 0'))
				]))
		]);
};
var $mdgriffith$elm_ui$Internal$Style$commonValues = $elm$core$List$concat(
	_List_fromArray(
		[
			A2(
			$elm$core$List$map,
			function (x) {
				return A2(
					$mdgriffith$elm_ui$Internal$Style$Class,
					'.border-' + $elm$core$String$fromInt(x),
					_List_fromArray(
						[
							A2(
							$mdgriffith$elm_ui$Internal$Style$Prop,
							'border-width',
							$elm$core$String$fromInt(x) + 'px')
						]));
			},
			A2($elm$core$List$range, 0, 6)),
			A2(
			$elm$core$List$map,
			function (i) {
				return A2(
					$mdgriffith$elm_ui$Internal$Style$Class,
					'.font-size-' + $elm$core$String$fromInt(i),
					_List_fromArray(
						[
							A2(
							$mdgriffith$elm_ui$Internal$Style$Prop,
							'font-size',
							$elm$core$String$fromInt(i) + 'px')
						]));
			},
			A2($elm$core$List$range, 8, 32)),
			A2(
			$elm$core$List$map,
			function (i) {
				return A2(
					$mdgriffith$elm_ui$Internal$Style$Class,
					'.p-' + $elm$core$String$fromInt(i),
					_List_fromArray(
						[
							A2(
							$mdgriffith$elm_ui$Internal$Style$Prop,
							'padding',
							$elm$core$String$fromInt(i) + 'px')
						]));
			},
			A2($elm$core$List$range, 0, 24)),
			_List_fromArray(
			[
				A2(
				$mdgriffith$elm_ui$Internal$Style$Class,
				'.v-smcp',
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-variant', 'small-caps')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Class,
				'.v-smcp-off',
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-variant', 'normal')
					]))
			]),
			$mdgriffith$elm_ui$Internal$Style$fontVariant('zero'),
			$mdgriffith$elm_ui$Internal$Style$fontVariant('onum'),
			$mdgriffith$elm_ui$Internal$Style$fontVariant('liga'),
			$mdgriffith$elm_ui$Internal$Style$fontVariant('dlig'),
			$mdgriffith$elm_ui$Internal$Style$fontVariant('ordn'),
			$mdgriffith$elm_ui$Internal$Style$fontVariant('tnum'),
			$mdgriffith$elm_ui$Internal$Style$fontVariant('afrc'),
			$mdgriffith$elm_ui$Internal$Style$fontVariant('frac')
		]));
var $mdgriffith$elm_ui$Internal$Style$explainer = '\n.explain {\n    border: 6px solid rgb(174, 121, 15) !important;\n}\n.explain > .' + ($mdgriffith$elm_ui$Internal$Style$classes.js + (' {\n    border: 4px dashed rgb(0, 151, 167) !important;\n}\n\n.ctr {\n    border: none !important;\n}\n.explain > .ctr > .' + ($mdgriffith$elm_ui$Internal$Style$classes.js + ' {\n    border: 4px dashed rgb(0, 151, 167) !important;\n}\n\n')));
var $mdgriffith$elm_ui$Internal$Style$inputTextReset = '\ninput[type="search"],\ninput[type="search"]::-webkit-search-decoration,\ninput[type="search"]::-webkit-search-cancel-button,\ninput[type="search"]::-webkit-search-results-button,\ninput[type="search"]::-webkit-search-results-decoration {\n  -webkit-appearance:none;\n}\n';
var $mdgriffith$elm_ui$Internal$Style$sliderReset = '\ninput[type=range] {\n  -webkit-appearance: none; \n  background: transparent;\n  position:absolute;\n  left:0;\n  top:0;\n  z-index:10;\n  width: 100%;\n  outline: dashed 1px;\n  height: 100%;\n  opacity: 0;\n}\n';
var $mdgriffith$elm_ui$Internal$Style$thumbReset = '\ninput[type=range]::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    opacity: 0.5;\n    width: 80px;\n    height: 80px;\n    background-color: black;\n    border:none;\n    border-radius: 5px;\n}\ninput[type=range]::-moz-range-thumb {\n    opacity: 0.5;\n    width: 80px;\n    height: 80px;\n    background-color: black;\n    border:none;\n    border-radius: 5px;\n}\ninput[type=range]::-ms-thumb {\n    opacity: 0.5;\n    width: 80px;\n    height: 80px;\n    background-color: black;\n    border:none;\n    border-radius: 5px;\n}\ninput[type=range][orient=vertical]{\n    writing-mode: bt-lr; /* IE */\n    -webkit-appearance: slider-vertical;  /* WebKit */\n}\n';
var $mdgriffith$elm_ui$Internal$Style$trackReset = '\ninput[type=range]::-moz-range-track {\n    background: transparent;\n    cursor: pointer;\n}\ninput[type=range]::-ms-track {\n    background: transparent;\n    cursor: pointer;\n}\ninput[type=range]::-webkit-slider-runnable-track {\n    background: transparent;\n    cursor: pointer;\n}\n';
var $mdgriffith$elm_ui$Internal$Style$overrides = '@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {' + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.js) + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.iy) + (' > ' + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.js) + (' { flex-basis: auto !important; } ' + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.js) + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.iy) + (' > ' + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.js) + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gS) + (' { flex-basis: auto !important; }}' + ($mdgriffith$elm_ui$Internal$Style$inputTextReset + ($mdgriffith$elm_ui$Internal$Style$sliderReset + ($mdgriffith$elm_ui$Internal$Style$trackReset + ($mdgriffith$elm_ui$Internal$Style$thumbReset + $mdgriffith$elm_ui$Internal$Style$explainer)))))))))))))));
var $elm$core$String$concat = function (strings) {
	return A2($elm$core$String$join, '', strings);
};
var $mdgriffith$elm_ui$Internal$Style$Intermediate = $elm$core$Basics$identity;
var $mdgriffith$elm_ui$Internal$Style$emptyIntermediate = F2(
	function (selector, closing) {
		return {dT: closing, w: _List_Nil, a1: _List_Nil, as: selector};
	});
var $mdgriffith$elm_ui$Internal$Style$renderRules = F2(
	function (_v0, rulesToRender) {
		var parent = _v0;
		var generateIntermediates = F2(
			function (rule, rendered) {
				switch (rule.$) {
					case 0:
						var name = rule.a;
						var val = rule.b;
						return _Utils_update(
							rendered,
							{
								a1: A2(
									$elm$core$List$cons,
									_Utils_Tuple2(name, val),
									rendered.a1)
							});
					case 3:
						var _v2 = rule.a;
						var prop = _v2.a;
						var value = _v2.b;
						var props = rule.b;
						return _Utils_update(
							rendered,
							{
								w: A2(
									$elm$core$List$cons,
									{dT: '\n}', w: _List_Nil, a1: props, as: '@supports (' + (prop + (':' + (value + (') {' + parent.as))))},
									rendered.w)
							});
					case 5:
						var selector = rule.a;
						var adjRules = rule.b;
						return _Utils_update(
							rendered,
							{
								w: A2(
									$elm$core$List$cons,
									A2(
										$mdgriffith$elm_ui$Internal$Style$renderRules,
										A2($mdgriffith$elm_ui$Internal$Style$emptyIntermediate, parent.as + (' + ' + selector), ''),
										adjRules),
									rendered.w)
							});
					case 1:
						var child = rule.a;
						var childRules = rule.b;
						return _Utils_update(
							rendered,
							{
								w: A2(
									$elm$core$List$cons,
									A2(
										$mdgriffith$elm_ui$Internal$Style$renderRules,
										A2($mdgriffith$elm_ui$Internal$Style$emptyIntermediate, parent.as + (' > ' + child), ''),
										childRules),
									rendered.w)
							});
					case 2:
						var child = rule.a;
						var childRules = rule.b;
						return _Utils_update(
							rendered,
							{
								w: A2(
									$elm$core$List$cons,
									A2(
										$mdgriffith$elm_ui$Internal$Style$renderRules,
										A2($mdgriffith$elm_ui$Internal$Style$emptyIntermediate, parent.as + (' ' + child), ''),
										childRules),
									rendered.w)
							});
					case 4:
						var descriptor = rule.a;
						var descriptorRules = rule.b;
						return _Utils_update(
							rendered,
							{
								w: A2(
									$elm$core$List$cons,
									A2(
										$mdgriffith$elm_ui$Internal$Style$renderRules,
										A2(
											$mdgriffith$elm_ui$Internal$Style$emptyIntermediate,
											_Utils_ap(parent.as, descriptor),
											''),
										descriptorRules),
									rendered.w)
							});
					default:
						var batched = rule.a;
						return _Utils_update(
							rendered,
							{
								w: A2(
									$elm$core$List$cons,
									A2(
										$mdgriffith$elm_ui$Internal$Style$renderRules,
										A2($mdgriffith$elm_ui$Internal$Style$emptyIntermediate, parent.as, ''),
										batched),
									rendered.w)
							});
				}
			});
		return A3($elm$core$List$foldr, generateIntermediates, parent, rulesToRender);
	});
var $mdgriffith$elm_ui$Internal$Style$renderCompact = function (styleClasses) {
	var renderValues = function (values) {
		return $elm$core$String$concat(
			A2(
				$elm$core$List$map,
				function (_v3) {
					var x = _v3.a;
					var y = _v3.b;
					return x + (':' + (y + ';'));
				},
				values));
	};
	var renderClass = function (rule) {
		var _v2 = rule.a1;
		if (!_v2.b) {
			return '';
		} else {
			return rule.as + ('{' + (renderValues(rule.a1) + (rule.dT + '}')));
		}
	};
	var renderIntermediate = function (_v0) {
		var rule = _v0;
		return _Utils_ap(
			renderClass(rule),
			$elm$core$String$concat(
				A2($elm$core$List$map, renderIntermediate, rule.w)));
	};
	return $elm$core$String$concat(
		A2(
			$elm$core$List$map,
			renderIntermediate,
			A3(
				$elm$core$List$foldr,
				F2(
					function (_v1, existing) {
						var name = _v1.a;
						var styleRules = _v1.b;
						return A2(
							$elm$core$List$cons,
							A2(
								$mdgriffith$elm_ui$Internal$Style$renderRules,
								A2($mdgriffith$elm_ui$Internal$Style$emptyIntermediate, name, ''),
								styleRules),
							existing);
					}),
				_List_Nil,
				styleClasses)));
};
var $mdgriffith$elm_ui$Internal$Style$rules = _Utils_ap(
	$mdgriffith$elm_ui$Internal$Style$overrides,
	$mdgriffith$elm_ui$Internal$Style$renderCompact(
		_Utils_ap($mdgriffith$elm_ui$Internal$Style$baseSheet, $mdgriffith$elm_ui$Internal$Style$commonValues)));
var $elm$virtual_dom$VirtualDom$text = _VirtualDom_text;
var $mdgriffith$elm_ui$Internal$Model$staticRoot = function (opts) {
	var _v0 = opts.lv;
	switch (_v0) {
		case 0:
			return A3(
				$elm$virtual_dom$VirtualDom$node,
				'div',
				_List_Nil,
				_List_fromArray(
					[
						A3(
						$elm$virtual_dom$VirtualDom$node,
						'style',
						_List_Nil,
						_List_fromArray(
							[
								$elm$virtual_dom$VirtualDom$text($mdgriffith$elm_ui$Internal$Style$rules)
							]))
					]));
		case 1:
			return $elm$virtual_dom$VirtualDom$text('');
		default:
			return A3(
				$elm$virtual_dom$VirtualDom$node,
				'elm-ui-static-rules',
				_List_fromArray(
					[
						A2(
						$elm$virtual_dom$VirtualDom$property,
						'rules',
						$elm$json$Json$Encode$string($mdgriffith$elm_ui$Internal$Style$rules))
					]),
				_List_Nil);
	}
};
var $elm$json$Json$Encode$list = F2(
	function (func, entries) {
		return _Json_wrap(
			A3(
				$elm$core$List$foldl,
				_Json_addEntry(func),
				_Json_emptyArray(0),
				entries));
	});
var $elm$core$List$any = F2(
	function (isOkay, list) {
		any:
		while (true) {
			if (!list.b) {
				return false;
			} else {
				var x = list.a;
				var xs = list.b;
				if (isOkay(x)) {
					return true;
				} else {
					var $temp$isOkay = isOkay,
						$temp$list = xs;
					isOkay = $temp$isOkay;
					list = $temp$list;
					continue any;
				}
			}
		}
	});
var $mdgriffith$elm_ui$Internal$Model$fontName = function (font) {
	switch (font.$) {
		case 0:
			return 'serif';
		case 1:
			return 'sans-serif';
		case 2:
			return 'monospace';
		case 3:
			var name = font.a;
			return '\"' + (name + '\"');
		case 4:
			var name = font.a;
			var url = font.b;
			return '\"' + (name + '\"');
		default:
			var name = font.a.h1;
			return '\"' + (name + '\"');
	}
};
var $mdgriffith$elm_ui$Internal$Model$isSmallCaps = function (_var) {
	switch (_var.$) {
		case 0:
			var name = _var.a;
			return name === 'smcp';
		case 1:
			var name = _var.a;
			return false;
		default:
			var name = _var.a;
			var index = _var.b;
			return (name === 'smcp') && (index === 1);
	}
};
var $mdgriffith$elm_ui$Internal$Model$hasSmallCaps = function (typeface) {
	if (typeface.$ === 5) {
		var font = typeface.a;
		return A2($elm$core$List$any, $mdgriffith$elm_ui$Internal$Model$isSmallCaps, font.iY);
	} else {
		return false;
	}
};
var $mdgriffith$elm_ui$Internal$Model$renderProps = F3(
	function (force, _v0, existing) {
		var key = _v0.a;
		var val = _v0.b;
		return force ? (existing + ('\n  ' + (key + (': ' + (val + ' !important;'))))) : (existing + ('\n  ' + (key + (': ' + (val + ';')))));
	});
var $mdgriffith$elm_ui$Internal$Model$renderStyle = F4(
	function (options, maybePseudo, selector, props) {
		if (maybePseudo.$ === 1) {
			return _List_fromArray(
				[
					selector + ('{' + (A3(
					$elm$core$List$foldl,
					$mdgriffith$elm_ui$Internal$Model$renderProps(false),
					'',
					props) + '\n}'))
				]);
		} else {
			var pseudo = maybePseudo.a;
			switch (pseudo) {
				case 1:
					var _v2 = options.kR;
					switch (_v2) {
						case 0:
							return _List_Nil;
						case 2:
							return _List_fromArray(
								[
									selector + ('-hv {' + (A3(
									$elm$core$List$foldl,
									$mdgriffith$elm_ui$Internal$Model$renderProps(true),
									'',
									props) + '\n}'))
								]);
						default:
							return _List_fromArray(
								[
									selector + ('-hv:hover {' + (A3(
									$elm$core$List$foldl,
									$mdgriffith$elm_ui$Internal$Model$renderProps(false),
									'',
									props) + '\n}'))
								]);
					}
				case 0:
					var renderedProps = A3(
						$elm$core$List$foldl,
						$mdgriffith$elm_ui$Internal$Model$renderProps(false),
						'',
						props);
					return _List_fromArray(
						[
							selector + ('-fs:focus {' + (renderedProps + '\n}')),
							('.' + ($mdgriffith$elm_ui$Internal$Style$classes.js + (':focus ' + (selector + '-fs  {')))) + (renderedProps + '\n}'),
							(selector + '-fs:focus-within {') + (renderedProps + '\n}'),
							('.ui-slide-bar:focus + ' + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.js) + (' .focusable-thumb' + (selector + '-fs {')))) + (renderedProps + '\n}')
						]);
				default:
					return _List_fromArray(
						[
							selector + ('-act:active {' + (A3(
							$elm$core$List$foldl,
							$mdgriffith$elm_ui$Internal$Model$renderProps(false),
							'',
							props) + '\n}'))
						]);
			}
		}
	});
var $mdgriffith$elm_ui$Internal$Model$renderVariant = function (_var) {
	switch (_var.$) {
		case 0:
			var name = _var.a;
			return '\"' + (name + '\"');
		case 1:
			var name = _var.a;
			return '\"' + (name + '\" 0');
		default:
			var name = _var.a;
			var index = _var.b;
			return '\"' + (name + ('\" ' + $elm$core$String$fromInt(index)));
	}
};
var $mdgriffith$elm_ui$Internal$Model$renderVariants = function (typeface) {
	if (typeface.$ === 5) {
		var font = typeface.a;
		return $elm$core$Maybe$Just(
			A2(
				$elm$core$String$join,
				', ',
				A2($elm$core$List$map, $mdgriffith$elm_ui$Internal$Model$renderVariant, font.iY)));
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $mdgriffith$elm_ui$Internal$Model$transformValue = function (transform) {
	switch (transform.$) {
		case 0:
			return $elm$core$Maybe$Nothing;
		case 1:
			var _v1 = transform.a;
			var x = _v1.a;
			var y = _v1.b;
			var z = _v1.c;
			return $elm$core$Maybe$Just(
				'translate3d(' + ($elm$core$String$fromFloat(x) + ('px, ' + ($elm$core$String$fromFloat(y) + ('px, ' + ($elm$core$String$fromFloat(z) + 'px)'))))));
		default:
			var _v2 = transform.a;
			var tx = _v2.a;
			var ty = _v2.b;
			var tz = _v2.c;
			var _v3 = transform.b;
			var sx = _v3.a;
			var sy = _v3.b;
			var sz = _v3.c;
			var _v4 = transform.c;
			var ox = _v4.a;
			var oy = _v4.b;
			var oz = _v4.c;
			var angle = transform.d;
			var translate = 'translate3d(' + ($elm$core$String$fromFloat(tx) + ('px, ' + ($elm$core$String$fromFloat(ty) + ('px, ' + ($elm$core$String$fromFloat(tz) + 'px)')))));
			var scale = 'scale3d(' + ($elm$core$String$fromFloat(sx) + (', ' + ($elm$core$String$fromFloat(sy) + (', ' + ($elm$core$String$fromFloat(sz) + ')')))));
			var rotate = 'rotate3d(' + ($elm$core$String$fromFloat(ox) + (', ' + ($elm$core$String$fromFloat(oy) + (', ' + ($elm$core$String$fromFloat(oz) + (', ' + ($elm$core$String$fromFloat(angle) + 'rad)')))))));
			return $elm$core$Maybe$Just(translate + (' ' + (scale + (' ' + rotate))));
	}
};
var $mdgriffith$elm_ui$Internal$Model$renderStyleRule = F3(
	function (options, rule, maybePseudo) {
		switch (rule.$) {
			case 0:
				var selector = rule.a;
				var props = rule.b;
				return A4($mdgriffith$elm_ui$Internal$Model$renderStyle, options, maybePseudo, selector, props);
			case 13:
				var name = rule.a;
				var prop = rule.b;
				return A4(
					$mdgriffith$elm_ui$Internal$Model$renderStyle,
					options,
					maybePseudo,
					'.' + name,
					_List_fromArray(
						[
							A2($mdgriffith$elm_ui$Internal$Model$Property, 'box-shadow', prop)
						]));
			case 12:
				var name = rule.a;
				var transparency = rule.b;
				var opacity = A2(
					$elm$core$Basics$max,
					0,
					A2($elm$core$Basics$min, 1, 1 - transparency));
				return A4(
					$mdgriffith$elm_ui$Internal$Model$renderStyle,
					options,
					maybePseudo,
					'.' + name,
					_List_fromArray(
						[
							A2(
							$mdgriffith$elm_ui$Internal$Model$Property,
							'opacity',
							$elm$core$String$fromFloat(opacity))
						]));
			case 2:
				var i = rule.a;
				return A4(
					$mdgriffith$elm_ui$Internal$Model$renderStyle,
					options,
					maybePseudo,
					'.font-size-' + $elm$core$String$fromInt(i),
					_List_fromArray(
						[
							A2(
							$mdgriffith$elm_ui$Internal$Model$Property,
							'font-size',
							$elm$core$String$fromInt(i) + 'px')
						]));
			case 1:
				var name = rule.a;
				var typefaces = rule.b;
				var features = A2(
					$elm$core$String$join,
					', ',
					A2($elm$core$List$filterMap, $mdgriffith$elm_ui$Internal$Model$renderVariants, typefaces));
				var families = _List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Internal$Model$Property,
						'font-family',
						A2(
							$elm$core$String$join,
							', ',
							A2($elm$core$List$map, $mdgriffith$elm_ui$Internal$Model$fontName, typefaces))),
						A2($mdgriffith$elm_ui$Internal$Model$Property, 'font-feature-settings', features),
						A2(
						$mdgriffith$elm_ui$Internal$Model$Property,
						'font-variant',
						A2($elm$core$List$any, $mdgriffith$elm_ui$Internal$Model$hasSmallCaps, typefaces) ? 'small-caps' : 'normal')
					]);
				return A4($mdgriffith$elm_ui$Internal$Model$renderStyle, options, maybePseudo, '.' + name, families);
			case 3:
				var _class = rule.a;
				var prop = rule.b;
				var val = rule.c;
				return A4(
					$mdgriffith$elm_ui$Internal$Model$renderStyle,
					options,
					maybePseudo,
					'.' + _class,
					_List_fromArray(
						[
							A2($mdgriffith$elm_ui$Internal$Model$Property, prop, val)
						]));
			case 4:
				var _class = rule.a;
				var prop = rule.b;
				var color = rule.c;
				return A4(
					$mdgriffith$elm_ui$Internal$Model$renderStyle,
					options,
					maybePseudo,
					'.' + _class,
					_List_fromArray(
						[
							A2(
							$mdgriffith$elm_ui$Internal$Model$Property,
							prop,
							$mdgriffith$elm_ui$Internal$Model$formatColor(color))
						]));
			case 5:
				var cls = rule.a;
				var x = rule.b;
				var y = rule.c;
				var yPx = $elm$core$String$fromInt(y) + 'px';
				var xPx = $elm$core$String$fromInt(x) + 'px';
				var single = '.' + $mdgriffith$elm_ui$Internal$Style$classes.my;
				var row = '.' + $mdgriffith$elm_ui$Internal$Style$classes.iy;
				var wrappedRow = '.' + ($mdgriffith$elm_ui$Internal$Style$classes.gr + row);
				var right = '.' + $mdgriffith$elm_ui$Internal$Style$classes.gE;
				var paragraph = '.' + $mdgriffith$elm_ui$Internal$Style$classes.id;
				var page = '.' + $mdgriffith$elm_ui$Internal$Style$classes.aG;
				var left = '.' + $mdgriffith$elm_ui$Internal$Style$classes.gD;
				var halfY = $elm$core$String$fromFloat(y / 2) + 'px';
				var halfX = $elm$core$String$fromFloat(x / 2) + 'px';
				var column = '.' + $mdgriffith$elm_ui$Internal$Style$classes.aR;
				var _class = '.' + cls;
				var any = '.' + $mdgriffith$elm_ui$Internal$Style$classes.js;
				return $elm$core$List$concat(
					_List_fromArray(
						[
							A4(
							$mdgriffith$elm_ui$Internal$Model$renderStyle,
							options,
							maybePseudo,
							_class + (row + (' > ' + (any + (' + ' + any)))),
							_List_fromArray(
								[
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'margin-left', xPx)
								])),
							A4(
							$mdgriffith$elm_ui$Internal$Model$renderStyle,
							options,
							maybePseudo,
							_class + (wrappedRow + (' > ' + any)),
							_List_fromArray(
								[
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'margin', halfY + (' ' + halfX))
								])),
							A4(
							$mdgriffith$elm_ui$Internal$Model$renderStyle,
							options,
							maybePseudo,
							_class + (column + (' > ' + (any + (' + ' + any)))),
							_List_fromArray(
								[
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'margin-top', yPx)
								])),
							A4(
							$mdgriffith$elm_ui$Internal$Model$renderStyle,
							options,
							maybePseudo,
							_class + (page + (' > ' + (any + (' + ' + any)))),
							_List_fromArray(
								[
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'margin-top', yPx)
								])),
							A4(
							$mdgriffith$elm_ui$Internal$Model$renderStyle,
							options,
							maybePseudo,
							_class + (page + (' > ' + left)),
							_List_fromArray(
								[
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'margin-right', xPx)
								])),
							A4(
							$mdgriffith$elm_ui$Internal$Model$renderStyle,
							options,
							maybePseudo,
							_class + (page + (' > ' + right)),
							_List_fromArray(
								[
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'margin-left', xPx)
								])),
							A4(
							$mdgriffith$elm_ui$Internal$Model$renderStyle,
							options,
							maybePseudo,
							_Utils_ap(_class, paragraph),
							_List_fromArray(
								[
									A2(
									$mdgriffith$elm_ui$Internal$Model$Property,
									'line-height',
									'calc(1em + ' + ($elm$core$String$fromInt(y) + 'px)'))
								])),
							A4(
							$mdgriffith$elm_ui$Internal$Model$renderStyle,
							options,
							maybePseudo,
							'textarea' + (any + _class),
							_List_fromArray(
								[
									A2(
									$mdgriffith$elm_ui$Internal$Model$Property,
									'line-height',
									'calc(1em + ' + ($elm$core$String$fromInt(y) + 'px)')),
									A2(
									$mdgriffith$elm_ui$Internal$Model$Property,
									'height',
									'calc(100% + ' + ($elm$core$String$fromInt(y) + 'px)'))
								])),
							A4(
							$mdgriffith$elm_ui$Internal$Model$renderStyle,
							options,
							maybePseudo,
							_class + (paragraph + (' > ' + left)),
							_List_fromArray(
								[
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'margin-right', xPx)
								])),
							A4(
							$mdgriffith$elm_ui$Internal$Model$renderStyle,
							options,
							maybePseudo,
							_class + (paragraph + (' > ' + right)),
							_List_fromArray(
								[
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'margin-left', xPx)
								])),
							A4(
							$mdgriffith$elm_ui$Internal$Model$renderStyle,
							options,
							maybePseudo,
							_class + (paragraph + '::after'),
							_List_fromArray(
								[
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'content', '\'\''),
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'display', 'block'),
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'height', '0'),
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'width', '0'),
									A2(
									$mdgriffith$elm_ui$Internal$Model$Property,
									'margin-top',
									$elm$core$String$fromInt((-1) * ((y / 2) | 0)) + 'px')
								])),
							A4(
							$mdgriffith$elm_ui$Internal$Model$renderStyle,
							options,
							maybePseudo,
							_class + (paragraph + '::before'),
							_List_fromArray(
								[
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'content', '\'\''),
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'display', 'block'),
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'height', '0'),
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'width', '0'),
									A2(
									$mdgriffith$elm_ui$Internal$Model$Property,
									'margin-bottom',
									$elm$core$String$fromInt((-1) * ((y / 2) | 0)) + 'px')
								]))
						]));
			case 7:
				var cls = rule.a;
				var top = rule.b;
				var right = rule.c;
				var bottom = rule.d;
				var left = rule.e;
				var _class = '.' + cls;
				return A4(
					$mdgriffith$elm_ui$Internal$Model$renderStyle,
					options,
					maybePseudo,
					_class,
					_List_fromArray(
						[
							A2(
							$mdgriffith$elm_ui$Internal$Model$Property,
							'padding',
							$elm$core$String$fromFloat(top) + ('px ' + ($elm$core$String$fromFloat(right) + ('px ' + ($elm$core$String$fromFloat(bottom) + ('px ' + ($elm$core$String$fromFloat(left) + 'px')))))))
						]));
			case 6:
				var cls = rule.a;
				var top = rule.b;
				var right = rule.c;
				var bottom = rule.d;
				var left = rule.e;
				var _class = '.' + cls;
				return A4(
					$mdgriffith$elm_ui$Internal$Model$renderStyle,
					options,
					maybePseudo,
					_class,
					_List_fromArray(
						[
							A2(
							$mdgriffith$elm_ui$Internal$Model$Property,
							'border-width',
							$elm$core$String$fromInt(top) + ('px ' + ($elm$core$String$fromInt(right) + ('px ' + ($elm$core$String$fromInt(bottom) + ('px ' + ($elm$core$String$fromInt(left) + 'px')))))))
						]));
			case 8:
				var template = rule.a;
				var toGridLengthHelper = F3(
					function (minimum, maximum, x) {
						toGridLengthHelper:
						while (true) {
							switch (x.$) {
								case 0:
									var px = x.a;
									return $elm$core$String$fromInt(px) + 'px';
								case 1:
									var _v2 = _Utils_Tuple2(minimum, maximum);
									if (_v2.a.$ === 1) {
										if (_v2.b.$ === 1) {
											var _v3 = _v2.a;
											var _v4 = _v2.b;
											return 'max-content';
										} else {
											var _v6 = _v2.a;
											var maxSize = _v2.b.a;
											return 'minmax(max-content, ' + ($elm$core$String$fromInt(maxSize) + 'px)');
										}
									} else {
										if (_v2.b.$ === 1) {
											var minSize = _v2.a.a;
											var _v5 = _v2.b;
											return 'minmax(' + ($elm$core$String$fromInt(minSize) + ('px, ' + 'max-content)'));
										} else {
											var minSize = _v2.a.a;
											var maxSize = _v2.b.a;
											return 'minmax(' + ($elm$core$String$fromInt(minSize) + ('px, ' + ($elm$core$String$fromInt(maxSize) + 'px)')));
										}
									}
								case 2:
									var i = x.a;
									var _v7 = _Utils_Tuple2(minimum, maximum);
									if (_v7.a.$ === 1) {
										if (_v7.b.$ === 1) {
											var _v8 = _v7.a;
											var _v9 = _v7.b;
											return $elm$core$String$fromInt(i) + 'fr';
										} else {
											var _v11 = _v7.a;
											var maxSize = _v7.b.a;
											return 'minmax(max-content, ' + ($elm$core$String$fromInt(maxSize) + 'px)');
										}
									} else {
										if (_v7.b.$ === 1) {
											var minSize = _v7.a.a;
											var _v10 = _v7.b;
											return 'minmax(' + ($elm$core$String$fromInt(minSize) + ('px, ' + ($elm$core$String$fromInt(i) + ('fr' + 'fr)'))));
										} else {
											var minSize = _v7.a.a;
											var maxSize = _v7.b.a;
											return 'minmax(' + ($elm$core$String$fromInt(minSize) + ('px, ' + ($elm$core$String$fromInt(maxSize) + 'px)')));
										}
									}
								case 3:
									var m = x.a;
									var len = x.b;
									var $temp$minimum = $elm$core$Maybe$Just(m),
										$temp$maximum = maximum,
										$temp$x = len;
									minimum = $temp$minimum;
									maximum = $temp$maximum;
									x = $temp$x;
									continue toGridLengthHelper;
								default:
									var m = x.a;
									var len = x.b;
									var $temp$minimum = minimum,
										$temp$maximum = $elm$core$Maybe$Just(m),
										$temp$x = len;
									minimum = $temp$minimum;
									maximum = $temp$maximum;
									x = $temp$x;
									continue toGridLengthHelper;
							}
						}
					});
				var toGridLength = function (x) {
					return A3(toGridLengthHelper, $elm$core$Maybe$Nothing, $elm$core$Maybe$Nothing, x);
				};
				var xSpacing = toGridLength(template.mB.a);
				var ySpacing = toGridLength(template.mB.b);
				var rows = function (x) {
					return 'grid-template-rows: ' + (x + ';');
				}(
					A2(
						$elm$core$String$join,
						' ',
						A2($elm$core$List$map, toGridLength, template.mh)));
				var msRows = function (x) {
					return '-ms-grid-rows: ' + (x + ';');
				}(
					A2(
						$elm$core$String$join,
						ySpacing,
						A2($elm$core$List$map, toGridLength, template.jY)));
				var msColumns = function (x) {
					return '-ms-grid-columns: ' + (x + ';');
				}(
					A2(
						$elm$core$String$join,
						ySpacing,
						A2($elm$core$List$map, toGridLength, template.jY)));
				var gapY = 'grid-row-gap:' + (toGridLength(template.mB.b) + ';');
				var gapX = 'grid-column-gap:' + (toGridLength(template.mB.a) + ';');
				var columns = function (x) {
					return 'grid-template-columns: ' + (x + ';');
				}(
					A2(
						$elm$core$String$join,
						' ',
						A2($elm$core$List$map, toGridLength, template.jY)));
				var _class = '.grid-rows-' + (A2(
					$elm$core$String$join,
					'-',
					A2($elm$core$List$map, $mdgriffith$elm_ui$Internal$Model$lengthClassName, template.mh)) + ('-cols-' + (A2(
					$elm$core$String$join,
					'-',
					A2($elm$core$List$map, $mdgriffith$elm_ui$Internal$Model$lengthClassName, template.jY)) + ('-space-x-' + ($mdgriffith$elm_ui$Internal$Model$lengthClassName(template.mB.a) + ('-space-y-' + $mdgriffith$elm_ui$Internal$Model$lengthClassName(template.mB.b)))))));
				var modernGrid = _class + ('{' + (columns + (rows + (gapX + (gapY + '}')))));
				var supports = '@supports (display:grid) {' + (modernGrid + '}');
				var base = _class + ('{' + (msColumns + (msRows + '}')));
				return _List_fromArray(
					[base, supports]);
			case 9:
				var position = rule.a;
				var msPosition = A2(
					$elm$core$String$join,
					' ',
					_List_fromArray(
						[
							'-ms-grid-row: ' + ($elm$core$String$fromInt(position.iy) + ';'),
							'-ms-grid-row-span: ' + ($elm$core$String$fromInt(position.hm) + ';'),
							'-ms-grid-column: ' + ($elm$core$String$fromInt(position.gQ) + ';'),
							'-ms-grid-column-span: ' + ($elm$core$String$fromInt(position.i5) + ';')
						]));
				var modernPosition = A2(
					$elm$core$String$join,
					' ',
					_List_fromArray(
						[
							'grid-row: ' + ($elm$core$String$fromInt(position.iy) + (' / ' + ($elm$core$String$fromInt(position.iy + position.hm) + ';'))),
							'grid-column: ' + ($elm$core$String$fromInt(position.gQ) + (' / ' + ($elm$core$String$fromInt(position.gQ + position.i5) + ';')))
						]));
				var _class = '.grid-pos-' + ($elm$core$String$fromInt(position.iy) + ('-' + ($elm$core$String$fromInt(position.gQ) + ('-' + ($elm$core$String$fromInt(position.i5) + ('-' + $elm$core$String$fromInt(position.hm)))))));
				var modernGrid = _class + ('{' + (modernPosition + '}'));
				var supports = '@supports (display:grid) {' + (modernGrid + '}');
				var base = _class + ('{' + (msPosition + '}'));
				return _List_fromArray(
					[base, supports]);
			case 11:
				var _class = rule.a;
				var styles = rule.b;
				var renderPseudoRule = function (style) {
					return A3(
						$mdgriffith$elm_ui$Internal$Model$renderStyleRule,
						options,
						style,
						$elm$core$Maybe$Just(_class));
				};
				return A2($elm$core$List$concatMap, renderPseudoRule, styles);
			default:
				var transform = rule.a;
				var val = $mdgriffith$elm_ui$Internal$Model$transformValue(transform);
				var _class = $mdgriffith$elm_ui$Internal$Model$transformClass(transform);
				var _v12 = _Utils_Tuple2(_class, val);
				if ((!_v12.a.$) && (!_v12.b.$)) {
					var cls = _v12.a.a;
					var v = _v12.b.a;
					return A4(
						$mdgriffith$elm_ui$Internal$Model$renderStyle,
						options,
						maybePseudo,
						'.' + cls,
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Model$Property, 'transform', v)
							]));
				} else {
					return _List_Nil;
				}
		}
	});
var $mdgriffith$elm_ui$Internal$Model$encodeStyles = F2(
	function (options, stylesheet) {
		return $elm$json$Json$Encode$object(
			A2(
				$elm$core$List$map,
				function (style) {
					var styled = A3($mdgriffith$elm_ui$Internal$Model$renderStyleRule, options, style, $elm$core$Maybe$Nothing);
					return _Utils_Tuple2(
						$mdgriffith$elm_ui$Internal$Model$getStyleName(style),
						A2($elm$json$Json$Encode$list, $elm$json$Json$Encode$string, styled));
				},
				stylesheet));
	});
var $mdgriffith$elm_ui$Internal$Model$bracket = F2(
	function (selector, rules) {
		var renderPair = function (_v0) {
			var name = _v0.a;
			var val = _v0.b;
			return name + (': ' + (val + ';'));
		};
		return selector + (' {' + (A2(
			$elm$core$String$join,
			'',
			A2($elm$core$List$map, renderPair, rules)) + '}'));
	});
var $mdgriffith$elm_ui$Internal$Model$fontRule = F3(
	function (name, modifier, _v0) {
		var parentAdj = _v0.a;
		var textAdjustment = _v0.b;
		return _List_fromArray(
			[
				A2($mdgriffith$elm_ui$Internal$Model$bracket, '.' + (name + ('.' + (modifier + (', ' + ('.' + (name + (' .' + modifier))))))), parentAdj),
				A2($mdgriffith$elm_ui$Internal$Model$bracket, '.' + (name + ('.' + (modifier + ('> .' + ($mdgriffith$elm_ui$Internal$Style$classes.mR + (', .' + (name + (' .' + (modifier + (' > .' + $mdgriffith$elm_ui$Internal$Style$classes.mR)))))))))), textAdjustment)
			]);
	});
var $mdgriffith$elm_ui$Internal$Model$renderFontAdjustmentRule = F3(
	function (fontToAdjust, _v0, otherFontName) {
		var full = _v0.a;
		var capital = _v0.b;
		var name = _Utils_eq(fontToAdjust, otherFontName) ? fontToAdjust : (otherFontName + (' .' + fontToAdjust));
		return A2(
			$elm$core$String$join,
			' ',
			_Utils_ap(
				A3($mdgriffith$elm_ui$Internal$Model$fontRule, name, $mdgriffith$elm_ui$Internal$Style$classes.mz, capital),
				A3($mdgriffith$elm_ui$Internal$Model$fontRule, name, $mdgriffith$elm_ui$Internal$Style$classes.kJ, full)));
	});
var $mdgriffith$elm_ui$Internal$Model$renderNullAdjustmentRule = F2(
	function (fontToAdjust, otherFontName) {
		var name = _Utils_eq(fontToAdjust, otherFontName) ? fontToAdjust : (otherFontName + (' .' + fontToAdjust));
		return A2(
			$elm$core$String$join,
			' ',
			_List_fromArray(
				[
					A2(
					$mdgriffith$elm_ui$Internal$Model$bracket,
					'.' + (name + ('.' + ($mdgriffith$elm_ui$Internal$Style$classes.mz + (', ' + ('.' + (name + (' .' + $mdgriffith$elm_ui$Internal$Style$classes.mz))))))),
					_List_fromArray(
						[
							_Utils_Tuple2('line-height', '1')
						])),
					A2(
					$mdgriffith$elm_ui$Internal$Model$bracket,
					'.' + (name + ('.' + ($mdgriffith$elm_ui$Internal$Style$classes.mz + ('> .' + ($mdgriffith$elm_ui$Internal$Style$classes.mR + (', .' + (name + (' .' + ($mdgriffith$elm_ui$Internal$Style$classes.mz + (' > .' + $mdgriffith$elm_ui$Internal$Style$classes.mR)))))))))),
					_List_fromArray(
						[
							_Utils_Tuple2('vertical-align', '0'),
							_Utils_Tuple2('line-height', '1')
						]))
				]));
	});
var $mdgriffith$elm_ui$Internal$Model$adjust = F3(
	function (size, height, vertical) {
		return {hm: height / size, f$: size, iZ: vertical};
	});
var $elm$core$List$maximum = function (list) {
	if (list.b) {
		var x = list.a;
		var xs = list.b;
		return $elm$core$Maybe$Just(
			A3($elm$core$List$foldl, $elm$core$Basics$max, x, xs));
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $elm$core$List$minimum = function (list) {
	if (list.b) {
		var x = list.a;
		var xs = list.b;
		return $elm$core$Maybe$Just(
			A3($elm$core$List$foldl, $elm$core$Basics$min, x, xs));
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $mdgriffith$elm_ui$Internal$Model$convertAdjustment = function (adjustment) {
	var lines = _List_fromArray(
		[adjustment.jN, adjustment.jx, adjustment.ki, adjustment.ll]);
	var lineHeight = 1.5;
	var normalDescender = (lineHeight - 1) / 2;
	var oldMiddle = lineHeight / 2;
	var descender = A2(
		$elm$core$Maybe$withDefault,
		adjustment.ki,
		$elm$core$List$minimum(lines));
	var newBaseline = A2(
		$elm$core$Maybe$withDefault,
		adjustment.jx,
		$elm$core$List$minimum(
			A2(
				$elm$core$List$filter,
				function (x) {
					return !_Utils_eq(x, descender);
				},
				lines)));
	var base = lineHeight;
	var ascender = A2(
		$elm$core$Maybe$withDefault,
		adjustment.jN,
		$elm$core$List$maximum(lines));
	var capitalSize = 1 / (ascender - newBaseline);
	var capitalVertical = 1 - ascender;
	var fullSize = 1 / (ascender - descender);
	var fullVertical = 1 - ascender;
	var newCapitalMiddle = ((ascender - newBaseline) / 2) + newBaseline;
	var newFullMiddle = ((ascender - descender) / 2) + descender;
	return {
		jN: A3($mdgriffith$elm_ui$Internal$Model$adjust, capitalSize, ascender - newBaseline, capitalVertical),
		hk: A3($mdgriffith$elm_ui$Internal$Model$adjust, fullSize, ascender - descender, fullVertical)
	};
};
var $mdgriffith$elm_ui$Internal$Model$fontAdjustmentRules = function (converted) {
	return _Utils_Tuple2(
		_List_fromArray(
			[
				_Utils_Tuple2('display', 'block')
			]),
		_List_fromArray(
			[
				_Utils_Tuple2('display', 'inline-block'),
				_Utils_Tuple2(
				'line-height',
				$elm$core$String$fromFloat(converted.hm)),
				_Utils_Tuple2(
				'vertical-align',
				$elm$core$String$fromFloat(converted.iZ) + 'em'),
				_Utils_Tuple2(
				'font-size',
				$elm$core$String$fromFloat(converted.f$) + 'em')
			]));
};
var $mdgriffith$elm_ui$Internal$Model$typefaceAdjustment = function (typefaces) {
	return A3(
		$elm$core$List$foldl,
		F2(
			function (face, found) {
				if (found.$ === 1) {
					if (face.$ === 5) {
						var _with = face.a;
						var _v2 = _with.jf;
						if (_v2.$ === 1) {
							return found;
						} else {
							var adjustment = _v2.a;
							return $elm$core$Maybe$Just(
								_Utils_Tuple2(
									$mdgriffith$elm_ui$Internal$Model$fontAdjustmentRules(
										function ($) {
											return $.hk;
										}(
											$mdgriffith$elm_ui$Internal$Model$convertAdjustment(adjustment))),
									$mdgriffith$elm_ui$Internal$Model$fontAdjustmentRules(
										function ($) {
											return $.jN;
										}(
											$mdgriffith$elm_ui$Internal$Model$convertAdjustment(adjustment)))));
						}
					} else {
						return found;
					}
				} else {
					return found;
				}
			}),
		$elm$core$Maybe$Nothing,
		typefaces);
};
var $mdgriffith$elm_ui$Internal$Model$renderTopLevelValues = function (rules) {
	var withImport = function (font) {
		if (font.$ === 4) {
			var url = font.b;
			return $elm$core$Maybe$Just('@import url(\'' + (url + '\');'));
		} else {
			return $elm$core$Maybe$Nothing;
		}
	};
	var fontImports = function (_v2) {
		var name = _v2.a;
		var typefaces = _v2.b;
		var imports = A2(
			$elm$core$String$join,
			'\n',
			A2($elm$core$List$filterMap, withImport, typefaces));
		return imports;
	};
	var allNames = A2($elm$core$List$map, $elm$core$Tuple$first, rules);
	var fontAdjustments = function (_v1) {
		var name = _v1.a;
		var typefaces = _v1.b;
		var _v0 = $mdgriffith$elm_ui$Internal$Model$typefaceAdjustment(typefaces);
		if (_v0.$ === 1) {
			return A2(
				$elm$core$String$join,
				'',
				A2(
					$elm$core$List$map,
					$mdgriffith$elm_ui$Internal$Model$renderNullAdjustmentRule(name),
					allNames));
		} else {
			var adjustment = _v0.a;
			return A2(
				$elm$core$String$join,
				'',
				A2(
					$elm$core$List$map,
					A2($mdgriffith$elm_ui$Internal$Model$renderFontAdjustmentRule, name, adjustment),
					allNames));
		}
	};
	return _Utils_ap(
		A2(
			$elm$core$String$join,
			'\n',
			A2($elm$core$List$map, fontImports, rules)),
		A2(
			$elm$core$String$join,
			'\n',
			A2($elm$core$List$map, fontAdjustments, rules)));
};
var $mdgriffith$elm_ui$Internal$Model$topLevelValue = function (rule) {
	if (rule.$ === 1) {
		var name = rule.a;
		var typefaces = rule.b;
		return $elm$core$Maybe$Just(
			_Utils_Tuple2(name, typefaces));
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $mdgriffith$elm_ui$Internal$Model$toStyleSheetString = F2(
	function (options, stylesheet) {
		var combine = F2(
			function (style, rendered) {
				return {
					em: _Utils_ap(
						rendered.em,
						A3($mdgriffith$elm_ui$Internal$Model$renderStyleRule, options, style, $elm$core$Maybe$Nothing)),
					dD: function () {
						var _v1 = $mdgriffith$elm_ui$Internal$Model$topLevelValue(style);
						if (_v1.$ === 1) {
							return rendered.dD;
						} else {
							var topLevel = _v1.a;
							return A2($elm$core$List$cons, topLevel, rendered.dD);
						}
					}()
				};
			});
		var _v0 = A3(
			$elm$core$List$foldl,
			combine,
			{em: _List_Nil, dD: _List_Nil},
			stylesheet);
		var topLevel = _v0.dD;
		var rules = _v0.em;
		return _Utils_ap(
			$mdgriffith$elm_ui$Internal$Model$renderTopLevelValues(topLevel),
			$elm$core$String$concat(rules));
	});
var $mdgriffith$elm_ui$Internal$Model$toStyleSheet = F2(
	function (options, styleSheet) {
		var _v0 = options.lv;
		switch (_v0) {
			case 0:
				return A3(
					$elm$virtual_dom$VirtualDom$node,
					'div',
					_List_Nil,
					_List_fromArray(
						[
							A3(
							$elm$virtual_dom$VirtualDom$node,
							'style',
							_List_Nil,
							_List_fromArray(
								[
									$elm$virtual_dom$VirtualDom$text(
									A2($mdgriffith$elm_ui$Internal$Model$toStyleSheetString, options, styleSheet))
								]))
						]));
			case 1:
				return A3(
					$elm$virtual_dom$VirtualDom$node,
					'div',
					_List_Nil,
					_List_fromArray(
						[
							A3(
							$elm$virtual_dom$VirtualDom$node,
							'style',
							_List_Nil,
							_List_fromArray(
								[
									$elm$virtual_dom$VirtualDom$text(
									A2($mdgriffith$elm_ui$Internal$Model$toStyleSheetString, options, styleSheet))
								]))
						]));
			default:
				return A3(
					$elm$virtual_dom$VirtualDom$node,
					'elm-ui-rules',
					_List_fromArray(
						[
							A2(
							$elm$virtual_dom$VirtualDom$property,
							'rules',
							A2($mdgriffith$elm_ui$Internal$Model$encodeStyles, options, styleSheet))
						]),
					_List_Nil);
		}
	});
var $mdgriffith$elm_ui$Internal$Model$embedKeyed = F4(
	function (_static, opts, styles, children) {
		var dynamicStyleSheet = A2(
			$mdgriffith$elm_ui$Internal$Model$toStyleSheet,
			opts,
			A3(
				$elm$core$List$foldl,
				$mdgriffith$elm_ui$Internal$Model$reduceStyles,
				_Utils_Tuple2(
					$elm$core$Set$empty,
					$mdgriffith$elm_ui$Internal$Model$renderFocusStyle(opts.kF)),
				styles).b);
		return _static ? A2(
			$elm$core$List$cons,
			_Utils_Tuple2(
				'static-stylesheet',
				$mdgriffith$elm_ui$Internal$Model$staticRoot(opts)),
			A2(
				$elm$core$List$cons,
				_Utils_Tuple2('dynamic-stylesheet', dynamicStyleSheet),
				children)) : A2(
			$elm$core$List$cons,
			_Utils_Tuple2('dynamic-stylesheet', dynamicStyleSheet),
			children);
	});
var $mdgriffith$elm_ui$Internal$Model$embedWith = F4(
	function (_static, opts, styles, children) {
		var dynamicStyleSheet = A2(
			$mdgriffith$elm_ui$Internal$Model$toStyleSheet,
			opts,
			A3(
				$elm$core$List$foldl,
				$mdgriffith$elm_ui$Internal$Model$reduceStyles,
				_Utils_Tuple2(
					$elm$core$Set$empty,
					$mdgriffith$elm_ui$Internal$Model$renderFocusStyle(opts.kF)),
				styles).b);
		return _static ? A2(
			$elm$core$List$cons,
			$mdgriffith$elm_ui$Internal$Model$staticRoot(opts),
			A2($elm$core$List$cons, dynamicStyleSheet, children)) : A2($elm$core$List$cons, dynamicStyleSheet, children);
	});
var $mdgriffith$elm_ui$Internal$Flag$heightBetween = $mdgriffith$elm_ui$Internal$Flag$flag(45);
var $mdgriffith$elm_ui$Internal$Flag$heightFill = $mdgriffith$elm_ui$Internal$Flag$flag(37);
var $elm$virtual_dom$VirtualDom$keyedNode = function (tag) {
	return _VirtualDom_keyedNode(
		_VirtualDom_noScript(tag));
};
var $elm$html$Html$p = _VirtualDom_node('p');
var $mdgriffith$elm_ui$Internal$Flag$present = F2(
	function (myFlag, _v0) {
		var fieldOne = _v0.a;
		var fieldTwo = _v0.b;
		if (!myFlag.$) {
			var first = myFlag.a;
			return _Utils_eq(first & fieldOne, first);
		} else {
			var second = myFlag.a;
			return _Utils_eq(second & fieldTwo, second);
		}
	});
var $elm$html$Html$s = _VirtualDom_node('s');
var $elm$html$Html$u = _VirtualDom_node('u');
var $mdgriffith$elm_ui$Internal$Flag$widthBetween = $mdgriffith$elm_ui$Internal$Flag$flag(44);
var $mdgriffith$elm_ui$Internal$Flag$widthFill = $mdgriffith$elm_ui$Internal$Flag$flag(39);
var $mdgriffith$elm_ui$Internal$Model$finalizeNode = F6(
	function (has, node, attributes, children, embedMode, parentContext) {
		var createNode = F2(
			function (nodeName, attrs) {
				if (children.$ === 1) {
					var keyed = children.a;
					return A3(
						$elm$virtual_dom$VirtualDom$keyedNode,
						nodeName,
						attrs,
						function () {
							switch (embedMode.$) {
								case 0:
									return keyed;
								case 2:
									var opts = embedMode.a;
									var styles = embedMode.b;
									return A4($mdgriffith$elm_ui$Internal$Model$embedKeyed, false, opts, styles, keyed);
								default:
									var opts = embedMode.a;
									var styles = embedMode.b;
									return A4($mdgriffith$elm_ui$Internal$Model$embedKeyed, true, opts, styles, keyed);
							}
						}());
				} else {
					var unkeyed = children.a;
					return A2(
						function () {
							switch (nodeName) {
								case 'div':
									return $elm$html$Html$div;
								case 'p':
									return $elm$html$Html$p;
								default:
									return $elm$virtual_dom$VirtualDom$node(nodeName);
							}
						}(),
						attrs,
						function () {
							switch (embedMode.$) {
								case 0:
									return unkeyed;
								case 2:
									var opts = embedMode.a;
									var styles = embedMode.b;
									return A4($mdgriffith$elm_ui$Internal$Model$embedWith, false, opts, styles, unkeyed);
								default:
									var opts = embedMode.a;
									var styles = embedMode.b;
									return A4($mdgriffith$elm_ui$Internal$Model$embedWith, true, opts, styles, unkeyed);
							}
						}());
				}
			});
		var html = function () {
			switch (node.$) {
				case 0:
					return A2(createNode, 'div', attributes);
				case 1:
					var nodeName = node.a;
					return A2(createNode, nodeName, attributes);
				default:
					var nodeName = node.a;
					var internal = node.b;
					return A3(
						$elm$virtual_dom$VirtualDom$node,
						nodeName,
						attributes,
						_List_fromArray(
							[
								A2(
								createNode,
								internal,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$class($mdgriffith$elm_ui$Internal$Style$classes.js + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.my))
									]))
							]));
			}
		}();
		switch (parentContext) {
			case 0:
				return (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$widthFill, has) && (!A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$widthBetween, has))) ? html : (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$alignRight, has) ? A2(
					$elm$html$Html$u,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class(
							A2(
								$elm$core$String$join,
								' ',
								_List_fromArray(
									[$mdgriffith$elm_ui$Internal$Style$classes.js, $mdgriffith$elm_ui$Internal$Style$classes.my, $mdgriffith$elm_ui$Internal$Style$classes.gS, $mdgriffith$elm_ui$Internal$Style$classes.aS, $mdgriffith$elm_ui$Internal$Style$classes.jo])))
						]),
					_List_fromArray(
						[html])) : (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$centerX, has) ? A2(
					$elm$html$Html$s,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class(
							A2(
								$elm$core$String$join,
								' ',
								_List_fromArray(
									[$mdgriffith$elm_ui$Internal$Style$classes.js, $mdgriffith$elm_ui$Internal$Style$classes.my, $mdgriffith$elm_ui$Internal$Style$classes.gS, $mdgriffith$elm_ui$Internal$Style$classes.aS, $mdgriffith$elm_ui$Internal$Style$classes.jm])))
						]),
					_List_fromArray(
						[html])) : html));
			case 1:
				return (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$heightFill, has) && (!A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$heightBetween, has))) ? html : (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$centerY, has) ? A2(
					$elm$html$Html$s,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class(
							A2(
								$elm$core$String$join,
								' ',
								_List_fromArray(
									[$mdgriffith$elm_ui$Internal$Style$classes.js, $mdgriffith$elm_ui$Internal$Style$classes.my, $mdgriffith$elm_ui$Internal$Style$classes.gS, $mdgriffith$elm_ui$Internal$Style$classes.jn])))
						]),
					_List_fromArray(
						[html])) : (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$alignBottom, has) ? A2(
					$elm$html$Html$u,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class(
							A2(
								$elm$core$String$join,
								' ',
								_List_fromArray(
									[$mdgriffith$elm_ui$Internal$Style$classes.js, $mdgriffith$elm_ui$Internal$Style$classes.my, $mdgriffith$elm_ui$Internal$Style$classes.gS, $mdgriffith$elm_ui$Internal$Style$classes.jl])))
						]),
					_List_fromArray(
						[html])) : html));
			default:
				return html;
		}
	});
var $elm$core$List$isEmpty = function (xs) {
	if (!xs.b) {
		return true;
	} else {
		return false;
	}
};
var $elm$html$Html$text = $elm$virtual_dom$VirtualDom$text;
var $mdgriffith$elm_ui$Internal$Model$textElementClasses = $mdgriffith$elm_ui$Internal$Style$classes.js + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.mR + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.gp + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.e$)))));
var $mdgriffith$elm_ui$Internal$Model$textElement = function (str) {
	return A2(
		$elm$html$Html$div,
		_List_fromArray(
			[
				$elm$html$Html$Attributes$class($mdgriffith$elm_ui$Internal$Model$textElementClasses)
			]),
		_List_fromArray(
			[
				$elm$html$Html$text(str)
			]));
};
var $mdgriffith$elm_ui$Internal$Model$textElementFillClasses = $mdgriffith$elm_ui$Internal$Style$classes.js + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.mR + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.gq + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.e0)))));
var $mdgriffith$elm_ui$Internal$Model$textElementFill = function (str) {
	return A2(
		$elm$html$Html$div,
		_List_fromArray(
			[
				$elm$html$Html$Attributes$class($mdgriffith$elm_ui$Internal$Model$textElementFillClasses)
			]),
		_List_fromArray(
			[
				$elm$html$Html$text(str)
			]));
};
var $mdgriffith$elm_ui$Internal$Model$createElement = F3(
	function (context, children, rendered) {
		var gatherKeyed = F2(
			function (_v8, _v9) {
				var key = _v8.a;
				var child = _v8.b;
				var htmls = _v9.a;
				var existingStyles = _v9.b;
				switch (child.$) {
					case 0:
						var html = child.a;
						return _Utils_eq(context, $mdgriffith$elm_ui$Internal$Model$asParagraph) ? _Utils_Tuple2(
							A2(
								$elm$core$List$cons,
								_Utils_Tuple2(
									key,
									html(context)),
								htmls),
							existingStyles) : _Utils_Tuple2(
							A2(
								$elm$core$List$cons,
								_Utils_Tuple2(
									key,
									html(context)),
								htmls),
							existingStyles);
					case 1:
						var styled = child.a;
						return _Utils_eq(context, $mdgriffith$elm_ui$Internal$Model$asParagraph) ? _Utils_Tuple2(
							A2(
								$elm$core$List$cons,
								_Utils_Tuple2(
									key,
									A2(styled.kT, $mdgriffith$elm_ui$Internal$Model$NoStyleSheet, context)),
								htmls),
							$elm$core$List$isEmpty(existingStyles) ? styled.mK : _Utils_ap(styled.mK, existingStyles)) : _Utils_Tuple2(
							A2(
								$elm$core$List$cons,
								_Utils_Tuple2(
									key,
									A2(styled.kT, $mdgriffith$elm_ui$Internal$Model$NoStyleSheet, context)),
								htmls),
							$elm$core$List$isEmpty(existingStyles) ? styled.mK : _Utils_ap(styled.mK, existingStyles));
					case 2:
						var str = child.a;
						return _Utils_Tuple2(
							A2(
								$elm$core$List$cons,
								_Utils_Tuple2(
									key,
									_Utils_eq(context, $mdgriffith$elm_ui$Internal$Model$asEl) ? $mdgriffith$elm_ui$Internal$Model$textElementFill(str) : $mdgriffith$elm_ui$Internal$Model$textElement(str)),
								htmls),
							existingStyles);
					default:
						return _Utils_Tuple2(htmls, existingStyles);
				}
			});
		var gather = F2(
			function (child, _v6) {
				var htmls = _v6.a;
				var existingStyles = _v6.b;
				switch (child.$) {
					case 0:
						var html = child.a;
						return _Utils_eq(context, $mdgriffith$elm_ui$Internal$Model$asParagraph) ? _Utils_Tuple2(
							A2(
								$elm$core$List$cons,
								html(context),
								htmls),
							existingStyles) : _Utils_Tuple2(
							A2(
								$elm$core$List$cons,
								html(context),
								htmls),
							existingStyles);
					case 1:
						var styled = child.a;
						return _Utils_eq(context, $mdgriffith$elm_ui$Internal$Model$asParagraph) ? _Utils_Tuple2(
							A2(
								$elm$core$List$cons,
								A2(styled.kT, $mdgriffith$elm_ui$Internal$Model$NoStyleSheet, context),
								htmls),
							$elm$core$List$isEmpty(existingStyles) ? styled.mK : _Utils_ap(styled.mK, existingStyles)) : _Utils_Tuple2(
							A2(
								$elm$core$List$cons,
								A2(styled.kT, $mdgriffith$elm_ui$Internal$Model$NoStyleSheet, context),
								htmls),
							$elm$core$List$isEmpty(existingStyles) ? styled.mK : _Utils_ap(styled.mK, existingStyles));
					case 2:
						var str = child.a;
						return _Utils_Tuple2(
							A2(
								$elm$core$List$cons,
								_Utils_eq(context, $mdgriffith$elm_ui$Internal$Model$asEl) ? $mdgriffith$elm_ui$Internal$Model$textElementFill(str) : $mdgriffith$elm_ui$Internal$Model$textElement(str),
								htmls),
							existingStyles);
					default:
						return _Utils_Tuple2(htmls, existingStyles);
				}
			});
		if (children.$ === 1) {
			var keyedChildren = children.a;
			var _v1 = A3(
				$elm$core$List$foldr,
				gatherKeyed,
				_Utils_Tuple2(_List_Nil, _List_Nil),
				keyedChildren);
			var keyed = _v1.a;
			var styles = _v1.b;
			var newStyles = $elm$core$List$isEmpty(styles) ? rendered.mK : _Utils_ap(rendered.mK, styles);
			if (!newStyles.b) {
				return $mdgriffith$elm_ui$Internal$Model$Unstyled(
					A5(
						$mdgriffith$elm_ui$Internal$Model$finalizeNode,
						rendered.bp,
						rendered.bs,
						rendered.bf,
						$mdgriffith$elm_ui$Internal$Model$Keyed(
							A3($mdgriffith$elm_ui$Internal$Model$addKeyedChildren, 'nearby-element-pls', keyed, rendered.d)),
						$mdgriffith$elm_ui$Internal$Model$NoStyleSheet));
			} else {
				var allStyles = newStyles;
				return $mdgriffith$elm_ui$Internal$Model$Styled(
					{
						kT: A4(
							$mdgriffith$elm_ui$Internal$Model$finalizeNode,
							rendered.bp,
							rendered.bs,
							rendered.bf,
							$mdgriffith$elm_ui$Internal$Model$Keyed(
								A3($mdgriffith$elm_ui$Internal$Model$addKeyedChildren, 'nearby-element-pls', keyed, rendered.d))),
						mK: allStyles
					});
			}
		} else {
			var unkeyedChildren = children.a;
			var _v3 = A3(
				$elm$core$List$foldr,
				gather,
				_Utils_Tuple2(_List_Nil, _List_Nil),
				unkeyedChildren);
			var unkeyed = _v3.a;
			var styles = _v3.b;
			var newStyles = $elm$core$List$isEmpty(styles) ? rendered.mK : _Utils_ap(rendered.mK, styles);
			if (!newStyles.b) {
				return $mdgriffith$elm_ui$Internal$Model$Unstyled(
					A5(
						$mdgriffith$elm_ui$Internal$Model$finalizeNode,
						rendered.bp,
						rendered.bs,
						rendered.bf,
						$mdgriffith$elm_ui$Internal$Model$Unkeyed(
							A2($mdgriffith$elm_ui$Internal$Model$addChildren, unkeyed, rendered.d)),
						$mdgriffith$elm_ui$Internal$Model$NoStyleSheet));
			} else {
				var allStyles = newStyles;
				return $mdgriffith$elm_ui$Internal$Model$Styled(
					{
						kT: A4(
							$mdgriffith$elm_ui$Internal$Model$finalizeNode,
							rendered.bp,
							rendered.bs,
							rendered.bf,
							$mdgriffith$elm_ui$Internal$Model$Unkeyed(
								A2($mdgriffith$elm_ui$Internal$Model$addChildren, unkeyed, rendered.d))),
						mK: allStyles
					});
			}
		}
	});
var $mdgriffith$elm_ui$Internal$Model$Single = F3(
	function (a, b, c) {
		return {$: 3, a: a, b: b, c: c};
	});
var $mdgriffith$elm_ui$Internal$Model$Transform = function (a) {
	return {$: 10, a: a};
};
var $mdgriffith$elm_ui$Internal$Flag$Field = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $elm$core$Bitwise$or = _Bitwise_or;
var $mdgriffith$elm_ui$Internal$Flag$add = F2(
	function (myFlag, _v0) {
		var one = _v0.a;
		var two = _v0.b;
		if (!myFlag.$) {
			var first = myFlag.a;
			return A2($mdgriffith$elm_ui$Internal$Flag$Field, first | one, two);
		} else {
			var second = myFlag.a;
			return A2($mdgriffith$elm_ui$Internal$Flag$Field, one, second | two);
		}
	});
var $mdgriffith$elm_ui$Internal$Model$ChildrenBehind = function (a) {
	return {$: 1, a: a};
};
var $mdgriffith$elm_ui$Internal$Model$ChildrenBehindAndInFront = F2(
	function (a, b) {
		return {$: 3, a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Model$ChildrenInFront = function (a) {
	return {$: 2, a: a};
};
var $mdgriffith$elm_ui$Internal$Model$nearbyElement = F2(
	function (location, elem) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class(
					function () {
						switch (location) {
							case 0:
								return A2(
									$elm$core$String$join,
									' ',
									_List_fromArray(
										[$mdgriffith$elm_ui$Internal$Style$classes.ci, $mdgriffith$elm_ui$Internal$Style$classes.my, $mdgriffith$elm_ui$Internal$Style$classes.jd]));
							case 1:
								return A2(
									$elm$core$String$join,
									' ',
									_List_fromArray(
										[$mdgriffith$elm_ui$Internal$Style$classes.ci, $mdgriffith$elm_ui$Internal$Style$classes.my, $mdgriffith$elm_ui$Internal$Style$classes.jA]));
							case 2:
								return A2(
									$elm$core$String$join,
									' ',
									_List_fromArray(
										[$mdgriffith$elm_ui$Internal$Style$classes.ci, $mdgriffith$elm_ui$Internal$Style$classes.my, $mdgriffith$elm_ui$Internal$Style$classes.lN]));
							case 3:
								return A2(
									$elm$core$String$join,
									' ',
									_List_fromArray(
										[$mdgriffith$elm_ui$Internal$Style$classes.ci, $mdgriffith$elm_ui$Internal$Style$classes.my, $mdgriffith$elm_ui$Internal$Style$classes.lL]));
							case 4:
								return A2(
									$elm$core$String$join,
									' ',
									_List_fromArray(
										[$mdgriffith$elm_ui$Internal$Style$classes.ci, $mdgriffith$elm_ui$Internal$Style$classes.my, $mdgriffith$elm_ui$Internal$Style$classes.kW]));
							default:
								return A2(
									$elm$core$String$join,
									' ',
									_List_fromArray(
										[$mdgriffith$elm_ui$Internal$Style$classes.ci, $mdgriffith$elm_ui$Internal$Style$classes.my, $mdgriffith$elm_ui$Internal$Style$classes.jz]));
						}
					}())
				]),
			_List_fromArray(
				[
					function () {
					switch (elem.$) {
						case 3:
							return $elm$virtual_dom$VirtualDom$text('');
						case 2:
							var str = elem.a;
							return $mdgriffith$elm_ui$Internal$Model$textElement(str);
						case 0:
							var html = elem.a;
							return html($mdgriffith$elm_ui$Internal$Model$asEl);
						default:
							var styled = elem.a;
							return A2(styled.kT, $mdgriffith$elm_ui$Internal$Model$NoStyleSheet, $mdgriffith$elm_ui$Internal$Model$asEl);
					}
				}()
				]));
	});
var $mdgriffith$elm_ui$Internal$Model$addNearbyElement = F3(
	function (location, elem, existing) {
		var nearby = A2($mdgriffith$elm_ui$Internal$Model$nearbyElement, location, elem);
		switch (existing.$) {
			case 0:
				if (location === 5) {
					return $mdgriffith$elm_ui$Internal$Model$ChildrenBehind(
						_List_fromArray(
							[nearby]));
				} else {
					return $mdgriffith$elm_ui$Internal$Model$ChildrenInFront(
						_List_fromArray(
							[nearby]));
				}
			case 1:
				var existingBehind = existing.a;
				if (location === 5) {
					return $mdgriffith$elm_ui$Internal$Model$ChildrenBehind(
						A2($elm$core$List$cons, nearby, existingBehind));
				} else {
					return A2(
						$mdgriffith$elm_ui$Internal$Model$ChildrenBehindAndInFront,
						existingBehind,
						_List_fromArray(
							[nearby]));
				}
			case 2:
				var existingInFront = existing.a;
				if (location === 5) {
					return A2(
						$mdgriffith$elm_ui$Internal$Model$ChildrenBehindAndInFront,
						_List_fromArray(
							[nearby]),
						existingInFront);
				} else {
					return $mdgriffith$elm_ui$Internal$Model$ChildrenInFront(
						A2($elm$core$List$cons, nearby, existingInFront));
				}
			default:
				var existingBehind = existing.a;
				var existingInFront = existing.b;
				if (location === 5) {
					return A2(
						$mdgriffith$elm_ui$Internal$Model$ChildrenBehindAndInFront,
						A2($elm$core$List$cons, nearby, existingBehind),
						existingInFront);
				} else {
					return A2(
						$mdgriffith$elm_ui$Internal$Model$ChildrenBehindAndInFront,
						existingBehind,
						A2($elm$core$List$cons, nearby, existingInFront));
				}
		}
	});
var $mdgriffith$elm_ui$Internal$Model$Embedded = F2(
	function (a, b) {
		return {$: 2, a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Model$NodeName = function (a) {
	return {$: 1, a: a};
};
var $mdgriffith$elm_ui$Internal$Model$addNodeName = F2(
	function (newNode, old) {
		switch (old.$) {
			case 0:
				return $mdgriffith$elm_ui$Internal$Model$NodeName(newNode);
			case 1:
				var name = old.a;
				return A2($mdgriffith$elm_ui$Internal$Model$Embedded, name, newNode);
			default:
				var x = old.a;
				var y = old.b;
				return A2($mdgriffith$elm_ui$Internal$Model$Embedded, x, y);
		}
	});
var $mdgriffith$elm_ui$Internal$Model$alignXName = function (align) {
	switch (align) {
		case 0:
			return $mdgriffith$elm_ui$Internal$Style$classes.ex + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.gD);
		case 2:
			return $mdgriffith$elm_ui$Internal$Style$classes.ex + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.gE);
		default:
			return $mdgriffith$elm_ui$Internal$Style$classes.ex + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.jj);
	}
};
var $mdgriffith$elm_ui$Internal$Model$alignYName = function (align) {
	switch (align) {
		case 0:
			return $mdgriffith$elm_ui$Internal$Style$classes.ey + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.jp);
		case 2:
			return $mdgriffith$elm_ui$Internal$Style$classes.ey + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.ji);
		default:
			return $mdgriffith$elm_ui$Internal$Style$classes.ey + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.jk);
	}
};
var $elm$virtual_dom$VirtualDom$attribute = F2(
	function (key, value) {
		return A2(
			_VirtualDom_attribute,
			_VirtualDom_noOnOrFormAction(key),
			_VirtualDom_noJavaScriptOrHtmlUri(value));
	});
var $mdgriffith$elm_ui$Internal$Model$FullTransform = F4(
	function (a, b, c, d) {
		return {$: 2, a: a, b: b, c: c, d: d};
	});
var $mdgriffith$elm_ui$Internal$Model$Moved = function (a) {
	return {$: 1, a: a};
};
var $mdgriffith$elm_ui$Internal$Model$composeTransformation = F2(
	function (transform, component) {
		switch (transform.$) {
			case 0:
				switch (component.$) {
					case 0:
						var x = component.a;
						return $mdgriffith$elm_ui$Internal$Model$Moved(
							_Utils_Tuple3(x, 0, 0));
					case 1:
						var y = component.a;
						return $mdgriffith$elm_ui$Internal$Model$Moved(
							_Utils_Tuple3(0, y, 0));
					case 2:
						var z = component.a;
						return $mdgriffith$elm_ui$Internal$Model$Moved(
							_Utils_Tuple3(0, 0, z));
					case 3:
						var xyz = component.a;
						return $mdgriffith$elm_ui$Internal$Model$Moved(xyz);
					case 4:
						var xyz = component.a;
						var angle = component.b;
						return A4(
							$mdgriffith$elm_ui$Internal$Model$FullTransform,
							_Utils_Tuple3(0, 0, 0),
							_Utils_Tuple3(1, 1, 1),
							xyz,
							angle);
					default:
						var xyz = component.a;
						return A4(
							$mdgriffith$elm_ui$Internal$Model$FullTransform,
							_Utils_Tuple3(0, 0, 0),
							xyz,
							_Utils_Tuple3(0, 0, 1),
							0);
				}
			case 1:
				var moved = transform.a;
				var x = moved.a;
				var y = moved.b;
				var z = moved.c;
				switch (component.$) {
					case 0:
						var newX = component.a;
						return $mdgriffith$elm_ui$Internal$Model$Moved(
							_Utils_Tuple3(newX, y, z));
					case 1:
						var newY = component.a;
						return $mdgriffith$elm_ui$Internal$Model$Moved(
							_Utils_Tuple3(x, newY, z));
					case 2:
						var newZ = component.a;
						return $mdgriffith$elm_ui$Internal$Model$Moved(
							_Utils_Tuple3(x, y, newZ));
					case 3:
						var xyz = component.a;
						return $mdgriffith$elm_ui$Internal$Model$Moved(xyz);
					case 4:
						var xyz = component.a;
						var angle = component.b;
						return A4(
							$mdgriffith$elm_ui$Internal$Model$FullTransform,
							moved,
							_Utils_Tuple3(1, 1, 1),
							xyz,
							angle);
					default:
						var scale = component.a;
						return A4(
							$mdgriffith$elm_ui$Internal$Model$FullTransform,
							moved,
							scale,
							_Utils_Tuple3(0, 0, 1),
							0);
				}
			default:
				var moved = transform.a;
				var x = moved.a;
				var y = moved.b;
				var z = moved.c;
				var scaled = transform.b;
				var origin = transform.c;
				var angle = transform.d;
				switch (component.$) {
					case 0:
						var newX = component.a;
						return A4(
							$mdgriffith$elm_ui$Internal$Model$FullTransform,
							_Utils_Tuple3(newX, y, z),
							scaled,
							origin,
							angle);
					case 1:
						var newY = component.a;
						return A4(
							$mdgriffith$elm_ui$Internal$Model$FullTransform,
							_Utils_Tuple3(x, newY, z),
							scaled,
							origin,
							angle);
					case 2:
						var newZ = component.a;
						return A4(
							$mdgriffith$elm_ui$Internal$Model$FullTransform,
							_Utils_Tuple3(x, y, newZ),
							scaled,
							origin,
							angle);
					case 3:
						var newMove = component.a;
						return A4($mdgriffith$elm_ui$Internal$Model$FullTransform, newMove, scaled, origin, angle);
					case 4:
						var newOrigin = component.a;
						var newAngle = component.b;
						return A4($mdgriffith$elm_ui$Internal$Model$FullTransform, moved, scaled, newOrigin, newAngle);
					default:
						var newScale = component.a;
						return A4($mdgriffith$elm_ui$Internal$Model$FullTransform, moved, newScale, origin, angle);
				}
		}
	});
var $mdgriffith$elm_ui$Internal$Flag$height = $mdgriffith$elm_ui$Internal$Flag$flag(7);
var $mdgriffith$elm_ui$Internal$Flag$heightContent = $mdgriffith$elm_ui$Internal$Flag$flag(36);
var $mdgriffith$elm_ui$Internal$Flag$merge = F2(
	function (_v0, _v1) {
		var one = _v0.a;
		var two = _v0.b;
		var three = _v1.a;
		var four = _v1.b;
		return A2($mdgriffith$elm_ui$Internal$Flag$Field, one | three, two | four);
	});
var $mdgriffith$elm_ui$Internal$Flag$none = A2($mdgriffith$elm_ui$Internal$Flag$Field, 0, 0);
var $mdgriffith$elm_ui$Internal$Model$renderHeight = function (h) {
	switch (h.$) {
		case 0:
			var px = h.a;
			var val = $elm$core$String$fromInt(px);
			var name = 'height-px-' + val;
			return _Utils_Tuple3(
				$mdgriffith$elm_ui$Internal$Flag$none,
				$mdgriffith$elm_ui$Internal$Style$classes.hn + (' ' + name),
				_List_fromArray(
					[
						A3($mdgriffith$elm_ui$Internal$Model$Single, name, 'height', val + 'px')
					]));
		case 1:
			return _Utils_Tuple3(
				A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$heightContent, $mdgriffith$elm_ui$Internal$Flag$none),
				$mdgriffith$elm_ui$Internal$Style$classes.e$,
				_List_Nil);
		case 2:
			var portion = h.a;
			return (portion === 1) ? _Utils_Tuple3(
				A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$heightFill, $mdgriffith$elm_ui$Internal$Flag$none),
				$mdgriffith$elm_ui$Internal$Style$classes.e0,
				_List_Nil) : _Utils_Tuple3(
				A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$heightFill, $mdgriffith$elm_ui$Internal$Flag$none),
				$mdgriffith$elm_ui$Internal$Style$classes.ho + (' height-fill-' + $elm$core$String$fromInt(portion)),
				_List_fromArray(
					[
						A3(
						$mdgriffith$elm_ui$Internal$Model$Single,
						$mdgriffith$elm_ui$Internal$Style$classes.js + ('.' + ($mdgriffith$elm_ui$Internal$Style$classes.aR + (' > ' + $mdgriffith$elm_ui$Internal$Style$dot(
							'height-fill-' + $elm$core$String$fromInt(portion))))),
						'flex-grow',
						$elm$core$String$fromInt(portion * 100000))
					]));
		case 3:
			var minSize = h.a;
			var len = h.b;
			var cls = 'min-height-' + $elm$core$String$fromInt(minSize);
			var style = A3(
				$mdgriffith$elm_ui$Internal$Model$Single,
				cls,
				'min-height',
				$elm$core$String$fromInt(minSize) + 'px !important');
			var _v1 = $mdgriffith$elm_ui$Internal$Model$renderHeight(len);
			var newFlag = _v1.a;
			var newAttrs = _v1.b;
			var newStyle = _v1.c;
			return _Utils_Tuple3(
				A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$heightBetween, newFlag),
				cls + (' ' + newAttrs),
				A2($elm$core$List$cons, style, newStyle));
		default:
			var maxSize = h.a;
			var len = h.b;
			var cls = 'max-height-' + $elm$core$String$fromInt(maxSize);
			var style = A3(
				$mdgriffith$elm_ui$Internal$Model$Single,
				cls,
				'max-height',
				$elm$core$String$fromInt(maxSize) + 'px');
			var _v2 = $mdgriffith$elm_ui$Internal$Model$renderHeight(len);
			var newFlag = _v2.a;
			var newAttrs = _v2.b;
			var newStyle = _v2.c;
			return _Utils_Tuple3(
				A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$heightBetween, newFlag),
				cls + (' ' + newAttrs),
				A2($elm$core$List$cons, style, newStyle));
	}
};
var $mdgriffith$elm_ui$Internal$Flag$widthContent = $mdgriffith$elm_ui$Internal$Flag$flag(38);
var $mdgriffith$elm_ui$Internal$Model$renderWidth = function (w) {
	switch (w.$) {
		case 0:
			var px = w.a;
			return _Utils_Tuple3(
				$mdgriffith$elm_ui$Internal$Flag$none,
				$mdgriffith$elm_ui$Internal$Style$classes.i6 + (' width-px-' + $elm$core$String$fromInt(px)),
				_List_fromArray(
					[
						A3(
						$mdgriffith$elm_ui$Internal$Model$Single,
						'width-px-' + $elm$core$String$fromInt(px),
						'width',
						$elm$core$String$fromInt(px) + 'px')
					]));
		case 1:
			return _Utils_Tuple3(
				A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$widthContent, $mdgriffith$elm_ui$Internal$Flag$none),
				$mdgriffith$elm_ui$Internal$Style$classes.gp,
				_List_Nil);
		case 2:
			var portion = w.a;
			return (portion === 1) ? _Utils_Tuple3(
				A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$widthFill, $mdgriffith$elm_ui$Internal$Flag$none),
				$mdgriffith$elm_ui$Internal$Style$classes.gq,
				_List_Nil) : _Utils_Tuple3(
				A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$widthFill, $mdgriffith$elm_ui$Internal$Flag$none),
				$mdgriffith$elm_ui$Internal$Style$classes.i7 + (' width-fill-' + $elm$core$String$fromInt(portion)),
				_List_fromArray(
					[
						A3(
						$mdgriffith$elm_ui$Internal$Model$Single,
						$mdgriffith$elm_ui$Internal$Style$classes.js + ('.' + ($mdgriffith$elm_ui$Internal$Style$classes.iy + (' > ' + $mdgriffith$elm_ui$Internal$Style$dot(
							'width-fill-' + $elm$core$String$fromInt(portion))))),
						'flex-grow',
						$elm$core$String$fromInt(portion * 100000))
					]));
		case 3:
			var minSize = w.a;
			var len = w.b;
			var cls = 'min-width-' + $elm$core$String$fromInt(minSize);
			var style = A3(
				$mdgriffith$elm_ui$Internal$Model$Single,
				cls,
				'min-width',
				$elm$core$String$fromInt(minSize) + 'px');
			var _v1 = $mdgriffith$elm_ui$Internal$Model$renderWidth(len);
			var newFlag = _v1.a;
			var newAttrs = _v1.b;
			var newStyle = _v1.c;
			return _Utils_Tuple3(
				A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$widthBetween, newFlag),
				cls + (' ' + newAttrs),
				A2($elm$core$List$cons, style, newStyle));
		default:
			var maxSize = w.a;
			var len = w.b;
			var cls = 'max-width-' + $elm$core$String$fromInt(maxSize);
			var style = A3(
				$mdgriffith$elm_ui$Internal$Model$Single,
				cls,
				'max-width',
				$elm$core$String$fromInt(maxSize) + 'px');
			var _v2 = $mdgriffith$elm_ui$Internal$Model$renderWidth(len);
			var newFlag = _v2.a;
			var newAttrs = _v2.b;
			var newStyle = _v2.c;
			return _Utils_Tuple3(
				A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$widthBetween, newFlag),
				cls + (' ' + newAttrs),
				A2($elm$core$List$cons, style, newStyle));
	}
};
var $mdgriffith$elm_ui$Internal$Flag$borderWidth = $mdgriffith$elm_ui$Internal$Flag$flag(27);
var $mdgriffith$elm_ui$Internal$Model$skippable = F2(
	function (flag, style) {
		if (_Utils_eq(flag, $mdgriffith$elm_ui$Internal$Flag$borderWidth)) {
			if (style.$ === 3) {
				var val = style.c;
				switch (val) {
					case '0px':
						return true;
					case '1px':
						return true;
					case '2px':
						return true;
					case '3px':
						return true;
					case '4px':
						return true;
					case '5px':
						return true;
					case '6px':
						return true;
					default:
						return false;
				}
			} else {
				return false;
			}
		} else {
			switch (style.$) {
				case 2:
					var i = style.a;
					return (i >= 8) && (i <= 32);
				case 7:
					var name = style.a;
					var t = style.b;
					var r = style.c;
					var b = style.d;
					var l = style.e;
					return _Utils_eq(t, b) && (_Utils_eq(t, r) && (_Utils_eq(t, l) && ((t >= 0) && (t <= 24))));
				default:
					return false;
			}
		}
	});
var $mdgriffith$elm_ui$Internal$Flag$width = $mdgriffith$elm_ui$Internal$Flag$flag(6);
var $mdgriffith$elm_ui$Internal$Flag$xAlign = $mdgriffith$elm_ui$Internal$Flag$flag(30);
var $mdgriffith$elm_ui$Internal$Flag$yAlign = $mdgriffith$elm_ui$Internal$Flag$flag(29);
var $mdgriffith$elm_ui$Internal$Model$gatherAttrRecursive = F8(
	function (classes, node, has, transform, styles, attrs, children, elementAttrs) {
		gatherAttrRecursive:
		while (true) {
			if (!elementAttrs.b) {
				var _v1 = $mdgriffith$elm_ui$Internal$Model$transformClass(transform);
				if (_v1.$ === 1) {
					return {
						bf: A2(
							$elm$core$List$cons,
							$elm$html$Html$Attributes$class(classes),
							attrs),
						d: children,
						bp: has,
						bs: node,
						mK: styles
					};
				} else {
					var _class = _v1.a;
					return {
						bf: A2(
							$elm$core$List$cons,
							$elm$html$Html$Attributes$class(classes + (' ' + _class)),
							attrs),
						d: children,
						bp: has,
						bs: node,
						mK: A2(
							$elm$core$List$cons,
							$mdgriffith$elm_ui$Internal$Model$Transform(transform),
							styles)
					};
				}
			} else {
				var attribute = elementAttrs.a;
				var remaining = elementAttrs.b;
				switch (attribute.$) {
					case 0:
						var $temp$classes = classes,
							$temp$node = node,
							$temp$has = has,
							$temp$transform = transform,
							$temp$styles = styles,
							$temp$attrs = attrs,
							$temp$children = children,
							$temp$elementAttrs = remaining;
						classes = $temp$classes;
						node = $temp$node;
						has = $temp$has;
						transform = $temp$transform;
						styles = $temp$styles;
						attrs = $temp$attrs;
						children = $temp$children;
						elementAttrs = $temp$elementAttrs;
						continue gatherAttrRecursive;
					case 3:
						var flag = attribute.a;
						var exactClassName = attribute.b;
						if (A2($mdgriffith$elm_ui$Internal$Flag$present, flag, has)) {
							var $temp$classes = classes,
								$temp$node = node,
								$temp$has = has,
								$temp$transform = transform,
								$temp$styles = styles,
								$temp$attrs = attrs,
								$temp$children = children,
								$temp$elementAttrs = remaining;
							classes = $temp$classes;
							node = $temp$node;
							has = $temp$has;
							transform = $temp$transform;
							styles = $temp$styles;
							attrs = $temp$attrs;
							children = $temp$children;
							elementAttrs = $temp$elementAttrs;
							continue gatherAttrRecursive;
						} else {
							var $temp$classes = exactClassName + (' ' + classes),
								$temp$node = node,
								$temp$has = A2($mdgriffith$elm_ui$Internal$Flag$add, flag, has),
								$temp$transform = transform,
								$temp$styles = styles,
								$temp$attrs = attrs,
								$temp$children = children,
								$temp$elementAttrs = remaining;
							classes = $temp$classes;
							node = $temp$node;
							has = $temp$has;
							transform = $temp$transform;
							styles = $temp$styles;
							attrs = $temp$attrs;
							children = $temp$children;
							elementAttrs = $temp$elementAttrs;
							continue gatherAttrRecursive;
						}
					case 1:
						var actualAttribute = attribute.a;
						var $temp$classes = classes,
							$temp$node = node,
							$temp$has = has,
							$temp$transform = transform,
							$temp$styles = styles,
							$temp$attrs = A2($elm$core$List$cons, actualAttribute, attrs),
							$temp$children = children,
							$temp$elementAttrs = remaining;
						classes = $temp$classes;
						node = $temp$node;
						has = $temp$has;
						transform = $temp$transform;
						styles = $temp$styles;
						attrs = $temp$attrs;
						children = $temp$children;
						elementAttrs = $temp$elementAttrs;
						continue gatherAttrRecursive;
					case 4:
						var flag = attribute.a;
						var style = attribute.b;
						if (A2($mdgriffith$elm_ui$Internal$Flag$present, flag, has)) {
							var $temp$classes = classes,
								$temp$node = node,
								$temp$has = has,
								$temp$transform = transform,
								$temp$styles = styles,
								$temp$attrs = attrs,
								$temp$children = children,
								$temp$elementAttrs = remaining;
							classes = $temp$classes;
							node = $temp$node;
							has = $temp$has;
							transform = $temp$transform;
							styles = $temp$styles;
							attrs = $temp$attrs;
							children = $temp$children;
							elementAttrs = $temp$elementAttrs;
							continue gatherAttrRecursive;
						} else {
							if (A2($mdgriffith$elm_ui$Internal$Model$skippable, flag, style)) {
								var $temp$classes = $mdgriffith$elm_ui$Internal$Model$getStyleName(style) + (' ' + classes),
									$temp$node = node,
									$temp$has = A2($mdgriffith$elm_ui$Internal$Flag$add, flag, has),
									$temp$transform = transform,
									$temp$styles = styles,
									$temp$attrs = attrs,
									$temp$children = children,
									$temp$elementAttrs = remaining;
								classes = $temp$classes;
								node = $temp$node;
								has = $temp$has;
								transform = $temp$transform;
								styles = $temp$styles;
								attrs = $temp$attrs;
								children = $temp$children;
								elementAttrs = $temp$elementAttrs;
								continue gatherAttrRecursive;
							} else {
								var $temp$classes = $mdgriffith$elm_ui$Internal$Model$getStyleName(style) + (' ' + classes),
									$temp$node = node,
									$temp$has = A2($mdgriffith$elm_ui$Internal$Flag$add, flag, has),
									$temp$transform = transform,
									$temp$styles = A2($elm$core$List$cons, style, styles),
									$temp$attrs = attrs,
									$temp$children = children,
									$temp$elementAttrs = remaining;
								classes = $temp$classes;
								node = $temp$node;
								has = $temp$has;
								transform = $temp$transform;
								styles = $temp$styles;
								attrs = $temp$attrs;
								children = $temp$children;
								elementAttrs = $temp$elementAttrs;
								continue gatherAttrRecursive;
							}
						}
					case 10:
						var flag = attribute.a;
						var component = attribute.b;
						var $temp$classes = classes,
							$temp$node = node,
							$temp$has = A2($mdgriffith$elm_ui$Internal$Flag$add, flag, has),
							$temp$transform = A2($mdgriffith$elm_ui$Internal$Model$composeTransformation, transform, component),
							$temp$styles = styles,
							$temp$attrs = attrs,
							$temp$children = children,
							$temp$elementAttrs = remaining;
						classes = $temp$classes;
						node = $temp$node;
						has = $temp$has;
						transform = $temp$transform;
						styles = $temp$styles;
						attrs = $temp$attrs;
						children = $temp$children;
						elementAttrs = $temp$elementAttrs;
						continue gatherAttrRecursive;
					case 7:
						var width = attribute.a;
						if (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$width, has)) {
							var $temp$classes = classes,
								$temp$node = node,
								$temp$has = has,
								$temp$transform = transform,
								$temp$styles = styles,
								$temp$attrs = attrs,
								$temp$children = children,
								$temp$elementAttrs = remaining;
							classes = $temp$classes;
							node = $temp$node;
							has = $temp$has;
							transform = $temp$transform;
							styles = $temp$styles;
							attrs = $temp$attrs;
							children = $temp$children;
							elementAttrs = $temp$elementAttrs;
							continue gatherAttrRecursive;
						} else {
							switch (width.$) {
								case 0:
									var px = width.a;
									var $temp$classes = ($mdgriffith$elm_ui$Internal$Style$classes.i6 + (' width-px-' + $elm$core$String$fromInt(px))) + (' ' + classes),
										$temp$node = node,
										$temp$has = A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$width, has),
										$temp$transform = transform,
										$temp$styles = A2(
										$elm$core$List$cons,
										A3(
											$mdgriffith$elm_ui$Internal$Model$Single,
											'width-px-' + $elm$core$String$fromInt(px),
											'width',
											$elm$core$String$fromInt(px) + 'px'),
										styles),
										$temp$attrs = attrs,
										$temp$children = children,
										$temp$elementAttrs = remaining;
									classes = $temp$classes;
									node = $temp$node;
									has = $temp$has;
									transform = $temp$transform;
									styles = $temp$styles;
									attrs = $temp$attrs;
									children = $temp$children;
									elementAttrs = $temp$elementAttrs;
									continue gatherAttrRecursive;
								case 1:
									var $temp$classes = classes + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.gp),
										$temp$node = node,
										$temp$has = A2(
										$mdgriffith$elm_ui$Internal$Flag$add,
										$mdgriffith$elm_ui$Internal$Flag$widthContent,
										A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$width, has)),
										$temp$transform = transform,
										$temp$styles = styles,
										$temp$attrs = attrs,
										$temp$children = children,
										$temp$elementAttrs = remaining;
									classes = $temp$classes;
									node = $temp$node;
									has = $temp$has;
									transform = $temp$transform;
									styles = $temp$styles;
									attrs = $temp$attrs;
									children = $temp$children;
									elementAttrs = $temp$elementAttrs;
									continue gatherAttrRecursive;
								case 2:
									var portion = width.a;
									if (portion === 1) {
										var $temp$classes = classes + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.gq),
											$temp$node = node,
											$temp$has = A2(
											$mdgriffith$elm_ui$Internal$Flag$add,
											$mdgriffith$elm_ui$Internal$Flag$widthFill,
											A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$width, has)),
											$temp$transform = transform,
											$temp$styles = styles,
											$temp$attrs = attrs,
											$temp$children = children,
											$temp$elementAttrs = remaining;
										classes = $temp$classes;
										node = $temp$node;
										has = $temp$has;
										transform = $temp$transform;
										styles = $temp$styles;
										attrs = $temp$attrs;
										children = $temp$children;
										elementAttrs = $temp$elementAttrs;
										continue gatherAttrRecursive;
									} else {
										var $temp$classes = classes + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.i7 + (' width-fill-' + $elm$core$String$fromInt(portion)))),
											$temp$node = node,
											$temp$has = A2(
											$mdgriffith$elm_ui$Internal$Flag$add,
											$mdgriffith$elm_ui$Internal$Flag$widthFill,
											A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$width, has)),
											$temp$transform = transform,
											$temp$styles = A2(
											$elm$core$List$cons,
											A3(
												$mdgriffith$elm_ui$Internal$Model$Single,
												$mdgriffith$elm_ui$Internal$Style$classes.js + ('.' + ($mdgriffith$elm_ui$Internal$Style$classes.iy + (' > ' + $mdgriffith$elm_ui$Internal$Style$dot(
													'width-fill-' + $elm$core$String$fromInt(portion))))),
												'flex-grow',
												$elm$core$String$fromInt(portion * 100000)),
											styles),
											$temp$attrs = attrs,
											$temp$children = children,
											$temp$elementAttrs = remaining;
										classes = $temp$classes;
										node = $temp$node;
										has = $temp$has;
										transform = $temp$transform;
										styles = $temp$styles;
										attrs = $temp$attrs;
										children = $temp$children;
										elementAttrs = $temp$elementAttrs;
										continue gatherAttrRecursive;
									}
								default:
									var _v4 = $mdgriffith$elm_ui$Internal$Model$renderWidth(width);
									var addToFlags = _v4.a;
									var newClass = _v4.b;
									var newStyles = _v4.c;
									var $temp$classes = classes + (' ' + newClass),
										$temp$node = node,
										$temp$has = A2(
										$mdgriffith$elm_ui$Internal$Flag$merge,
										addToFlags,
										A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$width, has)),
										$temp$transform = transform,
										$temp$styles = _Utils_ap(newStyles, styles),
										$temp$attrs = attrs,
										$temp$children = children,
										$temp$elementAttrs = remaining;
									classes = $temp$classes;
									node = $temp$node;
									has = $temp$has;
									transform = $temp$transform;
									styles = $temp$styles;
									attrs = $temp$attrs;
									children = $temp$children;
									elementAttrs = $temp$elementAttrs;
									continue gatherAttrRecursive;
							}
						}
					case 8:
						var height = attribute.a;
						if (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$height, has)) {
							var $temp$classes = classes,
								$temp$node = node,
								$temp$has = has,
								$temp$transform = transform,
								$temp$styles = styles,
								$temp$attrs = attrs,
								$temp$children = children,
								$temp$elementAttrs = remaining;
							classes = $temp$classes;
							node = $temp$node;
							has = $temp$has;
							transform = $temp$transform;
							styles = $temp$styles;
							attrs = $temp$attrs;
							children = $temp$children;
							elementAttrs = $temp$elementAttrs;
							continue gatherAttrRecursive;
						} else {
							switch (height.$) {
								case 0:
									var px = height.a;
									var val = $elm$core$String$fromInt(px) + 'px';
									var name = 'height-px-' + val;
									var $temp$classes = $mdgriffith$elm_ui$Internal$Style$classes.hn + (' ' + (name + (' ' + classes))),
										$temp$node = node,
										$temp$has = A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$height, has),
										$temp$transform = transform,
										$temp$styles = A2(
										$elm$core$List$cons,
										A3($mdgriffith$elm_ui$Internal$Model$Single, name, 'height ', val),
										styles),
										$temp$attrs = attrs,
										$temp$children = children,
										$temp$elementAttrs = remaining;
									classes = $temp$classes;
									node = $temp$node;
									has = $temp$has;
									transform = $temp$transform;
									styles = $temp$styles;
									attrs = $temp$attrs;
									children = $temp$children;
									elementAttrs = $temp$elementAttrs;
									continue gatherAttrRecursive;
								case 1:
									var $temp$classes = $mdgriffith$elm_ui$Internal$Style$classes.e$ + (' ' + classes),
										$temp$node = node,
										$temp$has = A2(
										$mdgriffith$elm_ui$Internal$Flag$add,
										$mdgriffith$elm_ui$Internal$Flag$heightContent,
										A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$height, has)),
										$temp$transform = transform,
										$temp$styles = styles,
										$temp$attrs = attrs,
										$temp$children = children,
										$temp$elementAttrs = remaining;
									classes = $temp$classes;
									node = $temp$node;
									has = $temp$has;
									transform = $temp$transform;
									styles = $temp$styles;
									attrs = $temp$attrs;
									children = $temp$children;
									elementAttrs = $temp$elementAttrs;
									continue gatherAttrRecursive;
								case 2:
									var portion = height.a;
									if (portion === 1) {
										var $temp$classes = $mdgriffith$elm_ui$Internal$Style$classes.e0 + (' ' + classes),
											$temp$node = node,
											$temp$has = A2(
											$mdgriffith$elm_ui$Internal$Flag$add,
											$mdgriffith$elm_ui$Internal$Flag$heightFill,
											A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$height, has)),
											$temp$transform = transform,
											$temp$styles = styles,
											$temp$attrs = attrs,
											$temp$children = children,
											$temp$elementAttrs = remaining;
										classes = $temp$classes;
										node = $temp$node;
										has = $temp$has;
										transform = $temp$transform;
										styles = $temp$styles;
										attrs = $temp$attrs;
										children = $temp$children;
										elementAttrs = $temp$elementAttrs;
										continue gatherAttrRecursive;
									} else {
										var $temp$classes = classes + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.ho + (' height-fill-' + $elm$core$String$fromInt(portion)))),
											$temp$node = node,
											$temp$has = A2(
											$mdgriffith$elm_ui$Internal$Flag$add,
											$mdgriffith$elm_ui$Internal$Flag$heightFill,
											A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$height, has)),
											$temp$transform = transform,
											$temp$styles = A2(
											$elm$core$List$cons,
											A3(
												$mdgriffith$elm_ui$Internal$Model$Single,
												$mdgriffith$elm_ui$Internal$Style$classes.js + ('.' + ($mdgriffith$elm_ui$Internal$Style$classes.aR + (' > ' + $mdgriffith$elm_ui$Internal$Style$dot(
													'height-fill-' + $elm$core$String$fromInt(portion))))),
												'flex-grow',
												$elm$core$String$fromInt(portion * 100000)),
											styles),
											$temp$attrs = attrs,
											$temp$children = children,
											$temp$elementAttrs = remaining;
										classes = $temp$classes;
										node = $temp$node;
										has = $temp$has;
										transform = $temp$transform;
										styles = $temp$styles;
										attrs = $temp$attrs;
										children = $temp$children;
										elementAttrs = $temp$elementAttrs;
										continue gatherAttrRecursive;
									}
								default:
									var _v6 = $mdgriffith$elm_ui$Internal$Model$renderHeight(height);
									var addToFlags = _v6.a;
									var newClass = _v6.b;
									var newStyles = _v6.c;
									var $temp$classes = classes + (' ' + newClass),
										$temp$node = node,
										$temp$has = A2(
										$mdgriffith$elm_ui$Internal$Flag$merge,
										addToFlags,
										A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$height, has)),
										$temp$transform = transform,
										$temp$styles = _Utils_ap(newStyles, styles),
										$temp$attrs = attrs,
										$temp$children = children,
										$temp$elementAttrs = remaining;
									classes = $temp$classes;
									node = $temp$node;
									has = $temp$has;
									transform = $temp$transform;
									styles = $temp$styles;
									attrs = $temp$attrs;
									children = $temp$children;
									elementAttrs = $temp$elementAttrs;
									continue gatherAttrRecursive;
							}
						}
					case 2:
						var description = attribute.a;
						switch (description.$) {
							case 0:
								var $temp$classes = classes,
									$temp$node = A2($mdgriffith$elm_ui$Internal$Model$addNodeName, 'main', node),
									$temp$has = has,
									$temp$transform = transform,
									$temp$styles = styles,
									$temp$attrs = attrs,
									$temp$children = children,
									$temp$elementAttrs = remaining;
								classes = $temp$classes;
								node = $temp$node;
								has = $temp$has;
								transform = $temp$transform;
								styles = $temp$styles;
								attrs = $temp$attrs;
								children = $temp$children;
								elementAttrs = $temp$elementAttrs;
								continue gatherAttrRecursive;
							case 1:
								var $temp$classes = classes,
									$temp$node = A2($mdgriffith$elm_ui$Internal$Model$addNodeName, 'nav', node),
									$temp$has = has,
									$temp$transform = transform,
									$temp$styles = styles,
									$temp$attrs = attrs,
									$temp$children = children,
									$temp$elementAttrs = remaining;
								classes = $temp$classes;
								node = $temp$node;
								has = $temp$has;
								transform = $temp$transform;
								styles = $temp$styles;
								attrs = $temp$attrs;
								children = $temp$children;
								elementAttrs = $temp$elementAttrs;
								continue gatherAttrRecursive;
							case 2:
								var $temp$classes = classes,
									$temp$node = A2($mdgriffith$elm_ui$Internal$Model$addNodeName, 'footer', node),
									$temp$has = has,
									$temp$transform = transform,
									$temp$styles = styles,
									$temp$attrs = attrs,
									$temp$children = children,
									$temp$elementAttrs = remaining;
								classes = $temp$classes;
								node = $temp$node;
								has = $temp$has;
								transform = $temp$transform;
								styles = $temp$styles;
								attrs = $temp$attrs;
								children = $temp$children;
								elementAttrs = $temp$elementAttrs;
								continue gatherAttrRecursive;
							case 3:
								var $temp$classes = classes,
									$temp$node = A2($mdgriffith$elm_ui$Internal$Model$addNodeName, 'aside', node),
									$temp$has = has,
									$temp$transform = transform,
									$temp$styles = styles,
									$temp$attrs = attrs,
									$temp$children = children,
									$temp$elementAttrs = remaining;
								classes = $temp$classes;
								node = $temp$node;
								has = $temp$has;
								transform = $temp$transform;
								styles = $temp$styles;
								attrs = $temp$attrs;
								children = $temp$children;
								elementAttrs = $temp$elementAttrs;
								continue gatherAttrRecursive;
							case 4:
								var i = description.a;
								if (i <= 1) {
									var $temp$classes = classes,
										$temp$node = A2($mdgriffith$elm_ui$Internal$Model$addNodeName, 'h1', node),
										$temp$has = has,
										$temp$transform = transform,
										$temp$styles = styles,
										$temp$attrs = attrs,
										$temp$children = children,
										$temp$elementAttrs = remaining;
									classes = $temp$classes;
									node = $temp$node;
									has = $temp$has;
									transform = $temp$transform;
									styles = $temp$styles;
									attrs = $temp$attrs;
									children = $temp$children;
									elementAttrs = $temp$elementAttrs;
									continue gatherAttrRecursive;
								} else {
									if (i < 7) {
										var $temp$classes = classes,
											$temp$node = A2(
											$mdgriffith$elm_ui$Internal$Model$addNodeName,
											'h' + $elm$core$String$fromInt(i),
											node),
											$temp$has = has,
											$temp$transform = transform,
											$temp$styles = styles,
											$temp$attrs = attrs,
											$temp$children = children,
											$temp$elementAttrs = remaining;
										classes = $temp$classes;
										node = $temp$node;
										has = $temp$has;
										transform = $temp$transform;
										styles = $temp$styles;
										attrs = $temp$attrs;
										children = $temp$children;
										elementAttrs = $temp$elementAttrs;
										continue gatherAttrRecursive;
									} else {
										var $temp$classes = classes,
											$temp$node = A2($mdgriffith$elm_ui$Internal$Model$addNodeName, 'h6', node),
											$temp$has = has,
											$temp$transform = transform,
											$temp$styles = styles,
											$temp$attrs = attrs,
											$temp$children = children,
											$temp$elementAttrs = remaining;
										classes = $temp$classes;
										node = $temp$node;
										has = $temp$has;
										transform = $temp$transform;
										styles = $temp$styles;
										attrs = $temp$attrs;
										children = $temp$children;
										elementAttrs = $temp$elementAttrs;
										continue gatherAttrRecursive;
									}
								}
							case 9:
								var $temp$classes = classes,
									$temp$node = node,
									$temp$has = has,
									$temp$transform = transform,
									$temp$styles = styles,
									$temp$attrs = attrs,
									$temp$children = children,
									$temp$elementAttrs = remaining;
								classes = $temp$classes;
								node = $temp$node;
								has = $temp$has;
								transform = $temp$transform;
								styles = $temp$styles;
								attrs = $temp$attrs;
								children = $temp$children;
								elementAttrs = $temp$elementAttrs;
								continue gatherAttrRecursive;
							case 8:
								var $temp$classes = classes,
									$temp$node = node,
									$temp$has = has,
									$temp$transform = transform,
									$temp$styles = styles,
									$temp$attrs = A2(
									$elm$core$List$cons,
									A2($elm$virtual_dom$VirtualDom$attribute, 'role', 'button'),
									attrs),
									$temp$children = children,
									$temp$elementAttrs = remaining;
								classes = $temp$classes;
								node = $temp$node;
								has = $temp$has;
								transform = $temp$transform;
								styles = $temp$styles;
								attrs = $temp$attrs;
								children = $temp$children;
								elementAttrs = $temp$elementAttrs;
								continue gatherAttrRecursive;
							case 5:
								var label = description.a;
								var $temp$classes = classes,
									$temp$node = node,
									$temp$has = has,
									$temp$transform = transform,
									$temp$styles = styles,
									$temp$attrs = A2(
									$elm$core$List$cons,
									A2($elm$virtual_dom$VirtualDom$attribute, 'aria-label', label),
									attrs),
									$temp$children = children,
									$temp$elementAttrs = remaining;
								classes = $temp$classes;
								node = $temp$node;
								has = $temp$has;
								transform = $temp$transform;
								styles = $temp$styles;
								attrs = $temp$attrs;
								children = $temp$children;
								elementAttrs = $temp$elementAttrs;
								continue gatherAttrRecursive;
							case 6:
								var $temp$classes = classes,
									$temp$node = node,
									$temp$has = has,
									$temp$transform = transform,
									$temp$styles = styles,
									$temp$attrs = A2(
									$elm$core$List$cons,
									A2($elm$virtual_dom$VirtualDom$attribute, 'aria-live', 'polite'),
									attrs),
									$temp$children = children,
									$temp$elementAttrs = remaining;
								classes = $temp$classes;
								node = $temp$node;
								has = $temp$has;
								transform = $temp$transform;
								styles = $temp$styles;
								attrs = $temp$attrs;
								children = $temp$children;
								elementAttrs = $temp$elementAttrs;
								continue gatherAttrRecursive;
							default:
								var $temp$classes = classes,
									$temp$node = node,
									$temp$has = has,
									$temp$transform = transform,
									$temp$styles = styles,
									$temp$attrs = A2(
									$elm$core$List$cons,
									A2($elm$virtual_dom$VirtualDom$attribute, 'aria-live', 'assertive'),
									attrs),
									$temp$children = children,
									$temp$elementAttrs = remaining;
								classes = $temp$classes;
								node = $temp$node;
								has = $temp$has;
								transform = $temp$transform;
								styles = $temp$styles;
								attrs = $temp$attrs;
								children = $temp$children;
								elementAttrs = $temp$elementAttrs;
								continue gatherAttrRecursive;
						}
					case 9:
						var location = attribute.a;
						var elem = attribute.b;
						var newStyles = function () {
							switch (elem.$) {
								case 3:
									return styles;
								case 2:
									var str = elem.a;
									return styles;
								case 0:
									var html = elem.a;
									return styles;
								default:
									var styled = elem.a;
									return _Utils_ap(styles, styled.mK);
							}
						}();
						var $temp$classes = classes,
							$temp$node = node,
							$temp$has = has,
							$temp$transform = transform,
							$temp$styles = newStyles,
							$temp$attrs = attrs,
							$temp$children = A3($mdgriffith$elm_ui$Internal$Model$addNearbyElement, location, elem, children),
							$temp$elementAttrs = remaining;
						classes = $temp$classes;
						node = $temp$node;
						has = $temp$has;
						transform = $temp$transform;
						styles = $temp$styles;
						attrs = $temp$attrs;
						children = $temp$children;
						elementAttrs = $temp$elementAttrs;
						continue gatherAttrRecursive;
					case 6:
						var x = attribute.a;
						if (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$xAlign, has)) {
							var $temp$classes = classes,
								$temp$node = node,
								$temp$has = has,
								$temp$transform = transform,
								$temp$styles = styles,
								$temp$attrs = attrs,
								$temp$children = children,
								$temp$elementAttrs = remaining;
							classes = $temp$classes;
							node = $temp$node;
							has = $temp$has;
							transform = $temp$transform;
							styles = $temp$styles;
							attrs = $temp$attrs;
							children = $temp$children;
							elementAttrs = $temp$elementAttrs;
							continue gatherAttrRecursive;
						} else {
							var $temp$classes = $mdgriffith$elm_ui$Internal$Model$alignXName(x) + (' ' + classes),
								$temp$node = node,
								$temp$has = function (flags) {
								switch (x) {
									case 1:
										return A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$centerX, flags);
									case 2:
										return A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$alignRight, flags);
									default:
										return flags;
								}
							}(
								A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$xAlign, has)),
								$temp$transform = transform,
								$temp$styles = styles,
								$temp$attrs = attrs,
								$temp$children = children,
								$temp$elementAttrs = remaining;
							classes = $temp$classes;
							node = $temp$node;
							has = $temp$has;
							transform = $temp$transform;
							styles = $temp$styles;
							attrs = $temp$attrs;
							children = $temp$children;
							elementAttrs = $temp$elementAttrs;
							continue gatherAttrRecursive;
						}
					default:
						var y = attribute.a;
						if (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$yAlign, has)) {
							var $temp$classes = classes,
								$temp$node = node,
								$temp$has = has,
								$temp$transform = transform,
								$temp$styles = styles,
								$temp$attrs = attrs,
								$temp$children = children,
								$temp$elementAttrs = remaining;
							classes = $temp$classes;
							node = $temp$node;
							has = $temp$has;
							transform = $temp$transform;
							styles = $temp$styles;
							attrs = $temp$attrs;
							children = $temp$children;
							elementAttrs = $temp$elementAttrs;
							continue gatherAttrRecursive;
						} else {
							var $temp$classes = $mdgriffith$elm_ui$Internal$Model$alignYName(y) + (' ' + classes),
								$temp$node = node,
								$temp$has = function (flags) {
								switch (y) {
									case 1:
										return A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$centerY, flags);
									case 2:
										return A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$alignBottom, flags);
									default:
										return flags;
								}
							}(
								A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$yAlign, has)),
								$temp$transform = transform,
								$temp$styles = styles,
								$temp$attrs = attrs,
								$temp$children = children,
								$temp$elementAttrs = remaining;
							classes = $temp$classes;
							node = $temp$node;
							has = $temp$has;
							transform = $temp$transform;
							styles = $temp$styles;
							attrs = $temp$attrs;
							children = $temp$children;
							elementAttrs = $temp$elementAttrs;
							continue gatherAttrRecursive;
						}
				}
			}
		}
	});
var $mdgriffith$elm_ui$Internal$Model$Untransformed = {$: 0};
var $mdgriffith$elm_ui$Internal$Model$untransformed = $mdgriffith$elm_ui$Internal$Model$Untransformed;
var $mdgriffith$elm_ui$Internal$Model$element = F4(
	function (context, node, attributes, children) {
		return A3(
			$mdgriffith$elm_ui$Internal$Model$createElement,
			context,
			children,
			A8(
				$mdgriffith$elm_ui$Internal$Model$gatherAttrRecursive,
				$mdgriffith$elm_ui$Internal$Model$contextClasses(context),
				node,
				$mdgriffith$elm_ui$Internal$Flag$none,
				$mdgriffith$elm_ui$Internal$Model$untransformed,
				_List_Nil,
				_List_Nil,
				$mdgriffith$elm_ui$Internal$Model$NoNearbyChildren,
				$elm$core$List$reverse(attributes)));
	});
var $mdgriffith$elm_ui$Internal$Model$Height = function (a) {
	return {$: 8, a: a};
};
var $mdgriffith$elm_ui$Element$height = $mdgriffith$elm_ui$Internal$Model$Height;
var $mdgriffith$elm_ui$Internal$Model$Content = {$: 1};
var $mdgriffith$elm_ui$Element$shrink = $mdgriffith$elm_ui$Internal$Model$Content;
var $mdgriffith$elm_ui$Internal$Model$Width = function (a) {
	return {$: 7, a: a};
};
var $mdgriffith$elm_ui$Element$width = $mdgriffith$elm_ui$Internal$Model$Width;
var $mdgriffith$elm_ui$Element$el = F2(
	function (attrs, child) {
		return A4(
			$mdgriffith$elm_ui$Internal$Model$element,
			$mdgriffith$elm_ui$Internal$Model$asEl,
			$mdgriffith$elm_ui$Internal$Model$div,
			A2(
				$elm$core$List$cons,
				$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink),
				A2(
					$elm$core$List$cons,
					$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink),
					attrs)),
			$mdgriffith$elm_ui$Internal$Model$Unkeyed(
				_List_fromArray(
					[child])));
	});
var $mdgriffith$elm_ui$Internal$Model$Fill = function (a) {
	return {$: 2, a: a};
};
var $mdgriffith$elm_ui$Element$fill = $mdgriffith$elm_ui$Internal$Model$Fill(1);
var $mdgriffith$elm_ui$Internal$Model$Text = function (a) {
	return {$: 2, a: a};
};
var $mdgriffith$elm_ui$Element$text = function (content) {
	return $mdgriffith$elm_ui$Internal$Model$Text(content);
};
var $PaackEng$elm_ui_dropdown$Dropdown$basic = function (_v0) {
	var itemsFromModel = _v0.ld;
	var selectionFromModel = _v0.mu;
	var dropdownMsg = _v0.kp;
	var onSelectMsg = _v0.lO;
	var itemToPrompt = _v0.lc;
	var itemToElement = _v0.lb;
	return {
		jW: $mdgriffith$elm_ui$Element$text('▲'),
		bR: _List_Nil,
		kp: dropdownMsg,
		az: 0,
		bW: $elm$core$Maybe$Nothing,
		lb: itemToElement,
		ca: function (_v1) {
			return '';
		},
		ld: itemsFromModel,
		cc: _List_Nil,
		lO: $PaackEng$elm_ui_dropdown$Dropdown$OnSelectSingleItem(onSelectMsg),
		lQ: $mdgriffith$elm_ui$Element$text('▼'),
		by: A2(
			$mdgriffith$elm_ui$Element$el,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
				]),
			$mdgriffith$elm_ui$Element$text('-- Select --')),
		cp: _List_Nil,
		cq: _List_Nil,
		mu: A2($elm$core$Basics$composeR, selectionFromModel, $PaackEng$elm_ui_dropdown$Dropdown$SingleItem),
		dr: $PaackEng$elm_ui_dropdown$Dropdown$SingleItemToPrompt(itemToPrompt)
	};
};
var $feathericons$elm_feather$FeatherIcons$Icon = $elm$core$Basics$identity;
var $feathericons$elm_feather$FeatherIcons$defaultAttributes = function (name) {
	return {
		jS: $elm$core$Maybe$Just('feather feather-' + name),
		f$: 24,
		dt: '',
		ep: 2,
		cH: '0 0 24 24'
	};
};
var $feathericons$elm_feather$FeatherIcons$makeBuilder = F2(
	function (name, src) {
		return {
			H: $feathericons$elm_feather$FeatherIcons$defaultAttributes(name),
			eo: src
		};
	});
var $elm$svg$Svg$Attributes$points = _VirtualDom_attribute('points');
var $elm$svg$Svg$trustedNode = _VirtualDom_nodeNS('http://www.w3.org/2000/svg');
var $elm$svg$Svg$polyline = $elm$svg$Svg$trustedNode('polyline');
var $feathericons$elm_feather$FeatherIcons$chevronDown = A2(
	$feathericons$elm_feather$FeatherIcons$makeBuilder,
	'chevron-down',
	_List_fromArray(
		[
			A2(
			$elm$svg$Svg$polyline,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$points('6 9 12 15 18 9')
				]),
			_List_Nil)
		]));
var $feathericons$elm_feather$FeatherIcons$chevronUp = A2(
	$feathericons$elm_feather$FeatherIcons$makeBuilder,
	'chevron-up',
	_List_fromArray(
		[
			A2(
			$elm$svg$Svg$polyline,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$points('18 15 12 9 6 15')
				]),
			_List_Nil)
		]));
var $mdgriffith$elm_ui$Internal$Model$Colored = F3(
	function (a, b, c) {
		return {$: 4, a: a, b: b, c: c};
	});
var $mdgriffith$elm_ui$Internal$Model$StyleClass = F2(
	function (a, b) {
		return {$: 4, a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Flag$bgColor = $mdgriffith$elm_ui$Internal$Flag$flag(8);
var $mdgriffith$elm_ui$Internal$Model$formatColorClass = function (_v0) {
	var red = _v0.a;
	var green = _v0.b;
	var blue = _v0.c;
	var alpha = _v0.d;
	return $mdgriffith$elm_ui$Internal$Model$floatClass(red) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(green) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(blue) + ('-' + $mdgriffith$elm_ui$Internal$Model$floatClass(alpha))))));
};
var $mdgriffith$elm_ui$Element$Background$color = function (clr) {
	return A2(
		$mdgriffith$elm_ui$Internal$Model$StyleClass,
		$mdgriffith$elm_ui$Internal$Flag$bgColor,
		A3(
			$mdgriffith$elm_ui$Internal$Model$Colored,
			'bg-' + $mdgriffith$elm_ui$Internal$Model$formatColorClass(clr),
			'background-color',
			clr));
};
var $mdgriffith$elm_ui$Internal$Flag$borderColor = $mdgriffith$elm_ui$Internal$Flag$flag(28);
var $mdgriffith$elm_ui$Element$Border$color = function (clr) {
	return A2(
		$mdgriffith$elm_ui$Internal$Model$StyleClass,
		$mdgriffith$elm_ui$Internal$Flag$borderColor,
		A3(
			$mdgriffith$elm_ui$Internal$Model$Colored,
			'bc-' + $mdgriffith$elm_ui$Internal$Model$formatColorClass(clr),
			'border-color',
			clr));
};
var $mdgriffith$elm_ui$Internal$Model$Focus = 0;
var $mdgriffith$elm_ui$Internal$Model$PseudoSelector = F2(
	function (a, b) {
		return {$: 11, a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Flag$focus = $mdgriffith$elm_ui$Internal$Flag$flag(31);
var $mdgriffith$elm_ui$Internal$Model$AlignX = function (a) {
	return {$: 6, a: a};
};
var $mdgriffith$elm_ui$Internal$Model$AlignY = function (a) {
	return {$: 5, a: a};
};
var $mdgriffith$elm_ui$Internal$Model$Attr = function (a) {
	return {$: 1, a: a};
};
var $mdgriffith$elm_ui$Internal$Model$Class = F2(
	function (a, b) {
		return {$: 3, a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Model$Describe = function (a) {
	return {$: 2, a: a};
};
var $mdgriffith$elm_ui$Internal$Model$Nearby = F2(
	function (a, b) {
		return {$: 9, a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Model$NoAttribute = {$: 0};
var $mdgriffith$elm_ui$Internal$Model$TransformComponent = F2(
	function (a, b) {
		return {$: 10, a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Model$Empty = {$: 3};
var $elm$virtual_dom$VirtualDom$map = _VirtualDom_map;
var $mdgriffith$elm_ui$Internal$Model$map = F2(
	function (fn, el) {
		switch (el.$) {
			case 1:
				var styled = el.a;
				return $mdgriffith$elm_ui$Internal$Model$Styled(
					{
						kT: F2(
							function (add, context) {
								return A2(
									$elm$virtual_dom$VirtualDom$map,
									fn,
									A2(styled.kT, add, context));
							}),
						mK: styled.mK
					});
			case 0:
				var html = el.a;
				return $mdgriffith$elm_ui$Internal$Model$Unstyled(
					A2(
						$elm$core$Basics$composeL,
						$elm$virtual_dom$VirtualDom$map(fn),
						html));
			case 2:
				var str = el.a;
				return $mdgriffith$elm_ui$Internal$Model$Text(str);
			default:
				return $mdgriffith$elm_ui$Internal$Model$Empty;
		}
	});
var $elm$virtual_dom$VirtualDom$mapAttribute = _VirtualDom_mapAttribute;
var $mdgriffith$elm_ui$Internal$Model$mapAttrFromStyle = F2(
	function (fn, attr) {
		switch (attr.$) {
			case 0:
				return $mdgriffith$elm_ui$Internal$Model$NoAttribute;
			case 2:
				var description = attr.a;
				return $mdgriffith$elm_ui$Internal$Model$Describe(description);
			case 6:
				var x = attr.a;
				return $mdgriffith$elm_ui$Internal$Model$AlignX(x);
			case 5:
				var y = attr.a;
				return $mdgriffith$elm_ui$Internal$Model$AlignY(y);
			case 7:
				var x = attr.a;
				return $mdgriffith$elm_ui$Internal$Model$Width(x);
			case 8:
				var x = attr.a;
				return $mdgriffith$elm_ui$Internal$Model$Height(x);
			case 3:
				var x = attr.a;
				var y = attr.b;
				return A2($mdgriffith$elm_ui$Internal$Model$Class, x, y);
			case 4:
				var flag = attr.a;
				var style = attr.b;
				return A2($mdgriffith$elm_ui$Internal$Model$StyleClass, flag, style);
			case 9:
				var location = attr.a;
				var elem = attr.b;
				return A2(
					$mdgriffith$elm_ui$Internal$Model$Nearby,
					location,
					A2($mdgriffith$elm_ui$Internal$Model$map, fn, elem));
			case 1:
				var htmlAttr = attr.a;
				return $mdgriffith$elm_ui$Internal$Model$Attr(
					A2($elm$virtual_dom$VirtualDom$mapAttribute, fn, htmlAttr));
			default:
				var fl = attr.a;
				var trans = attr.b;
				return A2($mdgriffith$elm_ui$Internal$Model$TransformComponent, fl, trans);
		}
	});
var $mdgriffith$elm_ui$Internal$Model$removeNever = function (style) {
	return A2($mdgriffith$elm_ui$Internal$Model$mapAttrFromStyle, $elm$core$Basics$never, style);
};
var $mdgriffith$elm_ui$Internal$Model$unwrapDecsHelper = F2(
	function (attr, _v0) {
		var styles = _v0.a;
		var trans = _v0.b;
		var _v1 = $mdgriffith$elm_ui$Internal$Model$removeNever(attr);
		switch (_v1.$) {
			case 4:
				var style = _v1.b;
				return _Utils_Tuple2(
					A2($elm$core$List$cons, style, styles),
					trans);
			case 10:
				var flag = _v1.a;
				var component = _v1.b;
				return _Utils_Tuple2(
					styles,
					A2($mdgriffith$elm_ui$Internal$Model$composeTransformation, trans, component));
			default:
				return _Utils_Tuple2(styles, trans);
		}
	});
var $mdgriffith$elm_ui$Internal$Model$unwrapDecorations = function (attrs) {
	var _v0 = A3(
		$elm$core$List$foldl,
		$mdgriffith$elm_ui$Internal$Model$unwrapDecsHelper,
		_Utils_Tuple2(_List_Nil, $mdgriffith$elm_ui$Internal$Model$Untransformed),
		attrs);
	var styles = _v0.a;
	var transform = _v0.b;
	return A2(
		$elm$core$List$cons,
		$mdgriffith$elm_ui$Internal$Model$Transform(transform),
		styles);
};
var $mdgriffith$elm_ui$Element$focused = function (decs) {
	return A2(
		$mdgriffith$elm_ui$Internal$Model$StyleClass,
		$mdgriffith$elm_ui$Internal$Flag$focus,
		A2(
			$mdgriffith$elm_ui$Internal$Model$PseudoSelector,
			0,
			$mdgriffith$elm_ui$Internal$Model$unwrapDecorations(decs)));
};
var $mdgriffith$elm_ui$Internal$Model$Rgba = F4(
	function (a, b, c, d) {
		return {$: 0, a: a, b: b, c: c, d: d};
	});
var $mdgriffith$elm_ui$Element$rgb255 = F3(
	function (red, green, blue) {
		return A4($mdgriffith$elm_ui$Internal$Model$Rgba, red / 255, green / 255, blue / 255, 1);
	});
var $author$project$Palette$gray = A3($mdgriffith$elm_ui$Element$rgb255, 163, 163, 163);
var $author$project$Palette$grayLight = A3($mdgriffith$elm_ui$Element$rgb255, 211, 211, 211);
var $mdgriffith$elm_ui$Internal$Model$unstyled = A2($elm$core$Basics$composeL, $mdgriffith$elm_ui$Internal$Model$Unstyled, $elm$core$Basics$always);
var $mdgriffith$elm_ui$Element$html = $mdgriffith$elm_ui$Internal$Model$unstyled;
var $mdgriffith$elm_ui$Internal$Model$Min = F2(
	function (a, b) {
		return {$: 3, a: a, b: b};
	});
var $mdgriffith$elm_ui$Element$minimum = F2(
	function (i, l) {
		return A2($mdgriffith$elm_ui$Internal$Model$Min, i, l);
	});
var $mdgriffith$elm_ui$Internal$Model$Hover = 1;
var $mdgriffith$elm_ui$Internal$Flag$hover = $mdgriffith$elm_ui$Internal$Flag$flag(33);
var $mdgriffith$elm_ui$Element$mouseOver = function (decs) {
	return A2(
		$mdgriffith$elm_ui$Internal$Model$StyleClass,
		$mdgriffith$elm_ui$Internal$Flag$hover,
		A2(
			$mdgriffith$elm_ui$Internal$Model$PseudoSelector,
			1,
			$mdgriffith$elm_ui$Internal$Model$unwrapDecorations(decs)));
};
var $mdgriffith$elm_ui$Internal$Model$PaddingStyle = F5(
	function (a, b, c, d, e) {
		return {$: 7, a: a, b: b, c: c, d: d, e: e};
	});
var $mdgriffith$elm_ui$Internal$Flag$padding = $mdgriffith$elm_ui$Internal$Flag$flag(2);
var $mdgriffith$elm_ui$Element$padding = function (x) {
	var f = x;
	return A2(
		$mdgriffith$elm_ui$Internal$Model$StyleClass,
		$mdgriffith$elm_ui$Internal$Flag$padding,
		A5(
			$mdgriffith$elm_ui$Internal$Model$PaddingStyle,
			'p-' + $elm$core$String$fromInt(x),
			f,
			f,
			f,
			f));
};
var $mdgriffith$elm_ui$Element$paddingXY = F2(
	function (x, y) {
		if (_Utils_eq(x, y)) {
			var f = x;
			return A2(
				$mdgriffith$elm_ui$Internal$Model$StyleClass,
				$mdgriffith$elm_ui$Internal$Flag$padding,
				A5(
					$mdgriffith$elm_ui$Internal$Model$PaddingStyle,
					'p-' + $elm$core$String$fromInt(x),
					f,
					f,
					f,
					f));
		} else {
			var yFloat = y;
			var xFloat = x;
			return A2(
				$mdgriffith$elm_ui$Internal$Model$StyleClass,
				$mdgriffith$elm_ui$Internal$Flag$padding,
				A5(
					$mdgriffith$elm_ui$Internal$Model$PaddingStyle,
					'p-' + ($elm$core$String$fromInt(x) + ('-' + $elm$core$String$fromInt(y))),
					yFloat,
					xFloat,
					yFloat,
					xFloat));
		}
	});
var $author$project$Palette$redLight = A3($mdgriffith$elm_ui$Element$rgb255, 239, 154, 154);
var $mdgriffith$elm_ui$Internal$Flag$borderRound = $mdgriffith$elm_ui$Internal$Flag$flag(17);
var $mdgriffith$elm_ui$Element$Border$roundEach = function (_v0) {
	var topLeft = _v0.nb;
	var topRight = _v0.nc;
	var bottomLeft = _v0.jJ;
	var bottomRight = _v0.jK;
	return A2(
		$mdgriffith$elm_ui$Internal$Model$StyleClass,
		$mdgriffith$elm_ui$Internal$Flag$borderRound,
		A3(
			$mdgriffith$elm_ui$Internal$Model$Single,
			'br-' + ($elm$core$String$fromInt(topLeft) + ('-' + ($elm$core$String$fromInt(topRight) + ($elm$core$String$fromInt(bottomLeft) + ('-' + $elm$core$String$fromInt(bottomRight)))))),
			'border-radius',
			$elm$core$String$fromInt(topLeft) + ('px ' + ($elm$core$String$fromInt(topRight) + ('px ' + ($elm$core$String$fromInt(bottomRight) + ('px ' + ($elm$core$String$fromInt(bottomLeft) + 'px'))))))));
};
var $mdgriffith$elm_ui$Element$Border$rounded = function (radius) {
	return A2(
		$mdgriffith$elm_ui$Internal$Model$StyleClass,
		$mdgriffith$elm_ui$Internal$Flag$borderRound,
		A3(
			$mdgriffith$elm_ui$Internal$Model$Single,
			'br-' + $elm$core$String$fromInt(radius),
			'border-radius',
			$elm$core$String$fromInt(radius) + 'px'));
};
var $mdgriffith$elm_ui$Internal$Model$boxShadowClass = function (shadow) {
	return $elm$core$String$concat(
		_List_fromArray(
			[
				shadow.hy ? 'box-inset' : 'box-',
				$mdgriffith$elm_ui$Internal$Model$floatClass(shadow.lG.a) + 'px',
				$mdgriffith$elm_ui$Internal$Model$floatClass(shadow.lG.b) + 'px',
				$mdgriffith$elm_ui$Internal$Model$floatClass(shadow.jD) + 'px',
				$mdgriffith$elm_ui$Internal$Model$floatClass(shadow.f$) + 'px',
				$mdgriffith$elm_ui$Internal$Model$formatColorClass(shadow.eL)
			]));
};
var $mdgriffith$elm_ui$Internal$Flag$shadows = $mdgriffith$elm_ui$Internal$Flag$flag(19);
var $mdgriffith$elm_ui$Element$Border$shadow = function (almostShade) {
	var shade = {jD: almostShade.jD, eL: almostShade.eL, hy: false, lG: almostShade.lG, f$: almostShade.f$};
	return A2(
		$mdgriffith$elm_ui$Internal$Model$StyleClass,
		$mdgriffith$elm_ui$Internal$Flag$shadows,
		A3(
			$mdgriffith$elm_ui$Internal$Model$Single,
			$mdgriffith$elm_ui$Internal$Model$boxShadowClass(shade),
			'box-shadow',
			$mdgriffith$elm_ui$Internal$Model$formatBoxShadow(shade)));
};
var $mdgriffith$elm_ui$Internal$Model$SpacingStyle = F3(
	function (a, b, c) {
		return {$: 5, a: a, b: b, c: c};
	});
var $mdgriffith$elm_ui$Internal$Flag$spacing = $mdgriffith$elm_ui$Internal$Flag$flag(3);
var $mdgriffith$elm_ui$Internal$Model$spacingName = F2(
	function (x, y) {
		return 'spacing-' + ($elm$core$String$fromInt(x) + ('-' + $elm$core$String$fromInt(y)));
	});
var $mdgriffith$elm_ui$Element$spacing = function (x) {
	return A2(
		$mdgriffith$elm_ui$Internal$Model$StyleClass,
		$mdgriffith$elm_ui$Internal$Flag$spacing,
		A3(
			$mdgriffith$elm_ui$Internal$Model$SpacingStyle,
			A2($mdgriffith$elm_ui$Internal$Model$spacingName, x, x),
			x,
			x));
};
var $author$project$Palette$sred = A3($mdgriffith$elm_ui$Element$rgb255, 236, 31, 39);
var $elm$svg$Svg$Attributes$class = _VirtualDom_attribute('class');
var $elm$svg$Svg$Attributes$fill = _VirtualDom_attribute('fill');
var $elm$svg$Svg$Attributes$height = _VirtualDom_attribute('height');
var $elm$svg$Svg$map = $elm$virtual_dom$VirtualDom$map;
var $elm$svg$Svg$Attributes$stroke = _VirtualDom_attribute('stroke');
var $elm$svg$Svg$Attributes$strokeLinecap = _VirtualDom_attribute('stroke-linecap');
var $elm$svg$Svg$Attributes$strokeLinejoin = _VirtualDom_attribute('stroke-linejoin');
var $elm$svg$Svg$Attributes$strokeWidth = _VirtualDom_attribute('stroke-width');
var $elm$svg$Svg$svg = $elm$svg$Svg$trustedNode('svg');
var $elm$svg$Svg$Attributes$viewBox = _VirtualDom_attribute('viewBox');
var $elm$svg$Svg$Attributes$width = _VirtualDom_attribute('width');
var $feathericons$elm_feather$FeatherIcons$toHtml = F2(
	function (attributes, _v0) {
		var src = _v0.eo;
		var attrs = _v0.H;
		var strSize = $elm$core$String$fromFloat(attrs.f$);
		var baseAttributes = _List_fromArray(
			[
				$elm$svg$Svg$Attributes$fill('none'),
				$elm$svg$Svg$Attributes$height(
				_Utils_ap(strSize, attrs.dt)),
				$elm$svg$Svg$Attributes$width(
				_Utils_ap(strSize, attrs.dt)),
				$elm$svg$Svg$Attributes$stroke('currentColor'),
				$elm$svg$Svg$Attributes$strokeLinecap('round'),
				$elm$svg$Svg$Attributes$strokeLinejoin('round'),
				$elm$svg$Svg$Attributes$strokeWidth(
				$elm$core$String$fromFloat(attrs.ep)),
				$elm$svg$Svg$Attributes$viewBox(attrs.cH)
			]);
		var combinedAttributes = _Utils_ap(
			function () {
				var _v1 = attrs.jS;
				if (!_v1.$) {
					var c = _v1.a;
					return A2(
						$elm$core$List$cons,
						$elm$svg$Svg$Attributes$class(c),
						baseAttributes);
				} else {
					return baseAttributes;
				}
			}(),
			attributes);
		return A2(
			$elm$svg$Svg$svg,
			combinedAttributes,
			A2(
				$elm$core$List$map,
				$elm$svg$Svg$map($elm$core$Basics$never),
				src));
	});
var $author$project$Palette$white = A3($mdgriffith$elm_ui$Element$rgb255, 255, 255, 255);
var $mdgriffith$elm_ui$Internal$Model$BorderWidth = F5(
	function (a, b, c, d, e) {
		return {$: 6, a: a, b: b, c: c, d: d, e: e};
	});
var $mdgriffith$elm_ui$Element$Border$width = function (v) {
	return A2(
		$mdgriffith$elm_ui$Internal$Model$StyleClass,
		$mdgriffith$elm_ui$Internal$Flag$borderWidth,
		A5(
			$mdgriffith$elm_ui$Internal$Model$BorderWidth,
			'b-' + $elm$core$String$fromInt(v),
			v,
			v,
			v,
			v));
};
var $PaackEng$elm_ui_dropdown$Dropdown$withContainerAttributes = F2(
	function (attrs, _v0) {
		var config = _v0;
		return _Utils_update(
			config,
			{bR: attrs});
	});
var $PaackEng$elm_ui_dropdown$Dropdown$withListAttributes = F2(
	function (attrs, _v0) {
		var config = _v0;
		return _Utils_update(
			config,
			{cc: attrs});
	});
var $PaackEng$elm_ui_dropdown$Dropdown$withOpenCloseButtons = F2(
	function (_v0, _v1) {
		var openButton = _v0.lQ;
		var closeButton = _v0.jW;
		var config = _v1;
		return _Utils_update(
			config,
			{jW: closeButton, lQ: openButton});
	});
var $PaackEng$elm_ui_dropdown$Dropdown$withPromptElement = F2(
	function (promptElement, _v0) {
		var config = _v0;
		return _Utils_update(
			config,
			{by: promptElement});
	});
var $PaackEng$elm_ui_dropdown$Dropdown$withSelectAttributes = F2(
	function (attrs, _v0) {
		var config = _v0;
		return _Utils_update(
			config,
			{cq: attrs});
	});
var $author$project$Page$Organize$DetainerWarrantCreation$dropdownConfig = F5(
	function (label, itemToStr, dropdownMsg, itemPickedMsg, attrs) {
		var selectAttrs = _Utils_ap(
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$Border$width(1),
					$mdgriffith$elm_ui$Element$Border$rounded(5),
					$mdgriffith$elm_ui$Element$Border$color($author$project$Palette$grayLight),
					A2($mdgriffith$elm_ui$Element$paddingXY, 16, 8),
					$mdgriffith$elm_ui$Element$spacing(10),
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
					$mdgriffith$elm_ui$Element$focused(
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$Border$color($author$project$Palette$grayLight),
							$mdgriffith$elm_ui$Element$Border$shadow(
							{
								jD: 3,
								eL: $author$project$Palette$gray,
								lG: _Utils_Tuple2(0, 0),
								f$: 3
							})
						]))
				]),
			attrs);
		var listAttrs = _List_fromArray(
			[
				$mdgriffith$elm_ui$Element$Border$width(1),
				$mdgriffith$elm_ui$Element$Border$roundEach(
				{jJ: 5, jK: 5, nb: 0, nc: 0}),
				$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
				$mdgriffith$elm_ui$Element$spacing(5),
				$mdgriffith$elm_ui$Element$Background$color($author$project$Palette$white)
			]);
		var itemToPrompt = function (item) {
			return $mdgriffith$elm_ui$Element$text(
				itemToStr(item));
		};
		var itemToElement = F3(
			function (selected, highlighted, item) {
				var bgColor = highlighted ? $author$project$Palette$redLight : (selected ? $author$project$Palette$sred : $author$project$Palette$white);
				return A2(
					$mdgriffith$elm_ui$Element$el,
					_Utils_ap(
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$Background$color(bgColor),
								$mdgriffith$elm_ui$Element$padding(8),
								$mdgriffith$elm_ui$Element$spacing(10),
								$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
							]),
						selected ? _List_Nil : _List_fromArray(
							[
								$mdgriffith$elm_ui$Element$mouseOver(
								_List_fromArray(
									[
										$mdgriffith$elm_ui$Element$Background$color($author$project$Palette$redLight)
									]))
							])),
					$mdgriffith$elm_ui$Element$text(
						itemToStr(item)));
			});
		var containerAttrs = _List_fromArray(
			[
				$mdgriffith$elm_ui$Element$width(
				A2($mdgriffith$elm_ui$Element$minimum, 250, $mdgriffith$elm_ui$Element$fill))
			]);
		return A2(
			$PaackEng$elm_ui_dropdown$Dropdown$withOpenCloseButtons,
			{
				jW: $mdgriffith$elm_ui$Element$html(
					A2($feathericons$elm_feather$FeatherIcons$toHtml, _List_Nil, $feathericons$elm_feather$FeatherIcons$chevronUp)),
				lQ: $mdgriffith$elm_ui$Element$html(
					A2($feathericons$elm_feather$FeatherIcons$toHtml, _List_Nil, $feathericons$elm_feather$FeatherIcons$chevronDown))
			},
			A2(
				$PaackEng$elm_ui_dropdown$Dropdown$withPromptElement,
				A2(
					$mdgriffith$elm_ui$Element$el,
					_List_Nil,
					$mdgriffith$elm_ui$Element$text(label)),
				A2(
					$PaackEng$elm_ui_dropdown$Dropdown$withListAttributes,
					listAttrs,
					A2(
						$PaackEng$elm_ui_dropdown$Dropdown$withSelectAttributes,
						selectAttrs,
						A2(
							$PaackEng$elm_ui_dropdown$Dropdown$withContainerAttributes,
							containerAttrs,
							$PaackEng$elm_ui_dropdown$Dropdown$basic(
								{
									kp: dropdownMsg,
									lb: itemToElement,
									lc: itemToPrompt,
									ld: function ($) {
										return $.lU;
									},
									lO: itemPickedMsg,
									mu: function ($) {
										return $.C;
									}
								}))))));
	});
var $author$project$Page$Organize$DetainerWarrantCreation$ternaryText = function (isCares) {
	if (!isCares.$) {
		var bool = isCares.a;
		return bool ? 'Yes' : 'No';
	} else {
		return 'Unknown';
	}
};
var $author$project$Page$Organize$DetainerWarrantCreation$caresDropdownConfig = A4($author$project$Page$Organize$DetainerWarrantCreation$dropdownConfig, 'Cares', $author$project$Page$Organize$DetainerWarrantCreation$ternaryText, $author$project$Page$Organize$DetainerWarrantCreation$CaresDropdownMsg, $author$project$Page$Organize$DetainerWarrantCreation$PickedCares);
var $author$project$Page$Organize$DetainerWarrantCreation$PickedAmountClaimedCategory = function (a) {
	return {$: 15, a: a};
};
var $author$project$DetainerWarrant$amountClaimedCategoryText = function (category) {
	switch (category) {
		case 0:
			return 'POSS';
		case 1:
			return 'FEES';
		case 2:
			return 'BOTH';
		default:
			return 'N/A';
	}
};
var $author$project$Page$Organize$DetainerWarrantCreation$categoryDropdownConfig = A4($author$project$Page$Organize$DetainerWarrantCreation$dropdownConfig, 'Amount Claimed Category', $author$project$DetainerWarrant$amountClaimedCategoryText, $author$project$Page$Organize$DetainerWarrantCreation$CategoryDropdownMsg, $author$project$Page$Organize$DetainerWarrantCreation$PickedAmountClaimedCategory);
var $author$project$Page$Organize$DetainerWarrantCreation$ConditionsDropdownMsg = F2(
	function (a, b) {
		return {$: 36, a: a, b: b};
	});
var $author$project$Page$Organize$DetainerWarrantCreation$PickedConditions = F2(
	function (a, b) {
		return {$: 35, a: a, b: b};
	});
var $author$project$DetainerWarrant$conditionText = function (option) {
	if (!option) {
		return 'Plaintiff';
	} else {
		return 'Defendant';
	}
};
var $author$project$Page$Organize$DetainerWarrantCreation$conditionsDropdownConfig = function (index) {
	return A4(
		$author$project$Page$Organize$DetainerWarrantCreation$dropdownConfig,
		'Granted to',
		A2(
			$elm$core$Basics$composeL,
			$elm$core$Maybe$withDefault('-'),
			$elm$core$Maybe$map($author$project$DetainerWarrant$conditionText)),
		$author$project$Page$Organize$DetainerWarrantCreation$ConditionsDropdownMsg(index),
		$author$project$Page$Organize$DetainerWarrantCreation$PickedConditions(index));
};
var $author$project$DetainerWarrant$DefendantOption = 1;
var $author$project$DetainerWarrant$PlaintiffOption = 0;
var $author$project$DetainerWarrant$conditionsOptions = _List_fromArray(
	[
		$elm$core$Maybe$Nothing,
		$elm$core$Maybe$Just(0),
		$elm$core$Maybe$Just(1)
	]);
var $author$project$Api$Endpoint$courtrooms = A2(
	$elm$core$Basics$composeL,
	$author$project$Api$Endpoint$url(
		_List_fromArray(
			['courtrooms', ''])),
	$author$project$Api$Endpoint$toQueryArgs);
var $Massolari$elm_mask$Mask$defaultDecimalOptions = {dY: '.', aH: 2, f9: ','};
var $author$project$Page$Organize$DetainerWarrantCreation$DismissalBasisDropdownMsg = F2(
	function (a, b) {
		return {$: 44, a: a, b: b};
	});
var $author$project$Page$Organize$DetainerWarrantCreation$PickedDismissalBasis = F2(
	function (a, b) {
		return {$: 45, a: a, b: b};
	});
var $author$project$DetainerWarrant$dismissalBasisText = function (basis) {
	switch (basis) {
		case 0:
			return 'FAILURE_TO_PROSECUTE';
		case 1:
			return 'FINDING_IN_FAVOR_OF_DEFENDANT';
		default:
			return 'NON_SUIT_BY_PLAINTIFF';
	}
};
var $elm$core$String$replace = F3(
	function (before, after, string) {
		return A2(
			$elm$core$String$join,
			after,
			A2($elm$core$String$split, before, string));
	});
var $elm$core$String$toLower = _String_toLower;
var $elm_community$string_extra$String$Extra$changeCase = F2(
	function (mutator, word) {
		return A2(
			$elm$core$Maybe$withDefault,
			'',
			A2(
				$elm$core$Maybe$map,
				function (_v0) {
					var head = _v0.a;
					var tail = _v0.b;
					return A2(
						$elm$core$String$cons,
						mutator(head),
						tail);
				},
				$elm$core$String$uncons(word)));
	});
var $elm$core$Char$toUpper = _Char_toUpper;
var $elm_community$string_extra$String$Extra$toSentenceCase = function (word) {
	return A2($elm_community$string_extra$String$Extra$changeCase, $elm$core$Char$toUpper, word);
};
var $author$project$DetainerWarrant$dismissalBasisOption = function (basis) {
	return $elm_community$string_extra$String$Extra$toSentenceCase(
		$elm$core$String$toLower(
			A3(
				$elm$core$String$replace,
				'_',
				' ',
				$author$project$DetainerWarrant$dismissalBasisText(basis))));
};
var $author$project$Page$Organize$DetainerWarrantCreation$dismissalBasisDropdownConfig = function (index) {
	return A4(
		$author$project$Page$Organize$DetainerWarrantCreation$dropdownConfig,
		'Dismissal based on',
		$author$project$DetainerWarrant$dismissalBasisOption,
		$author$project$Page$Organize$DetainerWarrantCreation$DismissalBasisDropdownMsg(index),
		$author$project$Page$Organize$DetainerWarrantCreation$PickedDismissalBasis(index));
};
var $author$project$DetainerWarrant$dismissalBasisOptions = _List_fromArray(
	[0, 1, 2]);
var $elm$core$String$foldl = _String_foldl;
var $elm$core$String$reverse = _String_reverse;
var $Massolari$elm_mask$Mask$intDecimal = F2(
	function (options, signedDec) {
		var _v0 = (signedDec < 0) ? _Utils_Tuple2(
			signedDec * (-1),
			function (s) {
				return '-' + s;
			}) : _Utils_Tuple2(signedDec, $elm$core$Basics$identity);
		var dec = _v0.a;
		var signFun = _v0.b;
		var decStr = $elm$core$String$reverse(
			$elm$core$String$fromInt(dec));
		var _v1 = (options.aH > 0) ? _Utils_Tuple2(0, true) : _Utils_Tuple2(-1, false);
		var initCounter = _v1.a;
		var hasDecimal = _v1.b;
		return signFun(
			function (s) {
				return ((options.aH > 0) && (_Utils_cmp(
					options.aH,
					$elm$core$String$length(s)) > -1)) ? ('0' + (options.dY + (A2(
					$elm$core$String$repeat,
					options.aH - $elm$core$String$length(s),
					'0') + s))) : s;
			}(
				$elm$core$String$reverse(
					function (_v3) {
						var result = _v3.c;
						return result;
					}(
						A3(
							$elm$core$String$foldl,
							F2(
								function (ch, _v2) {
									var counter = _v2.a;
									var isDecimal = _v2.b;
									var result = _v2.c;
									return (isDecimal && _Utils_eq(counter, options.aH)) ? _Utils_Tuple3(
										0,
										false,
										_Utils_ap(
											result,
											_Utils_ap(
												options.dY,
												$elm$core$String$fromChar(ch)))) : (((!isDecimal) && (counter === 2)) ? _Utils_Tuple3(
										0,
										false,
										_Utils_ap(
											result,
											_Utils_ap(
												options.f9,
												$elm$core$String$fromChar(ch)))) : _Utils_Tuple3(
										counter + 1,
										isDecimal,
										_Utils_ap(
											result,
											$elm$core$String$fromChar(ch))));
								}),
							_Utils_Tuple3(initCounter, hasDecimal, ''),
							decStr)))));
	});
var $elm$core$Basics$pow = _Basics_pow;
var $Massolari$elm_mask$Mask$floatDecimal = F2(
	function (options, dec) {
		var intValue = function (n) {
			return (n / A2($elm$core$Basics$pow, 10, options.aH)) | 0;
		}(
			$elm$core$Basics$ceiling(
				A2($elm$core$Basics$pow, 10, options.aH + 2.0) * dec));
		return A2($Massolari$elm_mask$Mask$intDecimal, options, intValue);
	});
var $author$project$Page$Organize$DetainerWarrantCreation$judgementFormInit = F3(
	function (today, index, existing) {
		var _new = {
			bL: '',
			cK: false,
			cP: $elm$core$Maybe$Just(0),
			j0: $PaackEng$elm_ui_dropdown$Dropdown$init(
				'judgement-dropdown-new-' + $elm$core$String$fromInt(index)),
			bj: {
				gZ: $elm$core$Maybe$Just(today),
				j9: $justinmimbs$date$Date$toIsoString(today),
				l2: A2($fabhof$elm_ui_datepicker$DatePicker$setToday, today, $fabhof$elm_ui_datepicker$DatePicker$init)
			},
			d$: 0,
			km: $PaackEng$elm_ui_dropdown$Dropdown$init(
				'judgement-dropdown-dismissal-basis-' + $elm$core$String$fromInt(index)),
			c3: 0,
			b0: false,
			hs: $elm$core$Maybe$Nothing,
			b7: true,
			d6: '',
			dd: {ih: $elm$core$Maybe$Nothing, ms: $russelldavies$elm_ui_searchbox$SearchBox$init, mR: ''},
			aZ: '',
			dI: false
		};
		if (!existing.$) {
			var judgement = existing.a;
			var _default = _Utils_update(
				_new,
				{
					j0: $PaackEng$elm_ui_dropdown$Dropdown$init(
						'judgement-dropdown-' + $elm$core$String$fromInt(judgement.hs)),
					bj: {
						gZ: judgement.bj,
						j9: A2(
							$elm$core$Maybe$withDefault,
							_new.bj.j9,
							A2($elm$core$Maybe$map, $justinmimbs$date$Date$toIsoString, judgement.bj)),
						l2: A2($fabhof$elm_ui_datepicker$DatePicker$setToday, today, $fabhof$elm_ui_datepicker$DatePicker$init)
					},
					km: $PaackEng$elm_ui_dropdown$Dropdown$init(
						'judgement-dropdown-dismissal-basis-' + $elm$core$String$fromInt(judgement.hs)),
					c3: judgement.c3,
					hs: $elm$core$Maybe$Just(judgement.hs),
					dd: {
						ih: judgement.dd,
						ms: $russelldavies$elm_ui_searchbox$SearchBox$init,
						mR: A2(
							$elm$core$Maybe$withDefault,
							'',
							A2(
								$elm$core$Maybe$map,
								function ($) {
									return $.h1;
								},
								judgement.dd))
					},
					aZ: A2($elm$core$Maybe$withDefault, '', judgement.aZ)
				});
			var _v1 = judgement.j$;
			if (!_v1.$) {
				if (!_v1.a.$) {
					var owed = _v1.a.a;
					return _Utils_update(
						_default,
						{
							bL: A2(
								$elm$core$Maybe$withDefault,
								'',
								A2($elm$core$Maybe$map, $elm$core$String$fromFloat, owed.bL)),
							cK: owed.cK,
							cP: $elm$core$Maybe$Just(0),
							b0: !_Utils_eq(owed.k4, $elm$core$Maybe$Nothing),
							b7: function () {
								var _v2 = owed.k4;
								if ((!_v2.$) && (_v2.a.$ === 1)) {
									var _v3 = _v2.a;
									return true;
								} else {
									return false;
								}
							}(),
							d6: function () {
								var _v4 = owed.k4;
								if ((!_v4.$) && (!_v4.a.$)) {
									var rate = _v4.a.a;
									return $elm$core$String$fromFloat(rate);
								} else {
									return '';
								}
							}()
						});
				} else {
					var dismissal = _v1.a.a;
					return _Utils_update(
						_default,
						{
							cP: $elm$core$Maybe$Just(1),
							d$: dismissal.jy,
							dI: dismissal.dI
						});
				}
			} else {
				return _default;
			}
		} else {
			return _new;
		}
	});
var $author$project$Page$Organize$DetainerWarrantCreation$editForm = F2(
	function (today, warrant) {
		return {
			je: A2(
				$elm$core$Maybe$withDefault,
				'',
				$elm$core$List$head(
					A2(
						$elm$core$List$map,
						function ($) {
							return $.je;
						},
						warrant.g0))),
			gH: A2(
				$elm$core$Maybe$withDefault,
				'',
				A2(
					$elm$core$Maybe$map,
					$Massolari$elm_mask$Mask$floatDecimal($Massolari$elm_mask$Mask$defaultDecimalOptions),
					warrant.gH)),
			gI: warrant.gI,
			bP: $PaackEng$elm_ui_dropdown$Dropdown$init('cares-dropdown'),
			bi: $PaackEng$elm_ui_dropdown$Dropdown$init('amount-claimed-category-dropdown'),
			bj: $author$project$Page$Organize$DetainerWarrantCreation$initDatePicker(warrant.bj),
			gW: $author$project$Page$Organize$DetainerWarrantCreation$initCourtroomForm(warrant.gW),
			g0: A2(
				$elm$core$List$map,
				A2($elm$core$Basics$composeL, $author$project$Page$Organize$DetainerWarrantCreation$initDefendantForm, $elm$core$Maybe$Just),
				warrant.g0),
			g4: warrant.g4,
			hg: $author$project$Page$Organize$DetainerWarrantCreation$initDatePicker(warrant.hg),
			hF: warrant.hF,
			hH: warrant.hH,
			aD: warrant.h3,
			lf: A2(
				$elm$core$List$indexedMap,
				F2(
					function (index, j) {
						return A3(
							$author$project$Page$Organize$DetainerWarrantCreation$judgementFormInit,
							today,
							index,
							$elm$core$Maybe$Just(j));
					}),
				warrant.lf),
			cb: $PaackEng$elm_ui_dropdown$Dropdown$init('legacy-dropdown'),
			cl: $PaackEng$elm_ui_dropdown$Dropdown$init('nonpayment-dropdown'),
			aZ: A2($elm$core$Maybe$withDefault, '', warrant.aZ),
			ij: $author$project$Page$Organize$DetainerWarrantCreation$initPlaintiffForm(warrant.ij),
			ik: $author$project$Page$Organize$DetainerWarrantCreation$initAttorneyForm(warrant.ik),
			ip: $author$project$Page$Organize$DetainerWarrantCreation$initJudgeForm(warrant.ip),
			iM: warrant.iM,
			bC: $PaackEng$elm_ui_dropdown$Dropdown$init('status-dropdown')
		};
	});
var $author$project$Log$error = F3(
	function (rollbar, toMsg, report) {
		return A2(
			$elm$core$Task$attempt,
			toMsg,
			A2(rollbar.ky, report, $elm$core$Dict$empty));
	});
var $author$project$Page$Organize$DetainerWarrantCreation$error = F2(
	function (rollbar, report) {
		return A3(
			$author$project$Log$error,
			rollbar,
			function (_v0) {
				return $author$project$Page$Organize$DetainerWarrantCreation$NoOp;
			},
			report);
	});
var $elm$browser$Browser$Dom$focus = _Browser_call('focus');
var $author$project$Page$Organize$DetainerWarrantCreation$GotDetainerWarrant = function (a) {
	return {$: 0, a: a};
};
var $author$project$Api$Endpoint$detainerWarrant = function (id) {
	return A2(
		$author$project$Api$Endpoint$url,
		_List_fromArray(
			['detainer-warrants', id]),
		_List_Nil);
};
var $author$project$Page$Organize$DetainerWarrantCreation$getWarrant = F2(
	function (id, maybeCred) {
		return A4(
			$author$project$Api$get,
			$author$project$Api$Endpoint$detainerWarrant(id),
			maybeCred,
			$author$project$Page$Organize$DetainerWarrantCreation$GotDetainerWarrant,
			$author$project$Api$itemDecoder($author$project$DetainerWarrant$decoder));
	});
var $author$project$Log$httpErrorMessage = function (httpError) {
	switch (httpError.$) {
		case 0:
			var url = httpError.a;
			return 'Bad url: ' + url;
		case 1:
			return 'Network Timeout';
		case 2:
			return 'Network Error';
		case 3:
			var statusCode = httpError.a;
			return 'Bad HTTP Status: Code ' + $elm$core$String$fromInt(statusCode);
		default:
			var badBody = httpError.a;
			return 'Bad HTTP Body: ' + badBody;
	}
};
var $author$project$Api$Endpoint$judges = A2(
	$elm$core$Basics$composeL,
	$author$project$Api$Endpoint$url(
		_List_fromArray(
			['judges', ''])),
	$author$project$Api$Endpoint$toQueryArgs);
var $author$project$Page$Organize$DetainerWarrantCreation$LegacyDropdownMsg = function (a) {
	return {$: 19, a: a};
};
var $author$project$Page$Organize$DetainerWarrantCreation$PickedLegacy = function (a) {
	return {$: 20, a: a};
};
var $author$project$Page$Organize$DetainerWarrantCreation$legacyDropdownConfig = A4($author$project$Page$Organize$DetainerWarrantCreation$dropdownConfig, 'Legacy', $author$project$Page$Organize$DetainerWarrantCreation$ternaryText, $author$project$Page$Organize$DetainerWarrantCreation$LegacyDropdownMsg, $author$project$Page$Organize$DetainerWarrantCreation$PickedLegacy);
var $author$project$Page$Organize$DetainerWarrantCreation$SavingWarrant = {$: 1};
var $author$project$Page$Organize$DetainerWarrantCreation$DeletedJudgement = F2(
	function (a, b) {
		return {$: 58, a: a, b: b};
	});
var $author$project$Api$delete = F3(
	function (url, maybeCred, toMsg) {
		return $author$project$Api$Endpoint$request(
			{
				bM: $elm$http$Http$emptyBody,
				bV: $elm$http$Http$expectWhatever(toMsg),
				b2: function () {
					if (!maybeCred.$) {
						var cred = maybeCred.a;
						return $author$project$Api$credHeaders(cred);
					} else {
						return _List_Nil;
					}
				}(),
				cf: 'DELETE',
				cA: $elm$core$Maybe$Nothing,
				cE: $elm$core$Maybe$Nothing,
				cF: url
			});
	});
var $author$project$Api$Endpoint$judgement = function (id) {
	return A2(
		$author$project$Api$Endpoint$url,
		_List_fromArray(
			[
				'judgements',
				$elm$core$String$fromInt(id)
			]),
		_List_Nil);
};
var $author$project$Page$Organize$DetainerWarrantCreation$deleteJudgement = F3(
	function (maybeCred, index, id) {
		return A3(
			$author$project$Api$delete,
			$author$project$Api$Endpoint$judgement(id),
			maybeCred,
			$author$project$Page$Organize$DetainerWarrantCreation$DeletedJudgement(index));
	});
var $elm$core$Dict$diff = F2(
	function (t1, t2) {
		return A3(
			$elm$core$Dict$foldl,
			F3(
				function (k, v, t) {
					return A2($elm$core$Dict$remove, k, t);
				}),
			t1,
			t2);
	});
var $elm$core$Set$diff = F2(
	function (_v0, _v1) {
		var dict1 = _v0;
		var dict2 = _v1;
		return A2($elm$core$Dict$diff, dict1, dict2);
	});
var $elm$core$Set$fromList = function (list) {
	return A3($elm$core$List$foldl, $elm$core$Set$insert, $elm$core$Set$empty, list);
};
var $author$project$DetainerWarrant$entranceText = function (entrance) {
	switch (entrance) {
		case 0:
			return 'DEFAULT';
		case 1:
			return 'AGREEMENT_OF_PARTIES';
		default:
			return 'TRIAL_IN_COURT';
	}
};
var $elm$core$String$toFloat = _String_toFloat;
var $author$project$DetainerWarrant$editFromForm = F2(
	function (today, form) {
		var rate = $elm$core$String$toFloat(
			A3($elm$core$String$replace, '%', '', form.d6));
		return {
			bL: (form.bL === '') ? $elm$core$Maybe$Nothing : $elm$core$String$toFloat(
				A3($elm$core$String$replace, ',', '', form.bL)),
			cK: _Utils_eq(
				form.cP,
				$elm$core$Maybe$Just(1)) ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(form.cK),
			bj: A2($elm$core$Maybe$map, $justinmimbs$date$Date$toIsoString, form.bj.gZ),
			d$: _Utils_eq(
				form.cP,
				$elm$core$Maybe$Just(1)) ? $elm$core$Maybe$Just(
				$author$project$DetainerWarrant$dismissalBasisText(form.d$)) : $elm$core$Maybe$Nothing,
			c3: $elm$core$Maybe$Just(
				$author$project$DetainerWarrant$entranceText(form.c3)),
			b0: form.b0,
			hs: form.hs,
			hv: A2(
				$elm$core$Maybe$map,
				function (option) {
					if (!option) {
						return 'PLAINTIFF';
					} else {
						return 'DEFENDANT';
					}
				},
				form.cP),
			b7: (form.b0 && form.b7) ? $elm$core$Maybe$Just(form.b7) : $elm$core$Maybe$Nothing,
			d6: (form.b0 && (!form.b7)) ? rate : $elm$core$Maybe$Nothing,
			dd: form.dd.ih,
			aZ: $elm$core$String$isEmpty(form.aZ) ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(form.aZ),
			dI: _Utils_eq(
				form.cP,
				$elm$core$Maybe$Just(1)) ? $elm$core$Maybe$Just(form.dI) : $elm$core$Maybe$Nothing
		};
	});
var $author$project$Page$Organize$DetainerWarrantCreation$related = function (id) {
	return {hs: id};
};
var $author$project$Page$Organize$DetainerWarrantCreation$toDefendantData = F2(
	function (address, defendant) {
		return {
			je: address,
			jh: _List_Nil,
			kE: defendant.kE,
			hs: A2($elm$core$Maybe$withDefault, -1, defendant.hs),
			lh: defendant.lh,
			ls: $elm$core$String$isEmpty(defendant.ls) ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(defendant.ls),
			h1: '',
			l5: ($elm$core$List$isEmpty(defendant.l5) || _Utils_eq(
				defendant.l5,
				_List_fromArray(
					['']))) ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(
				A2($elm$core$String$join, ',', defendant.l5)),
			mM: $elm$core$String$isEmpty(defendant.mM) ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(defendant.mM),
			nj: $elm$core$Maybe$Nothing
		};
	});
var $author$project$Page$Organize$DetainerWarrantCreation$toDetainerWarrant = F2(
	function (today, _v0) {
		var form = _v0;
		return {
			bd: form.ik.ih,
			gW: form.gW.a4,
			g0: A2(
				$elm$core$List$map,
				$author$project$Page$Organize$DetainerWarrantCreation$toDefendantData(form.je),
				form.g0),
			c$: {
				gH: $elm$core$String$toFloat(
					A3($elm$core$String$replace, ',', '', form.gH)),
				gI: form.gI,
				bj: A2($elm$core$Maybe$map, $justinmimbs$date$Date$toIsoString, form.bj.gZ),
				gW: A2(
					$elm$core$Maybe$map,
					A2(
						$elm$core$Basics$composeL,
						$author$project$Page$Organize$DetainerWarrantCreation$related,
						function ($) {
							return $.hs;
						}),
					form.gW.a4),
				g0: A2(
					$elm$core$List$filterMap,
					A2(
						$elm$core$Basics$composeL,
						$elm$core$Maybe$map($author$project$Page$Organize$DetainerWarrantCreation$related),
						function ($) {
							return $.hs;
						}),
					form.g0),
				g4: form.g4,
				hg: A2($elm$core$Maybe$map, $justinmimbs$date$Date$toIsoString, form.hg.gZ),
				hF: form.hF,
				hH: form.hH,
				h3: form.aD,
				aZ: $elm$core$String$isEmpty(form.aZ) ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(form.aZ),
				ij: A2(
					$elm$core$Maybe$map,
					A2(
						$elm$core$Basics$composeL,
						$author$project$Page$Organize$DetainerWarrantCreation$related,
						function ($) {
							return $.hs;
						}),
					form.ij.ih),
				ik: A2(
					$elm$core$Maybe$map,
					A2(
						$elm$core$Basics$composeL,
						$author$project$Page$Organize$DetainerWarrantCreation$related,
						function ($) {
							return $.hs;
						}),
					form.ik.ih),
				ip: A2(
					$elm$core$Maybe$map,
					A2(
						$elm$core$Basics$composeL,
						$author$project$Page$Organize$DetainerWarrantCreation$related,
						function ($) {
							return $.hs;
						}),
					form.ip.ih),
				iM: form.iM
			},
			dd: form.ip.ih,
			lf: A2(
				$elm$core$List$map,
				$author$project$DetainerWarrant$editFromForm(today),
				form.lf),
			ij: form.ij.ih
		};
	});
var $author$project$Page$Organize$DetainerWarrantCreation$CreatedDetainerWarrant = function (a) {
	return {$: 59, a: a};
};
var $elm$json$Json$Encode$bool = _Json_wrap;
var $elm$json$Json$Encode$int = _Json_wrap;
var $author$project$Page$Organize$DetainerWarrantCreation$encodeRelated = function (record) {
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'id',
				$elm$json$Json$Encode$int(record.hs))
			]));
};
var $elm$json$Json$Encode$float = _Json_wrap;
var $author$project$Page$Organize$DetainerWarrantCreation$nullable = F3(
	function (fieldName, fn, field) {
		return A2(
			$elm$core$Maybe$withDefault,
			_List_fromArray(
				[
					_Utils_Tuple2(fieldName, $elm$json$Json$Encode$null)
				]),
			A2(
				$elm$core$Maybe$map,
				function (f) {
					return _List_fromArray(
						[
							_Utils_Tuple2(
							fieldName,
							fn(f))
						]);
				},
				field));
	});
var $author$project$Api$patch = F5(
	function (url, maybeCred, body, toMsg, decoder) {
		return $author$project$Api$Endpoint$request(
			{
				bM: body,
				bV: A2($elm$http$Http$expectJson, toMsg, decoder),
				b2: function () {
					if (!maybeCred.$) {
						var cred = maybeCred.a;
						return $author$project$Api$credHeaders(cred);
					} else {
						return _List_Nil;
					}
				}(),
				cf: 'PATCH',
				cA: $elm$core$Maybe$Nothing,
				cE: $elm$core$Maybe$Nothing,
				cF: url
			});
	});
var $author$project$DetainerWarrant$statusText = function (status) {
	if (!status) {
		return 'CLOSED';
	} else {
		return 'PENDING';
	}
};
var $author$project$Page$Organize$DetainerWarrantCreation$toBody = function (data) {
	return $elm$http$Http$jsonBody(
		$elm$json$Json$Encode$object(
			_List_fromArray(
				[
					_Utils_Tuple2('data', data)
				])));
};
var $author$project$Page$Organize$DetainerWarrantCreation$updateDetainerWarrant = F2(
	function (maybeCred, form) {
		var detainerWarrant = $elm$json$Json$Encode$object(
			_Utils_ap(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'docket_id',
						$elm$json$Json$Encode$string(form.g4)),
						_Utils_Tuple2(
						'defendants',
						A2($elm$json$Json$Encode$list, $author$project$Page$Organize$DetainerWarrantCreation$encodeRelated, form.g0)),
						_Utils_Tuple2(
						'amount_claimed_category',
						$elm$json$Json$Encode$string(
							$author$project$DetainerWarrant$amountClaimedCategoryText(form.gI)))
					]),
				_Utils_ap(
					A3($author$project$Page$Organize$DetainerWarrantCreation$nullable, 'file_date', $elm$json$Json$Encode$string, form.hg),
					_Utils_ap(
						A3(
							$author$project$Page$Organize$DetainerWarrantCreation$nullable,
							'status',
							$elm$json$Json$Encode$string,
							A2($elm$core$Maybe$map, $author$project$DetainerWarrant$statusText, form.iM)),
						_Utils_ap(
							A3($author$project$Page$Organize$DetainerWarrantCreation$nullable, 'plaintiff', $author$project$Page$Organize$DetainerWarrantCreation$encodeRelated, form.ij),
							_Utils_ap(
								A3($author$project$Page$Organize$DetainerWarrantCreation$nullable, 'plaintiff_attorney', $author$project$Page$Organize$DetainerWarrantCreation$encodeRelated, form.ik),
								_Utils_ap(
									A3($author$project$Page$Organize$DetainerWarrantCreation$nullable, 'court_date', $elm$json$Json$Encode$string, form.bj),
									_Utils_ap(
										A3($author$project$Page$Organize$DetainerWarrantCreation$nullable, 'courtroom', $author$project$Page$Organize$DetainerWarrantCreation$encodeRelated, form.gW),
										_Utils_ap(
											A3($author$project$Page$Organize$DetainerWarrantCreation$nullable, 'presiding_judge', $author$project$Page$Organize$DetainerWarrantCreation$encodeRelated, form.ip),
											_Utils_ap(
												A3($author$project$Page$Organize$DetainerWarrantCreation$nullable, 'is_cares', $elm$json$Json$Encode$bool, form.hF),
												_Utils_ap(
													A3($author$project$Page$Organize$DetainerWarrantCreation$nullable, 'is_legacy', $elm$json$Json$Encode$bool, form.hH),
													_Utils_ap(
														A3($author$project$Page$Organize$DetainerWarrantCreation$nullable, 'nonpayment', $elm$json$Json$Encode$bool, form.h3),
														_Utils_ap(
															A3($author$project$Page$Organize$DetainerWarrantCreation$nullable, 'amount_claimed', $elm$json$Json$Encode$float, form.gH),
															A3($author$project$Page$Organize$DetainerWarrantCreation$nullable, 'notes', $elm$json$Json$Encode$string, form.aZ))))))))))))));
		return A5(
			$author$project$Api$patch,
			$author$project$Api$Endpoint$detainerWarrant(form.g4),
			maybeCred,
			$author$project$Page$Organize$DetainerWarrantCreation$toBody(detainerWarrant),
			$author$project$Page$Organize$DetainerWarrantCreation$CreatedDetainerWarrant,
			$author$project$Api$itemDecoder($author$project$DetainerWarrant$decoder));
	});
var $author$project$Page$Organize$DetainerWarrantCreation$UpsertedJudgement = F2(
	function (a, b) {
		return {$: 57, a: a, b: b};
	});
var $author$project$Page$Organize$DetainerWarrantCreation$conditional = F3(
	function (fieldName, fn, field) {
		return A2(
			$elm$core$Maybe$withDefault,
			_List_Nil,
			A2(
				$elm$core$Maybe$map,
				function (f) {
					return _List_fromArray(
						[
							_Utils_Tuple2(
							fieldName,
							fn(f))
						]);
				},
				field));
	});
var $author$project$Page$Organize$DetainerWarrantCreation$encodeJudgement = F2(
	function (warrant, judgement) {
		return $elm$json$Json$Encode$object(
			_Utils_ap(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'interest',
						$elm$json$Json$Encode$bool(judgement.b0)),
						_Utils_Tuple2(
						'detainer_warrant',
						$elm$json$Json$Encode$object(
							_List_fromArray(
								[
									_Utils_Tuple2(
									'docket_id',
									$elm$json$Json$Encode$string(warrant.g4))
								])))
					]),
				_Utils_ap(
					A3($author$project$Page$Organize$DetainerWarrantCreation$conditional, 'id', $elm$json$Json$Encode$int, judgement.hs),
					_Utils_ap(
						A3($author$project$Page$Organize$DetainerWarrantCreation$nullable, 'court_date', $elm$json$Json$Encode$string, judgement.bj),
						_Utils_ap(
							A3($author$project$Page$Organize$DetainerWarrantCreation$nullable, 'in_favor_of', $elm$json$Json$Encode$string, judgement.hv),
							_Utils_ap(
								A3($author$project$Page$Organize$DetainerWarrantCreation$nullable, 'notes', $elm$json$Json$Encode$string, judgement.aZ),
								_Utils_ap(
									A3($author$project$Page$Organize$DetainerWarrantCreation$nullable, 'entered_by', $elm$json$Json$Encode$string, judgement.c3),
									_Utils_ap(
										A3($author$project$Page$Organize$DetainerWarrantCreation$nullable, 'awards_fees', $elm$json$Json$Encode$float, judgement.bL),
										_Utils_ap(
											A3($author$project$Page$Organize$DetainerWarrantCreation$nullable, 'awards_possession', $elm$json$Json$Encode$bool, judgement.cK),
											_Utils_ap(
												A3($author$project$Page$Organize$DetainerWarrantCreation$nullable, 'interest_rate', $elm$json$Json$Encode$float, judgement.d6),
												_Utils_ap(
													A3($author$project$Page$Organize$DetainerWarrantCreation$nullable, 'interest_follows_site', $elm$json$Json$Encode$bool, judgement.b7),
													_Utils_ap(
														A3(
															$author$project$Page$Organize$DetainerWarrantCreation$nullable,
															'dismissal_basis',
															$elm$json$Json$Encode$string,
															_Utils_eq(
																judgement.hv,
																$elm$core$Maybe$Just('DEFENDANT')) ? judgement.d$ : $elm$core$Maybe$Nothing),
														_Utils_ap(
															A3(
																$author$project$Page$Organize$DetainerWarrantCreation$nullable,
																'with_prejudice',
																$elm$json$Json$Encode$bool,
																_Utils_eq(
																	judgement.hv,
																	$elm$core$Maybe$Just('DEFENDANT')) ? judgement.dI : $elm$core$Maybe$Nothing),
															A3($author$project$Page$Organize$DetainerWarrantCreation$nullable, 'judge', $author$project$Page$Organize$DetainerWarrantCreation$encodeRelated, judgement.dd))))))))))))));
	});
var $author$project$Api$Endpoint$judgements = A2(
	$elm$core$Basics$composeL,
	$author$project$Api$Endpoint$url(
		_List_fromArray(
			['judgements', ''])),
	$author$project$Api$Endpoint$toQueryArgs);
var $author$project$Page$Organize$DetainerWarrantCreation$upsertJudgement = F4(
	function (maybeCred, warrant, index, form) {
		var decoder = $author$project$Api$itemDecoder($author$project$DetainerWarrant$judgementDecoder);
		var body = $author$project$Page$Organize$DetainerWarrantCreation$toBody(
			A2($author$project$Page$Organize$DetainerWarrantCreation$encodeJudgement, warrant, form));
		var _v0 = form.hs;
		if (!_v0.$) {
			var id = _v0.a;
			return A5(
				$author$project$Api$patch,
				$author$project$Api$Endpoint$judgement(id),
				maybeCred,
				body,
				$author$project$Page$Organize$DetainerWarrantCreation$UpsertedJudgement(index),
				decoder);
		} else {
			return A5(
				$author$project$Api$post,
				$author$project$Api$Endpoint$judgements(_List_Nil),
				maybeCred,
				body,
				$author$project$Page$Organize$DetainerWarrantCreation$UpsertedJudgement(index),
				decoder);
		}
	});
var $author$project$Page$Organize$DetainerWarrantCreation$CourtDate = {$: 2};
var $author$project$Page$Organize$DetainerWarrantCreation$DefendantAddress = {$: 3};
var $author$project$Page$Organize$DetainerWarrantCreation$DefendantFirstName = function (a) {
	return {$: 4, a: a};
};
var $author$project$Page$Organize$DetainerWarrantCreation$DefendantLastName = function (a) {
	return {$: 5, a: a};
};
var $author$project$Page$Organize$DetainerWarrantCreation$DefendantPhoneNumber = F2(
	function (a, b) {
		return {$: 6, a: a, b: b};
	});
var $author$project$Page$Organize$DetainerWarrantCreation$DocketId = {$: 0};
var $author$project$Page$Organize$DetainerWarrantCreation$FileDate = {$: 1};
var $author$project$Page$Organize$DetainerWarrantCreation$fieldsToValidate = function (defendants) {
	var numDefendants = $elm$core$List$length(defendants) - 1;
	return $elm$core$List$concat(
		_List_fromArray(
			[
				_List_fromArray(
				[$author$project$Page$Organize$DetainerWarrantCreation$DocketId, $author$project$Page$Organize$DetainerWarrantCreation$FileDate, $author$project$Page$Organize$DetainerWarrantCreation$CourtDate, $author$project$Page$Organize$DetainerWarrantCreation$DefendantAddress]),
				A2(
				$elm$core$List$map,
				$author$project$Page$Organize$DetainerWarrantCreation$DefendantFirstName,
				A2($elm$core$List$range, 0, numDefendants)),
				A2(
				$elm$core$List$map,
				$author$project$Page$Organize$DetainerWarrantCreation$DefendantLastName,
				A2($elm$core$List$range, 0, numDefendants)),
				$elm$core$List$concat(
				A2(
					$elm$core$List$indexedMap,
					F2(
						function (i, def) {
							return A2(
								$elm$core$List$indexedMap,
								F2(
									function (j, _v0) {
										return A2($author$project$Page$Organize$DetainerWarrantCreation$DefendantPhoneNumber, i, j);
									}),
								def.l5);
						}),
					defendants))
			]));
};
var $author$project$Page$Organize$DetainerWarrantCreation$Trimmed = $elm$core$Basics$identity;
var $author$project$Page$Organize$DetainerWarrantCreation$trimFields = function (form) {
	return _Utils_update(
		form,
		{
			je: $elm$core$String$trim(form.je),
			gH: $elm$core$String$trim(form.gH),
			g4: $elm$core$String$trim(form.g4),
			aZ: $elm$core$String$trim(form.aZ)
		});
};
var $author$project$Page$Organize$DetainerWarrantCreation$InvalidEntry = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $justinmimbs$date$Date$compare = F2(
	function (_v0, _v1) {
		var a = _v0;
		var b = _v1;
		return A2($elm$core$Basics$compare, a, b);
	});
var $elm$core$List$drop = F2(
	function (n, list) {
		drop:
		while (true) {
			if (n <= 0) {
				return list;
			} else {
				if (!list.b) {
					return list;
				} else {
					var x = list.a;
					var xs = list.b;
					var $temp$n = n - 1,
						$temp$list = xs;
					n = $temp$n;
					list = $temp$list;
					continue drop;
				}
			}
		}
	});
var $elm_community$list_extra$List$Extra$getAt = F2(
	function (idx, xs) {
		return (idx < 0) ? $elm$core$Maybe$Nothing : $elm$core$List$head(
			A2($elm$core$List$drop, idx, xs));
	});
var $elm$core$List$takeReverse = F3(
	function (n, list, kept) {
		takeReverse:
		while (true) {
			if (n <= 0) {
				return kept;
			} else {
				if (!list.b) {
					return kept;
				} else {
					var x = list.a;
					var xs = list.b;
					var $temp$n = n - 1,
						$temp$list = xs,
						$temp$kept = A2($elm$core$List$cons, x, kept);
					n = $temp$n;
					list = $temp$list;
					kept = $temp$kept;
					continue takeReverse;
				}
			}
		}
	});
var $elm$core$List$takeTailRec = F2(
	function (n, list) {
		return $elm$core$List$reverse(
			A3($elm$core$List$takeReverse, n, list, _List_Nil));
	});
var $elm$core$List$takeFast = F3(
	function (ctr, n, list) {
		if (n <= 0) {
			return _List_Nil;
		} else {
			var _v0 = _Utils_Tuple2(n, list);
			_v0$1:
			while (true) {
				_v0$5:
				while (true) {
					if (!_v0.b.b) {
						return list;
					} else {
						if (_v0.b.b.b) {
							switch (_v0.a) {
								case 1:
									break _v0$1;
								case 2:
									var _v2 = _v0.b;
									var x = _v2.a;
									var _v3 = _v2.b;
									var y = _v3.a;
									return _List_fromArray(
										[x, y]);
								case 3:
									if (_v0.b.b.b.b) {
										var _v4 = _v0.b;
										var x = _v4.a;
										var _v5 = _v4.b;
										var y = _v5.a;
										var _v6 = _v5.b;
										var z = _v6.a;
										return _List_fromArray(
											[x, y, z]);
									} else {
										break _v0$5;
									}
								default:
									if (_v0.b.b.b.b && _v0.b.b.b.b.b) {
										var _v7 = _v0.b;
										var x = _v7.a;
										var _v8 = _v7.b;
										var y = _v8.a;
										var _v9 = _v8.b;
										var z = _v9.a;
										var _v10 = _v9.b;
										var w = _v10.a;
										var tl = _v10.b;
										return (ctr > 1000) ? A2(
											$elm$core$List$cons,
											x,
											A2(
												$elm$core$List$cons,
												y,
												A2(
													$elm$core$List$cons,
													z,
													A2(
														$elm$core$List$cons,
														w,
														A2($elm$core$List$takeTailRec, n - 4, tl))))) : A2(
											$elm$core$List$cons,
											x,
											A2(
												$elm$core$List$cons,
												y,
												A2(
													$elm$core$List$cons,
													z,
													A2(
														$elm$core$List$cons,
														w,
														A3($elm$core$List$takeFast, ctr + 1, n - 4, tl)))));
									} else {
										break _v0$5;
									}
							}
						} else {
							if (_v0.a === 1) {
								break _v0$1;
							} else {
								break _v0$5;
							}
						}
					}
				}
				return list;
			}
			var _v1 = _v0.b;
			var x = _v1.a;
			return _List_fromArray(
				[x]);
		}
	});
var $elm$core$List$take = F2(
	function (n, list) {
		return A3($elm$core$List$takeFast, 0, n, list);
	});
var $robinheghan$elm_phone_numbers$PhoneNumber$CarrierSpecific = 13;
var $robinheghan$elm_phone_numbers$PhoneNumber$Emergency = 9;
var $robinheghan$elm_phone_numbers$PhoneNumber$FixedLine = 0;
var $robinheghan$elm_phone_numbers$PhoneNumber$Mobile = 1;
var $robinheghan$elm_phone_numbers$PhoneNumber$NoInternationalDialling = 15;
var $robinheghan$elm_phone_numbers$PhoneNumber$Pager = 7;
var $robinheghan$elm_phone_numbers$PhoneNumber$PersonalNumber = 5;
var $robinheghan$elm_phone_numbers$PhoneNumber$PremiumRate = 3;
var $robinheghan$elm_phone_numbers$PhoneNumber$SharedCost = 4;
var $robinheghan$elm_phone_numbers$PhoneNumber$ShortCode = 11;
var $robinheghan$elm_phone_numbers$PhoneNumber$SmsServices = 14;
var $robinheghan$elm_phone_numbers$PhoneNumber$StandardRate = 12;
var $robinheghan$elm_phone_numbers$PhoneNumber$TollFree = 2;
var $robinheghan$elm_phone_numbers$PhoneNumber$Uan = 8;
var $robinheghan$elm_phone_numbers$PhoneNumber$Voicemail = 10;
var $robinheghan$elm_phone_numbers$PhoneNumber$Voip = 6;
var $robinheghan$elm_phone_numbers$PhoneNumber$anyType = _List_fromArray(
	[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]);
var $elm$regex$Regex$Match = F4(
	function (match, index, number, submatches) {
		return {kX: index, lm: match, lE: number, mL: submatches};
	});
var $elm$regex$Regex$fromStringWith = _Regex_fromStringWith;
var $elm$regex$Regex$fromString = function (string) {
	return A2(
		$elm$regex$Regex$fromStringWith,
		{jO: false, ly: false},
		string);
};
var $elm$regex$Regex$never = _Regex_never;
var $robinheghan$elm_phone_numbers$PhoneNumber$Countries$countryUS = {
	dX: '1',
	hl: A2(
		$elm$core$Maybe$withDefault,
		$elm$regex$Regex$never,
		$elm$regex$Regex$fromString('[2-9]\\d{9}')),
	hs: 'US',
	hB: $elm$core$Maybe$Just('011'),
	lB: $elm$core$Maybe$Just('1'),
	h4: _List_fromArray(
		[
			{
			kA: '2015550123',
			fy: 0,
			ig: A2(
				$elm$core$Maybe$withDefault,
				$elm$regex$Regex$never,
				$elm$regex$Regex$fromString('(?:2(?:0[1-35-9]|1[02-9]|2[03-589]|3[149]|4[08]|5[1-46]|6[0279]|7[0269]|8[13])|3(?:0[1-57-9]|1[02-9]|2[01356]|3[0-24679]|4[167]|5[12]|6[014]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[0235]|58|6[39]|7[0589]|8[04])|5(?:0[1-57-9]|1[0235-8]|20|3[0149]|4[01]|5[19]|6[1-47]|7[013-5]|8[056])|6(?:0[1-35-9]|1[024-9]|2[03689]|[34][016]|5[0179]|6[0-279]|78|8[0-29])|7(?:0[1-46-8]|1[2-9]|2[04-7]|3[1247]|4[037]|5[47]|6[02359]|7[02-59]|8[156])|8(?:0[1-68]|1[02-8]|2[08]|3[0-289]|4[3578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[0146-8]|4[0179]|5[12469]|7[0-389]|8[04-69]))[2-9]\\d{6}'))
		},
			{
			kA: '2015550123',
			fy: 1,
			ig: A2(
				$elm$core$Maybe$withDefault,
				$elm$regex$Regex$never,
				$elm$regex$Regex$fromString('(?:2(?:0[1-35-9]|1[02-9]|2[03-589]|3[149]|4[08]|5[1-46]|6[0279]|7[0269]|8[13])|3(?:0[1-57-9]|1[02-9]|2[01356]|3[0-24679]|4[167]|5[12]|6[014]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[0235]|58|6[39]|7[0589]|8[04])|5(?:0[1-57-9]|1[0235-8]|20|3[0149]|4[01]|5[19]|6[1-47]|7[013-5]|8[056])|6(?:0[1-35-9]|1[024-9]|2[03689]|[34][016]|5[0179]|6[0-279]|78|8[0-29])|7(?:0[1-46-8]|1[2-9]|2[04-7]|3[1247]|4[037]|5[47]|6[02359]|7[02-59]|8[156])|8(?:0[1-68]|1[02-8]|2[08]|3[0-289]|4[3578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[0146-8]|4[0179]|5[12469]|7[0-389]|8[04-69]))[2-9]\\d{6}'))
		},
			{
			kA: '8002345678',
			fy: 2,
			ig: A2(
				$elm$core$Maybe$withDefault,
				$elm$regex$Regex$never,
				$elm$regex$Regex$fromString('8(?:00|33|44|55|66|77|88)[2-9]\\d{6}'))
		},
			{
			kA: '9002345678',
			fy: 3,
			ig: A2(
				$elm$core$Maybe$withDefault,
				$elm$regex$Regex$never,
				$elm$regex$Regex$fromString('900[2-9]\\d{6}'))
		},
			{
			kA: '5002345678',
			fy: 5,
			ig: A2(
				$elm$core$Maybe$withDefault,
				$elm$regex$Regex$never,
				$elm$regex$Regex$fromString('52(?:35(?:[02-46-9]\\d|1[02-9]|5[0-46-9])|45(?:[034]\\d|1[02-9]|2[024-9]|5[0-46-9]))\\d{4}|52(?:3[2-46-9]|4[2-4])(?:[02-9]\\d|1[02-9])\\d{4}|5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}'))
		}
		])
};
var $robinheghan$elm_phone_numbers$PhoneNumber$localizeNumber = F2(
	function (country, number) {
		var _v0 = country.hB;
		if (_v0.$ === 1) {
			return $elm$core$Maybe$Just(number);
		} else {
			var prefix = _v0.a;
			var prefixLength = $elm$core$String$length(prefix);
			var countryCodeLength = $elm$core$String$length(country.dX);
			return A2($elm$core$String$startsWith, '+', number) ? (_Utils_eq(
				country.dX,
				A2(
					$elm$core$String$left,
					countryCodeLength,
					A2($elm$core$String$dropLeft, 1, number))) ? $elm$core$Maybe$Just(
				A2($elm$core$String$dropLeft, countryCodeLength + 1, number)) : $elm$core$Maybe$Nothing) : (A2($elm$core$String$startsWith, prefix, number) ? (_Utils_eq(
				country.dX,
				A2(
					$elm$core$String$left,
					countryCodeLength,
					A2($elm$core$String$dropLeft, prefixLength, number))) ? $elm$core$Maybe$Just(
				A2($elm$core$String$dropLeft, prefixLength + countryCodeLength, number)) : $elm$core$Maybe$Nothing) : $elm$core$Maybe$Just(number));
		}
	});
var $elm$core$List$member = F2(
	function (x, xs) {
		return A2(
			$elm$core$List$any,
			function (a) {
				return _Utils_eq(a, x);
			},
			xs);
	});
var $elm$regex$Regex$find = _Regex_findAtMost(_Regex_infinity);
var $robinheghan$elm_phone_numbers$PhoneNumber$regexExactMatch = F2(
	function (regex, str) {
		var _v0 = A2($elm$regex$Regex$find, regex, str);
		if (_v0.b && (!_v0.b.b)) {
			var match = _v0.a;
			return _Utils_eq(match.lm, str);
		} else {
			return false;
		}
	});
var $robinheghan$elm_phone_numbers$PhoneNumber$matchingCountry = F4(
	function (number, defaultCountry, relevantTypes, country) {
		var maybeLocalNumber = A2($robinheghan$elm_phone_numbers$PhoneNumber$localizeNumber, country, number);
		var matchesSpec = F2(
			function (localNumber, desc) {
				return A2($robinheghan$elm_phone_numbers$PhoneNumber$regexExactMatch, desc.ig, localNumber);
			});
		var isDefaultCountry = _Utils_eq(defaultCountry.hs, country.hs);
		if (maybeLocalNumber.$ === 1) {
			return $elm$core$Maybe$Nothing;
		} else {
			var localNumber = maybeLocalNumber.a;
			if (_Utils_eq(localNumber, number) && (!isDefaultCountry)) {
				return $elm$core$Maybe$Nothing;
			} else {
				var matchingTypes = A2(
					$elm$core$List$map,
					function ($) {
						return $.fy;
					},
					A2(
						$elm$core$List$filter,
						matchesSpec(localNumber),
						A2(
							$elm$core$List$filter,
							function (nt) {
								return A2($elm$core$List$member, nt.fy, relevantTypes);
							},
							country.h4)));
				if (!matchingTypes.b) {
					return A2($robinheghan$elm_phone_numbers$PhoneNumber$regexExactMatch, country.hl, localNumber) ? $elm$core$Maybe$Just(
						_Utils_Tuple2(country, _List_Nil)) : $elm$core$Maybe$Nothing;
				} else {
					return $elm$core$Maybe$Just(
						_Utils_Tuple2(country, matchingTypes));
				}
			}
		}
	});
var $elm$core$String$filter = _String_filter;
var $robinheghan$elm_phone_numbers$PhoneNumber$sanitizeNumber = function (str) {
	return A2(
		$elm$core$String$filter,
		function (c) {
			return c !== ' ';
		},
		str);
};
var $robinheghan$elm_phone_numbers$PhoneNumber$matches = F2(
	function (config, number) {
		var sanitizedNumber = $robinheghan$elm_phone_numbers$PhoneNumber$sanitizeNumber(number);
		return A2(
			$elm$core$List$filterMap,
			A3($robinheghan$elm_phone_numbers$PhoneNumber$matchingCountry, sanitizedNumber, config.kc, config.ng),
			A2($elm$core$List$cons, config.kc, config.lY));
	});
var $robinheghan$elm_phone_numbers$PhoneNumber$valid = F2(
	function (config, number) {
		var _v0 = A2($robinheghan$elm_phone_numbers$PhoneNumber$matches, config, number);
		if (!_v0.b) {
			return false;
		} else {
			return true;
		}
	});
var $author$project$Page$Organize$DetainerWarrantCreation$validUSNumber = function (number) {
	return A2(
		$robinheghan$elm_phone_numbers$PhoneNumber$valid,
		{kc: $robinheghan$elm_phone_numbers$PhoneNumber$Countries$countryUS, lY: _List_Nil, ng: $robinheghan$elm_phone_numbers$PhoneNumber$anyType},
		number);
};
var $author$project$Page$Organize$DetainerWarrantCreation$validateField = F3(
	function (today, _v0, field) {
		var form = _v0;
		return A2(
			$elm$core$List$map,
			$author$project$Page$Organize$DetainerWarrantCreation$InvalidEntry(field),
			function () {
				switch (field.$) {
					case 0:
						return $elm$core$String$isEmpty(form.g4) ? _List_Nil : _List_Nil;
					case 1:
						return _List_Nil;
					case 2:
						if ($elm$core$String$isEmpty(form.bj.j9)) {
							return _List_Nil;
						} else {
							var _v2 = $justinmimbs$date$Date$fromIsoString(form.bj.j9);
							if (!_v2.$) {
								return _List_Nil;
							} else {
								var errorStr = _v2.a;
								return _List_fromArray(
									[errorStr]);
							}
						}
					case 3:
						return $elm$core$String$isEmpty(form.je) ? _List_fromArray(
							['Defendant address cannot be blank']) : _List_Nil;
					case 4:
						var defIndex = field.a;
						var firstName = A2(
							$elm$core$Maybe$withDefault,
							'',
							A2(
								$elm$core$Maybe$map,
								function ($) {
									return $.kE;
								},
								A2($elm_community$list_extra$List$Extra$getAt, defIndex, form.g0)));
						return $elm$core$String$isEmpty(firstName) ? _List_fromArray(
							['First name cannot be blank']) : _List_Nil;
					case 5:
						var defIndex = field.a;
						var lastName = A2(
							$elm$core$Maybe$withDefault,
							'',
							A2(
								$elm$core$Maybe$map,
								function ($) {
									return $.lh;
								},
								A2($elm_community$list_extra$List$Extra$getAt, defIndex, form.g0)));
						return $elm$core$String$isEmpty(lastName) ? _List_fromArray(
							['Last name cannot be blank']) : _List_Nil;
					case 6:
						var defIndex = field.a;
						var phoneIndex = field.b;
						var phone = A2(
							$elm$core$Maybe$withDefault,
							'',
							A2(
								$elm$core$Maybe$andThen,
								A2(
									$elm$core$Basics$composeL,
									$elm_community$list_extra$List$Extra$getAt(phoneIndex),
									function ($) {
										return $.l5;
									}),
								A2($elm_community$list_extra$List$Extra$getAt, defIndex, form.g0)));
						return $author$project$Page$Organize$DetainerWarrantCreation$validUSNumber(phone) ? _List_fromArray(
							['Invalid phone number format']) : _List_Nil;
					default:
						var index = field.a;
						var judgementValidation = field.b;
						var _v3 = $elm$core$List$head(
							A2($elm$core$List$take, index, form.lf));
						if (!_v3.$) {
							var judgement = _v3.a;
							return (!A2(
								$justinmimbs$date$Date$compare,
								A2($elm$core$Maybe$withDefault, today, judgement.bj.gZ),
								A2($elm$core$Maybe$withDefault, today, form.bj.gZ))) ? _List_fromArray(
								['Judgement cannot be filed before detainer warrant.']) : _List_Nil;
						} else {
							return _List_Nil;
						}
				}
			}());
	});
var $author$project$Page$Organize$DetainerWarrantCreation$validate = F2(
	function (today, formStatus) {
		if (!formStatus.$) {
			return $elm$core$Result$Err(_List_Nil);
		} else {
			var form = formStatus.a;
			var trimmedForm = $author$project$Page$Organize$DetainerWarrantCreation$trimFields(form);
			var _v1 = A2(
				$elm$core$List$concatMap,
				A2($author$project$Page$Organize$DetainerWarrantCreation$validateField, today, trimmedForm),
				$author$project$Page$Organize$DetainerWarrantCreation$fieldsToValidate(form.g0));
			if (!_v1.b) {
				return $elm$core$Result$Ok(trimmedForm);
			} else {
				var problems = _v1;
				return $elm$core$Result$Err(problems);
			}
		}
	});
var $author$project$Page$Organize$DetainerWarrantCreation$nextStepSave = function (model) {
	nextStepSave:
	while (true) {
		var maybeCred = $author$project$Session$cred(model.fY);
		var _v0 = model.F;
		if (!_v0.$) {
			var today = _v0.a;
			var _v1 = A2($author$project$Page$Organize$DetainerWarrantCreation$validate, today, model.bZ);
			if (!_v1.$) {
				var form = _v1.a;
				var apiForms = A2($author$project$Page$Organize$DetainerWarrantCreation$toDetainerWarrant, today, form);
				var _v2 = model.n;
				switch (_v2.$) {
					case 0:
						var models = _v2.a;
						return (models.bd && (models.gW && (models.dd && (models.ij && (_Utils_cmp(
							$elm$core$List$length(apiForms.g0),
							models.g0) > -1))))) ? _Utils_Tuple2(
							_Utils_update(
								model,
								{n: $author$project$Page$Organize$DetainerWarrantCreation$SavingWarrant}),
							A2($author$project$Page$Organize$DetainerWarrantCreation$updateDetainerWarrant, maybeCred, apiForms.c$)) : _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
					case 1:
						var toDelete = function () {
							var _v3 = model.cI;
							if (!_v3.$) {
								var warrant = _v3.a;
								return (!_Utils_eq(
									$elm$core$List$length(warrant.lf),
									$elm$core$List$length(apiForms.lf))) ? $elm$core$Set$toList(
									A2(
										$elm$core$Set$diff,
										$elm$core$Set$fromList(
											A2(
												$elm$core$List$map,
												function ($) {
													return $.hs;
												},
												warrant.lf)),
										$elm$core$Set$fromList(
											A2(
												$elm$core$List$filterMap,
												function ($) {
													return $.hs;
												},
												apiForms.lf)))) : _List_Nil;
							} else {
								return _List_Nil;
							}
						}();
						if ($elm$core$List$isEmpty(apiForms.lf) && $elm$core$List$isEmpty(toDelete)) {
							var $temp$model = _Utils_update(
								model,
								{n: $author$project$Page$Organize$DetainerWarrantCreation$Done});
							model = $temp$model;
							continue nextStepSave;
						} else {
							return _Utils_Tuple2(
								_Utils_update(
									model,
									{
										n: $author$project$Page$Organize$DetainerWarrantCreation$SavingJudgements(
											{lf: 0})
									}),
								$elm$core$Platform$Cmd$batch(
									$elm$core$List$concat(
										_List_fromArray(
											[
												A2(
												$elm$core$List$indexedMap,
												A2($author$project$Page$Organize$DetainerWarrantCreation$upsertJudgement, maybeCred, apiForms.c$),
												apiForms.lf),
												A2(
												$elm$core$List$indexedMap,
												$author$project$Page$Organize$DetainerWarrantCreation$deleteJudgement(maybeCred),
												toDelete)
											]))));
						}
					case 2:
						var models = _v2.a;
						if (_Utils_cmp(
							models.lf,
							$elm$core$List$length(apiForms.lf)) > -1) {
							var $temp$model = _Utils_update(
								model,
								{n: $author$project$Page$Organize$DetainerWarrantCreation$Done});
							model = $temp$model;
							continue nextStepSave;
						} else {
							return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
						}
					default:
						return _Utils_Tuple2(
							model,
							model.cj ? A2(
								$author$project$Route$replaceUrl,
								$author$project$Session$navKey(model.fY),
								$author$project$Route$DetainerWarrantCreation($elm$core$Maybe$Nothing)) : A2(
								$author$project$Route$replaceUrl,
								$author$project$Session$navKey(model.fY),
								$author$project$Route$DetainerWarrantCreation(
									$elm$core$Maybe$Just(apiForms.c$.g4))));
				}
			} else {
				return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
			}
		} else {
			return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
		}
	}
};
var $author$project$Page$Organize$DetainerWarrantCreation$NonpaymentDropdownMsg = function (a) {
	return {$: 21, a: a};
};
var $author$project$Page$Organize$DetainerWarrantCreation$PickedNonpayment = function (a) {
	return {$: 22, a: a};
};
var $author$project$Page$Organize$DetainerWarrantCreation$nonpaymentDropdownConfig = A4($author$project$Page$Organize$DetainerWarrantCreation$dropdownConfig, 'Nonpayment', $author$project$Page$Organize$DetainerWarrantCreation$ternaryText, $author$project$Page$Organize$DetainerWarrantCreation$NonpaymentDropdownMsg, $author$project$Page$Organize$DetainerWarrantCreation$PickedNonpayment);
var $Massolari$elm_mask$Mask$maskStringHelper = F3(
	function (pattern, value, result) {
		maskStringHelper:
		while (true) {
			var _v0 = $elm$core$String$uncons(pattern);
			if (!_v0.$) {
				var _v1 = _v0.a;
				var headPattern = _v1.a;
				var tailPattern = _v1.b;
				var _v2 = $elm$core$String$uncons(value);
				if (!_v2.$) {
					var _v3 = _v2.a;
					var charValue = _v3.a;
					var rest = _v3.b;
					if ('#' === headPattern) {
						var $temp$pattern = tailPattern,
							$temp$value = rest,
							$temp$result = _Utils_ap(
							result,
							$elm$core$String$fromChar(charValue));
						pattern = $temp$pattern;
						value = $temp$value;
						result = $temp$result;
						continue maskStringHelper;
					} else {
						var notHashtagHeadPattern = headPattern;
						var $temp$pattern = tailPattern,
							$temp$value = value,
							$temp$result = _Utils_ap(
							result,
							$elm$core$String$fromChar(notHashtagHeadPattern));
						pattern = $temp$pattern;
						value = $temp$value;
						result = $temp$result;
						continue maskStringHelper;
					}
				} else {
					return A2($elm$core$String$contains, '#', pattern) ? result : _Utils_ap(result, pattern);
				}
			} else {
				return result;
			}
		}
	});
var $Massolari$elm_mask$Mask$number = F2(
	function (pattern, value) {
		return function (v) {
			return A3($Massolari$elm_mask$Mask$maskStringHelper, pattern, v, '');
		}(
			A2($elm$core$String$filter, $elm$core$Char$isDigit, value));
	});
var $elm_community$maybe_extra$Maybe$Extra$orElse = F2(
	function (ma, mb) {
		if (mb.$ === 1) {
			return ma;
		} else {
			return mb;
		}
	});
var $author$project$Api$Endpoint$plaintiffs = A2(
	$elm$core$Basics$composeL,
	$author$project$Api$Endpoint$url(
		_List_fromArray(
			['plaintiffs', ''])),
	$author$project$Api$Endpoint$toQueryArgs);
var $elm_community$list_extra$List$Extra$removeAt = F2(
	function (index, l) {
		if (index < 0) {
			return l;
		} else {
			var _v0 = A2($elm$core$List$drop, index, l);
			if (!_v0.b) {
				return l;
			} else {
				var rest = _v0.b;
				return _Utils_ap(
					A2($elm$core$List$take, index, l),
					rest);
			}
		}
	});
var $NoRedInk$elm_rollbar$Rollbar$CodeVersion = $elm$core$Basics$identity;
var $NoRedInk$elm_rollbar$Rollbar$codeVersion = $elm$core$Basics$identity;
var $author$project$Runtime$codeVersion = function (_v0) {
	var version = _v0;
	return version;
};
var $NoRedInk$elm_rollbar$Rollbar$Environment = $elm$core$Basics$identity;
var $NoRedInk$elm_rollbar$Rollbar$environment = $elm$core$Basics$identity;
var $author$project$Runtime$environment = function (env) {
	switch (env) {
		case 0:
			return 'development';
		case 1:
			return 'staging';
		default:
			return 'production';
	}
};
var $author$project$Runtime$rollbarToken = function (_v0) {
	var tokenStr = _v0;
	return tokenStr;
};
var $NoRedInk$elm_rollbar$Rollbar$Critical = 0;
var $NoRedInk$elm_rollbar$Rollbar$Debug = 4;
var $NoRedInk$elm_rollbar$Rollbar$Error = 1;
var $NoRedInk$elm_rollbar$Rollbar$Info = 3;
var $NoRedInk$elm_rollbar$Rollbar$Scope = $elm$core$Basics$identity;
var $NoRedInk$elm_rollbar$Rollbar$Warning = 2;
var $NoRedInk$elm_rollbar$Rollbar$retries = {
	bS: 60,
	h0: $elm$time$Time$millisToPosix(1000)
};
var $NoRedInk$elm_rollbar$Rollbar$endpointUrl = 'https://api.rollbar.com/api/1/item/';
var $elm$http$Http$stringResolver = A2(_Http_expect, '', $elm$core$Basics$identity);
var $elm$core$Task$fail = _Scheduler_fail;
var $elm$http$Http$resultToTask = function (result) {
	if (!result.$) {
		var a = result.a;
		return $elm$core$Task$succeed(a);
	} else {
		var x = result.a;
		return $elm$core$Task$fail(x);
	}
};
var $elm$http$Http$task = function (r) {
	return A3(
		_Http_toTask,
		0,
		$elm$http$Http$resultToTask,
		{jq: false, bM: r.bM, bV: r.mc, b2: r.b2, cf: r.cf, cA: r.cA, cE: $elm$core$Maybe$Nothing, cF: r.cF});
};
var $danyx23$elm_uuid$Uuid$toString = function (_v0) {
	var internalString = _v0;
	return internalString;
};
var $danyx23$elm_uuid$Uuid$encode = A2($elm$core$Basics$composeR, $danyx23$elm_uuid$Uuid$toString, $elm$json$Json$Encode$string);
var $NoRedInk$elm_rollbar$Rollbar$levelToString = function (report) {
	switch (report) {
		case 0:
			return 'critical';
		case 4:
			return 'debug';
		case 1:
			return 'error';
		case 3:
			return 'info';
		default:
			return 'warning';
	}
};
var $NoRedInk$elm_rollbar$Rollbar$Internal$version = '2.0.0';
var $NoRedInk$elm_rollbar$Rollbar$toJsonBody = F8(
	function (_v0, _v1, _v2, _v3, level, message, uuid, metadata) {
		var vtoken = _v0;
		var vscope = _v1;
		var vcodeVersion = _v2;
		var venvironment = _v3;
		return $elm$http$Http$jsonBody(
			$elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'access_token',
						$elm$json$Json$Encode$string(vtoken)),
						_Utils_Tuple2(
						'data',
						$elm$json$Json$Encode$object(
							_List_fromArray(
								[
									_Utils_Tuple2(
									'environment',
									$elm$json$Json$Encode$string(venvironment)),
									_Utils_Tuple2(
									'context',
									$elm$json$Json$Encode$string(vscope)),
									_Utils_Tuple2(
									'uuid',
									$danyx23$elm_uuid$Uuid$encode(uuid)),
									_Utils_Tuple2(
									'client',
									$elm$json$Json$Encode$object(
										_List_fromArray(
											[
												_Utils_Tuple2(
												'elm',
												$elm$json$Json$Encode$object(
													_List_fromArray(
														[
															_Utils_Tuple2(
															'code_version',
															$elm$json$Json$Encode$string(vcodeVersion))
														])))
											]))),
									_Utils_Tuple2(
									'notifier',
									$elm$json$Json$Encode$object(
										_List_fromArray(
											[
												_Utils_Tuple2(
												'name',
												$elm$json$Json$Encode$string('elm-rollbar')),
												_Utils_Tuple2(
												'version',
												$elm$json$Json$Encode$string($NoRedInk$elm_rollbar$Rollbar$Internal$version))
											]))),
									_Utils_Tuple2(
									'level',
									$elm$json$Json$Encode$string(
										$NoRedInk$elm_rollbar$Rollbar$levelToString(level))),
									_Utils_Tuple2(
									'endpoint',
									$elm$json$Json$Encode$string($NoRedInk$elm_rollbar$Rollbar$endpointUrl)),
									_Utils_Tuple2(
									'platform',
									$elm$json$Json$Encode$string('browser')),
									_Utils_Tuple2(
									'language',
									$elm$json$Json$Encode$string('Elm')),
									_Utils_Tuple2(
									'body',
									$elm$json$Json$Encode$object(
										_List_fromArray(
											[
												_Utils_Tuple2(
												'message',
												$elm$json$Json$Encode$object(
													A2(
														$elm$core$List$cons,
														_Utils_Tuple2(
															'body',
															$elm$json$Json$Encode$string(message)),
														$elm$core$Dict$toList(metadata))))
											])))
								])))
					])));
	});
var $NoRedInk$elm_rollbar$Rollbar$tokenHeader = function (_v0) {
	var vtoken = _v0;
	return A2($elm$http$Http$header, 'X-Rollbar-Access-Token', vtoken);
};
var $elm$json$Json$Encode$dict = F3(
	function (toKey, toValue, dictionary) {
		return _Json_wrap(
			A3(
				$elm$core$Dict$foldl,
				F3(
					function (key, value, obj) {
						return A3(
							_Json_addField,
							toKey(key),
							toValue(value),
							obj);
					}),
				_Json_emptyObject(0),
				dictionary));
	});
var $NoRedInk$elm_rollbar$Murmur3$HashData = F4(
	function (shift, seed, hash, charsProcessed) {
		return {bQ: charsProcessed, b1: hash, bB: seed, cs: shift};
	});
var $NoRedInk$elm_rollbar$Murmur3$c1 = 3432918353;
var $NoRedInk$elm_rollbar$Murmur3$c2 = 461845907;
var $elm$core$Bitwise$shiftRightZfBy = _Bitwise_shiftRightZfBy;
var $NoRedInk$elm_rollbar$Murmur3$multiplyBy = F2(
	function (b, a) {
		return ((a & 65535) * b) + ((((a >>> 16) * b) & 65535) << 16);
	});
var $NoRedInk$elm_rollbar$Murmur3$rotlBy = F2(
	function (b, a) {
		return (a << b) | (a >>> (32 - b));
	});
var $elm$core$Bitwise$xor = _Bitwise_xor;
var $NoRedInk$elm_rollbar$Murmur3$finalize = function (data) {
	var acc = (!(!data.b1)) ? (data.bB ^ A2(
		$NoRedInk$elm_rollbar$Murmur3$multiplyBy,
		$NoRedInk$elm_rollbar$Murmur3$c2,
		A2(
			$NoRedInk$elm_rollbar$Murmur3$rotlBy,
			15,
			A2($NoRedInk$elm_rollbar$Murmur3$multiplyBy, $NoRedInk$elm_rollbar$Murmur3$c1, data.b1)))) : data.bB;
	var h0 = acc ^ data.bQ;
	var h1 = A2($NoRedInk$elm_rollbar$Murmur3$multiplyBy, 2246822507, h0 ^ (h0 >>> 16));
	var h2 = A2($NoRedInk$elm_rollbar$Murmur3$multiplyBy, 3266489909, h1 ^ (h1 >>> 13));
	return (h2 ^ (h2 >>> 16)) >>> 0;
};
var $NoRedInk$elm_rollbar$Murmur3$mix = F2(
	function (h1, k1) {
		return A2(
			$NoRedInk$elm_rollbar$Murmur3$multiplyBy,
			5,
			A2(
				$NoRedInk$elm_rollbar$Murmur3$rotlBy,
				13,
				h1 ^ A2(
					$NoRedInk$elm_rollbar$Murmur3$multiplyBy,
					$NoRedInk$elm_rollbar$Murmur3$c2,
					A2(
						$NoRedInk$elm_rollbar$Murmur3$rotlBy,
						15,
						A2($NoRedInk$elm_rollbar$Murmur3$multiplyBy, $NoRedInk$elm_rollbar$Murmur3$c1, k1))))) + 3864292196;
	});
var $NoRedInk$elm_rollbar$Murmur3$hashFold = F2(
	function (c, data) {
		var res = data.b1 | ((255 & $elm$core$Char$toCode(c)) << data.cs);
		var _v0 = data.cs;
		if (_v0 === 24) {
			return {
				bQ: data.bQ + 1,
				b1: 0,
				bB: A2($NoRedInk$elm_rollbar$Murmur3$mix, data.bB, res),
				cs: 0
			};
		} else {
			return {bQ: data.bQ + 1, b1: res, bB: data.bB, cs: data.cs + 8};
		}
	});
var $NoRedInk$elm_rollbar$Murmur3$hashString = F2(
	function (seed, str) {
		return $NoRedInk$elm_rollbar$Murmur3$finalize(
			A3(
				$elm$core$String$foldl,
				$NoRedInk$elm_rollbar$Murmur3$hashFold,
				A4($NoRedInk$elm_rollbar$Murmur3$HashData, 0, seed, 0, 0),
				str));
	});
var $elm$random$Random$Seed = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $elm$random$Random$next = function (_v0) {
	var state0 = _v0.a;
	var incr = _v0.b;
	return A2($elm$random$Random$Seed, ((state0 * 1664525) + incr) >>> 0, incr);
};
var $elm$random$Random$initialSeed = function (x) {
	var _v0 = $elm$random$Random$next(
		A2($elm$random$Random$Seed, 0, 1013904223));
	var state1 = _v0.a;
	var incr = _v0.b;
	var state2 = (state1 + x) >>> 0;
	return $elm$random$Random$next(
		A2($elm$random$Random$Seed, state2, incr));
};
var $elm$random$Random$step = F2(
	function (_v0, seed) {
		var generator = _v0;
		return generator(seed);
	});
var $danyx23$elm_uuid$Uuid$Uuid = $elm$core$Basics$identity;
var $elm$random$Random$Generator = $elm$core$Basics$identity;
var $elm$random$Random$map = F2(
	function (func, _v0) {
		var genA = _v0;
		return function (seed0) {
			var _v1 = genA(seed0);
			var a = _v1.a;
			var seed1 = _v1.b;
			return _Utils_Tuple2(
				func(a),
				seed1);
		};
	});
var $elm$random$Random$peel = function (_v0) {
	var state = _v0.a;
	var word = (state ^ (state >>> ((state >>> 28) + 4))) * 277803737;
	return ((word >>> 22) ^ word) >>> 0;
};
var $elm$random$Random$int = F2(
	function (a, b) {
		return function (seed0) {
			var _v0 = (_Utils_cmp(a, b) < 0) ? _Utils_Tuple2(a, b) : _Utils_Tuple2(b, a);
			var lo = _v0.a;
			var hi = _v0.b;
			var range = (hi - lo) + 1;
			if (!((range - 1) & range)) {
				return _Utils_Tuple2(
					(((range - 1) & $elm$random$Random$peel(seed0)) >>> 0) + lo,
					$elm$random$Random$next(seed0));
			} else {
				var threshhold = (((-range) >>> 0) % range) >>> 0;
				var accountForBias = function (seed) {
					accountForBias:
					while (true) {
						var x = $elm$random$Random$peel(seed);
						var seedN = $elm$random$Random$next(seed);
						if (_Utils_cmp(x, threshhold) < 0) {
							var $temp$seed = seedN;
							seed = $temp$seed;
							continue accountForBias;
						} else {
							return _Utils_Tuple2((x % range) + lo, seedN);
						}
					}
				};
				return accountForBias(seed0);
			}
		};
	});
var $danyx23$elm_uuid$Uuid$Barebones$hexGenerator = A2($elm$random$Random$int, 0, 15);
var $elm$random$Random$listHelp = F4(
	function (revList, n, gen, seed) {
		listHelp:
		while (true) {
			if (n < 1) {
				return _Utils_Tuple2(revList, seed);
			} else {
				var _v0 = gen(seed);
				var value = _v0.a;
				var newSeed = _v0.b;
				var $temp$revList = A2($elm$core$List$cons, value, revList),
					$temp$n = n - 1,
					$temp$gen = gen,
					$temp$seed = newSeed;
				revList = $temp$revList;
				n = $temp$n;
				gen = $temp$gen;
				seed = $temp$seed;
				continue listHelp;
			}
		}
	});
var $elm$random$Random$list = F2(
	function (n, _v0) {
		var gen = _v0;
		return function (seed) {
			return A4($elm$random$Random$listHelp, _List_Nil, n, gen, seed);
		};
	});
var $elm$core$String$fromList = _String_fromList;
var $danyx23$elm_uuid$Uuid$Barebones$limitDigitRange8ToB = function (digit) {
	return (digit & 3) | 8;
};
var $elm$core$Array$bitMask = 4294967295 >>> (32 - $elm$core$Array$shiftStep);
var $elm$core$Elm$JsArray$unsafeGet = _JsArray_unsafeGet;
var $elm$core$Array$getHelp = F3(
	function (shift, index, tree) {
		getHelp:
		while (true) {
			var pos = $elm$core$Array$bitMask & (index >>> shift);
			var _v0 = A2($elm$core$Elm$JsArray$unsafeGet, pos, tree);
			if (!_v0.$) {
				var subTree = _v0.a;
				var $temp$shift = shift - $elm$core$Array$shiftStep,
					$temp$index = index,
					$temp$tree = subTree;
				shift = $temp$shift;
				index = $temp$index;
				tree = $temp$tree;
				continue getHelp;
			} else {
				var values = _v0.a;
				return A2($elm$core$Elm$JsArray$unsafeGet, $elm$core$Array$bitMask & index, values);
			}
		}
	});
var $elm$core$Array$tailIndex = function (len) {
	return (len >>> 5) << 5;
};
var $elm$core$Array$get = F2(
	function (index, _v0) {
		var len = _v0.a;
		var startShift = _v0.b;
		var tree = _v0.c;
		var tail = _v0.d;
		return ((index < 0) || (_Utils_cmp(index, len) > -1)) ? $elm$core$Maybe$Nothing : ((_Utils_cmp(
			index,
			$elm$core$Array$tailIndex(len)) > -1) ? $elm$core$Maybe$Just(
			A2($elm$core$Elm$JsArray$unsafeGet, $elm$core$Array$bitMask & index, tail)) : $elm$core$Maybe$Just(
			A3($elm$core$Array$getHelp, startShift, index, tree)));
	});
var $elm$core$Char$fromCode = _Char_fromCode;
var $elm$core$Array$fromListHelp = F3(
	function (list, nodeList, nodeListSize) {
		fromListHelp:
		while (true) {
			var _v0 = A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, list);
			var jsArray = _v0.a;
			var remainingItems = _v0.b;
			if (_Utils_cmp(
				$elm$core$Elm$JsArray$length(jsArray),
				$elm$core$Array$branchFactor) < 0) {
				return A2(
					$elm$core$Array$builderToArray,
					true,
					{t: nodeList, q: nodeListSize, s: jsArray});
			} else {
				var $temp$list = remainingItems,
					$temp$nodeList = A2(
					$elm$core$List$cons,
					$elm$core$Array$Leaf(jsArray),
					nodeList),
					$temp$nodeListSize = nodeListSize + 1;
				list = $temp$list;
				nodeList = $temp$nodeList;
				nodeListSize = $temp$nodeListSize;
				continue fromListHelp;
			}
		}
	});
var $elm$core$Array$fromList = function (list) {
	if (!list.b) {
		return $elm$core$Array$empty;
	} else {
		return A3($elm$core$Array$fromListHelp, list, _List_Nil, 0);
	}
};
var $danyx23$elm_uuid$Uuid$Barebones$hexDigits = function () {
	var mapChars = F2(
		function (offset, digit) {
			return $elm$core$Char$fromCode(digit + offset);
		});
	return $elm$core$Array$fromList(
		_Utils_ap(
			A2(
				$elm$core$List$map,
				mapChars(48),
				A2($elm$core$List$range, 0, 9)),
			A2(
				$elm$core$List$map,
				mapChars(97),
				A2($elm$core$List$range, 0, 5))));
}();
var $danyx23$elm_uuid$Uuid$Barebones$mapToHex = function (index) {
	var maybeResult = A2($elm$core$Array$get, index, $danyx23$elm_uuid$Uuid$Barebones$hexDigits);
	if (maybeResult.$ === 1) {
		return 'x';
	} else {
		var result = maybeResult.a;
		return result;
	}
};
var $danyx23$elm_uuid$Uuid$Barebones$toUuidString = function (thirtyOneHexDigits) {
	return $elm$core$String$concat(
		_List_fromArray(
			[
				$elm$core$String$fromList(
				A2(
					$elm$core$List$map,
					$danyx23$elm_uuid$Uuid$Barebones$mapToHex,
					A2($elm$core$List$take, 8, thirtyOneHexDigits))),
				'-',
				$elm$core$String$fromList(
				A2(
					$elm$core$List$map,
					$danyx23$elm_uuid$Uuid$Barebones$mapToHex,
					A2(
						$elm$core$List$take,
						4,
						A2($elm$core$List$drop, 8, thirtyOneHexDigits)))),
				'-',
				'4',
				$elm$core$String$fromList(
				A2(
					$elm$core$List$map,
					$danyx23$elm_uuid$Uuid$Barebones$mapToHex,
					A2(
						$elm$core$List$take,
						3,
						A2($elm$core$List$drop, 12, thirtyOneHexDigits)))),
				'-',
				$elm$core$String$fromList(
				A2(
					$elm$core$List$map,
					$danyx23$elm_uuid$Uuid$Barebones$mapToHex,
					A2(
						$elm$core$List$map,
						$danyx23$elm_uuid$Uuid$Barebones$limitDigitRange8ToB,
						A2(
							$elm$core$List$take,
							1,
							A2($elm$core$List$drop, 15, thirtyOneHexDigits))))),
				$elm$core$String$fromList(
				A2(
					$elm$core$List$map,
					$danyx23$elm_uuid$Uuid$Barebones$mapToHex,
					A2(
						$elm$core$List$take,
						3,
						A2($elm$core$List$drop, 16, thirtyOneHexDigits)))),
				'-',
				$elm$core$String$fromList(
				A2(
					$elm$core$List$map,
					$danyx23$elm_uuid$Uuid$Barebones$mapToHex,
					A2(
						$elm$core$List$take,
						12,
						A2($elm$core$List$drop, 19, thirtyOneHexDigits))))
			]));
};
var $danyx23$elm_uuid$Uuid$Barebones$uuidStringGenerator = A2(
	$elm$random$Random$map,
	$danyx23$elm_uuid$Uuid$Barebones$toUuidString,
	A2($elm$random$Random$list, 31, $danyx23$elm_uuid$Uuid$Barebones$hexGenerator));
var $danyx23$elm_uuid$Uuid$uuidGenerator = A2($elm$random$Random$map, $elm$core$Basics$identity, $danyx23$elm_uuid$Uuid$Barebones$uuidStringGenerator);
var $NoRedInk$elm_rollbar$Rollbar$uuidFrom = F7(
	function (_v0, _v1, _v2, level, message, metadata, time) {
		var vtoken = _v0;
		var vscope = _v1;
		var venvironment = _v2;
		var ms = $elm$time$Time$posixToMillis(time);
		var hash = A2(
			$NoRedInk$elm_rollbar$Murmur3$hashString,
			ms,
			A2(
				$elm$json$Json$Encode$encode,
				0,
				A2(
					$elm$json$Json$Encode$list,
					$elm$core$Basics$identity,
					_List_fromArray(
						[
							$elm$json$Json$Encode$string(
							$NoRedInk$elm_rollbar$Rollbar$levelToString(level)),
							$elm$json$Json$Encode$string(message),
							$elm$json$Json$Encode$string(vtoken),
							$elm$json$Json$Encode$string(vscope),
							$elm$json$Json$Encode$string(venvironment),
							A3($elm$json$Json$Encode$dict, $elm$core$Basics$identity, $elm$core$Basics$identity, metadata)
						]))));
		var combinedSeed = $elm$core$Basics$floor(ms) ^ hash;
		return A2(
			$elm$random$Random$step,
			$danyx23$elm_uuid$Uuid$uuidGenerator,
			$elm$random$Random$initialSeed(combinedSeed)).a;
	});
var $elm$core$Process$sleep = _Process_sleep;
var $NoRedInk$elm_rollbar$Rollbar$withRetry = F2(
	function (maxRetryAttempts, task) {
		var retry = function (httpError) {
			if (maxRetryAttempts > 0) {
				if (httpError.$ === 3) {
					var statusCode = httpError.a;
					return (statusCode === 429) ? A2(
						$elm$core$Task$andThen,
						function (_v1) {
							return A2($NoRedInk$elm_rollbar$Rollbar$withRetry, maxRetryAttempts - 1, task);
						},
						$elm$core$Process$sleep(
							$elm$time$Time$posixToMillis($NoRedInk$elm_rollbar$Rollbar$retries.h0))) : $elm$core$Task$fail(httpError);
				} else {
					return $elm$core$Task$fail(httpError);
				}
			} else {
				return $elm$core$Task$fail(httpError);
			}
		};
		return A2($elm$core$Task$onError, retry, task);
	});
var $NoRedInk$elm_rollbar$Rollbar$sendWithTime = F9(
	function (vtoken, vcodeVersion, vscope, venvironment, maxRetryAttempts, level, message, metadata, time) {
		var uuid = A7($NoRedInk$elm_rollbar$Rollbar$uuidFrom, vtoken, vscope, venvironment, level, message, metadata, time);
		var body = A8($NoRedInk$elm_rollbar$Rollbar$toJsonBody, vtoken, vscope, vcodeVersion, venvironment, level, message, uuid, metadata);
		return A2(
			$NoRedInk$elm_rollbar$Rollbar$withRetry,
			maxRetryAttempts,
			A2(
				$elm$core$Task$map,
				function (_v1) {
					return uuid;
				},
				$elm$http$Http$task(
					{
						bM: body,
						b2: _List_fromArray(
							[
								$NoRedInk$elm_rollbar$Rollbar$tokenHeader(vtoken)
							]),
						cf: 'POST',
						mc: $elm$http$Http$stringResolver(
							function (_v0) {
								return $elm$core$Result$Ok(0);
							}),
						cA: $elm$core$Maybe$Nothing,
						cF: $NoRedInk$elm_rollbar$Rollbar$endpointUrl
					})));
	});
var $NoRedInk$elm_rollbar$Rollbar$send = F8(
	function (vtoken, vcodeVersion, vscope, venvironment, maxRetryAttempts, level, message, metadata) {
		return A2(
			$elm$core$Task$andThen,
			A8($NoRedInk$elm_rollbar$Rollbar$sendWithTime, vtoken, vcodeVersion, vscope, venvironment, maxRetryAttempts, level, message, metadata),
			$elm$time$Time$now);
	});
var $NoRedInk$elm_rollbar$Rollbar$scoped = F4(
	function (vtoken, vcodeVersion, venvironment, scopeStr) {
		var vscope = scopeStr;
		return {
			gX: A6($NoRedInk$elm_rollbar$Rollbar$send, vtoken, vcodeVersion, vscope, venvironment, $NoRedInk$elm_rollbar$Rollbar$retries.bS, 0),
			g$: A6($NoRedInk$elm_rollbar$Rollbar$send, vtoken, vcodeVersion, vscope, venvironment, $NoRedInk$elm_rollbar$Rollbar$retries.bS, 4),
			ky: A6($NoRedInk$elm_rollbar$Rollbar$send, vtoken, vcodeVersion, vscope, venvironment, $NoRedInk$elm_rollbar$Rollbar$retries.bS, 1),
			kY: A6($NoRedInk$elm_rollbar$Rollbar$send, vtoken, vcodeVersion, vscope, venvironment, $NoRedInk$elm_rollbar$Rollbar$retries.bS, 3),
			i1: A6($NoRedInk$elm_rollbar$Rollbar$send, vtoken, vcodeVersion, vscope, venvironment, $NoRedInk$elm_rollbar$Rollbar$retries.bS, 2)
		};
	});
var $NoRedInk$elm_rollbar$Rollbar$Token = $elm$core$Basics$identity;
var $NoRedInk$elm_rollbar$Rollbar$token = $elm$core$Basics$identity;
var $author$project$Log$reporting = function (_v0) {
	var rollbarToken = _v0.mf;
	var environment = _v0.kx;
	var codeVersion = _v0.jX;
	return A4(
		$NoRedInk$elm_rollbar$Rollbar$scoped,
		$NoRedInk$elm_rollbar$Rollbar$token(
			$author$project$Runtime$rollbarToken(rollbarToken)),
		$NoRedInk$elm_rollbar$Rollbar$codeVersion(
			$author$project$Runtime$codeVersion(codeVersion)),
		$NoRedInk$elm_rollbar$Rollbar$environment(
			$author$project$Runtime$environment(environment)),
		'eviction-tracker');
};
var $russelldavies$elm_ui_searchbox$SearchBox$reset = function (state) {
	return _Utils_update(
		state,
		{dg: false, cr: 0});
};
var $author$project$Page$Organize$DetainerWarrantCreation$ServerError = function (a) {
	return {$: 1, a: a};
};
var $author$project$Page$Organize$DetainerWarrantCreation$savingError = F2(
	function (httpError, model) {
		var problems = _List_fromArray(
			[
				$author$project$Page$Organize$DetainerWarrantCreation$ServerError('Error saving detainer warrant')
			]);
		return _Utils_update(
			model,
			{bx: problems});
	});
var $author$project$Page$Organize$DetainerWarrantCreation$PickedStatus = function (a) {
	return {$: 9, a: a};
};
var $author$project$Page$Organize$DetainerWarrantCreation$statusDropdownConfig = A4(
	$author$project$Page$Organize$DetainerWarrantCreation$dropdownConfig,
	'Status',
	A2(
		$elm$core$Basics$composeL,
		$elm$core$Maybe$withDefault('-'),
		$elm$core$Maybe$map($author$project$DetainerWarrant$statusText)),
	$author$project$Page$Organize$DetainerWarrantCreation$StatusDropdownMsg,
	$author$project$Page$Organize$DetainerWarrantCreation$PickedStatus);
var $author$project$DetainerWarrant$statusOptions = _List_fromArray(
	[
		$elm$core$Maybe$Nothing,
		$elm$core$Maybe$Just(1),
		$elm$core$Maybe$Just(0)
	]);
var $author$project$Page$Organize$DetainerWarrantCreation$UpsertedAttorney = function (a) {
	return {$: 53, a: a};
};
var $author$project$Api$Endpoint$attorney = function (id) {
	return A2(
		$author$project$Api$Endpoint$url,
		_List_fromArray(
			[
				'attorneys',
				$elm$core$String$fromInt(id)
			]),
		_List_Nil);
};
var $author$project$Page$Organize$DetainerWarrantCreation$defaultDistrict = _Utils_Tuple2(
	'district_id',
	$elm$json$Json$Encode$int(1));
var $author$project$Page$Organize$DetainerWarrantCreation$remoteId = function (resource) {
	return _Utils_eq(resource.hs, -1) ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(resource.hs);
};
var $author$project$Page$Organize$DetainerWarrantCreation$upsertAttorney = F2(
	function (maybeCred, attorney) {
		var decoder = $author$project$Api$itemDecoder($author$project$DetainerWarrant$attorneyDecoder);
		var data = $elm$json$Json$Encode$object(
			_Utils_ap(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'name',
						$elm$json$Json$Encode$string(attorney.h1)),
						$author$project$Page$Organize$DetainerWarrantCreation$defaultDistrict
					]),
				A3(
					$author$project$Page$Organize$DetainerWarrantCreation$conditional,
					'id',
					$elm$json$Json$Encode$int,
					$author$project$Page$Organize$DetainerWarrantCreation$remoteId(attorney))));
		var body = $author$project$Page$Organize$DetainerWarrantCreation$toBody(data);
		var _v0 = $author$project$Page$Organize$DetainerWarrantCreation$remoteId(attorney);
		if (!_v0.$) {
			var id = _v0.a;
			return A5(
				$author$project$Api$patch,
				$author$project$Api$Endpoint$attorney(id),
				maybeCred,
				body,
				$author$project$Page$Organize$DetainerWarrantCreation$UpsertedAttorney,
				decoder);
		} else {
			return A5(
				$author$project$Api$post,
				$author$project$Api$Endpoint$attorneys(_List_Nil),
				maybeCred,
				body,
				$author$project$Page$Organize$DetainerWarrantCreation$UpsertedAttorney,
				decoder);
		}
	});
var $author$project$Page$Organize$DetainerWarrantCreation$UpsertedCourtroom = function (a) {
	return {$: 54, a: a};
};
var $author$project$Api$Endpoint$courtroom = function (id) {
	return A2(
		$author$project$Api$Endpoint$url,
		_List_fromArray(
			[
				'courtrooms',
				$elm$core$String$fromInt(id)
			]),
		_List_Nil);
};
var $author$project$Page$Organize$DetainerWarrantCreation$upsertCourtroom = F2(
	function (maybeCred, courtroom) {
		var decoder = $author$project$Api$itemDecoder($author$project$DetainerWarrant$courtroomDecoder);
		var data = $elm$json$Json$Encode$object(
			_Utils_ap(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'name',
						$elm$json$Json$Encode$string(courtroom.h1)),
						$author$project$Page$Organize$DetainerWarrantCreation$defaultDistrict
					]),
				A3(
					$author$project$Page$Organize$DetainerWarrantCreation$conditional,
					'id',
					$elm$json$Json$Encode$int,
					$author$project$Page$Organize$DetainerWarrantCreation$remoteId(courtroom))));
		var body = $author$project$Page$Organize$DetainerWarrantCreation$toBody(data);
		var _v0 = $author$project$Page$Organize$DetainerWarrantCreation$remoteId(courtroom);
		if (!_v0.$) {
			var id = _v0.a;
			return A5(
				$author$project$Api$patch,
				$author$project$Api$Endpoint$courtroom(id),
				maybeCred,
				body,
				$author$project$Page$Organize$DetainerWarrantCreation$UpsertedCourtroom,
				decoder);
		} else {
			return A5(
				$author$project$Api$post,
				$author$project$Api$Endpoint$courtrooms(_List_Nil),
				maybeCred,
				body,
				$author$project$Page$Organize$DetainerWarrantCreation$UpsertedCourtroom,
				decoder);
		}
	});
var $author$project$Page$Organize$DetainerWarrantCreation$UpsertedDefendant = F2(
	function (a, b) {
		return {$: 56, a: a, b: b};
	});
var $author$project$Api$Endpoint$defendant = function (id) {
	return A2(
		$author$project$Api$Endpoint$url,
		_List_fromArray(
			[
				'defendants',
				$elm$core$String$fromInt(id)
			]),
		_List_Nil);
};
var $author$project$Api$Endpoint$defendants = A2(
	$elm$core$Basics$composeL,
	$author$project$Api$Endpoint$url(
		_List_fromArray(
			['defendants', ''])),
	$author$project$Api$Endpoint$toQueryArgs);
var $author$project$Page$Organize$DetainerWarrantCreation$upsertDefendant = F3(
	function (maybeCred, index, form) {
		var defendant = $elm$json$Json$Encode$object(
			_Utils_ap(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'first_name',
						$elm$json$Json$Encode$string(form.kE)),
						_Utils_Tuple2(
						'last_name',
						$elm$json$Json$Encode$string(form.lh)),
						_Utils_Tuple2(
						'address',
						$elm$json$Json$Encode$string(form.je)),
						$author$project$Page$Organize$DetainerWarrantCreation$defaultDistrict
					]),
				_Utils_ap(
					A3(
						$author$project$Page$Organize$DetainerWarrantCreation$conditional,
						'id',
						$elm$json$Json$Encode$int,
						$author$project$Page$Organize$DetainerWarrantCreation$remoteId(form)),
					_Utils_ap(
						A3($author$project$Page$Organize$DetainerWarrantCreation$conditional, 'middle_name', $elm$json$Json$Encode$string, form.ls),
						_Utils_ap(
							A3($author$project$Page$Organize$DetainerWarrantCreation$conditional, 'suffix', $elm$json$Json$Encode$string, form.mM),
							A3($author$project$Page$Organize$DetainerWarrantCreation$conditional, 'potential_phones', $elm$json$Json$Encode$string, form.l5))))));
		var decoder = $author$project$Api$itemDecoder($author$project$Defendant$decoder);
		var body = $author$project$Page$Organize$DetainerWarrantCreation$toBody(defendant);
		var _v0 = $author$project$Page$Organize$DetainerWarrantCreation$remoteId(form);
		if (!_v0.$) {
			var id = _v0.a;
			return A5(
				$author$project$Api$patch,
				$author$project$Api$Endpoint$defendant(id),
				maybeCred,
				body,
				$author$project$Page$Organize$DetainerWarrantCreation$UpsertedDefendant(index),
				decoder);
		} else {
			return A5(
				$author$project$Api$post,
				$author$project$Api$Endpoint$defendants(_List_Nil),
				maybeCred,
				body,
				$author$project$Page$Organize$DetainerWarrantCreation$UpsertedDefendant(index),
				decoder);
		}
	});
var $author$project$Page$Organize$DetainerWarrantCreation$UpsertedJudge = function (a) {
	return {$: 55, a: a};
};
var $author$project$Api$Endpoint$judge = function (id) {
	return A2(
		$author$project$Api$Endpoint$url,
		_List_fromArray(
			[
				'judges',
				$elm$core$String$fromInt(id)
			]),
		_List_Nil);
};
var $author$project$Page$Organize$DetainerWarrantCreation$upsertJudge = F2(
	function (maybeCred, form) {
		var judge = $elm$json$Json$Encode$object(
			_Utils_ap(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'name',
						$elm$json$Json$Encode$string(form.h1)),
						$author$project$Page$Organize$DetainerWarrantCreation$defaultDistrict
					]),
				A3(
					$author$project$Page$Organize$DetainerWarrantCreation$conditional,
					'id',
					$elm$json$Json$Encode$int,
					$author$project$Page$Organize$DetainerWarrantCreation$remoteId(form))));
		var decoder = $author$project$Api$itemDecoder($author$project$DetainerWarrant$judgeDecoder);
		var body = $author$project$Page$Organize$DetainerWarrantCreation$toBody(judge);
		var _v0 = $author$project$Page$Organize$DetainerWarrantCreation$remoteId(form);
		if (!_v0.$) {
			var id = _v0.a;
			return A5(
				$author$project$Api$patch,
				$author$project$Api$Endpoint$judge(id),
				maybeCred,
				body,
				$author$project$Page$Organize$DetainerWarrantCreation$UpsertedJudge,
				decoder);
		} else {
			return A5(
				$author$project$Api$post,
				$author$project$Api$Endpoint$judges(_List_Nil),
				maybeCred,
				body,
				$author$project$Page$Organize$DetainerWarrantCreation$UpsertedJudge,
				decoder);
		}
	});
var $author$project$Page$Organize$DetainerWarrantCreation$UpsertedPlaintiff = function (a) {
	return {$: 52, a: a};
};
var $author$project$Page$Organize$DetainerWarrantCreation$upsertPlaintiff = F2(
	function (maybeCred, plaintiff) {
		var decoder = $author$project$Api$itemDecoder($author$project$Plaintiff$decoder);
		var data = $elm$json$Json$Encode$object(
			_Utils_ap(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'name',
						$elm$json$Json$Encode$string(plaintiff.h1)),
						$author$project$Page$Organize$DetainerWarrantCreation$defaultDistrict
					]),
				A3(
					$author$project$Page$Organize$DetainerWarrantCreation$conditional,
					'id',
					$elm$json$Json$Encode$int,
					$author$project$Page$Organize$DetainerWarrantCreation$remoteId(plaintiff))));
		var body = $author$project$Page$Organize$DetainerWarrantCreation$toBody(data);
		var _v0 = $author$project$Page$Organize$DetainerWarrantCreation$remoteId(plaintiff);
		if (!_v0.$) {
			var id = _v0.a;
			return A5(
				$author$project$Api$patch,
				$author$project$Api$Endpoint$plaintiff(id),
				maybeCred,
				body,
				$author$project$Page$Organize$DetainerWarrantCreation$UpsertedPlaintiff,
				decoder);
		} else {
			return A5(
				$author$project$Api$post,
				$author$project$Api$Endpoint$plaintiffs(_List_Nil),
				maybeCred,
				body,
				$author$project$Page$Organize$DetainerWarrantCreation$UpsertedPlaintiff,
				decoder);
		}
	});
var $author$project$Page$Organize$DetainerWarrantCreation$submitForm = function (model) {
	var maybeCred = $author$project$Session$cred(model.fY);
	var _v0 = model.F;
	if (!_v0.$) {
		var today = _v0.a;
		var _v1 = A2($author$project$Page$Organize$DetainerWarrantCreation$validate, today, model.bZ);
		if (!_v1.$) {
			var validForm = _v1.a;
			var apiForms = A2($author$project$Page$Organize$DetainerWarrantCreation$toDetainerWarrant, today, validForm);
			return _Utils_Tuple2(
				_Utils_update(
					model,
					{
						cj: false,
						bx: _List_Nil,
						n: $author$project$Page$Organize$DetainerWarrantCreation$SavingRelatedModels(
							{
								bd: _Utils_eq(apiForms.bd, $elm$core$Maybe$Nothing),
								gW: _Utils_eq(apiForms.gW, $elm$core$Maybe$Nothing),
								g0: 0,
								dd: _Utils_eq(apiForms.dd, $elm$core$Maybe$Nothing),
								ij: _Utils_eq(apiForms.ij, $elm$core$Maybe$Nothing)
							})
					}),
				$elm$core$Platform$Cmd$batch(
					$elm$core$List$concat(
						_List_fromArray(
							[
								A2(
								$elm$core$Maybe$withDefault,
								_List_Nil,
								A2(
									$elm$core$Maybe$map,
									A2(
										$elm$core$Basics$composeL,
										$elm$core$List$singleton,
										$author$project$Page$Organize$DetainerWarrantCreation$upsertAttorney(maybeCred)),
									apiForms.bd)),
								A2(
								$elm$core$Maybe$withDefault,
								_List_Nil,
								A2(
									$elm$core$Maybe$map,
									A2(
										$elm$core$Basics$composeL,
										$elm$core$List$singleton,
										$author$project$Page$Organize$DetainerWarrantCreation$upsertPlaintiff(maybeCred)),
									apiForms.ij)),
								A2(
								$elm$core$Maybe$withDefault,
								_List_Nil,
								A2(
									$elm$core$Maybe$map,
									A2(
										$elm$core$Basics$composeL,
										$elm$core$List$singleton,
										$author$project$Page$Organize$DetainerWarrantCreation$upsertCourtroom(maybeCred)),
									apiForms.gW)),
								A2(
								$elm$core$Maybe$withDefault,
								_List_Nil,
								A2(
									$elm$core$Maybe$map,
									A2(
										$elm$core$Basics$composeL,
										$elm$core$List$singleton,
										$author$project$Page$Organize$DetainerWarrantCreation$upsertJudge(maybeCred)),
									apiForms.dd)),
								A2(
								$elm$core$List$indexedMap,
								$author$project$Page$Organize$DetainerWarrantCreation$upsertDefendant(maybeCred),
								apiForms.g0)
							]))));
		} else {
			var problems = _v1.a;
			return _Utils_Tuple2(
				_Utils_update(
					model,
					{cj: false, bx: problems}),
				$elm$core$Platform$Cmd$none);
		}
	} else {
		return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
	}
};
var $author$project$Page$Organize$DetainerWarrantCreation$submitFormAndAddAnother = function (model) {
	return A2(
		$elm$core$Tuple$mapFirst,
		function (m) {
			return _Utils_update(
				m,
				{cj: true});
		},
		$author$project$Page$Organize$DetainerWarrantCreation$submitForm(model));
};
var $author$project$DetainerWarrant$ternaryOptions = _List_fromArray(
	[
		$elm$core$Maybe$Nothing,
		$elm$core$Maybe$Just(true),
		$elm$core$Maybe$Just(false)
	]);
var $fabhof$elm_ui_datepicker$DatePicker$close = function (_v0) {
	var picker = _v0;
	return _Utils_update(
		picker,
		{lP: false});
};
var $fabhof$elm_ui_datepicker$DatePicker$open = function (_v0) {
	var picker = _v0;
	return _Utils_update(
		picker,
		{lP: true});
};
var $fabhof$elm_ui_datepicker$DatePicker$update = F2(
	function (msg, _v0) {
		var picker = _v0;
		switch (msg.$) {
			case 0:
				var month = msg.a;
				return _Utils_update(
					picker,
					{_: month});
			case 1:
				return $fabhof$elm_ui_datepicker$DatePicker$open(picker);
			case 2:
				return $fabhof$elm_ui_datepicker$DatePicker$close(picker);
			default:
				return picker;
		}
	});
var $PaackEng$elm_ui_dropdown$Dropdown$NoOp = {$: 0};
var $PaackEng$elm_ui_dropdown$Dropdown$closeOnlyIfNotMultiSelect = F2(
	function (config, state) {
		var _v0 = config.az;
		if (_v0 === 2) {
			return state.ad;
		} else {
			return false;
		}
	});
var $PaackEng$elm_ui_dropdown$Dropdown$modifySelectedItems = F3(
	function (dropdownType, selectedItem, selectedItemsOld) {
		if (dropdownType === 2) {
			return A2(
				$elm$core$List$any,
				$elm$core$Basics$eq(selectedItem),
				selectedItemsOld) ? A2(
				$elm$core$List$filter,
				$elm$core$Basics$neq(selectedItem),
				selectedItemsOld) : A2($elm$core$List$cons, selectedItem, selectedItemsOld);
		} else {
			return _List_fromArray(
				[selectedItem]);
		}
	});
var $PaackEng$elm_ui_dropdown$Dropdown$selectedItemsAsList = F2(
	function (config, model) {
		var _v0 = config.mu(model);
		if (!_v0.$) {
			var maybeItem = _v0.a;
			return A2(
				$elm$core$Maybe$withDefault,
				_List_Nil,
				A2($elm$core$Maybe$map, $elm$core$List$singleton, maybeItem));
		} else {
			var listItems = _v0.a;
			return listItems;
		}
	});
var $PaackEng$elm_ui_dropdown$Dropdown$updateSelectedItemsCommand = F2(
	function (onSelectMsg, selectedItemsNew) {
		var onSelectMsgWithItems = function () {
			if (!onSelectMsg.$) {
				var itemToMsg = onSelectMsg.a;
				return itemToMsg(
					$elm$core$List$head(selectedItemsNew));
			} else {
				var itemsToMsg = onSelectMsg.a;
				return itemsToMsg(selectedItemsNew);
			}
		}();
		return A2(
			$elm$core$Task$perform,
			$elm$core$Basics$identity,
			$elm$core$Task$succeed(onSelectMsgWithItems));
	});
var $PaackEng$elm_ui_dropdown$Dropdown$update = F4(
	function (_v0, msg, model, _v1) {
		var config = _v0;
		var state = _v1;
		var selectedItems = A2($PaackEng$elm_ui_dropdown$Dropdown$selectedItemsAsList, config, model);
		var items = config.ld(model);
		var _v2 = function () {
			switch (msg.$) {
				case 0:
					return _Utils_Tuple2(state, $elm$core$Platform$Cmd$none);
				case 1:
					return _Utils_Tuple2(
						_Utils_update(
							state,
							{
								ad: A2($PaackEng$elm_ui_dropdown$Dropdown$closeOnlyIfNotMultiSelect, config, state)
							}),
						$elm$core$Platform$Cmd$none);
				case 6:
					return _Utils_Tuple2(
						_Utils_update(
							state,
							{ad: false}),
						$elm$core$Platform$Cmd$none);
				case 2:
					var isOpen = !state.ad;
					var cmd = isOpen ? A2(
						$elm$core$Task$attempt,
						function (_v4) {
							return $PaackEng$elm_ui_dropdown$Dropdown$NoOp;
						},
						$elm$browser$Browser$Dom$focus(state.hs + 'input-search')) : $elm$core$Platform$Cmd$none;
					return _Utils_Tuple2(
						_Utils_update(
							state,
							{bX: '', ac: 0, ad: isOpen}),
						A2($elm$core$Platform$Cmd$map, config.kp, cmd));
				case 3:
					var item = msg.a;
					var selectedItemsNew = A3($PaackEng$elm_ui_dropdown$Dropdown$modifySelectedItems, config.az, item, selectedItems);
					return _Utils_Tuple2(
						_Utils_update(
							state,
							{
								ad: A2($PaackEng$elm_ui_dropdown$Dropdown$closeOnlyIfNotMultiSelect, config, state)
							}),
						A2($PaackEng$elm_ui_dropdown$Dropdown$updateSelectedItemsCommand, config.lO, selectedItemsNew));
				case 4:
					var val = msg.a;
					return _Utils_Tuple2(
						_Utils_update(
							state,
							{bX: val}),
						$elm$core$Platform$Cmd$none);
				default:
					var key = msg.a;
					var newIndex = function () {
						switch (key) {
							case 1:
								return (state.ac > 0) ? (state.ac - 1) : 0;
							case 0:
								return (_Utils_cmp(
									state.ac,
									$elm$core$List$length(items) - 1) < 0) ? (state.ac + 1) : ($elm$core$List$length(items) - 1);
							default:
								return state.ac;
						}
					}();
					var maybeFocusedItem = A2(
						$elm$core$Maybe$map,
						$elm$core$Tuple$second,
						$elm$core$List$head(
							A2(
								$elm$core$List$filter,
								function (_v8) {
									var i = _v8.a;
									return _Utils_eq(i, state.ac);
								},
								A2(
									$elm$core$List$indexedMap,
									F2(
										function (i, item) {
											return _Utils_Tuple2(i, item);
										}),
									items))));
					var isOpen = function () {
						switch (key) {
							case 3:
								return false;
							case 2:
								return false;
							default:
								return true;
						}
					}();
					var cmd = function () {
						if (key === 2) {
							if (!maybeFocusedItem.$) {
								var focusedItem = maybeFocusedItem.a;
								return A2(
									$PaackEng$elm_ui_dropdown$Dropdown$updateSelectedItemsCommand,
									config.lO,
									A3($PaackEng$elm_ui_dropdown$Dropdown$modifySelectedItems, config.az, focusedItem, selectedItems));
							} else {
								return $elm$core$Platform$Cmd$none;
							}
						} else {
							return $elm$core$Platform$Cmd$none;
						}
					}();
					return _Utils_Tuple2(
						_Utils_update(
							state,
							{ac: newIndex, ad: isOpen}),
						cmd);
			}
		}();
		var newState = _v2.a;
		var newCommand = _v2.b;
		return _Utils_Tuple2(newState, newCommand);
	});
var $russelldavies$elm_ui_searchbox$SearchBox$update = F2(
	function (msg, state) {
		switch (msg.$) {
			case 0:
				return _Utils_update(
					state,
					{da: true});
			case 1:
				return _Utils_update(
					state,
					{da: false});
			default:
				var newIndex = msg.a;
				return _Utils_update(
					state,
					{cr: newIndex});
		}
	});
var $author$project$Page$Organize$DetainerWarrantCreation$updateForm = F2(
	function (transform, model) {
		return _Utils_Tuple2(
			_Utils_update(
				model,
				{
					bZ: function () {
						var _v0 = model.bZ;
						if (!_v0.$) {
							return model.bZ;
						} else {
							var oldForm = _v0.a;
							return $author$project$Page$Organize$DetainerWarrantCreation$Ready(
								transform(oldForm));
						}
					}()
				}),
			$elm$core$Platform$Cmd$none);
	});
var $author$project$Page$Organize$DetainerWarrantCreation$updateFormNarrow = F2(
	function (transform, model) {
		var _v0 = function () {
			var _v1 = model.bZ;
			if (!_v1.$) {
				return _Utils_Tuple2(model.bZ, $elm$core$Platform$Cmd$none);
			} else {
				var oldForm = _v1.a;
				var _v2 = transform(oldForm);
				var updatedForm = _v2.a;
				var dropdownCmd = _v2.b;
				return _Utils_Tuple2(
					$author$project$Page$Organize$DetainerWarrantCreation$Ready(updatedForm),
					dropdownCmd);
			}
		}();
		var newForm = _v0.a;
		var cmd = _v0.b;
		return _Utils_Tuple2(
			_Utils_update(
				model,
				{bZ: newForm}),
			cmd);
	});
var $author$project$Page$Organize$DetainerWarrantCreation$updateFormOnly = F2(
	function (transform, model) {
		return _Utils_update(
			model,
			{
				bZ: function () {
					var _v0 = model.bZ;
					if (!_v0.$) {
						return model.bZ;
					} else {
						var oldForm = _v0.a;
						return $author$project$Page$Organize$DetainerWarrantCreation$Ready(
							transform(oldForm));
					}
				}()
			});
	});
var $author$project$Page$Organize$DetainerWarrantCreation$updateJudgement = F3(
	function (selected, fn, form) {
		return _Utils_update(
			form,
			{
				lf: A2(
					$elm$core$List$indexedMap,
					F2(
						function (index, judgement) {
							return _Utils_eq(selected, index) ? fn(judgement) : judgement;
						}),
					form.lf)
			});
	});
var $author$project$Page$Organize$DetainerWarrantCreation$update = F2(
	function (msg, model) {
		var rollbar = $author$project$Log$reporting(model.iz);
		var maybeCred = $author$project$Session$cred(model.fY);
		var logHttpError = A2(
			$elm$core$Basics$composeL,
			$author$project$Page$Organize$DetainerWarrantCreation$error(rollbar),
			$author$project$Log$httpErrorMessage);
		switch (msg.$) {
			case 0:
				var result = msg.a;
				var _v1 = model.F;
				if (!_v1.$) {
					var today = _v1.a;
					if (!result.$) {
						var warrantPage = result.a;
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{
									bZ: $author$project$Page$Organize$DetainerWarrantCreation$Ready(
										A2($author$project$Page$Organize$DetainerWarrantCreation$editForm, today, warrantPage.eN)),
									cI: $elm$core$Maybe$Just(warrantPage.eN)
								}),
							$elm$core$Platform$Cmd$none);
					} else {
						var httpError = result.a;
						return _Utils_Tuple2(
							model,
							logHttpError(httpError));
					}
				} else {
					return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
				}
			case 1:
				var today = msg.a;
				return _Utils_Tuple2(
					A2(
						$author$project$Page$Organize$DetainerWarrantCreation$updateFormOnly,
						function (form) {
							var fileDate = form.hg;
							var updatedFileDate = _Utils_update(
								fileDate,
								{
									l2: A2($fabhof$elm_ui_datepicker$DatePicker$setToday, today, fileDate.l2)
								});
							var courtDate = form.bj;
							var updatedCourtDate = _Utils_update(
								courtDate,
								{
									l2: A2($fabhof$elm_ui_datepicker$DatePicker$setToday, today, courtDate.l2)
								});
							return _Utils_update(
								form,
								{bj: updatedCourtDate, hg: updatedFileDate});
						},
						_Utils_update(
							model,
							{
								F: $elm$core$Maybe$Just(today)
							})),
					function () {
						var _v3 = model.bZ;
						if (!_v3.$) {
							var id = _v3.a;
							return A2($author$project$Page$Organize$DetainerWarrantCreation$getWarrant, id, maybeCred);
						} else {
							return $elm$core$Platform$Cmd$none;
						}
					}());
			case 2:
				var selection = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							a: _Utils_eq(
								$elm$core$Maybe$Just(selection),
								model.a) ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(selection)
						}),
					$elm$core$Platform$Cmd$none);
			case 3:
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{a: $elm$core$Maybe$Nothing}),
					$elm$core$Platform$Cmd$none);
			case 4:
				var id = msg.a;
				return A2(
					$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
					function (form) {
						return _Utils_update(
							form,
							{g4: id});
					},
					model);
			case 5:
				var changeEvent = msg.a;
				switch (changeEvent.$) {
					case 0:
						var date = changeEvent.a;
						return A2(
							$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
							function (form) {
								var fileDate = form.hg;
								var updatedFileDate = _Utils_update(
									fileDate,
									{
										gZ: $elm$core$Maybe$Just(date),
										j9: $justinmimbs$date$Date$toIsoString(date)
									});
								return _Utils_update(
									form,
									{hg: updatedFileDate});
							},
							model);
					case 1:
						var text = changeEvent.a;
						return A2(
							$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
							function (form) {
								var fileDate = form.hg;
								var updatedFileDate = _Utils_update(
									fileDate,
									{
										gZ: A2(
											$elm_community$maybe_extra$Maybe$Extra$orElse,
											fileDate.gZ,
											$elm$core$Result$toMaybe(
												$justinmimbs$date$Date$fromIsoString(text))),
										j9: text
									});
								return _Utils_update(
									form,
									{hg: updatedFileDate});
							},
							model);
					default:
						var subMsg = changeEvent.a;
						return A2(
							$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
							function (form) {
								var fileDate = form.hg;
								var updatedFileDate = _Utils_update(
									fileDate,
									{
										l2: A2($fabhof$elm_ui_datepicker$DatePicker$update, subMsg, fileDate.l2)
									});
								return _Utils_update(
									form,
									{hg: updatedFileDate});
							},
							model);
				}
			case 6:
				var changeEvent = msg.a;
				switch (changeEvent.$) {
					case 0:
						var date = changeEvent.a;
						return A2(
							$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
							function (form) {
								var courtDate = form.bj;
								var updatedCourtDate = _Utils_update(
									courtDate,
									{
										gZ: $elm$core$Maybe$Just(date),
										j9: $justinmimbs$date$Date$toIsoString(date)
									});
								return _Utils_update(
									form,
									{bj: updatedCourtDate});
							},
							model);
					case 1:
						var text = changeEvent.a;
						return A2(
							$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
							function (form) {
								var courtDate = form.bj;
								var updatedCourtDate = _Utils_update(
									courtDate,
									{
										gZ: A2(
											$elm_community$maybe_extra$Maybe$Extra$orElse,
											courtDate.gZ,
											$elm$core$Result$toMaybe(
												$justinmimbs$date$Date$fromIsoString(text))),
										j9: text
									});
								return _Utils_update(
									form,
									{bj: updatedCourtDate});
							},
							model);
					default:
						var subMsg = changeEvent.a;
						return A2(
							$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
							function (form) {
								var courtDate = form.bj;
								var updatedCourtDate = _Utils_update(
									courtDate,
									{
										l2: A2($fabhof$elm_ui_datepicker$DatePicker$update, subMsg, courtDate.l2)
									});
								return _Utils_update(
									form,
									{bj: updatedCourtDate});
							},
							model);
				}
			case 7:
				var changeEvent = msg.a;
				switch (changeEvent.$) {
					case 0:
						var person = changeEvent.a;
						return A2(
							$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
							function (form) {
								var plaintiff = form.ij;
								var updatedPlaintiff = _Utils_update(
									plaintiff,
									{
										ih: $elm$core$Maybe$Just(person),
										mR: person.h1
									});
								return _Utils_update(
									form,
									{ij: updatedPlaintiff});
							},
							model);
					case 1:
						var text = changeEvent.a;
						return _Utils_Tuple2(
							A2(
								$author$project$Page$Organize$DetainerWarrantCreation$updateFormOnly,
								function (form) {
									var plaintiff = form.ij;
									var updatedPlaintiff = _Utils_update(
										plaintiff,
										{
											ih: $elm$core$Maybe$Nothing,
											ms: $russelldavies$elm_ui_searchbox$SearchBox$reset(plaintiff.ms),
											mR: text
										});
									return _Utils_update(
										form,
										{ij: updatedPlaintiff});
								},
								model),
							A4(
								$author$project$Api$get,
								$author$project$Api$Endpoint$plaintiffs(
									_List_fromArray(
										[
											_Utils_Tuple2('name', text)
										])),
								maybeCred,
								$author$project$Page$Organize$DetainerWarrantCreation$GotPlaintiffs,
								$author$project$Api$collectionDecoder($author$project$Plaintiff$decoder)));
					default:
						var subMsg = changeEvent.a;
						return A2(
							$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
							function (form) {
								var plaintiff = form.ij;
								var updatedPlaintiff = _Utils_update(
									plaintiff,
									{
										ms: A2($russelldavies$elm_ui_searchbox$SearchBox$update, subMsg, plaintiff.ms)
									});
								return _Utils_update(
									form,
									{ij: updatedPlaintiff});
							},
							model);
				}
			case 8:
				var changeEvent = msg.a;
				switch (changeEvent.$) {
					case 0:
						var person = changeEvent.a;
						return A2(
							$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
							function (form) {
								var attorney = form.ik;
								var updatedAttorney = _Utils_update(
									attorney,
									{
										ih: $elm$core$Maybe$Just(person),
										mR: person.h1
									});
								return _Utils_update(
									form,
									{ik: updatedAttorney});
							},
							model);
					case 1:
						var text = changeEvent.a;
						return _Utils_Tuple2(
							A2(
								$author$project$Page$Organize$DetainerWarrantCreation$updateFormOnly,
								function (form) {
									var attorney = form.ik;
									var updatedAttorney = _Utils_update(
										attorney,
										{
											ih: $elm$core$Maybe$Nothing,
											ms: $russelldavies$elm_ui_searchbox$SearchBox$reset(attorney.ms),
											mR: text
										});
									return _Utils_update(
										form,
										{ik: updatedAttorney});
								},
								model),
							A4(
								$author$project$Api$get,
								$author$project$Api$Endpoint$attorneys(
									_List_fromArray(
										[
											_Utils_Tuple2('name', text)
										])),
								maybeCred,
								$author$project$Page$Organize$DetainerWarrantCreation$GotAttorneys,
								$author$project$Api$collectionDecoder($author$project$DetainerWarrant$attorneyDecoder)));
					default:
						var subMsg = changeEvent.a;
						return A2(
							$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
							function (form) {
								var attorney = form.ik;
								var updatedAttorney = _Utils_update(
									attorney,
									{
										ms: A2($russelldavies$elm_ui_searchbox$SearchBox$update, subMsg, attorney.ms)
									});
								return _Utils_update(
									form,
									{ik: updatedAttorney});
							},
							model);
				}
			case 9:
				var option = msg.a;
				return A2(
					$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
					function (form) {
						return _Utils_update(
							form,
							{
								iM: A2($elm$core$Maybe$andThen, $elm$core$Basics$identity, option)
							});
					},
					model);
			case 10:
				var subMsg = msg.a;
				return A2(
					$author$project$Page$Organize$DetainerWarrantCreation$updateFormNarrow,
					function (form) {
						var _v8 = A4(
							$PaackEng$elm_ui_dropdown$Dropdown$update,
							$author$project$Page$Organize$DetainerWarrantCreation$statusDropdownConfig(_List_Nil),
							subMsg,
							{
								lU: $author$project$DetainerWarrant$statusOptions,
								C: $elm$core$Maybe$Just(form.iM)
							},
							form.bC);
						var state = _v8.a;
						var cmd = _v8.b;
						return _Utils_Tuple2(
							_Utils_update(
								form,
								{bC: state}),
							cmd);
					},
					model);
			case 11:
				var changeEvent = msg.a;
				switch (changeEvent.$) {
					case 0:
						var selection = changeEvent.a;
						return A2(
							$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
							function (form) {
								var courtroom = form.gW;
								var updatedCourtroom = _Utils_update(
									courtroom,
									{
										a4: $elm$core$Maybe$Just(selection),
										mR: selection.h1
									});
								return _Utils_update(
									form,
									{gW: updatedCourtroom});
							},
							model);
					case 1:
						var text = changeEvent.a;
						return _Utils_Tuple2(
							A2(
								$author$project$Page$Organize$DetainerWarrantCreation$updateFormOnly,
								function (form) {
									var courtroom = form.gW;
									var updatedCourtroom = _Utils_update(
										courtroom,
										{
											ms: $russelldavies$elm_ui_searchbox$SearchBox$reset(courtroom.ms),
											a4: $elm$core$Maybe$Nothing,
											mR: text
										});
									return _Utils_update(
										form,
										{gW: updatedCourtroom});
								},
								model),
							A4(
								$author$project$Api$get,
								$author$project$Api$Endpoint$courtrooms(
									_List_fromArray(
										[
											_Utils_Tuple2('name', text)
										])),
								maybeCred,
								$author$project$Page$Organize$DetainerWarrantCreation$GotCourtrooms,
								$author$project$Api$collectionDecoder($author$project$DetainerWarrant$courtroomDecoder)));
					default:
						var subMsg = changeEvent.a;
						return A2(
							$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
							function (form) {
								var courtroom = form.gW;
								var updatedCourtroom = _Utils_update(
									courtroom,
									{
										ms: A2($russelldavies$elm_ui_searchbox$SearchBox$update, subMsg, courtroom.ms)
									});
								return _Utils_update(
									form,
									{gW: updatedCourtroom});
							},
							model);
				}
			case 12:
				var changeEvent = msg.a;
				switch (changeEvent.$) {
					case 0:
						var person = changeEvent.a;
						return A2(
							$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
							function (form) {
								var judge = form.ip;
								var updatedJudge = _Utils_update(
									judge,
									{
										ih: $elm$core$Maybe$Just(person)
									});
								return _Utils_update(
									form,
									{ip: updatedJudge});
							},
							model);
					case 1:
						var text = changeEvent.a;
						return _Utils_Tuple2(
							A2(
								$author$project$Page$Organize$DetainerWarrantCreation$updateFormOnly,
								function (form) {
									var judge = form.ip;
									var updatedJudge = _Utils_update(
										judge,
										{
											ih: $elm$core$Maybe$Nothing,
											ms: $russelldavies$elm_ui_searchbox$SearchBox$reset(judge.ms),
											mR: text
										});
									return _Utils_update(
										form,
										{ip: updatedJudge});
								},
								model),
							A4(
								$author$project$Api$get,
								$author$project$Api$Endpoint$judges(
									_List_fromArray(
										[
											_Utils_Tuple2('name', text)
										])),
								maybeCred,
								$author$project$Page$Organize$DetainerWarrantCreation$GotJudges,
								$author$project$Api$collectionDecoder($author$project$DetainerWarrant$judgeDecoder)));
					default:
						var subMsg = changeEvent.a;
						return A2(
							$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
							function (form) {
								var judge = form.ip;
								var updatedJudge = _Utils_update(
									judge,
									{
										ms: A2($russelldavies$elm_ui_searchbox$SearchBox$update, subMsg, judge.ms)
									});
								return _Utils_update(
									form,
									{ip: updatedJudge});
							},
							model);
				}
			case 13:
				var money = msg.a;
				return A2(
					$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
					function (form) {
						return _Utils_update(
							form,
							{
								gH: A3($elm$core$String$replace, '$', '', money)
							});
					},
					model);
			case 14:
				var options = $Massolari$elm_mask$Mask$defaultDecimalOptions;
				var extract = function (money) {
					return $elm$core$String$toFloat(
						A3($elm$core$String$replace, ',', '', money));
				};
				return A2(
					$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
					function (form) {
						return _Utils_update(
							form,
							{
								gH: function () {
									var _v11 = extract(form.gH);
									if (!_v11.$) {
										var moneyFloat = _v11.a;
										return A2($Massolari$elm_mask$Mask$floatDecimal, options, moneyFloat);
									} else {
										return form.gH;
									}
								}()
							});
					},
					model);
			case 15:
				var option = msg.a;
				return A2(
					$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
					function (form) {
						return _Utils_update(
							form,
							{
								gI: A2($elm$core$Maybe$withDefault, 3, option)
							});
					},
					model);
			case 16:
				var subMsg = msg.a;
				return A2(
					$author$project$Page$Organize$DetainerWarrantCreation$updateFormNarrow,
					function (form) {
						var _v12 = A4(
							$PaackEng$elm_ui_dropdown$Dropdown$update,
							$author$project$Page$Organize$DetainerWarrantCreation$categoryDropdownConfig(_List_Nil),
							subMsg,
							{
								lU: $author$project$DetainerWarrant$amountClaimedCategoryOptions,
								C: $elm$core$Maybe$Just(form.gI)
							},
							form.bi);
						var state = _v12.a;
						var cmd = _v12.b;
						return _Utils_Tuple2(
							_Utils_update(
								form,
								{bi: state}),
							cmd);
					},
					model);
			case 17:
				var subMsg = msg.a;
				return A2(
					$author$project$Page$Organize$DetainerWarrantCreation$updateFormNarrow,
					function (form) {
						var _v13 = A4(
							$PaackEng$elm_ui_dropdown$Dropdown$update,
							$author$project$Page$Organize$DetainerWarrantCreation$caresDropdownConfig(_List_Nil),
							subMsg,
							{
								lU: $author$project$DetainerWarrant$ternaryOptions,
								C: $elm$core$Maybe$Just(form.hF)
							},
							form.bP);
						var state = _v13.a;
						var cmd = _v13.b;
						return _Utils_Tuple2(
							_Utils_update(
								form,
								{bP: state}),
							cmd);
					},
					model);
			case 18:
				var isCares = msg.a;
				return A2(
					$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
					function (form) {
						return _Utils_update(
							form,
							{
								hF: A2($elm$core$Maybe$andThen, $elm$core$Basics$identity, isCares)
							});
					},
					model);
			case 19:
				var subMsg = msg.a;
				return A2(
					$author$project$Page$Organize$DetainerWarrantCreation$updateFormNarrow,
					function (form) {
						var _v14 = A4(
							$PaackEng$elm_ui_dropdown$Dropdown$update,
							$author$project$Page$Organize$DetainerWarrantCreation$legacyDropdownConfig(_List_Nil),
							subMsg,
							{
								lU: $author$project$DetainerWarrant$ternaryOptions,
								C: $elm$core$Maybe$Just(form.hH)
							},
							form.cb);
						var state = _v14.a;
						var cmd = _v14.b;
						return _Utils_Tuple2(
							_Utils_update(
								form,
								{cb: state}),
							cmd);
					},
					model);
			case 20:
				var isLegacy = msg.a;
				return A2(
					$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
					function (form) {
						return _Utils_update(
							form,
							{
								hH: A2($elm$core$Maybe$andThen, $elm$core$Basics$identity, isLegacy)
							});
					},
					model);
			case 21:
				var subMsg = msg.a;
				return A2(
					$author$project$Page$Organize$DetainerWarrantCreation$updateFormNarrow,
					function (form) {
						var _v15 = A4(
							$PaackEng$elm_ui_dropdown$Dropdown$update,
							$author$project$Page$Organize$DetainerWarrantCreation$nonpaymentDropdownConfig(_List_Nil),
							subMsg,
							{
								lU: $author$project$DetainerWarrant$ternaryOptions,
								C: $elm$core$Maybe$Just(form.aD)
							},
							form.cl);
						var state = _v15.a;
						var cmd = _v15.b;
						return _Utils_Tuple2(
							_Utils_update(
								form,
								{cl: state}),
							cmd);
					},
					model);
			case 22:
				var isNonpayment = msg.a;
				return A2(
					$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
					function (form) {
						return _Utils_update(
							form,
							{
								aD: A2($elm$core$Maybe$andThen, $elm$core$Basics$identity, isNonpayment)
							});
					},
					model);
			case 23:
				var address = msg.a;
				return A2(
					$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
					function (form) {
						return _Utils_update(
							form,
							{je: address});
					},
					model);
			case 32:
				var _v16 = model.F;
				if (!_v16.$) {
					var today = _v16.a;
					return A2(
						$author$project$Page$Organize$DetainerWarrantCreation$updateFormNarrow,
						function (form) {
							var nextJudgementId = $elm$core$List$length(form.lf);
							return _Utils_Tuple2(
								_Utils_update(
									form,
									{
										lf: _Utils_ap(
											form.lf,
											_List_fromArray(
												[
													A3($author$project$Page$Organize$DetainerWarrantCreation$judgementFormInit, today, nextJudgementId, $elm$core$Maybe$Nothing)
												]))
									}),
								A2(
									$elm$core$Task$attempt,
									$elm$core$Basics$always($author$project$Page$Organize$DetainerWarrantCreation$NoOp),
									$elm$browser$Browser$Dom$focus(
										A2($author$project$Page$Organize$DetainerWarrantCreation$judgementInfoText, nextJudgementId, 0))));
						},
						model);
				} else {
					return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
				}
			case 33:
				var selected = msg.a;
				return A2(
					$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
					function (form) {
						return _Utils_update(
							form,
							{
								lf: A2($elm_community$list_extra$List$Extra$removeAt, selected, form.lf)
							});
					},
					model);
			case 34:
				var selected = msg.a;
				var changeEvent = msg.b;
				switch (changeEvent.$) {
					case 0:
						var date = changeEvent.a;
						return A2(
							$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
							A2(
								$author$project$Page$Organize$DetainerWarrantCreation$updateJudgement,
								selected,
								function (judgement) {
									var courtDate = judgement.bj;
									var updatedCourtDate = _Utils_update(
										courtDate,
										{
											gZ: $elm$core$Maybe$Just(date),
											j9: $justinmimbs$date$Date$toIsoString(date)
										});
									return _Utils_update(
										judgement,
										{bj: updatedCourtDate});
								}),
							model);
					case 1:
						var text = changeEvent.a;
						return A2(
							$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
							A2(
								$author$project$Page$Organize$DetainerWarrantCreation$updateJudgement,
								selected,
								function (judgement) {
									var courtDate = judgement.bj;
									var updatedCourtDate = _Utils_update(
										courtDate,
										{
											gZ: A2(
												$elm_community$maybe_extra$Maybe$Extra$orElse,
												courtDate.gZ,
												$elm$core$Result$toMaybe(
													$justinmimbs$date$Date$fromIsoString(text))),
											j9: text
										});
									return _Utils_update(
										judgement,
										{bj: updatedCourtDate});
								}),
							model);
					default:
						var subMsg = changeEvent.a;
						return A2(
							$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
							A2(
								$author$project$Page$Organize$DetainerWarrantCreation$updateJudgement,
								selected,
								function (judgement) {
									var courtDate = judgement.bj;
									var updatedCourtDate = _Utils_update(
										courtDate,
										{
											l2: A2($fabhof$elm_ui_datepicker$DatePicker$update, subMsg, courtDate.l2)
										});
									return _Utils_update(
										judgement,
										{bj: updatedCourtDate});
								}),
							model);
				}
			case 35:
				var selected = msg.a;
				var option = msg.b;
				return A2(
					$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
					A2(
						$author$project$Page$Organize$DetainerWarrantCreation$updateJudgement,
						selected,
						function (judgement) {
							return _Utils_update(
								judgement,
								{
									cP: A2($elm$core$Maybe$andThen, $elm$core$Basics$identity, option)
								});
						}),
					model);
			case 44:
				var selected = msg.a;
				var subMsg = msg.b;
				return A2(
					$author$project$Page$Organize$DetainerWarrantCreation$updateFormNarrow,
					function (form) {
						var judgementsAndCmds = A2(
							$elm$core$List$indexedMap,
							F2(
								function (candidate, judgement) {
									if (_Utils_eq(selected, candidate)) {
										var _v18 = A4(
											$PaackEng$elm_ui_dropdown$Dropdown$update,
											A2($author$project$Page$Organize$DetainerWarrantCreation$dismissalBasisDropdownConfig, selected, _List_Nil),
											subMsg,
											{
												lU: $author$project$DetainerWarrant$dismissalBasisOptions,
												C: $elm$core$Maybe$Just(judgement.d$)
											},
											judgement.km);
										var state = _v18.a;
										var cmd = _v18.b;
										return _Utils_Tuple2(
											_Utils_update(
												judgement,
												{km: state}),
											cmd);
									} else {
										return _Utils_Tuple2(judgement, $elm$core$Platform$Cmd$none);
									}
								}),
							form.lf);
						return _Utils_Tuple2(
							_Utils_update(
								form,
								{
									lf: A2($elm$core$List$map, $elm$core$Tuple$first, judgementsAndCmds)
								}),
							$elm$core$Platform$Cmd$batch(
								A2($elm$core$List$map, $elm$core$Tuple$second, judgementsAndCmds)));
					},
					model);
			case 45:
				var selected = msg.a;
				var option = msg.b;
				return A2(
					$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
					A2(
						$author$project$Page$Organize$DetainerWarrantCreation$updateJudgement,
						selected,
						function (judgement) {
							return _Utils_update(
								judgement,
								{
									d$: A2($elm$core$Maybe$withDefault, 0, option)
								});
						}),
					model);
			case 46:
				var selected = msg.a;
				var checked = msg.b;
				return A2(
					$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
					A2(
						$author$project$Page$Organize$DetainerWarrantCreation$updateJudgement,
						selected,
						function (judgement) {
							return _Utils_update(
								judgement,
								{dI: checked});
						}),
					model);
			case 24:
				var selected = msg.a;
				var name = msg.b;
				return A2(
					$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
					function (form) {
						return _Utils_update(
							form,
							{
								g0: A2(
									$elm$core$List$indexedMap,
									F2(
										function (index, defendant) {
											return _Utils_eq(index, selected) ? _Utils_update(
												defendant,
												{kE: name}) : defendant;
										}),
									form.g0)
							});
					},
					model);
			case 25:
				var selected = msg.a;
				var name = msg.b;
				return A2(
					$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
					function (form) {
						return _Utils_update(
							form,
							{
								g0: A2(
									$elm$core$List$indexedMap,
									F2(
										function (index, defendant) {
											return _Utils_eq(index, selected) ? _Utils_update(
												defendant,
												{ls: name}) : defendant;
										}),
									form.g0)
							});
					},
					model);
			case 26:
				var selected = msg.a;
				var name = msg.b;
				return A2(
					$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
					function (form) {
						return _Utils_update(
							form,
							{
								g0: A2(
									$elm$core$List$indexedMap,
									F2(
										function (index, defendant) {
											return _Utils_eq(index, selected) ? _Utils_update(
												defendant,
												{lh: name}) : defendant;
										}),
									form.g0)
							});
					},
					model);
			case 27:
				var selected = msg.a;
				var suffix = msg.b;
				return A2(
					$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
					function (form) {
						return _Utils_update(
							form,
							{
								g0: A2(
									$elm$core$List$indexedMap,
									F2(
										function (index, defendant) {
											return _Utils_eq(index, selected) ? _Utils_update(
												defendant,
												{mM: suffix}) : defendant;
										}),
									form.g0)
							});
					},
					model);
			case 28:
				var selected = msg.a;
				var phoneIndex = msg.b;
				var phone = msg.c;
				return A2(
					$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
					function (form) {
						return _Utils_update(
							form,
							{
								g0: A2(
									$elm$core$List$indexedMap,
									F2(
										function (index, defendant) {
											return _Utils_eq(index, selected) ? _Utils_update(
												defendant,
												{
													l5: A2(
														$elm$core$List$indexedMap,
														F2(
															function (i, p) {
																return _Utils_eq(i, phoneIndex) ? A2($Massolari$elm_mask$Mask$number, '###-###-####', phone) : p;
															}),
														defendant.l5)
												}) : defendant;
										}),
									form.g0)
							});
					},
					model);
			case 31:
				return A2(
					$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
					function (form) {
						return _Utils_update(
							form,
							{
								g0: _Utils_ap(
									form.g0,
									_List_fromArray(
										[
											$author$project$Page$Organize$DetainerWarrantCreation$initDefendantForm($elm$core$Maybe$Nothing)
										]))
							});
					},
					model);
			case 29:
				var defendantIndex = msg.a;
				return A2(
					$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
					function (form) {
						return _Utils_update(
							form,
							{
								g0: A2(
									$elm$core$List$indexedMap,
									F2(
										function (index, def) {
											return _Utils_eq(index, defendantIndex) ? _Utils_update(
												def,
												{
													l5: _Utils_ap(
														def.l5,
														_List_fromArray(
															['']))
												}) : def;
										}),
									form.g0)
							});
					},
					model);
			case 30:
				var defendantIndex = msg.a;
				var phoneIndex = msg.b;
				return A2(
					$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
					function (form) {
						return _Utils_update(
							form,
							{
								g0: A2(
									$elm$core$List$indexedMap,
									F2(
										function (index, def) {
											return _Utils_eq(index, defendantIndex) ? _Utils_update(
												def,
												{
													l5: A2($elm_community$list_extra$List$Extra$removeAt, phoneIndex, def.l5)
												}) : def;
										}),
									form.g0)
							});
					},
					model);
			case 36:
				var selected = msg.a;
				var subMsg = msg.b;
				return A2(
					$author$project$Page$Organize$DetainerWarrantCreation$updateFormNarrow,
					function (form) {
						var judgementsAndCmds = A2(
							$elm$core$List$indexedMap,
							F2(
								function (candidate, judgement) {
									if (_Utils_eq(selected, candidate)) {
										var _v19 = A4(
											$PaackEng$elm_ui_dropdown$Dropdown$update,
											A2($author$project$Page$Organize$DetainerWarrantCreation$conditionsDropdownConfig, selected, _List_Nil),
											subMsg,
											{
												lU: $author$project$DetainerWarrant$conditionsOptions,
												C: $elm$core$Maybe$Just(judgement.cP)
											},
											judgement.j0);
										var state = _v19.a;
										var cmd = _v19.b;
										return _Utils_Tuple2(
											_Utils_update(
												judgement,
												{j0: state}),
											cmd);
									} else {
										return _Utils_Tuple2(judgement, $elm$core$Platform$Cmd$none);
									}
								}),
							form.lf);
						return _Utils_Tuple2(
							_Utils_update(
								form,
								{
									lf: A2($elm$core$List$map, $elm$core$Tuple$first, judgementsAndCmds)
								}),
							$elm$core$Platform$Cmd$batch(
								A2($elm$core$List$map, $elm$core$Tuple$second, judgementsAndCmds)));
					},
					model);
			case 37:
				var selected = msg.a;
				var money = msg.b;
				return A2(
					$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
					A2(
						$author$project$Page$Organize$DetainerWarrantCreation$updateJudgement,
						selected,
						function (judgement) {
							return _Utils_update(
								judgement,
								{
									bL: A3($elm$core$String$replace, '$', '', money)
								});
						}),
					model);
			case 38:
				var selected = msg.a;
				var options = $Massolari$elm_mask$Mask$defaultDecimalOptions;
				var extract = function (money) {
					return $elm$core$String$toFloat(
						A3($elm$core$String$replace, ',', '', money));
				};
				return A2(
					$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
					A2(
						$author$project$Page$Organize$DetainerWarrantCreation$updateJudgement,
						selected,
						function (judgement) {
							return _Utils_update(
								judgement,
								{
									bL: function () {
										var _v20 = extract(judgement.bL);
										if (!_v20.$) {
											var moneyFloat = _v20.a;
											return A2($Massolari$elm_mask$Mask$floatDecimal, options, moneyFloat);
										} else {
											return judgement.bL;
										}
									}()
								});
						}),
					model);
			case 39:
				var selected = msg.a;
				var checked = msg.b;
				return A2(
					$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
					A2(
						$author$project$Page$Organize$DetainerWarrantCreation$updateJudgement,
						selected,
						function (judgement) {
							return _Utils_update(
								judgement,
								{cK: checked});
						}),
					model);
			case 40:
				var selected = msg.a;
				var checked = msg.b;
				return A2(
					$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
					A2(
						$author$project$Page$Organize$DetainerWarrantCreation$updateJudgement,
						selected,
						function (judgement) {
							return _Utils_update(
								judgement,
								{b0: checked});
						}),
					model);
			case 41:
				var selected = msg.a;
				var interestRate = msg.b;
				return A2(
					$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
					A2(
						$author$project$Page$Organize$DetainerWarrantCreation$updateJudgement,
						selected,
						function (judgement) {
							return _Utils_update(
								judgement,
								{
									d6: A3($elm$core$String$replace, '%', '', interestRate)
								});
						}),
					model);
			case 42:
				var selected = msg.a;
				return A2(
					$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
					A2(
						$author$project$Page$Organize$DetainerWarrantCreation$updateJudgement,
						selected,
						function (judgement) {
							return _Utils_update(
								judgement,
								{
									d6: A3($elm$core$String$replace, '%', '', judgement.d6) + '%'
								});
						}),
					model);
			case 43:
				var selected = msg.a;
				var checked = msg.b;
				return A2(
					$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
					A2(
						$author$project$Page$Organize$DetainerWarrantCreation$updateJudgement,
						selected,
						function (judgement) {
							return _Utils_update(
								judgement,
								{b7: checked});
						}),
					model);
			case 47:
				var selected = msg.a;
				var changeEvent = msg.b;
				switch (changeEvent.$) {
					case 0:
						var person = changeEvent.a;
						return A2(
							$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
							A2(
								$author$project$Page$Organize$DetainerWarrantCreation$updateJudgement,
								selected,
								function (form) {
									var judge = form.dd;
									var updatedJudge = _Utils_update(
										judge,
										{
											ih: $elm$core$Maybe$Just(person)
										});
									return _Utils_update(
										form,
										{dd: updatedJudge});
								}),
							model);
					case 1:
						var text = changeEvent.a;
						return _Utils_Tuple2(
							A2(
								$author$project$Page$Organize$DetainerWarrantCreation$updateFormOnly,
								A2(
									$author$project$Page$Organize$DetainerWarrantCreation$updateJudgement,
									selected,
									function (form) {
										var judge = form.dd;
										var updatedJudge = _Utils_update(
											judge,
											{
												ih: $elm$core$Maybe$Nothing,
												ms: $russelldavies$elm_ui_searchbox$SearchBox$reset(judge.ms),
												mR: text
											});
										return _Utils_update(
											form,
											{dd: updatedJudge});
									}),
								model),
							A4(
								$author$project$Api$get,
								$author$project$Api$Endpoint$judges(
									_List_fromArray(
										[
											_Utils_Tuple2('name', text)
										])),
								maybeCred,
								$author$project$Page$Organize$DetainerWarrantCreation$GotJudges,
								$author$project$Api$collectionDecoder($author$project$DetainerWarrant$judgeDecoder)));
					default:
						var subMsg = changeEvent.a;
						return A2(
							$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
							A2(
								$author$project$Page$Organize$DetainerWarrantCreation$updateJudgement,
								selected,
								function (form) {
									var judge = form.dd;
									var updatedJudge = _Utils_update(
										judge,
										{
											ms: A2($russelldavies$elm_ui_searchbox$SearchBox$update, subMsg, judge.ms)
										});
									return _Utils_update(
										form,
										{dd: updatedJudge});
								}),
							model);
				}
			case 48:
				var selected = msg.a;
				var notes = msg.b;
				return A2(
					$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
					A2(
						$author$project$Page$Organize$DetainerWarrantCreation$updateJudgement,
						selected,
						function (judgement) {
							return _Utils_update(
								judgement,
								{aZ: notes});
						}),
					model);
			case 49:
				var notes = msg.a;
				return A2(
					$author$project$Page$Organize$DetainerWarrantCreation$updateForm,
					function (form) {
						return _Utils_update(
							form,
							{aZ: notes});
					},
					model);
			case 50:
				return $author$project$Page$Organize$DetainerWarrantCreation$submitForm(model);
			case 51:
				return $author$project$Page$Organize$DetainerWarrantCreation$submitFormAndAddAnother(model);
			case 52:
				if (!msg.a.$) {
					var plaintiffItem = msg.a.a;
					return $author$project$Page$Organize$DetainerWarrantCreation$nextStepSave(
						A2(
							$author$project$Page$Organize$DetainerWarrantCreation$updateFormOnly,
							function (form) {
								return _Utils_update(
									form,
									{
										ij: $author$project$Page$Organize$DetainerWarrantCreation$initPlaintiffForm(
											$elm$core$Maybe$Just(plaintiffItem.eN))
									});
							},
							_Utils_update(
								model,
								{
									n: function () {
										var _v22 = model.n;
										if (!_v22.$) {
											var models = _v22.a;
											return $author$project$Page$Organize$DetainerWarrantCreation$SavingRelatedModels(
												_Utils_update(
													models,
													{ij: true}));
										} else {
											return model.n;
										}
									}()
								})));
				} else {
					var httpError = msg.a.a;
					return _Utils_Tuple2(
						model,
						logHttpError(httpError));
				}
			case 54:
				if (!msg.a.$) {
					var courtroomItem = msg.a.a;
					return $author$project$Page$Organize$DetainerWarrantCreation$nextStepSave(
						A2(
							$author$project$Page$Organize$DetainerWarrantCreation$updateFormOnly,
							function (form) {
								return _Utils_update(
									form,
									{
										gW: $author$project$Page$Organize$DetainerWarrantCreation$initCourtroomForm(
											$elm$core$Maybe$Just(courtroomItem.eN))
									});
							},
							_Utils_update(
								model,
								{
									n: function () {
										var _v23 = model.n;
										if (!_v23.$) {
											var models = _v23.a;
											return $author$project$Page$Organize$DetainerWarrantCreation$SavingRelatedModels(
												_Utils_update(
													models,
													{gW: true}));
										} else {
											return model.n;
										}
									}()
								})));
				} else {
					var httpError = msg.a.a;
					return _Utils_Tuple2(
						model,
						logHttpError(httpError));
				}
			case 55:
				if (!msg.a.$) {
					var judgeItem = msg.a.a;
					return $author$project$Page$Organize$DetainerWarrantCreation$nextStepSave(
						A2(
							$author$project$Page$Organize$DetainerWarrantCreation$updateFormOnly,
							function (form) {
								return _Utils_update(
									form,
									{
										ip: $author$project$Page$Organize$DetainerWarrantCreation$initJudgeForm(
											$elm$core$Maybe$Just(judgeItem.eN))
									});
							},
							_Utils_update(
								model,
								{
									n: function () {
										var _v24 = model.n;
										if (!_v24.$) {
											var models = _v24.a;
											return $author$project$Page$Organize$DetainerWarrantCreation$SavingRelatedModels(
												_Utils_update(
													models,
													{dd: true}));
										} else {
											return model.n;
										}
									}()
								})));
				} else {
					var httpError = msg.a.a;
					return _Utils_Tuple2(
						model,
						logHttpError(httpError));
				}
			case 56:
				if (!msg.b.$) {
					var index = msg.a;
					var defendant = msg.b.a;
					return $author$project$Page$Organize$DetainerWarrantCreation$nextStepSave(
						A2(
							$author$project$Page$Organize$DetainerWarrantCreation$updateFormOnly,
							function (form) {
								return _Utils_update(
									form,
									{
										g0: A2(
											$elm$core$List$indexedMap,
											F2(
												function (i, def) {
													return _Utils_eq(i, index) ? $author$project$Page$Organize$DetainerWarrantCreation$initDefendantForm(
														$elm$core$Maybe$Just(defendant.eN)) : def;
												}),
											form.g0)
									});
							},
							_Utils_update(
								model,
								{
									n: function () {
										var _v25 = model.n;
										if (!_v25.$) {
											var models = _v25.a;
											return $author$project$Page$Organize$DetainerWarrantCreation$SavingRelatedModels(
												_Utils_update(
													models,
													{g0: models.g0 + 1}));
										} else {
											return model.n;
										}
									}()
								})));
				} else {
					var httpError = msg.b.a;
					return _Utils_Tuple2(
						model,
						logHttpError(httpError));
				}
			case 57:
				if (!msg.b.$) {
					var index = msg.a;
					var judgement = msg.b.a;
					var _v26 = model.F;
					if (!_v26.$) {
						var today = _v26.a;
						return $author$project$Page$Organize$DetainerWarrantCreation$nextStepSave(
							A2(
								$author$project$Page$Organize$DetainerWarrantCreation$updateFormOnly,
								function (form) {
									return _Utils_update(
										form,
										{
											lf: A2(
												$elm$core$List$indexedMap,
												F2(
													function (i, def) {
														return _Utils_eq(i, index) ? A3(
															$author$project$Page$Organize$DetainerWarrantCreation$judgementFormInit,
															today,
															index,
															$elm$core$Maybe$Just(judgement.eN)) : def;
													}),
												form.lf)
										});
								},
								_Utils_update(
									model,
									{
										n: function () {
											var _v27 = model.n;
											if (_v27.$ === 2) {
												var models = _v27.a;
												return $author$project$Page$Organize$DetainerWarrantCreation$SavingJudgements(
													_Utils_update(
														models,
														{lf: models.lf + 1}));
											} else {
												return model.n;
											}
										}()
									})));
					} else {
						return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
					}
				} else {
					var httpError = msg.b.a;
					return _Utils_Tuple2(
						model,
						logHttpError(httpError));
				}
			case 58:
				if (!msg.b.$) {
					return $author$project$Page$Organize$DetainerWarrantCreation$nextStepSave(model);
				} else {
					var httpError = msg.b.a;
					return _Utils_Tuple2(
						model,
						logHttpError(httpError));
				}
			case 53:
				if (!msg.a.$) {
					var attorney = msg.a.a;
					return $author$project$Page$Organize$DetainerWarrantCreation$nextStepSave(
						A2(
							$author$project$Page$Organize$DetainerWarrantCreation$updateFormOnly,
							function (form) {
								return _Utils_update(
									form,
									{
										ik: $author$project$Page$Organize$DetainerWarrantCreation$initAttorneyForm(
											$elm$core$Maybe$Just(attorney.eN))
									});
							},
							_Utils_update(
								model,
								{
									n: function () {
										var _v28 = model.n;
										if (!_v28.$) {
											var models = _v28.a;
											return $author$project$Page$Organize$DetainerWarrantCreation$SavingRelatedModels(
												_Utils_update(
													models,
													{bd: true}));
										} else {
											return model.n;
										}
									}()
								})));
				} else {
					var httpError = msg.a.a;
					return _Utils_Tuple2(
						model,
						logHttpError(httpError));
				}
			case 59:
				if (!msg.a.$) {
					var detainerWarrantItem = msg.a.a;
					return $author$project$Page$Organize$DetainerWarrantCreation$nextStepSave(
						_Utils_update(
							model,
							{
								cI: $elm$core$Maybe$Just(detainerWarrantItem.eN)
							}));
				} else {
					var httpError = msg.a.a;
					return _Utils_Tuple2(
						A2($author$project$Page$Organize$DetainerWarrantCreation$savingError, httpError, model),
						logHttpError(httpError));
				}
			case 60:
				if (!msg.a.$) {
					var plaintiffsPage = msg.a.a;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{bv: plaintiffsPage.eN}),
						$elm$core$Platform$Cmd$none);
				} else {
					var httpError = msg.a.a;
					return _Utils_Tuple2(
						model,
						logHttpError(httpError));
				}
			case 61:
				if (!msg.a.$) {
					var attorneysPage = msg.a.a;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{be: attorneysPage.eN}),
						$elm$core$Platform$Cmd$none);
				} else {
					var httpError = msg.a.a;
					return _Utils_Tuple2(
						model,
						logHttpError(httpError));
				}
			case 62:
				if (!msg.a.$) {
					var judgesPage = msg.a.a;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{aV: judgesPage.eN}),
						$elm$core$Platform$Cmd$none);
				} else {
					var httpError = msg.a.a;
					return _Utils_Tuple2(
						model,
						logHttpError(httpError));
				}
			case 63:
				if (!msg.a.$) {
					var courtroomsPage = msg.a.a;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{bk: courtroomsPage.eN}),
						$elm$core$Platform$Cmd$none);
				} else {
					var httpError = msg.a.a;
					return _Utils_Tuple2(
						model,
						logHttpError(httpError));
				}
			default:
				return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
		}
	});
var $author$project$Search$After = function (a) {
	return {$: 1, a: a};
};
var $author$project$Search$End = {$: 2};
var $author$project$Page$Organize$DetainerWarrants$InfiniteScrollMsg = function (a) {
	return {$: 12, a: a};
};
var $author$project$Page$Organize$DetainerWarrants$NoOp = {$: 13};
var $author$project$Page$Organize$DetainerWarrants$error = F2(
	function (rollbar, report) {
		return A3(
			$author$project$Log$error,
			rollbar,
			function (_v0) {
				return $author$project$Page$Organize$DetainerWarrants$NoOp;
			},
			report);
	});
var $FabienHenon$elm_infinite_scroll$InfiniteScroll$loadMoreCmd = F2(
	function (loadMoreFunc, _v0) {
		var model = _v0;
		return _Utils_update(
			model,
			{eb: loadMoreFunc});
	});
var $FabienHenon$elm_infinite_scroll$InfiniteScroll$stopLoading = function (_v0) {
	var model = _v0;
	return _Utils_update(
		model,
		{b8: false});
};
var $FabienHenon$elm_infinite_scroll$InfiniteScroll$Timeout = F2(
	function (a, b) {
		return {$: 2, a: a, b: b};
	});
var $FabienHenon$elm_infinite_scroll$InfiniteScroll$CurrTime = function (a) {
	return {$: 1, a: a};
};
var $FabienHenon$elm_infinite_scroll$InfiniteScroll$shouldLoadMore = F2(
	function (model, _v0) {
		var scrollTop = _v0.iC;
		var contentHeight = _v0.gV;
		var containerHeight = _v0.gT;
		if (model.b8) {
			return false;
		} else {
			var _v1 = model.g3;
			if (!_v1) {
				return _Utils_cmp(scrollTop, model.lG) < 1;
			} else {
				var excessHeight = contentHeight - containerHeight;
				return _Utils_cmp(scrollTop, excessHeight - model.lG) > -1;
			}
		}
	});
var $FabienHenon$elm_infinite_scroll$InfiniteScroll$startLoading = function (_v0) {
	var model = _v0;
	return _Utils_update(
		model,
		{b8: true});
};
var $FabienHenon$elm_infinite_scroll$InfiniteScroll$scrollUpdate = F3(
	function (mapper, pos, _v0) {
		var model = _v0;
		return A2($FabienHenon$elm_infinite_scroll$InfiniteScroll$shouldLoadMore, model, pos) ? _Utils_Tuple2(
			$FabienHenon$elm_infinite_scroll$InfiniteScroll$startLoading(model),
			A2(
				$elm$core$Platform$Cmd$map,
				mapper,
				A2($elm$core$Task$perform, $FabienHenon$elm_infinite_scroll$InfiniteScroll$CurrTime, $elm$time$Time$now))) : _Utils_Tuple2(
			model,
			A2($elm$core$Platform$Cmd$map, mapper, $elm$core$Platform$Cmd$none));
	});
var $FabienHenon$elm_infinite_scroll$InfiniteScroll$update = F3(
	function (mapper, msg, _v0) {
		var model = _v0;
		switch (msg.$) {
			case 0:
				var pos = msg.a;
				return A3($FabienHenon$elm_infinite_scroll$InfiniteScroll$scrollUpdate, mapper, pos, model);
			case 1:
				var time = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{d8: time}),
					$elm$core$Platform$Cmd$batch(
						_List_fromArray(
							[
								model.eb(model.g3),
								A2(
								$elm$core$Platform$Cmd$map,
								mapper,
								A2(
									$elm$core$Task$perform,
									$FabienHenon$elm_infinite_scroll$InfiniteScroll$Timeout(time),
									$elm$core$Process$sleep(model.cA)))
							])));
			default:
				var time = msg.a;
				return _Utils_eq(time, model.d8) ? _Utils_Tuple2(
					$FabienHenon$elm_infinite_scroll$InfiniteScroll$stopLoading(model),
					A2($elm$core$Platform$Cmd$map, mapper, $elm$core$Platform$Cmd$none)) : _Utils_Tuple2(
					model,
					A2($elm$core$Platform$Cmd$map, mapper, $elm$core$Platform$Cmd$none));
		}
	});
var $author$project$Page$Organize$DetainerWarrants$updateFilters = F2(
	function (transform, model) {
		var search = model.y;
		return _Utils_Tuple2(
			_Utils_update(
				model,
				{
					y: _Utils_update(
						search,
						{
							ab: transform(search.ab)
						})
				}),
			$elm$core$Platform$Cmd$none);
	});
var $author$project$Page$Organize$DetainerWarrants$update = F2(
	function (msg, model) {
		var rollbar = $author$project$Log$reporting(model.iz);
		var logHttpError = A2(
			$elm$core$Basics$composeL,
			$author$project$Page$Organize$DetainerWarrants$error(rollbar),
			$author$project$Log$httpErrorMessage);
		switch (msg.$) {
			case 0:
				var query = msg.a;
				return A2(
					$author$project$Page$Organize$DetainerWarrants$updateFilters,
					function (filters) {
						return _Utils_update(
							filters,
							{g4: query});
					},
					model);
			case 1:
				var changeEvent = msg.a;
				switch (changeEvent.$) {
					case 0:
						var date = changeEvent.a;
						var fileDate = model.hg;
						var updatedFileDate = _Utils_update(
							fileDate,
							{
								gZ: $elm$core$Maybe$Just(date),
								j9: $justinmimbs$date$Date$toIsoString(date)
							});
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{hg: updatedFileDate}),
							$elm$core$Platform$Cmd$none);
					case 1:
						var text = changeEvent.a;
						return _Utils_Tuple2(
							function () {
								var fileDate = model.hg;
								var updatedFileDate = _Utils_update(
									fileDate,
									{
										gZ: $elm$core$Result$toMaybe(
											$justinmimbs$date$Date$fromIsoString(text)),
										j9: text
									});
								return _Utils_update(
									model,
									{hg: updatedFileDate});
							}(),
							$elm$core$Platform$Cmd$none);
					default:
						var subMsg = changeEvent.a;
						var fileDate = model.hg;
						var updatedFileDate = _Utils_update(
							fileDate,
							{
								l2: A2($fabhof$elm_ui_datepicker$DatePicker$update, subMsg, fileDate.l2)
							});
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{hg: updatedFileDate}),
							$elm$core$Platform$Cmd$none);
				}
			case 2:
				var changeEvent = msg.a;
				switch (changeEvent.$) {
					case 0:
						var date = changeEvent.a;
						var courtDate = model.bj;
						var updatedCourtDate = _Utils_update(
							courtDate,
							{
								gZ: $elm$core$Maybe$Just(date),
								j9: $justinmimbs$date$Date$toIsoString(date)
							});
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{bj: updatedCourtDate}),
							$elm$core$Platform$Cmd$none);
					case 1:
						var text = changeEvent.a;
						return _Utils_Tuple2(
							function () {
								var courtDate = model.bj;
								var updatedCourtDate = _Utils_update(
									courtDate,
									{
										gZ: $elm$core$Result$toMaybe(
											$justinmimbs$date$Date$fromIsoString(text)),
										j9: text
									});
								return _Utils_update(
									model,
									{bj: updatedCourtDate});
							}(),
							$elm$core$Platform$Cmd$none);
					default:
						var subMsg = changeEvent.a;
						var courtDate = model.bj;
						var updatedCourtDate = _Utils_update(
							courtDate,
							{
								l2: A2($fabhof$elm_ui_datepicker$DatePicker$update, subMsg, courtDate.l2)
							});
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{bj: updatedCourtDate}),
							$elm$core$Platform$Cmd$none);
				}
			case 3:
				var query = msg.a;
				return A2(
					$author$project$Page$Organize$DetainerWarrants$updateFilters,
					function (filters) {
						return _Utils_update(
							filters,
							{ij: query});
					},
					model);
			case 4:
				var query = msg.a;
				return A2(
					$author$project$Page$Organize$DetainerWarrants$updateFilters,
					function (filters) {
						return _Utils_update(
							filters,
							{ik: query});
					},
					model);
			case 5:
				var query = msg.a;
				return A2(
					$author$project$Page$Organize$DetainerWarrants$updateFilters,
					function (filters) {
						return _Utils_update(
							filters,
							{eQ: query});
					},
					model);
			case 6:
				var query = msg.a;
				return A2(
					$author$project$Page$Organize$DetainerWarrants$updateFilters,
					function (filters) {
						return _Utils_update(
							filters,
							{je: query});
					},
					model);
			case 7:
				var docketId = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							a3: $elm$core$Maybe$Just(docketId)
						}),
					$elm$core$Platform$Cmd$none);
			case 8:
				var docketId = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							bq: $elm$core$Maybe$Just(docketId)
						}),
					$elm$core$Platform$Cmd$none);
			case 9:
				var updatedModel = A2(
					$author$project$Page$Organize$DetainerWarrants$updateFilters,
					function (filters) {
						return _Utils_update(
							filters,
							{bj: model.bj.gZ, hg: model.hg.gZ});
					},
					model).a;
				return _Utils_Tuple2(
					updatedModel,
					A2(
						$author$project$Route$replaceUrl,
						$author$project$Session$navKey(updatedModel.fY),
						$author$project$Route$ManageDetainerWarrants(updatedModel.y.ab)));
			case 10:
				if (!msg.a.$) {
					var detainerWarrantsPage = msg.a.a;
					var search = {
						j5: A2(
							$elm$core$Maybe$withDefault,
							$author$project$Search$End,
							A2($elm$core$Maybe$map, $author$project$Search$After, detainerWarrantsPage.hX.jg)),
						ab: model.y.ab,
						dk: $elm$core$Maybe$Just(model.y.ab),
						ne: $elm$core$Maybe$Just(detainerWarrantsPage.hX.ne)
					};
					var updatedModel = _Utils_update(
						model,
						{y: search});
					var maybeCred = $author$project$Session$cred(model.fY);
					return _Utils_eq(
						model.y.dk,
						$elm$core$Maybe$Just(model.y.ab)) ? _Utils_Tuple2(
						_Utils_update(
							updatedModel,
							{
								aC: A2(
									$FabienHenon$elm_infinite_scroll$InfiniteScroll$loadMoreCmd,
									A2($author$project$Page$Organize$DetainerWarrants$loadMore, maybeCred, search),
									$FabienHenon$elm_infinite_scroll$InfiniteScroll$stopLoading(model.aC)),
								nk: _Utils_ap(model.nk, detainerWarrantsPage.eN)
							}),
						$elm$core$Platform$Cmd$none) : _Utils_Tuple2(
						_Utils_update(
							updatedModel,
							{
								aC: A2(
									$FabienHenon$elm_infinite_scroll$InfiniteScroll$loadMoreCmd,
									A2($author$project$Page$Organize$DetainerWarrants$loadMore, maybeCred, search),
									$FabienHenon$elm_infinite_scroll$InfiniteScroll$stopLoading(model.aC)),
								nk: detainerWarrantsPage.eN
							}),
						$elm$core$Platform$Cmd$none);
				} else {
					var httpError = msg.a.a;
					return _Utils_Tuple2(
						model,
						logHttpError(httpError));
				}
			case 11:
				return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
			case 12:
				var subMsg = msg.a;
				var _v3 = model.y.j5;
				if (_v3.$ === 2) {
					return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
				} else {
					var _v4 = A3($FabienHenon$elm_infinite_scroll$InfiniteScroll$update, $author$project$Page$Organize$DetainerWarrants$InfiniteScrollMsg, subMsg, model.aC);
					var infiniteScroll = _v4.a;
					var cmd = _v4.b;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{aC: infiniteScroll}),
						cmd);
				}
			default:
				return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
		}
	});
var $author$project$Page$Organize$Event$initPhoneBankForm = function (defendant) {
	return {cx: defendant};
};
var $author$project$Page$Organize$Event$update = F2(
	function (msg, model) {
		switch (msg.$) {
			case 0:
				var result = msg.a;
				if (!result.$) {
					var eventPage = result.a;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{
								d0: $elm$core$Maybe$Just(eventPage.eN)
							}),
						$elm$core$Platform$Cmd$none);
				} else {
					var errMsg = result.a;
					return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
				}
			case 1:
				var column = msg.a;
				return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
			default:
				var defendant = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							dj: function () {
								var _v2 = model.dj;
								if (!_v2.$) {
									var phoneBankForm = _v2.a;
									return _Utils_eq(phoneBankForm.cx.hs, defendant.hs) ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(
										$author$project$Page$Organize$Event$initPhoneBankForm(defendant));
								} else {
									return $elm$core$Maybe$Just(
										$author$project$Page$Organize$Event$initPhoneBankForm(defendant));
								}
							}()
						}),
					$elm$core$Platform$Cmd$none);
		}
	});
var $author$project$Page$Organize$PlaintiffCreation$editForm = function (plaintiff) {
	return {
		jh: plaintiff.jh,
		bb: $author$project$MultiInput$init($author$project$Page$Organize$PlaintiffCreation$aliasesId),
		eU: '',
		h1: plaintiff.h1,
		aZ: ''
	};
};
var $author$project$Page$Organize$PlaintiffCreation$NoOp = {$: 9};
var $author$project$Page$Organize$PlaintiffCreation$error = F2(
	function (rollbar, report) {
		return A3(
			$author$project$Log$error,
			rollbar,
			function (_v0) {
				return $author$project$Page$Organize$PlaintiffCreation$NoOp;
			},
			report);
	});
var $author$project$Page$Organize$PlaintiffCreation$defaultSeparators = _List_fromArray(
	['\n', '\t']);
var $author$project$Page$Organize$PlaintiffCreation$multiInputUpdateConfig = {iG: $author$project$Page$Organize$PlaintiffCreation$defaultSeparators};
var $author$project$Page$Organize$PlaintiffCreation$toPlaintiff = F2(
	function (id, _v0) {
		var form = _v0;
		return {
			jh: form.jh,
			hs: A2($elm$core$Maybe$withDefault, -1, id),
			h1: form.h1
		};
	});
var $author$project$Page$Organize$PlaintiffCreation$Aliases = 1;
var $author$project$Page$Organize$PlaintiffCreation$Name = 0;
var $author$project$Page$Organize$PlaintiffCreation$fieldsToValidate = _List_fromArray(
	[0, 1]);
var $author$project$Page$Organize$PlaintiffCreation$Trimmed = $elm$core$Basics$identity;
var $author$project$Page$Organize$PlaintiffCreation$trimFields = function (form) {
	return _Utils_update(
		form,
		{
			jh: A2($elm$core$List$map, $elm$core$String$trim, form.jh),
			h1: $elm$core$String$trim(form.h1),
			aZ: $elm$core$String$trim(form.aZ)
		});
};
var $author$project$Page$Organize$PlaintiffCreation$InvalidEntry = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $author$project$Page$Organize$PlaintiffCreation$validateField = F2(
	function (_v0, field) {
		var form = _v0;
		return A2(
			$elm$core$List$map,
			$author$project$Page$Organize$PlaintiffCreation$InvalidEntry(field),
			function () {
				if (!field) {
					return $elm$core$String$isEmpty(form.h1) ? _List_Nil : _List_Nil;
				} else {
					return $elm$core$String$isEmpty(form.h1) ? _List_Nil : _List_Nil;
				}
			}());
	});
var $author$project$Page$Organize$PlaintiffCreation$validate = function (formStatus) {
	if (!formStatus.$) {
		return $elm$core$Result$Err(_List_Nil);
	} else {
		var form = formStatus.a;
		var trimmedForm = $author$project$Page$Organize$PlaintiffCreation$trimFields(form);
		var _v1 = A2(
			$elm$core$List$concatMap,
			$author$project$Page$Organize$PlaintiffCreation$validateField(trimmedForm),
			$author$project$Page$Organize$PlaintiffCreation$fieldsToValidate);
		if (!_v1.b) {
			return $elm$core$Result$Ok(trimmedForm);
		} else {
			var problems = _v1;
			return $elm$core$Result$Err(problems);
		}
	}
};
var $author$project$Page$Organize$PlaintiffCreation$nextStepSave = function (model) {
	var maybeCred = $author$project$Session$cred(model.fY);
	var _v0 = $author$project$Page$Organize$PlaintiffCreation$validate(model.bZ);
	if (!_v0.$) {
		var form = _v0.a;
		var plaintiff = A2($author$project$Page$Organize$PlaintiffCreation$toPlaintiff, model.hs, form);
		var _v1 = model.n;
		if (!_v1) {
			return _Utils_Tuple2(
				_Utils_update(
					model,
					{n: 1}),
				$elm$core$Platform$Cmd$none);
		} else {
			return _Utils_Tuple2(
				model,
				model.cj ? A2(
					$author$project$Route$replaceUrl,
					$author$project$Session$navKey(model.fY),
					$author$project$Route$PlaintiffCreation($elm$core$Maybe$Nothing)) : A2(
					$author$project$Route$replaceUrl,
					$author$project$Session$navKey(model.fY),
					$author$project$Route$PlaintiffCreation(
						$elm$core$Maybe$Just(plaintiff.hs))));
		}
	} else {
		return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
	}
};
var $author$project$Page$Organize$PlaintiffCreation$ServerError = function (a) {
	return {$: 1, a: a};
};
var $author$project$Page$Organize$PlaintiffCreation$savingError = F2(
	function (httpError, model) {
		var problems = _List_fromArray(
			[
				$author$project$Page$Organize$PlaintiffCreation$ServerError('Error saving plaintiff')
			]);
		return _Utils_update(
			model,
			{bx: problems});
	});
var $author$project$Page$Organize$PlaintiffCreation$SavingPlaintiff = 0;
var $author$project$Page$Organize$PlaintiffCreation$CreatedPlaintiff = function (a) {
	return {$: 8, a: a};
};
var $author$project$Page$Organize$PlaintiffCreation$conditional = F3(
	function (fieldName, fn, field) {
		return A2(
			$elm$core$Maybe$withDefault,
			_List_Nil,
			A2(
				$elm$core$Maybe$map,
				function (f) {
					return _List_fromArray(
						[
							_Utils_Tuple2(
							fieldName,
							fn(f))
						]);
				},
				field));
	});
var $author$project$Page$Organize$PlaintiffCreation$toBody = function (data) {
	return $elm$http$Http$jsonBody(
		$elm$json$Json$Encode$object(
			_List_fromArray(
				[
					_Utils_Tuple2('data', data)
				])));
};
var $author$project$Page$Organize$PlaintiffCreation$updatePlaintiff = F3(
	function (maybeCred, model, form) {
		var plaintiff = $elm$json$Json$Encode$object(
			_Utils_ap(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'name',
						$elm$json$Json$Encode$string(form.h1)),
						_Utils_Tuple2(
						'aliases',
						A2($elm$json$Json$Encode$list, $elm$json$Json$Encode$string, form.jh))
					]),
				A3($author$project$Page$Organize$PlaintiffCreation$conditional, 'id', $elm$json$Json$Encode$int, model.hs)));
		var _v0 = model.hs;
		if (!_v0.$) {
			var id = _v0.a;
			return A5(
				$author$project$Api$patch,
				$author$project$Api$Endpoint$plaintiff(id),
				maybeCred,
				$author$project$Page$Organize$PlaintiffCreation$toBody(plaintiff),
				$author$project$Page$Organize$PlaintiffCreation$CreatedPlaintiff,
				$author$project$Api$itemDecoder($author$project$Plaintiff$decoder));
		} else {
			return A5(
				$author$project$Api$post,
				$author$project$Api$Endpoint$plaintiffs(_List_Nil),
				maybeCred,
				$author$project$Page$Organize$PlaintiffCreation$toBody(plaintiff),
				$author$project$Page$Organize$PlaintiffCreation$CreatedPlaintiff,
				$author$project$Api$itemDecoder($author$project$Plaintiff$decoder));
		}
	});
var $author$project$Page$Organize$PlaintiffCreation$submitForm = function (model) {
	var maybeCred = $author$project$Session$cred(model.fY);
	var _v0 = $author$project$Page$Organize$PlaintiffCreation$validate(model.bZ);
	if (!_v0.$) {
		var validForm = _v0.a;
		var plaintiff = A2($author$project$Page$Organize$PlaintiffCreation$toPlaintiff, model.hs, validForm);
		return _Utils_Tuple2(
			_Utils_update(
				model,
				{cj: false, bx: _List_Nil, n: 0}),
			A3($author$project$Page$Organize$PlaintiffCreation$updatePlaintiff, maybeCred, model, plaintiff));
	} else {
		var problems = _v0.a;
		return _Utils_Tuple2(
			_Utils_update(
				model,
				{cj: false, bx: problems}),
			$elm$core$Platform$Cmd$none);
	}
};
var $author$project$Page$Organize$PlaintiffCreation$submitFormAndAddAnother = function (model) {
	return A2(
		$elm$core$Tuple$mapFirst,
		function (m) {
			return _Utils_update(
				m,
				{cj: true});
		},
		$author$project$Page$Organize$PlaintiffCreation$submitForm(model));
};
var $author$project$MultiInput$dropDuplicates = function (xs) {
	var step = F2(
		function (next, _v0) {
			var set = _v0.a;
			var acc = _v0.b;
			return A2($elm$core$Set$member, next, set) ? _Utils_Tuple2(set, acc) : _Utils_Tuple2(
				A2($elm$core$Set$insert, next, set),
				A2($elm$core$List$cons, next, acc));
		});
	return $elm$core$List$reverse(
		A3(
			$elm$core$List$foldl,
			step,
			_Utils_Tuple2($elm$core$Set$empty, _List_Nil),
			xs).b);
};
var $elm$regex$Regex$split = _Regex_splitAtMost(_Regex_infinity);
var $author$project$MultiInput$Backspace = 1;
var $author$project$MultiInput$Other = 2;
var $author$project$MultiInput$Tab = 0;
var $author$project$MultiInput$toSpecialKey = function (keyCode) {
	switch (keyCode) {
		case 8:
			return 1;
		case 9:
			return 0;
		default:
			return 2;
	}
};
var $author$project$MultiInput$update = F4(
	function (conf, msg, state, items) {
		var noChanges = _Utils_Tuple3(state, items, $elm$core$Platform$Cmd$none);
		var nextItemIsEmpty = state.ao === '';
		switch (msg.$) {
			case 0:
				return _Utils_Tuple3(
					_Utils_update(
						state,
						{aX: false}),
					items,
					state.aX ? A2(
						$elm$core$Task$attempt,
						function (_v1) {
							return $author$project$MultiInput$FocusElement;
						},
						$elm$browser$Browser$Dom$focus(state.hs)) : $elm$core$Platform$Cmd$none);
			case 2:
				var key = msg.a;
				var _v2 = $author$project$MultiInput$toSpecialKey(key);
				switch (_v2) {
					case 0:
						return nextItemIsEmpty ? noChanges : _Utils_Tuple3(
							_Utils_update(
								state,
								{aX: true, ao: ''}),
							$author$project$MultiInput$dropDuplicates(
								_Utils_ap(
									items,
									_List_fromArray(
										[state.ao]))),
							$elm$core$Platform$Cmd$none);
					case 1:
						if (nextItemIsEmpty) {
							var _v3 = $elm$core$List$head(
								$elm$core$List$reverse(items));
							if (!_v3.$) {
								var previousEmail = _v3.a;
								return _Utils_Tuple3(
									_Utils_update(
										state,
										{aX: true, ao: previousEmail}),
									A2(
										$elm$core$List$take,
										$elm$core$List$length(items) - 1,
										items),
									$elm$core$Platform$Cmd$none);
							} else {
								return noChanges;
							}
						} else {
							return noChanges;
						}
					default:
						return noChanges;
				}
			case 4:
				var text = msg.a;
				var separatorRegex = A2(
					$elm$core$Maybe$withDefault,
					$elm$regex$Regex$never,
					$elm$regex$Regex$fromString(
						A2($elm$core$String$join, '|', conf.iG)));
				var allItems = A2($elm$regex$Regex$split, separatorRegex, text);
				var _v4 = _Utils_Tuple2(
					A2(
						$elm$core$List$filter,
						A2($elm$core$Basics$composeL, $elm$core$Basics$not, $elm$core$String$isEmpty),
						A2(
							$elm$core$List$take,
							$elm$core$List$length(allItems) - 1,
							allItems)),
					A2(
						$elm$core$Maybe$withDefault,
						'',
						$elm$core$List$head(
							A2(
								$elm$core$List$drop,
								$elm$core$List$length(allItems) - 1,
								allItems))));
				var newItems = _v4.a;
				var nextItem = _v4.b;
				return _Utils_Tuple3(
					_Utils_update(
						state,
						{aX: true, ao: nextItem}),
					$author$project$MultiInput$dropDuplicates(
						_Utils_ap(items, newItems)),
					$elm$core$Platform$Cmd$none);
			case 3:
				var item = msg.a;
				return _Utils_Tuple3(
					state,
					A2(
						$elm$core$List$filter,
						$elm$core$Basics$neq(item),
						items),
					$elm$core$Platform$Cmd$none);
			default:
				var item = msg.a;
				return (item !== '') ? _Utils_Tuple3(
					_Utils_update(
						state,
						{ao: ''}),
					$author$project$MultiInput$dropDuplicates(
						_Utils_ap(
							items,
							_List_fromArray(
								[item]))),
					$elm$core$Platform$Cmd$none) : noChanges;
		}
	});
var $author$project$Page$Organize$PlaintiffCreation$updateForm = F2(
	function (transform, model) {
		return _Utils_Tuple2(
			_Utils_update(
				model,
				{
					bZ: function () {
						var _v0 = model.bZ;
						if (!_v0.$) {
							return model.bZ;
						} else {
							var oldForm = _v0.a;
							return $author$project$Page$Organize$PlaintiffCreation$Ready(
								transform(oldForm));
						}
					}()
				}),
			$elm$core$Platform$Cmd$none);
	});
var $author$project$Page$Organize$PlaintiffCreation$updateFormNarrow = F2(
	function (transform, model) {
		var _v0 = function () {
			var _v1 = model.bZ;
			if (!_v1.$) {
				return _Utils_Tuple2(model.bZ, $elm$core$Platform$Cmd$none);
			} else {
				var oldForm = _v1.a;
				var _v2 = transform(oldForm);
				var updatedForm = _v2.a;
				var dropdownCmd = _v2.b;
				return _Utils_Tuple2(
					$author$project$Page$Organize$PlaintiffCreation$Ready(updatedForm),
					dropdownCmd);
			}
		}();
		var newForm = _v0.a;
		var cmd = _v0.b;
		return _Utils_Tuple2(
			_Utils_update(
				model,
				{bZ: newForm}),
			cmd);
	});
var $author$project$Page$Organize$PlaintiffCreation$update = F2(
	function (msg, model) {
		var rollbar = $author$project$Log$reporting(model.iz);
		var maybeCred = $author$project$Session$cred(model.fY);
		var logHttpError = A2(
			$elm$core$Basics$composeL,
			$author$project$Page$Organize$PlaintiffCreation$error(rollbar),
			$author$project$Log$httpErrorMessage);
		switch (msg.$) {
			case 0:
				var result = msg.a;
				if (!result.$) {
					var plaintiffPage = result.a;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{
								bZ: $author$project$Page$Organize$PlaintiffCreation$Ready(
									$author$project$Page$Organize$PlaintiffCreation$editForm(plaintiffPage.eN)),
								ij: $elm$core$Maybe$Just(plaintiffPage.eN)
							}),
						$elm$core$Platform$Cmd$none);
				} else {
					var httpError = result.a;
					return _Utils_Tuple2(
						model,
						logHttpError(httpError));
				}
			case 1:
				var selection = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							a: _Utils_eq(
								$elm$core$Maybe$Just(selection),
								model.a) ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(selection)
						}),
					$elm$core$Platform$Cmd$none);
			case 2:
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{a: $elm$core$Maybe$Nothing}),
					$elm$core$Platform$Cmd$none);
			case 3:
				var name = msg.a;
				return A2(
					$author$project$Page$Organize$PlaintiffCreation$updateForm,
					function (form) {
						return _Utils_update(
							form,
							{h1: name});
					},
					model);
			case 4:
				var multiMsg = msg.a;
				return A2(
					$author$project$Page$Organize$PlaintiffCreation$updateFormNarrow,
					function (form) {
						var _v2 = A4($author$project$MultiInput$update, $author$project$Page$Organize$PlaintiffCreation$multiInputUpdateConfig, multiMsg, form.bb, form.jh);
						var nextState = _v2.a;
						var nextItems = _v2.b;
						var nextCmd = _v2.c;
						return _Utils_Tuple2(
							_Utils_update(
								form,
								{jh: nextItems, bb: nextState}),
							A2($elm$core$Platform$Cmd$map, $author$project$Page$Organize$PlaintiffCreation$ChangedAliases, nextCmd));
					},
					model);
			case 5:
				var notes = msg.a;
				return A2(
					$author$project$Page$Organize$PlaintiffCreation$updateForm,
					function (form) {
						return _Utils_update(
							form,
							{aZ: notes});
					},
					model);
			case 6:
				return $author$project$Page$Organize$PlaintiffCreation$submitForm(model);
			case 7:
				return $author$project$Page$Organize$PlaintiffCreation$submitFormAndAddAnother(model);
			case 8:
				if (!msg.a.$) {
					var plaintiffItem = msg.a.a;
					return $author$project$Page$Organize$PlaintiffCreation$nextStepSave(
						_Utils_update(
							model,
							{
								ij: $elm$core$Maybe$Just(plaintiffItem.eN)
							}));
				} else {
					var httpError = msg.a.a;
					return _Utils_Tuple2(
						A2($author$project$Page$Organize$PlaintiffCreation$savingError, httpError, model),
						logHttpError(httpError));
				}
			default:
				return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
		}
	});
var $author$project$Page$Organize$Plaintiffs$InfiniteScrollMsg = function (a) {
	return {$: 6, a: a};
};
var $author$project$Page$Organize$Plaintiffs$NoOp = {$: 7};
var $author$project$Page$Organize$Plaintiffs$error = F2(
	function (rollbar, report) {
		return A3(
			$author$project$Log$error,
			rollbar,
			function (_v0) {
				return $author$project$Page$Organize$Plaintiffs$NoOp;
			},
			report);
	});
var $author$project$Page$Organize$Plaintiffs$updateFilters = F2(
	function (transform, model) {
		var search = model.y;
		return _Utils_Tuple2(
			_Utils_update(
				model,
				{
					y: _Utils_update(
						search,
						{
							ab: transform(search.ab)
						})
				}),
			$elm$core$Platform$Cmd$none);
	});
var $author$project$Page$Organize$Plaintiffs$update = F2(
	function (msg, model) {
		var rollbar = $author$project$Log$reporting(model.iz);
		var logHttpError = A2(
			$elm$core$Basics$composeL,
			$author$project$Page$Organize$Plaintiffs$error(rollbar),
			$author$project$Log$httpErrorMessage);
		switch (msg.$) {
			case 0:
				var query = msg.a;
				return A2(
					$author$project$Page$Organize$Plaintiffs$updateFilters,
					function (filters) {
						return _Utils_update(
							filters,
							{h1: query});
					},
					model);
			case 1:
				var name = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							a3: $elm$core$Maybe$Just(name)
						}),
					$elm$core$Platform$Cmd$none);
			case 2:
				var name = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							bq: $elm$core$Maybe$Just(name)
						}),
					$elm$core$Platform$Cmd$none);
			case 3:
				return _Utils_Tuple2(
					model,
					A2(
						$author$project$Route$replaceUrl,
						$author$project$Session$navKey(model.fY),
						$author$project$Route$ManagePlaintiffs(model.y.ab)));
			case 4:
				if (!msg.a.$) {
					var plaintiffsPage = msg.a.a;
					var search = {
						j5: A2(
							$elm$core$Maybe$withDefault,
							$author$project$Search$End,
							A2($elm$core$Maybe$map, $author$project$Search$After, plaintiffsPage.hX.jg)),
						ab: model.y.ab,
						dk: $elm$core$Maybe$Just(model.y.ab),
						ne: $elm$core$Maybe$Just(plaintiffsPage.hX.ne)
					};
					var updatedModel = _Utils_update(
						model,
						{y: search});
					var maybeCred = $author$project$Session$cred(model.fY);
					return _Utils_eq(
						model.y.dk,
						$elm$core$Maybe$Just(model.y.ab)) ? _Utils_Tuple2(
						_Utils_update(
							updatedModel,
							{
								aC: A2(
									$FabienHenon$elm_infinite_scroll$InfiniteScroll$loadMoreCmd,
									A2($author$project$Page$Organize$Plaintiffs$loadMore, maybeCred, search),
									$FabienHenon$elm_infinite_scroll$InfiniteScroll$stopLoading(model.aC)),
								bv: _Utils_ap(model.bv, plaintiffsPage.eN)
							}),
						$elm$core$Platform$Cmd$none) : _Utils_Tuple2(
						_Utils_update(
							updatedModel,
							{
								aC: A2(
									$FabienHenon$elm_infinite_scroll$InfiniteScroll$loadMoreCmd,
									A2($author$project$Page$Organize$Plaintiffs$loadMore, maybeCred, search),
									$FabienHenon$elm_infinite_scroll$InfiniteScroll$stopLoading(model.aC)),
								bv: plaintiffsPage.eN
							}),
						$elm$core$Platform$Cmd$none);
				} else {
					var httpError = msg.a.a;
					return _Utils_Tuple2(
						model,
						logHttpError(httpError));
				}
			case 5:
				return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
			case 6:
				var subMsg = msg.a;
				var _v1 = model.y.j5;
				if (_v1.$ === 2) {
					return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
				} else {
					var _v2 = A3($FabienHenon$elm_infinite_scroll$InfiniteScroll$update, $author$project$Page$Organize$Plaintiffs$InfiniteScrollMsg, subMsg, model.aC);
					var infiniteScroll = _v2.a;
					var cmd = _v2.b;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{aC: infiniteScroll}),
						cmd);
				}
			default:
				return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
		}
	});
var $author$project$Page$Trends$NoOp = {$: 7};
var $author$project$Page$Trends$error = F2(
	function (rollbar, report) {
		return A3(
			$author$project$Log$error,
			rollbar,
			function (_v0) {
				return $author$project$Page$Trends$NoOp;
			},
			report);
	});
var $author$project$Page$Trends$update = F2(
	function (msg, model) {
		var rollbar = $author$project$Log$reporting(model.iz);
		var logHttpError = A2(
			$elm$core$Basics$composeL,
			$author$project$Page$Trends$error(rollbar),
			$author$project$Log$httpErrorMessage);
		switch (msg.$) {
			case 0:
				var result = msg.a;
				if (!result.$) {
					var topEvictors = result.a;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{es: topEvictors}),
						$elm$core$Platform$Cmd$none);
				} else {
					var httpError = result.a;
					return _Utils_Tuple2(
						model,
						logHttpError(httpError));
				}
			case 1:
				var result = msg.a;
				if (!result.$) {
					var warrantsPerMonth = result.a;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{ew: warrantsPerMonth}),
						$elm$core$Platform$Cmd$none);
				} else {
					var httpError = result.a;
					return _Utils_Tuple2(
						model,
						logHttpError(httpError));
				}
			case 2:
				var result = msg.a;
				if (!result.$) {
					var counts = result.a;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{ej: counts}),
						$elm$core$Platform$Cmd$none);
				} else {
					var httpError = result.a;
					return _Utils_Tuple2(
						model,
						logHttpError(httpError));
				}
			case 3:
				var result = msg.a;
				if (!result.$) {
					var rollupMeta = result.a;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{
								el: $elm$core$Maybe$Just(rollupMeta)
							}),
						$elm$core$Platform$Cmd$none);
				} else {
					var httpError = result.a;
					return _Utils_Tuple2(
						model,
						logHttpError(httpError));
				}
			case 4:
				if (!msg.a.$) {
					var collection = msg.a.a;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{
								dK: $elm$core$Maybe$Just(collection.eN)
							}),
						$elm$core$Platform$Cmd$none);
				} else {
					var httpError = msg.a.a;
					return _Utils_Tuple2(
						model,
						logHttpError(httpError));
				}
			case 5:
				var hovering = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{kS: hovering}),
					$elm$core$Platform$Cmd$none);
			case 6:
				var hovering = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{dc: hovering}),
					$elm$core$Platform$Cmd$none);
			default:
				return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
		}
	});
var $author$project$Page$WarrantHelp$update = F2(
	function (msg, model) {
		switch (msg.$) {
			case 0:
				var query = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{bz: query}),
					$elm$core$Platform$Cmd$none);
			case 1:
				var maybeCred = $author$project$Session$cred(model.fY);
				return _Utils_Tuple2(
					model,
					$author$project$Page$WarrantHelp$getWarrants(maybeCred));
			default:
				var result = msg.a;
				if (!result.$) {
					var detainerWarrantsPage = result.a;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{nk: detainerWarrantsPage.eN, gl: detainerWarrantsPage.hX.jg}),
						$elm$core$Platform$Cmd$none);
				} else {
					var errMsg = result.a;
					return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
				}
		}
	});
var $author$project$Main$update = F2(
	function (msg, model) {
		var _v0 = _Utils_Tuple2(msg, model.aG);
		_v0$19:
		while (true) {
			switch (_v0.a.$) {
				case 1:
					var urlRequest = _v0.a.a;
					if (!urlRequest.$) {
						var url = urlRequest.a;
						var _v2 = url.kI;
						if (_v2.$ === 1) {
							return _Utils_Tuple2(
								model,
								A2(
									$elm$browser$Browser$Navigation$pushUrl,
									$author$project$Session$navKey(
										$author$project$Main$toSession(model)),
									$elm$url$Url$toString(url)));
						} else {
							return _Utils_Tuple2(
								model,
								A2(
									$elm$browser$Browser$Navigation$pushUrl,
									$author$project$Session$navKey(
										$author$project$Main$toSession(model)),
									$elm$url$Url$toString(url)));
						}
					} else {
						var href = urlRequest.a;
						return _Utils_Tuple2(
							model,
							$elm$browser$Browser$Navigation$load(href));
					}
				case 0:
					var url = _v0.a.a;
					return A2(
						$author$project$Main$changeRouteTo,
						$author$project$Route$fromUrl(url),
						model);
				case 2:
					if (_v0.b.$ === 2) {
						var subMsg = _v0.a.a;
						var login = _v0.b.a;
						return A4(
							$author$project$Main$updateWith,
							$author$project$Main$Login,
							$author$project$Main$GotLoginMsg,
							model,
							A2($author$project$Page$Login$update, subMsg, login));
					} else {
						break _v0$19;
					}
				case 4:
					if (_v0.b.$ === 3) {
						var subMsg = _v0.a.a;
						var trends = _v0.b.a;
						return A4(
							$author$project$Main$updateWith,
							$author$project$Main$Trends,
							$author$project$Main$GotTrendsMsg,
							model,
							A2($author$project$Page$Trends$update, subMsg, trends));
					} else {
						break _v0$19;
					}
				case 5:
					if (_v0.b.$ === 5) {
						var subMsg = _v0.a.a;
						var about = _v0.b.a;
						return A4(
							$author$project$Main$updateWith,
							$author$project$Main$About,
							$author$project$Main$GotAboutMsg,
							model,
							A2($author$project$Page$About$update, subMsg, about));
					} else {
						break _v0$19;
					}
				case 6:
					if (_v0.b.$ === 4) {
						var subMsg = _v0.a.a;
						var warrantHelp = _v0.b.a;
						return A4(
							$author$project$Main$updateWith,
							$author$project$Main$WarrantHelp,
							$author$project$Main$GotWarrantHelpMsg,
							model,
							A2($author$project$Page$WarrantHelp$update, subMsg, warrantHelp));
					} else {
						break _v0$19;
					}
				case 7:
					if (_v0.b.$ === 6) {
						var subMsg = _v0.a.a;
						var actions = _v0.b.a;
						return A4(
							$author$project$Main$updateWith,
							$author$project$Main$Actions,
							$author$project$Main$GotActionsMsg,
							model,
							A2($author$project$Page$Actions$update, subMsg, actions));
					} else {
						break _v0$19;
					}
				case 8:
					if (_v0.b.$ === 7) {
						var subMsg = _v0.a.a;
						var glossary = _v0.b.a;
						return A4(
							$author$project$Main$updateWith,
							$author$project$Main$Glossary,
							$author$project$Main$GotGlossaryMsg,
							model,
							A2($author$project$Page$Glossary$update, subMsg, glossary));
					} else {
						break _v0$19;
					}
				case 9:
					if (_v0.b.$ === 8) {
						var subMsg = _v0.a.a;
						var dashboard = _v0.b.a;
						return A4(
							$author$project$Main$updateWith,
							$author$project$Main$OrganizerDashboard,
							$author$project$Main$GotOrganizerDashboardMsg,
							model,
							A2($author$project$Page$Organize$Dashboard$update, subMsg, dashboard));
					} else {
						break _v0$19;
					}
				case 11:
					if (_v0.b.$ === 10) {
						var subMsg = _v0.a.a;
						var _v3 = _v0.b;
						var campaignId = _v3.a;
						var id = _v3.b;
						var event = _v3.c;
						return A4(
							$author$project$Main$updateWith,
							A2($author$project$Main$Event, campaignId, id),
							$author$project$Main$GotEventMsg,
							model,
							A2($author$project$Page$Organize$Event$update, subMsg, event));
					} else {
						break _v0$19;
					}
				case 10:
					if (_v0.b.$ === 9) {
						var subMsg = _v0.a.a;
						var _v4 = _v0.b;
						var id = _v4.a;
						var campaign = _v4.b;
						return A4(
							$author$project$Main$updateWith,
							$author$project$Main$CampaignOverview(id),
							$author$project$Main$GotCampaignOverviewMsg,
							model,
							A2($author$project$Page$Organize$CampaignOverview$update, subMsg, campaign));
					} else {
						break _v0$19;
					}
				case 12:
					if (_v0.b.$ === 11) {
						var subMsg = _v0.a.a;
						var dw = _v0.b.a;
						return A4(
							$author$project$Main$updateWith,
							$author$project$Main$ManageDetainerWarrants,
							$author$project$Main$GotManageDetainerWarrantsMsg,
							model,
							A2($author$project$Page$Organize$DetainerWarrants$update, subMsg, dw));
					} else {
						break _v0$19;
					}
				case 13:
					if (_v0.b.$ === 12) {
						var subMsg = _v0.a.a;
						var _v5 = _v0.b;
						var maybeId = _v5.a;
						var dwc = _v5.b;
						return A4(
							$author$project$Main$updateWith,
							$author$project$Main$DetainerWarrantCreation(maybeId),
							$author$project$Main$GotDetainerWarrantCreationMsg,
							model,
							A2($author$project$Page$Organize$DetainerWarrantCreation$update, subMsg, dwc));
					} else {
						break _v0$19;
					}
				case 14:
					if (_v0.b.$ === 13) {
						var subMsg = _v0.a.a;
						var plaintiffs = _v0.b.a;
						return A4(
							$author$project$Main$updateWith,
							$author$project$Main$ManagePlaintiffs,
							$author$project$Main$GotManagePlaintiffsMsg,
							model,
							A2($author$project$Page$Organize$Plaintiffs$update, subMsg, plaintiffs));
					} else {
						break _v0$19;
					}
				case 15:
					if (_v0.b.$ === 14) {
						var subMsg = _v0.a.a;
						var _v6 = _v0.b;
						var maybeId = _v6.a;
						var dwc = _v6.b;
						return A4(
							$author$project$Main$updateWith,
							$author$project$Main$PlaintiffCreation(maybeId),
							$author$project$Main$GotPlaintiffCreationMsg,
							model,
							A2($author$project$Page$Organize$PlaintiffCreation$update, subMsg, dwc));
					} else {
						break _v0$19;
					}
				case 17:
					var _v7 = _v0.a;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{b$: !model.b$}),
						$elm$core$Platform$Cmd$none);
				case 18:
					var result = _v0.a.a;
					if (!result.$) {
						var me = result.a;
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{
									dl: $elm$core$Maybe$Just(me)
								}),
							$elm$core$Platform$Cmd$none);
					} else {
						return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
					}
				case 16:
					var session = _v0.a.a;
					var maybeCred = $author$project$Session$cred(session);
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{
								aG: $author$project$Main$Redirect(session)
							}),
						$elm$core$Platform$Cmd$batch(
							_List_fromArray(
								[
									A2(
									$author$project$Route$replaceUrl,
									$author$project$Session$navKey(session),
									$author$project$Route$Trends),
									A3($author$project$Api$currentUser, maybeCred, $author$project$Main$GotProfile, $author$project$User$userDecoder)
								])));
				case 19:
					var _v9 = _v0.a;
					var width = _v9.a;
					var height = _v9.b;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{
								i8: {hm: height, i5: width}
							}),
						$elm$core$Platform$Cmd$none);
				default:
					break _v0$19;
			}
		}
		return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
	});
var $author$project$Page$About = {$: 2};
var $author$project$Page$Actions = {$: 4};
var $author$project$Page$CampaignOverview = function (a) {
	return {$: 8, a: a};
};
var $author$project$Page$DetainerWarrantCreation = function (a) {
	return {$: 11, a: a};
};
var $author$project$Page$Event = F2(
	function (a, b) {
		return {$: 9, a: a, b: b};
	});
var $author$project$Page$Glossary = {$: 5};
var $author$project$Main$GotHamburgerMenuPress = {$: 17};
var $author$project$Page$ManageDetainerWarrants = {$: 10};
var $author$project$Page$ManagePlaintiffs = {$: 12};
var $author$project$Page$OrganizerDashboard = {$: 7};
var $author$project$Page$Other = {$: 0};
var $author$project$Page$PlaintiffCreation = function (a) {
	return {$: 13, a: a};
};
var $author$project$Page$Trends = {$: 1};
var $author$project$Page$WarrantHelp = {$: 3};
var $mdgriffith$elm_ui$Element$BigDesktop = 3;
var $mdgriffith$elm_ui$Element$Desktop = 2;
var $mdgriffith$elm_ui$Element$Landscape = 1;
var $mdgriffith$elm_ui$Element$Phone = 0;
var $mdgriffith$elm_ui$Element$Portrait = 0;
var $mdgriffith$elm_ui$Element$Tablet = 1;
var $author$project$Main$classifyDevice = function (window) {
	return {
		jS: function () {
			var shortSide = A2($elm$core$Basics$min, window.i5, window.hm);
			var longSide = A2($elm$core$Basics$max, window.i5, window.hm);
			return (shortSide < 1000) ? 0 : ((longSide <= 1400) ? 1 : (((longSide > 1200) && (longSide <= 1920)) ? 2 : 3));
		}(),
		lW: (_Utils_cmp(window.i5, window.hm) < 0) ? 0 : 1
	};
};
var $mdgriffith$elm_ui$Element$map = $mdgriffith$elm_ui$Internal$Model$map;
var $mdgriffith$elm_ui$Internal$Model$CenterX = 1;
var $mdgriffith$elm_ui$Element$centerX = $mdgriffith$elm_ui$Internal$Model$AlignX(1);
var $mdgriffith$elm_ui$Internal$Model$AsColumn = 1;
var $mdgriffith$elm_ui$Internal$Model$asColumn = 1;
var $mdgriffith$elm_ui$Internal$Model$htmlClass = function (cls) {
	return $mdgriffith$elm_ui$Internal$Model$Attr(
		$elm$html$Html$Attributes$class(cls));
};
var $mdgriffith$elm_ui$Element$column = F2(
	function (attrs, children) {
		return A4(
			$mdgriffith$elm_ui$Internal$Model$element,
			$mdgriffith$elm_ui$Internal$Model$asColumn,
			$mdgriffith$elm_ui$Internal$Model$div,
			A2(
				$elm$core$List$cons,
				$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.j3 + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.cQ)),
				A2(
					$elm$core$List$cons,
					$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink),
					A2(
						$elm$core$List$cons,
						$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink),
						attrs))),
			$mdgriffith$elm_ui$Internal$Model$Unkeyed(children));
	});
var $mdgriffith$elm_ui$Internal$Model$FontFamily = F2(
	function (a, b) {
		return {$: 1, a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Flag$fontFamily = $mdgriffith$elm_ui$Internal$Flag$flag(5);
var $elm$core$String$words = _String_words;
var $mdgriffith$elm_ui$Internal$Model$renderFontClassName = F2(
	function (font, current) {
		return _Utils_ap(
			current,
			function () {
				switch (font.$) {
					case 0:
						return 'serif';
					case 1:
						return 'sans-serif';
					case 2:
						return 'monospace';
					case 3:
						var name = font.a;
						return A2(
							$elm$core$String$join,
							'-',
							$elm$core$String$words(
								$elm$core$String$toLower(name)));
					case 4:
						var name = font.a;
						var url = font.b;
						return A2(
							$elm$core$String$join,
							'-',
							$elm$core$String$words(
								$elm$core$String$toLower(name)));
					default:
						var name = font.a.h1;
						return A2(
							$elm$core$String$join,
							'-',
							$elm$core$String$words(
								$elm$core$String$toLower(name)));
				}
			}());
	});
var $mdgriffith$elm_ui$Element$Font$family = function (families) {
	return A2(
		$mdgriffith$elm_ui$Internal$Model$StyleClass,
		$mdgriffith$elm_ui$Internal$Flag$fontFamily,
		A2(
			$mdgriffith$elm_ui$Internal$Model$FontFamily,
			A3($elm$core$List$foldl, $mdgriffith$elm_ui$Internal$Model$renderFontClassName, 'ff-', families),
			families));
};
var $mdgriffith$elm_ui$Internal$Model$FocusStyleOption = function (a) {
	return {$: 1, a: a};
};
var $mdgriffith$elm_ui$Element$focusStyle = $mdgriffith$elm_ui$Internal$Model$FocusStyleOption;
var $mdgriffith$elm_ui$Internal$Model$OnlyDynamic = F2(
	function (a, b) {
		return {$: 2, a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Model$StaticRootAndDynamic = F2(
	function (a, b) {
		return {$: 1, a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Model$AllowHover = 1;
var $mdgriffith$elm_ui$Internal$Model$Layout = 0;
var $mdgriffith$elm_ui$Internal$Model$focusDefaultStyle = {
	jw: $elm$core$Maybe$Nothing,
	jF: $elm$core$Maybe$Nothing,
	mw: $elm$core$Maybe$Just(
		{
			jD: 0,
			eL: A4($mdgriffith$elm_ui$Internal$Model$Rgba, 155 / 255, 203 / 255, 1, 1),
			lG: _Utils_Tuple2(0, 0),
			f$: 3
		})
};
var $mdgriffith$elm_ui$Internal$Model$optionsToRecord = function (options) {
	var combine = F2(
		function (opt, record) {
			switch (opt.$) {
				case 0:
					var hoverable = opt.a;
					var _v4 = record.kR;
					if (_v4.$ === 1) {
						return _Utils_update(
							record,
							{
								kR: $elm$core$Maybe$Just(hoverable)
							});
					} else {
						return record;
					}
				case 1:
					var focusStyle = opt.a;
					var _v5 = record.kF;
					if (_v5.$ === 1) {
						return _Utils_update(
							record,
							{
								kF: $elm$core$Maybe$Just(focusStyle)
							});
					} else {
						return record;
					}
				default:
					var renderMode = opt.a;
					var _v6 = record.lv;
					if (_v6.$ === 1) {
						return _Utils_update(
							record,
							{
								lv: $elm$core$Maybe$Just(renderMode)
							});
					} else {
						return record;
					}
			}
		});
	var andFinally = function (record) {
		return {
			kF: function () {
				var _v0 = record.kF;
				if (_v0.$ === 1) {
					return $mdgriffith$elm_ui$Internal$Model$focusDefaultStyle;
				} else {
					var focusable = _v0.a;
					return focusable;
				}
			}(),
			kR: function () {
				var _v1 = record.kR;
				if (_v1.$ === 1) {
					return 1;
				} else {
					var hoverable = _v1.a;
					return hoverable;
				}
			}(),
			lv: function () {
				var _v2 = record.lv;
				if (_v2.$ === 1) {
					return 0;
				} else {
					var actualMode = _v2.a;
					return actualMode;
				}
			}()
		};
	};
	return andFinally(
		A3(
			$elm$core$List$foldr,
			combine,
			{kF: $elm$core$Maybe$Nothing, kR: $elm$core$Maybe$Nothing, lv: $elm$core$Maybe$Nothing},
			options));
};
var $mdgriffith$elm_ui$Internal$Model$toHtml = F2(
	function (mode, el) {
		switch (el.$) {
			case 0:
				var html = el.a;
				return html($mdgriffith$elm_ui$Internal$Model$asEl);
			case 1:
				var styles = el.a.mK;
				var html = el.a.kT;
				return A2(
					html,
					mode(styles),
					$mdgriffith$elm_ui$Internal$Model$asEl);
			case 2:
				var text = el.a;
				return $mdgriffith$elm_ui$Internal$Model$textElement(text);
			default:
				return $mdgriffith$elm_ui$Internal$Model$textElement('');
		}
	});
var $mdgriffith$elm_ui$Internal$Model$renderRoot = F3(
	function (optionList, attributes, child) {
		var options = $mdgriffith$elm_ui$Internal$Model$optionsToRecord(optionList);
		var embedStyle = function () {
			var _v0 = options.lv;
			if (_v0 === 1) {
				return $mdgriffith$elm_ui$Internal$Model$OnlyDynamic(options);
			} else {
				return $mdgriffith$elm_ui$Internal$Model$StaticRootAndDynamic(options);
			}
		}();
		return A2(
			$mdgriffith$elm_ui$Internal$Model$toHtml,
			embedStyle,
			A4(
				$mdgriffith$elm_ui$Internal$Model$element,
				$mdgriffith$elm_ui$Internal$Model$asEl,
				$mdgriffith$elm_ui$Internal$Model$div,
				attributes,
				$mdgriffith$elm_ui$Internal$Model$Unkeyed(
					_List_fromArray(
						[child]))));
	});
var $mdgriffith$elm_ui$Internal$Model$FontSize = function (a) {
	return {$: 2, a: a};
};
var $mdgriffith$elm_ui$Internal$Model$SansSerif = {$: 1};
var $mdgriffith$elm_ui$Internal$Model$Typeface = function (a) {
	return {$: 3, a: a};
};
var $mdgriffith$elm_ui$Internal$Flag$fontColor = $mdgriffith$elm_ui$Internal$Flag$flag(14);
var $mdgriffith$elm_ui$Internal$Flag$fontSize = $mdgriffith$elm_ui$Internal$Flag$flag(4);
var $mdgriffith$elm_ui$Internal$Model$rootStyle = function () {
	var families = _List_fromArray(
		[
			$mdgriffith$elm_ui$Internal$Model$Typeface('Open Sans'),
			$mdgriffith$elm_ui$Internal$Model$Typeface('Helvetica'),
			$mdgriffith$elm_ui$Internal$Model$Typeface('Verdana'),
			$mdgriffith$elm_ui$Internal$Model$SansSerif
		]);
	return _List_fromArray(
		[
			A2(
			$mdgriffith$elm_ui$Internal$Model$StyleClass,
			$mdgriffith$elm_ui$Internal$Flag$bgColor,
			A3(
				$mdgriffith$elm_ui$Internal$Model$Colored,
				'bg-' + $mdgriffith$elm_ui$Internal$Model$formatColorClass(
					A4($mdgriffith$elm_ui$Internal$Model$Rgba, 1, 1, 1, 0)),
				'background-color',
				A4($mdgriffith$elm_ui$Internal$Model$Rgba, 1, 1, 1, 0))),
			A2(
			$mdgriffith$elm_ui$Internal$Model$StyleClass,
			$mdgriffith$elm_ui$Internal$Flag$fontColor,
			A3(
				$mdgriffith$elm_ui$Internal$Model$Colored,
				'fc-' + $mdgriffith$elm_ui$Internal$Model$formatColorClass(
					A4($mdgriffith$elm_ui$Internal$Model$Rgba, 0, 0, 0, 1)),
				'color',
				A4($mdgriffith$elm_ui$Internal$Model$Rgba, 0, 0, 0, 1))),
			A2(
			$mdgriffith$elm_ui$Internal$Model$StyleClass,
			$mdgriffith$elm_ui$Internal$Flag$fontSize,
			$mdgriffith$elm_ui$Internal$Model$FontSize(20)),
			A2(
			$mdgriffith$elm_ui$Internal$Model$StyleClass,
			$mdgriffith$elm_ui$Internal$Flag$fontFamily,
			A2(
				$mdgriffith$elm_ui$Internal$Model$FontFamily,
				A3($elm$core$List$foldl, $mdgriffith$elm_ui$Internal$Model$renderFontClassName, 'font-', families),
				families))
		]);
}();
var $mdgriffith$elm_ui$Element$layoutWith = F3(
	function (_v0, attrs, child) {
		var options = _v0.lU;
		return A3(
			$mdgriffith$elm_ui$Internal$Model$renderRoot,
			options,
			A2(
				$elm$core$List$cons,
				$mdgriffith$elm_ui$Internal$Model$htmlClass(
					A2(
						$elm$core$String$join,
						' ',
						_List_fromArray(
							[$mdgriffith$elm_ui$Internal$Style$classes.mg, $mdgriffith$elm_ui$Internal$Style$classes.js, $mdgriffith$elm_ui$Internal$Style$classes.my]))),
				_Utils_ap($mdgriffith$elm_ui$Internal$Model$rootStyle, attrs)),
			child);
	});
var $mdgriffith$elm_ui$Element$Font$sansSerif = $mdgriffith$elm_ui$Internal$Model$SansSerif;
var $mdgriffith$elm_ui$Element$Font$typeface = $mdgriffith$elm_ui$Internal$Model$Typeface;
var $mdgriffith$elm_ui$Internal$Flag$fontAlignment = $mdgriffith$elm_ui$Internal$Flag$flag(12);
var $mdgriffith$elm_ui$Element$Font$center = A2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$fontAlignment, $mdgriffith$elm_ui$Internal$Style$classes.mS);
var $mdgriffith$elm_ui$Element$Font$color = function (fontColor) {
	return A2(
		$mdgriffith$elm_ui$Internal$Model$StyleClass,
		$mdgriffith$elm_ui$Internal$Flag$fontColor,
		A3(
			$mdgriffith$elm_ui$Internal$Model$Colored,
			'fc-' + $mdgriffith$elm_ui$Internal$Model$formatColorClass(fontColor),
			'color',
			fontColor));
};
var $mdgriffith$elm_ui$Internal$Model$ContentInfo = {$: 2};
var $mdgriffith$elm_ui$Element$Region$footer = $mdgriffith$elm_ui$Internal$Model$Describe($mdgriffith$elm_ui$Internal$Model$ContentInfo);
var $elm$html$Html$Attributes$href = function (url) {
	return A2(
		$elm$html$Html$Attributes$stringProperty,
		'href',
		_VirtualDom_noJavaScriptUri(url));
};
var $elm$html$Html$Attributes$rel = _VirtualDom_attribute('rel');
var $mdgriffith$elm_ui$Element$link = F2(
	function (attrs, _v0) {
		var url = _v0.cF;
		var label = _v0.hL;
		return A4(
			$mdgriffith$elm_ui$Internal$Model$element,
			$mdgriffith$elm_ui$Internal$Model$asEl,
			$mdgriffith$elm_ui$Internal$Model$NodeName('a'),
			A2(
				$elm$core$List$cons,
				$mdgriffith$elm_ui$Internal$Model$Attr(
					$elm$html$Html$Attributes$href(url)),
				A2(
					$elm$core$List$cons,
					$mdgriffith$elm_ui$Internal$Model$Attr(
						$elm$html$Html$Attributes$rel('noopener noreferrer')),
					A2(
						$elm$core$List$cons,
						$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink),
						A2(
							$elm$core$List$cons,
							$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink),
							A2(
								$elm$core$List$cons,
								$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.dV + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.aS + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.hT)))),
								attrs))))),
			$mdgriffith$elm_ui$Internal$Model$Unkeyed(
				_List_fromArray(
					[label])));
	});
var $mdgriffith$elm_ui$Internal$Flag$fontWeight = $mdgriffith$elm_ui$Internal$Flag$flag(13);
var $mdgriffith$elm_ui$Element$Font$medium = A2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$fontWeight, $mdgriffith$elm_ui$Internal$Style$classes.mZ);
var $mdgriffith$elm_ui$Internal$Model$Paragraph = {$: 9};
var $mdgriffith$elm_ui$Element$paragraph = F2(
	function (attrs, children) {
		return A4(
			$mdgriffith$elm_ui$Internal$Model$element,
			$mdgriffith$elm_ui$Internal$Model$asParagraph,
			$mdgriffith$elm_ui$Internal$Model$div,
			A2(
				$elm$core$List$cons,
				$mdgriffith$elm_ui$Internal$Model$Describe($mdgriffith$elm_ui$Internal$Model$Paragraph),
				A2(
					$elm$core$List$cons,
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
					A2(
						$elm$core$List$cons,
						$mdgriffith$elm_ui$Element$spacing(5),
						attrs))),
			$mdgriffith$elm_ui$Internal$Model$Unkeyed(children));
	});
var $author$project$Palette$red = A3($mdgriffith$elm_ui$Element$rgb255, 216, 27, 96);
var $mdgriffith$elm_ui$Internal$Model$AsRow = 0;
var $mdgriffith$elm_ui$Internal$Model$asRow = 0;
var $mdgriffith$elm_ui$Element$row = F2(
	function (attrs, children) {
		return A4(
			$mdgriffith$elm_ui$Internal$Model$element,
			$mdgriffith$elm_ui$Internal$Model$asRow,
			$mdgriffith$elm_ui$Internal$Model$div,
			A2(
				$elm$core$List$cons,
				$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.cQ + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.aS)),
				A2(
					$elm$core$List$cons,
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink),
					A2(
						$elm$core$List$cons,
						$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink),
						attrs))),
			$mdgriffith$elm_ui$Internal$Model$Unkeyed(children));
	});
var $mdgriffith$elm_ui$Element$Font$size = function (i) {
	return A2(
		$mdgriffith$elm_ui$Internal$Model$StyleClass,
		$mdgriffith$elm_ui$Internal$Flag$fontSize,
		$mdgriffith$elm_ui$Internal$Model$FontSize(i));
};
var $mdgriffith$elm_ui$Internal$Model$AsTextColumn = 5;
var $mdgriffith$elm_ui$Internal$Model$asTextColumn = 5;
var $mdgriffith$elm_ui$Internal$Model$Max = F2(
	function (a, b) {
		return {$: 4, a: a, b: b};
	});
var $mdgriffith$elm_ui$Element$maximum = F2(
	function (i, l) {
		return A2($mdgriffith$elm_ui$Internal$Model$Max, i, l);
	});
var $mdgriffith$elm_ui$Element$textColumn = F2(
	function (attrs, children) {
		return A4(
			$mdgriffith$elm_ui$Internal$Model$element,
			$mdgriffith$elm_ui$Internal$Model$asTextColumn,
			$mdgriffith$elm_ui$Internal$Model$div,
			A2(
				$elm$core$List$cons,
				$mdgriffith$elm_ui$Element$width(
					A2(
						$mdgriffith$elm_ui$Element$maximum,
						750,
						A2($mdgriffith$elm_ui$Element$minimum, 500, $mdgriffith$elm_ui$Element$fill))),
				attrs),
			$mdgriffith$elm_ui$Internal$Model$Unkeyed(children));
	});
var $mdgriffith$elm_ui$Element$Border$widthXY = F2(
	function (x, y) {
		return A2(
			$mdgriffith$elm_ui$Internal$Model$StyleClass,
			$mdgriffith$elm_ui$Internal$Flag$borderWidth,
			A5(
				$mdgriffith$elm_ui$Internal$Model$BorderWidth,
				'b-' + ($elm$core$String$fromInt(x) + ('-' + $elm$core$String$fromInt(y))),
				y,
				x,
				y,
				x));
	});
var $mdgriffith$elm_ui$Element$Border$widthEach = function (_v0) {
	var bottom = _v0.eH;
	var top = _v0.gd;
	var left = _v0.fb;
	var right = _v0.fT;
	return (_Utils_eq(top, bottom) && _Utils_eq(left, right)) ? (_Utils_eq(top, right) ? $mdgriffith$elm_ui$Element$Border$width(top) : A2($mdgriffith$elm_ui$Element$Border$widthXY, left, top)) : A2(
		$mdgriffith$elm_ui$Internal$Model$StyleClass,
		$mdgriffith$elm_ui$Internal$Flag$borderWidth,
		A5(
			$mdgriffith$elm_ui$Internal$Model$BorderWidth,
			'b-' + ($elm$core$String$fromInt(top) + ('-' + ($elm$core$String$fromInt(right) + ('-' + ($elm$core$String$fromInt(bottom) + ('-' + $elm$core$String$fromInt(left))))))),
			top,
			right,
			bottom,
			left));
};
var $author$project$Page$viewFooter = A2(
	$mdgriffith$elm_ui$Element$row,
	_List_fromArray(
		[
			$mdgriffith$elm_ui$Element$Region$footer,
			$mdgriffith$elm_ui$Element$centerX,
			$mdgriffith$elm_ui$Element$Border$widthEach(
			{eH: 0, fb: 0, fT: 0, gd: 1}),
			$mdgriffith$elm_ui$Element$padding(10)
		]),
	_List_fromArray(
		[
			A2(
			$mdgriffith$elm_ui$Element$textColumn,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$Font$center,
					$mdgriffith$elm_ui$Element$Font$size(20),
					$mdgriffith$elm_ui$Element$spacing(10)
				]),
			_List_fromArray(
				[
					A2(
					$mdgriffith$elm_ui$Element$el,
					_List_fromArray(
						[$mdgriffith$elm_ui$Element$Font$medium]),
					$mdgriffith$elm_ui$Element$text('Data collected and provided for free to the people of Davidson County.')),
					A2(
					$mdgriffith$elm_ui$Element$paragraph,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$Font$color($author$project$Palette$red)
						]),
					_List_fromArray(
						[
							A2(
							$mdgriffith$elm_ui$Element$link,
							_List_Nil,
							{
								hL: $mdgriffith$elm_ui$Element$text('Red Door Collective'),
								cF: 'https://midtndsa.org/rdc/'
							}),
							$mdgriffith$elm_ui$Element$text(' © 2021')
						]))
				]))
		]));
var $author$project$Page$view = F2(
	function (header, _v0) {
		var title = _v0.er;
		var content = _v0.gU;
		return {
			bM: _List_fromArray(
				[
					A3(
					$mdgriffith$elm_ui$Element$layoutWith,
					{
						lU: _List_fromArray(
							[
								$mdgriffith$elm_ui$Element$focusStyle(
								{
									jw: $elm$core$Maybe$Nothing,
									jF: $elm$core$Maybe$Just($author$project$Palette$grayLight),
									mw: $elm$core$Maybe$Just(
										{
											jD: 3,
											eL: $author$project$Palette$gray,
											lG: _Utils_Tuple2(0, 0),
											f$: 3
										})
								})
							])
					},
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$Font$family(
							_List_fromArray(
								[
									$mdgriffith$elm_ui$Element$Font$typeface('Lato'),
									$mdgriffith$elm_ui$Element$Font$sansSerif
								]))
						]),
					A2(
						$mdgriffith$elm_ui$Element$column,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$centerX,
								$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
								$mdgriffith$elm_ui$Element$spacing(10)
							]),
						_List_fromArray(
							[header, content, $author$project$Page$viewFooter])))
				]),
			er: title + ' - RDC'
		};
	});
var $author$project$Palette$blackLight = A3($mdgriffith$elm_ui$Element$rgb255, 68, 67, 64);
var $mdgriffith$elm_ui$Element$Font$bold = A2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$fontWeight, $mdgriffith$elm_ui$Internal$Style$classes.jE);
var $author$project$Page$About$header = _List_fromArray(
	[
		$mdgriffith$elm_ui$Element$Font$size(24),
		$mdgriffith$elm_ui$Element$Font$bold,
		$mdgriffith$elm_ui$Element$Font$color($author$project$Palette$blackLight)
	]);
var $elm$html$Html$Attributes$alt = $elm$html$Html$Attributes$stringProperty('alt');
var $elm$html$Html$Attributes$src = function (url) {
	return A2(
		$elm$html$Html$Attributes$stringProperty,
		'src',
		_VirtualDom_noJavaScriptOrHtmlUri(url));
};
var $mdgriffith$elm_ui$Element$image = F2(
	function (attrs, _v0) {
		var src = _v0.eo;
		var description = _v0.d_;
		var imageAttributes = A2(
			$elm$core$List$filter,
			function (a) {
				switch (a.$) {
					case 7:
						return true;
					case 8:
						return true;
					default:
						return false;
				}
			},
			attrs);
		return A4(
			$mdgriffith$elm_ui$Internal$Model$element,
			$mdgriffith$elm_ui$Internal$Model$asEl,
			$mdgriffith$elm_ui$Internal$Model$div,
			A2(
				$elm$core$List$cons,
				$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.kU),
				attrs),
			$mdgriffith$elm_ui$Internal$Model$Unkeyed(
				_List_fromArray(
					[
						A4(
						$mdgriffith$elm_ui$Internal$Model$element,
						$mdgriffith$elm_ui$Internal$Model$asEl,
						$mdgriffith$elm_ui$Internal$Model$NodeName('img'),
						_Utils_ap(
							_List_fromArray(
								[
									$mdgriffith$elm_ui$Internal$Model$Attr(
									$elm$html$Html$Attributes$src(src)),
									$mdgriffith$elm_ui$Internal$Model$Attr(
									$elm$html$Html$Attributes$alt(description))
								]),
							imageAttributes),
						$mdgriffith$elm_ui$Internal$Model$Unkeyed(_List_Nil))
					])));
	});
var $mdgriffith$elm_ui$Element$Font$italic = $mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.la);
var $mdgriffith$elm_ui$Internal$Model$Px = function (a) {
	return {$: 0, a: a};
};
var $mdgriffith$elm_ui$Element$px = $mdgriffith$elm_ui$Internal$Model$Px;
var $author$project$Page$About$viewAbout = A2(
	$mdgriffith$elm_ui$Element$textColumn,
	_List_fromArray(
		[
			$mdgriffith$elm_ui$Element$centerX,
			$mdgriffith$elm_ui$Element$width(
			A2(
				$mdgriffith$elm_ui$Element$minimum,
				400,
				A2($mdgriffith$elm_ui$Element$maximum, 675, $mdgriffith$elm_ui$Element$fill))),
			$mdgriffith$elm_ui$Element$spacing(20),
			$mdgriffith$elm_ui$Element$Font$size(18),
			$mdgriffith$elm_ui$Element$padding(20)
		]),
	_List_fromArray(
		[
			A2(
			$mdgriffith$elm_ui$Element$el,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
				]),
			A2(
				$mdgriffith$elm_ui$Element$image,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$width(
						$mdgriffith$elm_ui$Element$px(350)),
						$mdgriffith$elm_ui$Element$centerX
					]),
				{d_: 'Drawing of a handshake with a rose in the background.', eo: '/static/images/dsa-handdrawn-logo.png'})),
			A2(
			$mdgriffith$elm_ui$Element$paragraph,
			$author$project$Page$About$header,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$text('Hello neighbor!')
				])),
			A2(
			$mdgriffith$elm_ui$Element$paragraph,
			_List_Nil,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$text('We are a grassroots network of Nashville residents striving to build power in our local communities and bring Nashville together in a time of crisis. The Red Door Collective creates resources collectively to combat some of the struggles we are experiencing together due to the current economic and political climate. Some of the projects we’re developing include:')
				])),
			A2(
			$mdgriffith$elm_ui$Element$paragraph,
			$author$project$Page$About$header,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$text('Community Health')
				])),
			A2(
			$mdgriffith$elm_ui$Element$paragraph,
			_List_Nil,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$text('At this time we are focusing on making sure our neighbors have everything they need to stay healthy during the Covid-19 pandemic. If there is a lack of food, cleaning materials, medicine, social interaction (to be provided digitally to observe social distancing measures) we will connect those with need to those with an ability to help out. Safety is our number one priority, so all materials are properly sanitized before exchange.')
				])),
			A2(
			$mdgriffith$elm_ui$Element$image,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
				]),
			{d_: 'Two people talking about socialism', eo: '/static/images/talk-about-socialism.png'}),
			A2(
			$mdgriffith$elm_ui$Element$paragraph,
			$author$project$Page$About$header,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$text('Protection from unwanted development')
				])),
			A2(
			$mdgriffith$elm_ui$Element$paragraph,
			_List_Nil,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$text('In times of crisis, some landlords and developers will take the opportunity to repossess property for development. Many neighborhoods in Nashville have experienced gentrification by such means. One of the first steps in combating unwanted development is communication and organization with neighbors who may also be affected.')
				])),
			A2(
			$mdgriffith$elm_ui$Element$paragraph,
			$author$project$Page$About$header,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$text('Community Gatherings')
				])),
			A2(
			$mdgriffith$elm_ui$Element$paragraph,
			_List_Nil,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$text('Sometimes a passing hello is the most we interact with our neighbors. Folks in the Red Door Collective will plan block parties and potlucks so that neighbors have more opportunities to catch up with each other. For the time being, gatherings may have to be digital; we will work together to build social solidarity while being physically distant.')
				])),
			A2(
			$mdgriffith$elm_ui$Element$image,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
				]),
			{d_: 'Two more people talking about socialism.', eo: '/static/images/people-talking2.png'}),
			A2(
			$mdgriffith$elm_ui$Element$paragraph,
			$author$project$Page$About$header,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$text('Community Gardens')
				])),
			A2(
			$mdgriffith$elm_ui$Element$paragraph,
			_List_Nil,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$text('Nashville has far fewer community gardens today than it has in the past; RDC will build garden plots to liven up the neighborhood and provide food to anyone in need.')
				])),
			A2(
			$mdgriffith$elm_ui$Element$paragraph,
			$author$project$Page$About$header,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$text('Transit')
				])),
			A2(
			$mdgriffith$elm_ui$Element$paragraph,
			_List_Nil,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$text('We will demand sidewalks, more bus stops, and lowering bus fares from our city officials. We will also build benches so pedestrians can rest. ')
				])),
			A2(
			$mdgriffith$elm_ui$Element$paragraph,
			$author$project$Page$About$header,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$text('Community Art')
				])),
			A2(
			$mdgriffith$elm_ui$Element$paragraph,
			_List_Nil,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$text('We want to liven up the physical spaces in our communities by painting murals for everyone to enjoy.')
				])),
			A2(
			$mdgriffith$elm_ui$Element$paragraph,
			$author$project$Page$About$header,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$text('Collective Power')
				])),
			A2(
			$mdgriffith$elm_ui$Element$paragraph,
			_List_Nil,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$text('Most importantly, to safeguard ourselves and our family’s well-being, we will build collective power through tenant’s unions and associations which will let us exert our power as workers and renters against exploitation and poverty.')
				])),
			A2(
			$mdgriffith$elm_ui$Element$textColumn,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$padding(10),
					$mdgriffith$elm_ui$Element$Border$widthEach(
					{eH: 0, fb: 0, fT: 0, gd: 1})
				]),
			_List_fromArray(
				[
					A2(
					$mdgriffith$elm_ui$Element$paragraph,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$Font$center,
							$mdgriffith$elm_ui$Element$Font$italic,
							$mdgriffith$elm_ui$Element$Font$size(20)
						]),
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$text('We as workers cannot rely on external assistance like governments, non-profits and charities. We must build power for ourselves, by ourselves by uniting to become more than ourselves. We are all we got, but WE are all we need, because together we can weather any storm.')
						])),
					A2(
					$mdgriffith$elm_ui$Element$paragraph,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$Font$center,
							$mdgriffith$elm_ui$Element$Font$italic,
							$mdgriffith$elm_ui$Element$Font$size(20)
						]),
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$text('As Dr. King said, \"We may have all come on different ships, but we are in the same boat now.\"')
						]))
				])),
			A2(
			$mdgriffith$elm_ui$Element$image,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
				]),
			{d_: 'A printable infographic that introduces Red Door Collective.', eo: '/static/images/intrographic.png'})
		]));
var $author$project$Page$About$view = function (model) {
	return {gU: $author$project$Page$About$viewAbout, er: 'About'};
};
var $author$project$Page$Actions$cdcStatement = 'https://www.youtube.com/embed/cu4Ir2nuvC0';
var $author$project$Page$Actions$dataExplanation = 'https://www.youtube.com/embed/kOuhKZxVF00';
var $author$project$Page$Actions$header = _List_fromArray(
	[
		$mdgriffith$elm_ui$Element$Font$size(22),
		$mdgriffith$elm_ui$Element$Font$bold,
		$mdgriffith$elm_ui$Element$Font$color($author$project$Palette$blackLight)
	]);
var $author$project$Palette$blue = A3($mdgriffith$elm_ui$Element$rgb255, 3, 169, 244);
var $elm$html$Html$Attributes$target = $elm$html$Html$Attributes$stringProperty('target');
var $mdgriffith$elm_ui$Element$newTabLink = F2(
	function (attrs, _v0) {
		var url = _v0.cF;
		var label = _v0.hL;
		return A4(
			$mdgriffith$elm_ui$Internal$Model$element,
			$mdgriffith$elm_ui$Internal$Model$asEl,
			$mdgriffith$elm_ui$Internal$Model$NodeName('a'),
			A2(
				$elm$core$List$cons,
				$mdgriffith$elm_ui$Internal$Model$Attr(
					$elm$html$Html$Attributes$href(url)),
				A2(
					$elm$core$List$cons,
					$mdgriffith$elm_ui$Internal$Model$Attr(
						$elm$html$Html$Attributes$rel('noopener noreferrer')),
					A2(
						$elm$core$List$cons,
						$mdgriffith$elm_ui$Internal$Model$Attr(
							$elm$html$Html$Attributes$target('_blank')),
						A2(
							$elm$core$List$cons,
							$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink),
							A2(
								$elm$core$List$cons,
								$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink),
								A2(
									$elm$core$List$cons,
									$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.dV + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.aS + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.hT)))),
									attrs)))))),
			$mdgriffith$elm_ui$Internal$Model$Unkeyed(
				_List_fromArray(
					[label])));
	});
var $mdgriffith$elm_ui$Element$rgba = $mdgriffith$elm_ui$Internal$Model$Rgba;
var $author$project$Design$link = function (attrs) {
	return $mdgriffith$elm_ui$Element$newTabLink(
		_Utils_ap(
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$Font$color($author$project$Palette$blue),
					$mdgriffith$elm_ui$Element$Border$widthEach(
					{eH: 1, fb: 0, fT: 0, gd: 0}),
					$mdgriffith$elm_ui$Element$Border$color(
					A4($mdgriffith$elm_ui$Element$rgba, 0, 0, 0, 0)),
					$mdgriffith$elm_ui$Element$mouseOver(
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$Border$color($author$project$Palette$blue)
						]))
				]),
			attrs));
};
var $author$project$Page$Actions$joinRdc = A2(
	$author$project$Design$link,
	_List_Nil,
	{
		hL: A2(
			$mdgriffith$elm_ui$Element$paragraph,
			_List_Nil,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$text('Join us and help organize for tenants!')
				])),
		cF: 'https://midtndsa.org/'
	});
var $author$project$Page$Actions$phonebank = 'https://www.youtube.com/embed/VwBXX4dYlwA';
var $author$project$Page$Actions$tanfFunds = 'https://www.youtube.com/embed/63lSmZ0nNNk';
var $author$project$Page$Actions$tile = $mdgriffith$elm_ui$Element$column(
	_List_fromArray(
		[
			$mdgriffith$elm_ui$Element$padding(10),
			$mdgriffith$elm_ui$Element$Font$center,
			$mdgriffith$elm_ui$Element$spacing(20),
			$mdgriffith$elm_ui$Element$Border$rounded(5),
			$mdgriffith$elm_ui$Element$Border$width(1),
			$mdgriffith$elm_ui$Element$Border$color($author$project$Palette$grayLight),
			$mdgriffith$elm_ui$Element$mouseOver(
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$Border$shadow(
					{
						jD: 0,
						eL: $author$project$Palette$redLight,
						lG: _Utils_Tuple2(0, 0),
						f$: 0.5
					}),
					$mdgriffith$elm_ui$Element$Border$color($author$project$Palette$red),
					$mdgriffith$elm_ui$Element$Background$color($author$project$Palette$redLight)
				]))
		]));
var $elm$html$Html$Attributes$attribute = $elm$virtual_dom$VirtualDom$attribute;
var $elm$html$Html$Attributes$height = function (n) {
	return A2(
		_VirtualDom_attribute,
		'height',
		$elm$core$String$fromInt(n));
};
var $elm$html$Html$iframe = _VirtualDom_node('iframe');
var $elm$html$Html$Attributes$title = $elm$html$Html$Attributes$stringProperty('title');
var $author$project$Page$Actions$videoHeight = 315;
var $author$project$Page$Actions$videoWidth = 560;
var $elm$html$Html$Attributes$width = function (n) {
	return A2(
		_VirtualDom_attribute,
		'width',
		$elm$core$String$fromInt(n));
};
var $author$project$Page$Actions$videoEmbed = function (src) {
	return A2(
		$mdgriffith$elm_ui$Element$el,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$width(
				$mdgriffith$elm_ui$Element$px($author$project$Page$Actions$videoWidth)),
				$mdgriffith$elm_ui$Element$height(
				$mdgriffith$elm_ui$Element$px($author$project$Page$Actions$videoHeight)),
				$mdgriffith$elm_ui$Element$centerX
			]),
		$mdgriffith$elm_ui$Element$html(
			A2(
				$elm$html$Html$iframe,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$width($author$project$Page$Actions$videoWidth),
						$elm$html$Html$Attributes$height($author$project$Page$Actions$videoHeight),
						$elm$html$Html$Attributes$src(src),
						$elm$html$Html$Attributes$title('YouTube video player'),
						A2($elm$html$Html$Attributes$attribute, 'frameborder', '0'),
						A2($elm$html$Html$Attributes$attribute, 'allow', 'accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture'),
						A2($elm$html$Html$Attributes$attribute, 'allowfullscreen', '')
					]),
				_List_Nil)));
};
var $author$project$Page$Actions$weeklyMeetings = _List_fromArray(
	[
		A2(
		$mdgriffith$elm_ui$Element$paragraph,
		_List_Nil,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$text('We meet virtually on every Thursday at 6:30 PM CT. ')
			])),
		A2(
		$author$project$Design$link,
		_List_Nil,
		{
			hL: A2(
				$mdgriffith$elm_ui$Element$paragraph,
				_List_Nil,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$text('Click this link to join our weekly meeting.')
					])),
			cF: 'https://bit.ly/RDCWeekly'
		})
	]);
var $mdgriffith$elm_ui$Internal$Model$Padding = F5(
	function (a, b, c, d, e) {
		return {$: 0, a: a, b: b, c: c, d: d, e: e};
	});
var $mdgriffith$elm_ui$Internal$Model$Spaced = F3(
	function (a, b, c) {
		return {$: 0, a: a, b: b, c: c};
	});
var $mdgriffith$elm_ui$Internal$Model$extractSpacingAndPadding = function (attrs) {
	return A3(
		$elm$core$List$foldr,
		F2(
			function (attr, _v0) {
				var pad = _v0.a;
				var spacing = _v0.b;
				return _Utils_Tuple2(
					function () {
						if (!pad.$) {
							var x = pad.a;
							return pad;
						} else {
							if ((attr.$ === 4) && (attr.b.$ === 7)) {
								var _v3 = attr.b;
								var name = _v3.a;
								var t = _v3.b;
								var r = _v3.c;
								var b = _v3.d;
								var l = _v3.e;
								return $elm$core$Maybe$Just(
									A5($mdgriffith$elm_ui$Internal$Model$Padding, name, t, r, b, l));
							} else {
								return $elm$core$Maybe$Nothing;
							}
						}
					}(),
					function () {
						if (!spacing.$) {
							var x = spacing.a;
							return spacing;
						} else {
							if ((attr.$ === 4) && (attr.b.$ === 5)) {
								var _v6 = attr.b;
								var name = _v6.a;
								var x = _v6.b;
								var y = _v6.c;
								return $elm$core$Maybe$Just(
									A3($mdgriffith$elm_ui$Internal$Model$Spaced, name, x, y));
							} else {
								return $elm$core$Maybe$Nothing;
							}
						}
					}());
			}),
		_Utils_Tuple2($elm$core$Maybe$Nothing, $elm$core$Maybe$Nothing),
		attrs);
};
var $mdgriffith$elm_ui$Internal$Model$paddingNameFloat = F4(
	function (top, right, bottom, left) {
		return 'pad-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(top) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(right) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(bottom) + ('-' + $mdgriffith$elm_ui$Internal$Model$floatClass(left)))))));
	});
var $elm$virtual_dom$VirtualDom$style = _VirtualDom_style;
var $elm$html$Html$Attributes$style = $elm$virtual_dom$VirtualDom$style;
var $mdgriffith$elm_ui$Element$wrappedRow = F2(
	function (attrs, children) {
		var _v0 = $mdgriffith$elm_ui$Internal$Model$extractSpacingAndPadding(attrs);
		var padded = _v0.a;
		var spaced = _v0.b;
		if (spaced.$ === 1) {
			return A4(
				$mdgriffith$elm_ui$Internal$Model$element,
				$mdgriffith$elm_ui$Internal$Model$asRow,
				$mdgriffith$elm_ui$Internal$Model$div,
				A2(
					$elm$core$List$cons,
					$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.cQ + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.aS + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.gr)))),
					A2(
						$elm$core$List$cons,
						$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink),
						A2(
							$elm$core$List$cons,
							$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink),
							attrs))),
				$mdgriffith$elm_ui$Internal$Model$Unkeyed(children));
		} else {
			var _v2 = spaced.a;
			var spaceName = _v2.a;
			var x = _v2.b;
			var y = _v2.c;
			var newPadding = function () {
				if (!padded.$) {
					var _v5 = padded.a;
					var name = _v5.a;
					var t = _v5.b;
					var r = _v5.c;
					var b = _v5.d;
					var l = _v5.e;
					if ((_Utils_cmp(r, x / 2) > -1) && (_Utils_cmp(b, y / 2) > -1)) {
						var newTop = t - (y / 2);
						var newRight = r - (x / 2);
						var newLeft = l - (x / 2);
						var newBottom = b - (y / 2);
						return $elm$core$Maybe$Just(
							A2(
								$mdgriffith$elm_ui$Internal$Model$StyleClass,
								$mdgriffith$elm_ui$Internal$Flag$padding,
								A5(
									$mdgriffith$elm_ui$Internal$Model$PaddingStyle,
									A4($mdgriffith$elm_ui$Internal$Model$paddingNameFloat, newTop, newRight, newBottom, newLeft),
									newTop,
									newRight,
									newBottom,
									newLeft)));
					} else {
						return $elm$core$Maybe$Nothing;
					}
				} else {
					return $elm$core$Maybe$Nothing;
				}
			}();
			if (!newPadding.$) {
				var pad = newPadding.a;
				return A4(
					$mdgriffith$elm_ui$Internal$Model$element,
					$mdgriffith$elm_ui$Internal$Model$asRow,
					$mdgriffith$elm_ui$Internal$Model$div,
					A2(
						$elm$core$List$cons,
						$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.cQ + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.aS + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.gr)))),
						A2(
							$elm$core$List$cons,
							$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink),
							A2(
								$elm$core$List$cons,
								$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink),
								_Utils_ap(
									attrs,
									_List_fromArray(
										[pad]))))),
					$mdgriffith$elm_ui$Internal$Model$Unkeyed(children));
			} else {
				var halfY = -(y / 2);
				var halfX = -(x / 2);
				return A4(
					$mdgriffith$elm_ui$Internal$Model$element,
					$mdgriffith$elm_ui$Internal$Model$asEl,
					$mdgriffith$elm_ui$Internal$Model$div,
					attrs,
					$mdgriffith$elm_ui$Internal$Model$Unkeyed(
						_List_fromArray(
							[
								A4(
								$mdgriffith$elm_ui$Internal$Model$element,
								$mdgriffith$elm_ui$Internal$Model$asRow,
								$mdgriffith$elm_ui$Internal$Model$div,
								A2(
									$elm$core$List$cons,
									$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.cQ + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.aS + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.gr)))),
									A2(
										$elm$core$List$cons,
										$mdgriffith$elm_ui$Internal$Model$Attr(
											A2(
												$elm$html$Html$Attributes$style,
												'margin',
												$elm$core$String$fromFloat(halfY) + ('px' + (' ' + ($elm$core$String$fromFloat(halfX) + 'px'))))),
										A2(
											$elm$core$List$cons,
											$mdgriffith$elm_ui$Internal$Model$Attr(
												A2(
													$elm$html$Html$Attributes$style,
													'width',
													'calc(100% + ' + ($elm$core$String$fromInt(x) + 'px)'))),
											A2(
												$elm$core$List$cons,
												$mdgriffith$elm_ui$Internal$Model$Attr(
													A2(
														$elm$html$Html$Attributes$style,
														'height',
														'calc(100% + ' + ($elm$core$String$fromInt(y) + 'px)'))),
												A2(
													$elm$core$List$cons,
													A2(
														$mdgriffith$elm_ui$Internal$Model$StyleClass,
														$mdgriffith$elm_ui$Internal$Flag$spacing,
														A3($mdgriffith$elm_ui$Internal$Model$SpacingStyle, spaceName, x, y)),
													_List_Nil))))),
								$mdgriffith$elm_ui$Internal$Model$Unkeyed(children))
							])));
			}
		}
	});
var $author$project$Page$Actions$viewAbout = A2(
	$mdgriffith$elm_ui$Element$column,
	_List_fromArray(
		[
			$mdgriffith$elm_ui$Element$centerX,
			$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
		]),
	_List_fromArray(
		[
			A2(
			$mdgriffith$elm_ui$Element$textColumn,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$centerX,
					$mdgriffith$elm_ui$Element$width(
					A2($mdgriffith$elm_ui$Element$maximum, ($author$project$Page$Actions$videoWidth * 2) + 120, $mdgriffith$elm_ui$Element$fill)),
					$mdgriffith$elm_ui$Element$spacing(20),
					$mdgriffith$elm_ui$Element$Font$size(18),
					$mdgriffith$elm_ui$Element$padding(20),
					$mdgriffith$elm_ui$Element$Font$center
				]),
			_Utils_ap(
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Element$wrappedRow,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$spacing(10)
							]),
						_List_fromArray(
							[
								$author$project$Page$Actions$tile(
								_List_fromArray(
									[
										A2(
										$mdgriffith$elm_ui$Element$paragraph,
										$author$project$Page$Actions$header,
										_List_fromArray(
											[
												$mdgriffith$elm_ui$Element$text('Data - How we know who to help')
											])),
										$author$project$Page$Actions$videoEmbed($author$project$Page$Actions$dataExplanation)
									])),
								$author$project$Page$Actions$tile(
								_List_fromArray(
									[
										A2(
										$mdgriffith$elm_ui$Element$paragraph,
										$author$project$Page$Actions$header,
										_List_fromArray(
											[
												$mdgriffith$elm_ui$Element$text('Policy & Legal - How we inform and agitate')
											])),
										$author$project$Page$Actions$videoEmbed($author$project$Page$Actions$tanfFunds)
									]))
							])),
						A2(
						$mdgriffith$elm_ui$Element$wrappedRow,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$spacing(10)
							]),
						_List_fromArray(
							[
								$author$project$Page$Actions$tile(
								_List_fromArray(
									[
										A2(
										$mdgriffith$elm_ui$Element$paragraph,
										$author$project$Page$Actions$header,
										_List_fromArray(
											[
												$mdgriffith$elm_ui$Element$text('Comms - How we get out the word')
											])),
										$author$project$Page$Actions$videoEmbed($author$project$Page$Actions$cdcStatement)
									])),
								$author$project$Page$Actions$tile(
								_List_fromArray(
									[
										A2(
										$mdgriffith$elm_ui$Element$paragraph,
										$author$project$Page$Actions$header,
										_List_fromArray(
											[
												$mdgriffith$elm_ui$Element$text('Organizing - How we steer the conversation')
											])),
										$author$project$Page$Actions$videoEmbed($author$project$Page$Actions$phonebank)
									]))
							])),
						$author$project$Page$Actions$joinRdc
					]),
				$author$project$Page$Actions$weeklyMeetings))
		]));
var $author$project$Page$Actions$view = function (model) {
	return {gU: $author$project$Page$Actions$viewAbout, er: 'Actions'};
};
var $author$project$Page$Blank$view = {
	gU: $mdgriffith$elm_ui$Element$text(''),
	er: ''
};
var $author$project$Page$Glossary$MouseEnteredTerm = function (a) {
	return {$: 0, a: a};
};
var $author$project$Page$Glossary$MouseLeftTerm = {$: 1};
var $mdgriffith$elm_ui$Internal$Model$CenterY = 1;
var $mdgriffith$elm_ui$Element$centerY = $mdgriffith$elm_ui$Internal$Model$AlignY(1);
var $mdgriffith$elm_ui$Internal$Model$Bottom = 2;
var $mdgriffith$elm_ui$Element$alignBottom = $mdgriffith$elm_ui$Internal$Model$AlignY(2);
var $elm$svg$Svg$Attributes$d = _VirtualDom_attribute('d');
var $elm$svg$Svg$line = $elm$svg$Svg$trustedNode('line');
var $elm$svg$Svg$path = $elm$svg$Svg$trustedNode('path');
var $elm$svg$Svg$Attributes$x1 = _VirtualDom_attribute('x1');
var $elm$svg$Svg$Attributes$x2 = _VirtualDom_attribute('x2');
var $elm$svg$Svg$Attributes$y1 = _VirtualDom_attribute('y1');
var $elm$svg$Svg$Attributes$y2 = _VirtualDom_attribute('y2');
var $feathericons$elm_feather$FeatherIcons$externalLink = A2(
	$feathericons$elm_feather$FeatherIcons$makeBuilder,
	'external-link',
	_List_fromArray(
		[
			A2(
			$elm$svg$Svg$path,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6')
				]),
			_List_Nil),
			A2(
			$elm$svg$Svg$polyline,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$points('15 3 21 3 21 9')
				]),
			_List_Nil),
			A2(
			$elm$svg$Svg$line,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$x1('10'),
					$elm$svg$Svg$Attributes$y1('14'),
					$elm$svg$Svg$Attributes$x2('21'),
					$elm$svg$Svg$Attributes$y2('3')
				]),
			_List_Nil)
		]));
var $mdgriffith$elm_ui$Element$none = $mdgriffith$elm_ui$Internal$Model$Empty;
var $author$project$Design$externalLink = F2(
	function (attrs, _v0) {
		var url = _v0.cF;
		var label = _v0.hL;
		var hovering = _v0.kS;
		var fontSize = _v0.kG;
		return A2(
			$mdgriffith$elm_ui$Element$newTabLink,
			_Utils_ap(
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$Font$color($author$project$Palette$blue),
						$mdgriffith$elm_ui$Element$Border$widthEach(
						{eH: 1, fb: 0, fT: 0, gd: 0}),
						$mdgriffith$elm_ui$Element$Border$color(
						A4($mdgriffith$elm_ui$Element$rgba, 0, 0, 0, 0)),
						$mdgriffith$elm_ui$Element$mouseOver(
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$Border$color($author$project$Palette$blue)
							]))
					]),
				attrs),
			{
				hL: A2(
					$mdgriffith$elm_ui$Element$paragraph,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$Font$size(fontSize)
						]),
					_List_fromArray(
						[
							label,
							hovering ? A2(
							$mdgriffith$elm_ui$Element$el,
							_List_fromArray(
								[
									$mdgriffith$elm_ui$Element$width(
									$mdgriffith$elm_ui$Element$px(4)),
									$mdgriffith$elm_ui$Element$height(
									$mdgriffith$elm_ui$Element$px(4)),
									A2($mdgriffith$elm_ui$Element$paddingXY, 5, 2),
									$mdgriffith$elm_ui$Element$alignBottom
								]),
							$mdgriffith$elm_ui$Element$html(
								A2($feathericons$elm_feather$FeatherIcons$toHtml, _List_Nil, $feathericons$elm_feather$FeatherIcons$externalLink))) : $mdgriffith$elm_ui$Element$none
						])),
				cF: url
			});
	});
var $author$project$Page$Glossary$header = _List_fromArray(
	[
		$mdgriffith$elm_ui$Element$Font$size(24),
		$mdgriffith$elm_ui$Element$Font$bold,
		$mdgriffith$elm_ui$Element$Font$color($author$project$Palette$blackLight)
	]);
var $author$project$Palette$black = A3($mdgriffith$elm_ui$Element$rgb255, 0, 0, 0);
var $author$project$Design$headerLink = function (attrs) {
	return $mdgriffith$elm_ui$Element$link(
		_Utils_ap(
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$Font$color($author$project$Palette$black),
					$mdgriffith$elm_ui$Element$Border$widthEach(
					{eH: 1, fb: 0, fT: 0, gd: 0}),
					$mdgriffith$elm_ui$Element$Border$color(
					A4($mdgriffith$elm_ui$Element$rgba, 0, 0, 0, 0)),
					$mdgriffith$elm_ui$Element$mouseOver(
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$Border$color($author$project$Palette$black)
						]))
				]),
			attrs));
};
var $mdgriffith$elm_ui$Element$htmlAttribute = $mdgriffith$elm_ui$Internal$Model$Attr;
var $elm$html$Html$Attributes$id = $elm$html$Html$Attributes$stringProperty('id');
var $feathericons$elm_feather$FeatherIcons$link = A2(
	$feathericons$elm_feather$FeatherIcons$makeBuilder,
	'link',
	_List_fromArray(
		[
			A2(
			$elm$svg$Svg$path,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71')
				]),
			_List_Nil),
			A2(
			$elm$svg$Svg$path,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71')
				]),
			_List_Nil)
		]));
var $mdgriffith$elm_ui$Internal$Model$OnLeft = 3;
var $mdgriffith$elm_ui$Element$createNearby = F2(
	function (loc, element) {
		if (element.$ === 3) {
			return $mdgriffith$elm_ui$Internal$Model$NoAttribute;
		} else {
			return A2($mdgriffith$elm_ui$Internal$Model$Nearby, loc, element);
		}
	});
var $mdgriffith$elm_ui$Element$onLeft = function (element) {
	return A2($mdgriffith$elm_ui$Element$createNearby, 3, element);
};
var $elm$virtual_dom$VirtualDom$Normal = function (a) {
	return {$: 0, a: a};
};
var $elm$virtual_dom$VirtualDom$on = _VirtualDom_on;
var $elm$html$Html$Events$on = F2(
	function (event, decoder) {
		return A2(
			$elm$virtual_dom$VirtualDom$on,
			event,
			$elm$virtual_dom$VirtualDom$Normal(decoder));
	});
var $elm$html$Html$Events$onMouseEnter = function (msg) {
	return A2(
		$elm$html$Html$Events$on,
		'mouseenter',
		$elm$json$Json$Decode$succeed(msg));
};
var $mdgriffith$elm_ui$Element$Events$onMouseEnter = A2($elm$core$Basics$composeL, $mdgriffith$elm_ui$Internal$Model$Attr, $elm$html$Html$Events$onMouseEnter);
var $elm$html$Html$Events$onMouseLeave = function (msg) {
	return A2(
		$elm$html$Html$Events$on,
		'mouseleave',
		$elm$json$Json$Decode$succeed(msg));
};
var $mdgriffith$elm_ui$Element$Events$onMouseLeave = A2($elm$core$Basics$composeL, $mdgriffith$elm_ui$Internal$Model$Attr, $elm$html$Html$Events$onMouseLeave);
var $author$project$Page$Glossary$viewTerm = F3(
	function (device, hoveredTerm, term) {
		var name = term.h1;
		var definition = term.g1;
		var link = term.hT;
		var hovering = _Utils_eq(
			hoveredTerm,
			$elm$core$Maybe$Just(term)) || ((!device.jS) || (device.jS === 1));
		var hoveredAttrs = _Utils_ap(
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$Events$onMouseEnter(
					$author$project$Page$Glossary$MouseEnteredTerm(term)),
					$mdgriffith$elm_ui$Element$Events$onMouseLeave($author$project$Page$Glossary$MouseLeftTerm),
					$mdgriffith$elm_ui$Element$htmlAttribute(
					$elm$html$Html$Attributes$id(term.hs)),
					$mdgriffith$elm_ui$Element$Font$size(28)
				]),
			hovering ? _List_fromArray(
				[
					$mdgriffith$elm_ui$Element$onLeft(
					A2(
						$author$project$Design$headerLink,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$centerY,
								A2($mdgriffith$elm_ui$Element$paddingXY, 4, 0)
							]),
						{
							hL: $mdgriffith$elm_ui$Element$html(
								A2($feathericons$elm_feather$FeatherIcons$toHtml, _List_Nil, $feathericons$elm_feather$FeatherIcons$link)),
							cF: '#' + term.hs
						}))
				]) : _List_Nil);
		var linkableTerm = A2(
			$mdgriffith$elm_ui$Element$el,
			hoveredAttrs,
			$mdgriffith$elm_ui$Element$text(name));
		return _List_fromArray(
			[
				A2(
				$mdgriffith$elm_ui$Element$paragraph,
				$author$project$Page$Glossary$header,
				_List_fromArray(
					[
						function () {
						if (!link.$) {
							var url = link.a;
							return A2(
								$author$project$Design$externalLink,
								_List_Nil,
								{kG: 28, kS: hovering, hL: linkableTerm, cF: url});
						} else {
							return linkableTerm;
						}
					}()
					])),
				A2(
				$mdgriffith$elm_ui$Element$paragraph,
				_List_Nil,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$text(definition)
					]))
			]);
	});
var $author$project$Page$Glossary$viewGlossary = F2(
	function (device, model) {
		return A2(
			$mdgriffith$elm_ui$Element$textColumn,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$centerX,
					$mdgriffith$elm_ui$Element$width(
					A2(
						$mdgriffith$elm_ui$Element$minimum,
						400,
						A2($mdgriffith$elm_ui$Element$maximum, 850, $mdgriffith$elm_ui$Element$fill))),
					$mdgriffith$elm_ui$Element$spacing(20),
					$mdgriffith$elm_ui$Element$Font$size(18),
					$mdgriffith$elm_ui$Element$padding(20)
				]),
			$elm$core$List$concat(
				A2(
					$elm$core$List$map,
					A2($author$project$Page$Glossary$viewTerm, device, model.ds),
					$author$project$Page$Glossary$terms)));
	});
var $author$project$Page$Glossary$view = F2(
	function (device, model) {
		return {
			gU: A2($author$project$Page$Glossary$viewGlossary, device, model),
			er: 'Glossary'
		};
	});
var $author$project$Page$Login$EnteredEmail = function (a) {
	return {$: 1, a: a};
};
var $author$project$Page$Login$EnteredPassword = function (a) {
	return {$: 2, a: a};
};
var $author$project$Page$Login$SubmittedForm = {$: 0};
var $mdgriffith$elm_ui$Internal$Model$Right = 2;
var $mdgriffith$elm_ui$Element$alignRight = $mdgriffith$elm_ui$Internal$Model$AlignX(2);
var $mdgriffith$elm_ui$Element$Input$TextInputNode = function (a) {
	return {$: 0, a: a};
};
var $mdgriffith$elm_ui$Element$Input$TextArea = {$: 1};
var $mdgriffith$elm_ui$Internal$Model$LivePolite = {$: 6};
var $mdgriffith$elm_ui$Element$Region$announce = $mdgriffith$elm_ui$Internal$Model$Describe($mdgriffith$elm_ui$Internal$Model$LivePolite);
var $mdgriffith$elm_ui$Element$Input$applyLabel = F3(
	function (attrs, label, input) {
		if (label.$ === 1) {
			var labelText = label.a;
			return A4(
				$mdgriffith$elm_ui$Internal$Model$element,
				$mdgriffith$elm_ui$Internal$Model$asColumn,
				$mdgriffith$elm_ui$Internal$Model$NodeName('label'),
				attrs,
				$mdgriffith$elm_ui$Internal$Model$Unkeyed(
					_List_fromArray(
						[input])));
		} else {
			var position = label.a;
			var labelAttrs = label.b;
			var labelChild = label.c;
			var labelElement = A4(
				$mdgriffith$elm_ui$Internal$Model$element,
				$mdgriffith$elm_ui$Internal$Model$asEl,
				$mdgriffith$elm_ui$Internal$Model$div,
				labelAttrs,
				$mdgriffith$elm_ui$Internal$Model$Unkeyed(
					_List_fromArray(
						[labelChild])));
			switch (position) {
				case 2:
					return A4(
						$mdgriffith$elm_ui$Internal$Model$element,
						$mdgriffith$elm_ui$Internal$Model$asColumn,
						$mdgriffith$elm_ui$Internal$Model$NodeName('label'),
						A2(
							$elm$core$List$cons,
							$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.d5),
							attrs),
						$mdgriffith$elm_ui$Internal$Model$Unkeyed(
							_List_fromArray(
								[labelElement, input])));
				case 3:
					return A4(
						$mdgriffith$elm_ui$Internal$Model$element,
						$mdgriffith$elm_ui$Internal$Model$asColumn,
						$mdgriffith$elm_ui$Internal$Model$NodeName('label'),
						A2(
							$elm$core$List$cons,
							$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.d5),
							attrs),
						$mdgriffith$elm_ui$Internal$Model$Unkeyed(
							_List_fromArray(
								[input, labelElement])));
				case 0:
					return A4(
						$mdgriffith$elm_ui$Internal$Model$element,
						$mdgriffith$elm_ui$Internal$Model$asRow,
						$mdgriffith$elm_ui$Internal$Model$NodeName('label'),
						A2(
							$elm$core$List$cons,
							$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.d5),
							attrs),
						$mdgriffith$elm_ui$Internal$Model$Unkeyed(
							_List_fromArray(
								[input, labelElement])));
				default:
					return A4(
						$mdgriffith$elm_ui$Internal$Model$element,
						$mdgriffith$elm_ui$Internal$Model$asRow,
						$mdgriffith$elm_ui$Internal$Model$NodeName('label'),
						A2(
							$elm$core$List$cons,
							$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.d5),
							attrs),
						$mdgriffith$elm_ui$Internal$Model$Unkeyed(
							_List_fromArray(
								[labelElement, input])));
			}
		}
	});
var $mdgriffith$elm_ui$Element$Input$autofill = A2(
	$elm$core$Basics$composeL,
	$mdgriffith$elm_ui$Internal$Model$Attr,
	$elm$html$Html$Attributes$attribute('autocomplete'));
var $mdgriffith$elm_ui$Internal$Model$Behind = 5;
var $mdgriffith$elm_ui$Element$behindContent = function (element) {
	return A2($mdgriffith$elm_ui$Element$createNearby, 5, element);
};
var $mdgriffith$elm_ui$Internal$Model$MoveY = function (a) {
	return {$: 1, a: a};
};
var $mdgriffith$elm_ui$Internal$Flag$moveY = $mdgriffith$elm_ui$Internal$Flag$flag(26);
var $mdgriffith$elm_ui$Element$moveUp = function (y) {
	return A2(
		$mdgriffith$elm_ui$Internal$Model$TransformComponent,
		$mdgriffith$elm_ui$Internal$Flag$moveY,
		$mdgriffith$elm_ui$Internal$Model$MoveY(-y));
};
var $mdgriffith$elm_ui$Element$Input$calcMoveToCompensateForPadding = function (attrs) {
	var gatherSpacing = F2(
		function (attr, found) {
			if ((attr.$ === 4) && (attr.b.$ === 5)) {
				var _v2 = attr.b;
				var x = _v2.b;
				var y = _v2.c;
				if (found.$ === 1) {
					return $elm$core$Maybe$Just(y);
				} else {
					return found;
				}
			} else {
				return found;
			}
		});
	var _v0 = A3($elm$core$List$foldr, gatherSpacing, $elm$core$Maybe$Nothing, attrs);
	if (_v0.$ === 1) {
		return $mdgriffith$elm_ui$Internal$Model$NoAttribute;
	} else {
		var vSpace = _v0.a;
		return $mdgriffith$elm_ui$Element$moveUp(
			$elm$core$Basics$floor(vSpace / 2));
	}
};
var $mdgriffith$elm_ui$Internal$Flag$overflow = $mdgriffith$elm_ui$Internal$Flag$flag(20);
var $mdgriffith$elm_ui$Element$clip = A2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$overflow, $mdgriffith$elm_ui$Internal$Style$classes.jT);
var $mdgriffith$elm_ui$Internal$Flag$cursor = $mdgriffith$elm_ui$Internal$Flag$flag(21);
var $mdgriffith$elm_ui$Element$rgb = F3(
	function (r, g, b) {
		return A4($mdgriffith$elm_ui$Internal$Model$Rgba, r, g, b, 1);
	});
var $mdgriffith$elm_ui$Element$Input$darkGrey = A3($mdgriffith$elm_ui$Element$rgb, 186 / 255, 189 / 255, 182 / 255);
var $mdgriffith$elm_ui$Element$Input$defaultTextPadding = A2($mdgriffith$elm_ui$Element$paddingXY, 12, 12);
var $mdgriffith$elm_ui$Element$Input$white = A3($mdgriffith$elm_ui$Element$rgb, 1, 1, 1);
var $mdgriffith$elm_ui$Element$Input$defaultTextBoxStyle = _List_fromArray(
	[
		$mdgriffith$elm_ui$Element$Input$defaultTextPadding,
		$mdgriffith$elm_ui$Element$Border$rounded(3),
		$mdgriffith$elm_ui$Element$Border$color($mdgriffith$elm_ui$Element$Input$darkGrey),
		$mdgriffith$elm_ui$Element$Background$color($mdgriffith$elm_ui$Element$Input$white),
		$mdgriffith$elm_ui$Element$Border$width(1),
		$mdgriffith$elm_ui$Element$spacing(5),
		$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
		$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink)
	]);
var $mdgriffith$elm_ui$Element$Input$getHeight = function (attr) {
	if (attr.$ === 8) {
		var h = attr.a;
		return $elm$core$Maybe$Just(h);
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $mdgriffith$elm_ui$Element$Input$hasFocusStyle = function (attr) {
	if (((attr.$ === 4) && (attr.b.$ === 11)) && (!attr.b.a)) {
		var _v1 = attr.b;
		var _v2 = _v1.a;
		return true;
	} else {
		return false;
	}
};
var $mdgriffith$elm_ui$Internal$Model$Label = function (a) {
	return {$: 5, a: a};
};
var $mdgriffith$elm_ui$Element$Input$hiddenLabelAttribute = function (label) {
	if (label.$ === 1) {
		var textLabel = label.a;
		return $mdgriffith$elm_ui$Internal$Model$Describe(
			$mdgriffith$elm_ui$Internal$Model$Label(textLabel));
	} else {
		return $mdgriffith$elm_ui$Internal$Model$NoAttribute;
	}
};
var $mdgriffith$elm_ui$Internal$Model$InFront = 4;
var $mdgriffith$elm_ui$Element$inFront = function (element) {
	return A2($mdgriffith$elm_ui$Element$createNearby, 4, element);
};
var $mdgriffith$elm_ui$Element$Input$isConstrained = function (len) {
	isConstrained:
	while (true) {
		switch (len.$) {
			case 1:
				return false;
			case 0:
				return true;
			case 2:
				return true;
			case 3:
				var l = len.b;
				var $temp$len = l;
				len = $temp$len;
				continue isConstrained;
			default:
				var l = len.b;
				return true;
		}
	}
};
var $mdgriffith$elm_ui$Element$Input$isHiddenLabel = function (label) {
	if (label.$ === 1) {
		return true;
	} else {
		return false;
	}
};
var $mdgriffith$elm_ui$Element$Input$isStacked = function (label) {
	if (!label.$) {
		var loc = label.a;
		switch (loc) {
			case 0:
				return false;
			case 1:
				return false;
			case 2:
				return true;
			default:
				return true;
		}
	} else {
		return true;
	}
};
var $mdgriffith$elm_ui$Element$Input$negateBox = function (box) {
	return {eH: -box.eH, fb: -box.fb, fT: -box.fT, gd: -box.gd};
};
var $elm$html$Html$Events$alwaysStop = function (x) {
	return _Utils_Tuple2(x, true);
};
var $elm$virtual_dom$VirtualDom$MayStopPropagation = function (a) {
	return {$: 1, a: a};
};
var $elm$html$Html$Events$stopPropagationOn = F2(
	function (event, decoder) {
		return A2(
			$elm$virtual_dom$VirtualDom$on,
			event,
			$elm$virtual_dom$VirtualDom$MayStopPropagation(decoder));
	});
var $elm$json$Json$Decode$at = F2(
	function (fields, decoder) {
		return A3($elm$core$List$foldr, $elm$json$Json$Decode$field, decoder, fields);
	});
var $elm$html$Html$Events$targetValue = A2(
	$elm$json$Json$Decode$at,
	_List_fromArray(
		['target', 'value']),
	$elm$json$Json$Decode$string);
var $elm$html$Html$Events$onInput = function (tagger) {
	return A2(
		$elm$html$Html$Events$stopPropagationOn,
		'input',
		A2(
			$elm$json$Json$Decode$map,
			$elm$html$Html$Events$alwaysStop,
			A2($elm$json$Json$Decode$map, tagger, $elm$html$Html$Events$targetValue)));
};
var $mdgriffith$elm_ui$Internal$Model$paddingName = F4(
	function (top, right, bottom, left) {
		return 'pad-' + ($elm$core$String$fromInt(top) + ('-' + ($elm$core$String$fromInt(right) + ('-' + ($elm$core$String$fromInt(bottom) + ('-' + $elm$core$String$fromInt(left)))))));
	});
var $mdgriffith$elm_ui$Element$paddingEach = function (_v0) {
	var top = _v0.gd;
	var right = _v0.fT;
	var bottom = _v0.eH;
	var left = _v0.fb;
	if (_Utils_eq(top, right) && (_Utils_eq(top, bottom) && _Utils_eq(top, left))) {
		var topFloat = top;
		return A2(
			$mdgriffith$elm_ui$Internal$Model$StyleClass,
			$mdgriffith$elm_ui$Internal$Flag$padding,
			A5(
				$mdgriffith$elm_ui$Internal$Model$PaddingStyle,
				'p-' + $elm$core$String$fromInt(top),
				topFloat,
				topFloat,
				topFloat,
				topFloat));
	} else {
		return A2(
			$mdgriffith$elm_ui$Internal$Model$StyleClass,
			$mdgriffith$elm_ui$Internal$Flag$padding,
			A5(
				$mdgriffith$elm_ui$Internal$Model$PaddingStyle,
				A4($mdgriffith$elm_ui$Internal$Model$paddingName, top, right, bottom, left),
				top,
				right,
				bottom,
				left));
	}
};
var $mdgriffith$elm_ui$Element$Input$isFill = function (len) {
	isFill:
	while (true) {
		switch (len.$) {
			case 2:
				return true;
			case 1:
				return false;
			case 0:
				return false;
			case 3:
				var l = len.b;
				var $temp$len = l;
				len = $temp$len;
				continue isFill;
			default:
				var l = len.b;
				var $temp$len = l;
				len = $temp$len;
				continue isFill;
		}
	}
};
var $mdgriffith$elm_ui$Element$Input$isPixel = function (len) {
	isPixel:
	while (true) {
		switch (len.$) {
			case 1:
				return false;
			case 0:
				return true;
			case 2:
				return false;
			case 3:
				var l = len.b;
				var $temp$len = l;
				len = $temp$len;
				continue isPixel;
			default:
				var l = len.b;
				var $temp$len = l;
				len = $temp$len;
				continue isPixel;
		}
	}
};
var $mdgriffith$elm_ui$Element$Input$redistributeOver = F4(
	function (isMultiline, stacked, attr, els) {
		switch (attr.$) {
			case 9:
				return _Utils_update(
					els,
					{
						f: A2($elm$core$List$cons, attr, els.f)
					});
			case 7:
				var width = attr.a;
				return $mdgriffith$elm_ui$Element$Input$isFill(width) ? _Utils_update(
					els,
					{
						o: A2($elm$core$List$cons, attr, els.o),
						v: A2($elm$core$List$cons, attr, els.v),
						f: A2($elm$core$List$cons, attr, els.f)
					}) : (stacked ? _Utils_update(
					els,
					{
						o: A2($elm$core$List$cons, attr, els.o)
					}) : _Utils_update(
					els,
					{
						f: A2($elm$core$List$cons, attr, els.f)
					}));
			case 8:
				var height = attr.a;
				return (!stacked) ? _Utils_update(
					els,
					{
						o: A2($elm$core$List$cons, attr, els.o),
						f: A2($elm$core$List$cons, attr, els.f)
					}) : ($mdgriffith$elm_ui$Element$Input$isFill(height) ? _Utils_update(
					els,
					{
						o: A2($elm$core$List$cons, attr, els.o),
						f: A2($elm$core$List$cons, attr, els.f)
					}) : ($mdgriffith$elm_ui$Element$Input$isPixel(height) ? _Utils_update(
					els,
					{
						f: A2($elm$core$List$cons, attr, els.f)
					}) : _Utils_update(
					els,
					{
						f: A2($elm$core$List$cons, attr, els.f)
					})));
			case 6:
				return _Utils_update(
					els,
					{
						o: A2($elm$core$List$cons, attr, els.o)
					});
			case 5:
				return _Utils_update(
					els,
					{
						o: A2($elm$core$List$cons, attr, els.o)
					});
			case 4:
				switch (attr.b.$) {
					case 5:
						var _v1 = attr.b;
						return _Utils_update(
							els,
							{
								o: A2($elm$core$List$cons, attr, els.o),
								v: A2($elm$core$List$cons, attr, els.v),
								f: A2($elm$core$List$cons, attr, els.f),
								cJ: A2($elm$core$List$cons, attr, els.cJ)
							});
					case 7:
						var cls = attr.a;
						var _v2 = attr.b;
						var pad = _v2.a;
						var t = _v2.b;
						var r = _v2.c;
						var b = _v2.d;
						var l = _v2.e;
						if (isMultiline) {
							return _Utils_update(
								els,
								{
									R: A2($elm$core$List$cons, attr, els.R),
									f: A2($elm$core$List$cons, attr, els.f)
								});
						} else {
							var newTop = t - A2($elm$core$Basics$min, t, b);
							var newLineHeight = $mdgriffith$elm_ui$Element$htmlAttribute(
								A2(
									$elm$html$Html$Attributes$style,
									'line-height',
									'calc(1.0em + ' + ($elm$core$String$fromFloat(
										2 * A2($elm$core$Basics$min, t, b)) + 'px)')));
							var newHeight = $mdgriffith$elm_ui$Element$htmlAttribute(
								A2(
									$elm$html$Html$Attributes$style,
									'height',
									'calc(1.0em + ' + ($elm$core$String$fromFloat(
										2 * A2($elm$core$Basics$min, t, b)) + 'px)')));
							var newBottom = b - A2($elm$core$Basics$min, t, b);
							var reducedVerticalPadding = A2(
								$mdgriffith$elm_ui$Internal$Model$StyleClass,
								$mdgriffith$elm_ui$Internal$Flag$padding,
								A5(
									$mdgriffith$elm_ui$Internal$Model$PaddingStyle,
									A4($mdgriffith$elm_ui$Internal$Model$paddingNameFloat, newTop, r, newBottom, l),
									newTop,
									r,
									newBottom,
									l));
							return _Utils_update(
								els,
								{
									R: A2($elm$core$List$cons, attr, els.R),
									v: A2(
										$elm$core$List$cons,
										newHeight,
										A2($elm$core$List$cons, newLineHeight, els.v)),
									f: A2($elm$core$List$cons, reducedVerticalPadding, els.f)
								});
						}
					case 6:
						var _v3 = attr.b;
						return _Utils_update(
							els,
							{
								R: A2($elm$core$List$cons, attr, els.R),
								f: A2($elm$core$List$cons, attr, els.f)
							});
					case 10:
						return _Utils_update(
							els,
							{
								R: A2($elm$core$List$cons, attr, els.R),
								f: A2($elm$core$List$cons, attr, els.f)
							});
					case 2:
						return _Utils_update(
							els,
							{
								o: A2($elm$core$List$cons, attr, els.o)
							});
					case 1:
						var _v4 = attr.b;
						return _Utils_update(
							els,
							{
								o: A2($elm$core$List$cons, attr, els.o)
							});
					default:
						var flag = attr.a;
						var cls = attr.b;
						return _Utils_update(
							els,
							{
								f: A2($elm$core$List$cons, attr, els.f)
							});
				}
			case 0:
				return els;
			case 1:
				var a = attr.a;
				return _Utils_update(
					els,
					{
						v: A2($elm$core$List$cons, attr, els.v)
					});
			case 2:
				return _Utils_update(
					els,
					{
						v: A2($elm$core$List$cons, attr, els.v)
					});
			case 3:
				return _Utils_update(
					els,
					{
						f: A2($elm$core$List$cons, attr, els.f)
					});
			default:
				return _Utils_update(
					els,
					{
						v: A2($elm$core$List$cons, attr, els.v)
					});
		}
	});
var $mdgriffith$elm_ui$Element$Input$redistribute = F3(
	function (isMultiline, stacked, attrs) {
		return function (redist) {
			return {
				R: $elm$core$List$reverse(redist.R),
				o: $elm$core$List$reverse(redist.o),
				v: $elm$core$List$reverse(redist.v),
				f: $elm$core$List$reverse(redist.f),
				cJ: $elm$core$List$reverse(redist.cJ)
			};
		}(
			A3(
				$elm$core$List$foldl,
				A2($mdgriffith$elm_ui$Element$Input$redistributeOver, isMultiline, stacked),
				{R: _List_Nil, o: _List_Nil, v: _List_Nil, f: _List_Nil, cJ: _List_Nil},
				attrs));
	});
var $mdgriffith$elm_ui$Element$Input$renderBox = function (_v0) {
	var top = _v0.gd;
	var right = _v0.fT;
	var bottom = _v0.eH;
	var left = _v0.fb;
	return $elm$core$String$fromInt(top) + ('px ' + ($elm$core$String$fromInt(right) + ('px ' + ($elm$core$String$fromInt(bottom) + ('px ' + ($elm$core$String$fromInt(left) + 'px'))))));
};
var $mdgriffith$elm_ui$Internal$Model$Transparency = F2(
	function (a, b) {
		return {$: 12, a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Flag$transparency = $mdgriffith$elm_ui$Internal$Flag$flag(0);
var $mdgriffith$elm_ui$Element$alpha = function (o) {
	var transparency = function (x) {
		return 1 - x;
	}(
		A2(
			$elm$core$Basics$min,
			1.0,
			A2($elm$core$Basics$max, 0.0, o)));
	return A2(
		$mdgriffith$elm_ui$Internal$Model$StyleClass,
		$mdgriffith$elm_ui$Internal$Flag$transparency,
		A2(
			$mdgriffith$elm_ui$Internal$Model$Transparency,
			'transparency-' + $mdgriffith$elm_ui$Internal$Model$floatClass(transparency),
			transparency));
};
var $mdgriffith$elm_ui$Element$Input$charcoal = A3($mdgriffith$elm_ui$Element$rgb, 136 / 255, 138 / 255, 133 / 255);
var $mdgriffith$elm_ui$Element$Input$renderPlaceholder = F3(
	function (_v0, forPlaceholder, on) {
		var placeholderAttrs = _v0.a;
		var placeholderEl = _v0.b;
		return A2(
			$mdgriffith$elm_ui$Element$el,
			_Utils_ap(
				forPlaceholder,
				_Utils_ap(
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$Font$color($mdgriffith$elm_ui$Element$Input$charcoal),
							$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.h2 + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.l0)),
							$mdgriffith$elm_ui$Element$clip,
							$mdgriffith$elm_ui$Element$Border$color(
							A4($mdgriffith$elm_ui$Element$rgba, 0, 0, 0, 0)),
							$mdgriffith$elm_ui$Element$Background$color(
							A4($mdgriffith$elm_ui$Element$rgba, 0, 0, 0, 0)),
							$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
							$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
							$mdgriffith$elm_ui$Element$alpha(
							on ? 1 : 0)
						]),
					placeholderAttrs)),
			placeholderEl);
	});
var $mdgriffith$elm_ui$Element$scrollbarY = A2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$overflow, $mdgriffith$elm_ui$Internal$Style$classes.mp);
var $elm$html$Html$span = _VirtualDom_node('span');
var $elm$html$Html$Attributes$boolProperty = F2(
	function (key, bool) {
		return A2(
			_VirtualDom_property,
			key,
			$elm$json$Json$Encode$bool(bool));
	});
var $elm$html$Html$Attributes$spellcheck = $elm$html$Html$Attributes$boolProperty('spellcheck');
var $mdgriffith$elm_ui$Element$Input$spellcheck = A2($elm$core$Basics$composeL, $mdgriffith$elm_ui$Internal$Model$Attr, $elm$html$Html$Attributes$spellcheck);
var $elm$html$Html$Attributes$type_ = $elm$html$Html$Attributes$stringProperty('type');
var $elm$html$Html$Attributes$value = $elm$html$Html$Attributes$stringProperty('value');
var $mdgriffith$elm_ui$Element$Input$value = A2($elm$core$Basics$composeL, $mdgriffith$elm_ui$Internal$Model$Attr, $elm$html$Html$Attributes$value);
var $mdgriffith$elm_ui$Element$Input$textHelper = F3(
	function (textInput, attrs, textOptions) {
		var withDefaults = _Utils_ap($mdgriffith$elm_ui$Element$Input$defaultTextBoxStyle, attrs);
		var redistributed = A3(
			$mdgriffith$elm_ui$Element$Input$redistribute,
			_Utils_eq(textInput.G, $mdgriffith$elm_ui$Element$Input$TextArea),
			$mdgriffith$elm_ui$Element$Input$isStacked(textOptions.hL),
			withDefaults);
		var onlySpacing = function (attr) {
			if ((attr.$ === 4) && (attr.b.$ === 5)) {
				var _v9 = attr.b;
				return true;
			} else {
				return false;
			}
		};
		var heightConstrained = function () {
			var _v7 = textInput.G;
			if (!_v7.$) {
				var inputType = _v7.a;
				return false;
			} else {
				return A2(
					$elm$core$Maybe$withDefault,
					false,
					A2(
						$elm$core$Maybe$map,
						$mdgriffith$elm_ui$Element$Input$isConstrained,
						$elm$core$List$head(
							$elm$core$List$reverse(
								A2($elm$core$List$filterMap, $mdgriffith$elm_ui$Element$Input$getHeight, withDefaults)))));
			}
		}();
		var getPadding = function (attr) {
			if ((attr.$ === 4) && (attr.b.$ === 7)) {
				var cls = attr.a;
				var _v6 = attr.b;
				var pad = _v6.a;
				var t = _v6.b;
				var r = _v6.c;
				var b = _v6.d;
				var l = _v6.e;
				return $elm$core$Maybe$Just(
					{
						eH: A2(
							$elm$core$Basics$max,
							0,
							$elm$core$Basics$floor(b - 3)),
						fb: A2(
							$elm$core$Basics$max,
							0,
							$elm$core$Basics$floor(l - 3)),
						fT: A2(
							$elm$core$Basics$max,
							0,
							$elm$core$Basics$floor(r - 3)),
						gd: A2(
							$elm$core$Basics$max,
							0,
							$elm$core$Basics$floor(t - 3))
					});
			} else {
				return $elm$core$Maybe$Nothing;
			}
		};
		var parentPadding = A2(
			$elm$core$Maybe$withDefault,
			{eH: 0, fb: 0, fT: 0, gd: 0},
			$elm$core$List$head(
				$elm$core$List$reverse(
					A2($elm$core$List$filterMap, getPadding, withDefaults))));
		var inputElement = A4(
			$mdgriffith$elm_ui$Internal$Model$element,
			$mdgriffith$elm_ui$Internal$Model$asEl,
			function () {
				var _v3 = textInput.G;
				if (!_v3.$) {
					var inputType = _v3.a;
					return $mdgriffith$elm_ui$Internal$Model$NodeName('input');
				} else {
					return $mdgriffith$elm_ui$Internal$Model$NodeName('textarea');
				}
			}(),
			_Utils_ap(
				function () {
					var _v4 = textInput.G;
					if (!_v4.$) {
						var inputType = _v4.a;
						return _List_fromArray(
							[
								$mdgriffith$elm_ui$Internal$Model$Attr(
								$elm$html$Html$Attributes$type_(inputType)),
								$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.k2)
							]);
					} else {
						return _List_fromArray(
							[
								$mdgriffith$elm_ui$Element$clip,
								$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
								$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.k_),
								$mdgriffith$elm_ui$Element$Input$calcMoveToCompensateForPadding(withDefaults),
								$mdgriffith$elm_ui$Element$paddingEach(parentPadding),
								$mdgriffith$elm_ui$Internal$Model$Attr(
								A2(
									$elm$html$Html$Attributes$style,
									'margin',
									$mdgriffith$elm_ui$Element$Input$renderBox(
										$mdgriffith$elm_ui$Element$Input$negateBox(parentPadding)))),
								$mdgriffith$elm_ui$Internal$Model$Attr(
								A2($elm$html$Html$Attributes$style, 'box-sizing', 'content-box'))
							]);
					}
				}(),
				_Utils_ap(
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$Input$value(textOptions.mR),
							$mdgriffith$elm_ui$Internal$Model$Attr(
							$elm$html$Html$Events$onInput(textOptions.lI)),
							$mdgriffith$elm_ui$Element$Input$hiddenLabelAttribute(textOptions.hL),
							$mdgriffith$elm_ui$Element$Input$spellcheck(textInput.at),
							A2(
							$elm$core$Maybe$withDefault,
							$mdgriffith$elm_ui$Internal$Model$NoAttribute,
							A2($elm$core$Maybe$map, $mdgriffith$elm_ui$Element$Input$autofill, textInput.ai))
						]),
					redistributed.v)),
			$mdgriffith$elm_ui$Internal$Model$Unkeyed(_List_Nil));
		var wrappedInput = function () {
			var _v0 = textInput.G;
			if (_v0.$ === 1) {
				return A4(
					$mdgriffith$elm_ui$Internal$Model$element,
					$mdgriffith$elm_ui$Internal$Model$asEl,
					$mdgriffith$elm_ui$Internal$Model$div,
					_Utils_ap(
						(heightConstrained ? $elm$core$List$cons($mdgriffith$elm_ui$Element$scrollbarY) : $elm$core$Basics$identity)(
							_List_fromArray(
								[
									$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
									A2($elm$core$List$any, $mdgriffith$elm_ui$Element$Input$hasFocusStyle, withDefaults) ? $mdgriffith$elm_ui$Internal$Model$NoAttribute : $mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.hi),
									$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.k1)
								])),
						redistributed.f),
					$mdgriffith$elm_ui$Internal$Model$Unkeyed(
						_List_fromArray(
							[
								A4(
								$mdgriffith$elm_ui$Internal$Model$element,
								$mdgriffith$elm_ui$Internal$Model$asParagraph,
								$mdgriffith$elm_ui$Internal$Model$div,
								A2(
									$elm$core$List$cons,
									$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
									A2(
										$elm$core$List$cons,
										$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
										A2(
											$elm$core$List$cons,
											$mdgriffith$elm_ui$Element$inFront(inputElement),
											A2(
												$elm$core$List$cons,
												$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.k0),
												redistributed.cJ)))),
								$mdgriffith$elm_ui$Internal$Model$Unkeyed(
									function () {
										if (textOptions.mR === '') {
											var _v1 = textOptions.fO;
											if (_v1.$ === 1) {
												return _List_fromArray(
													[
														$mdgriffith$elm_ui$Element$text('\u00A0')
													]);
											} else {
												var place = _v1.a;
												return _List_fromArray(
													[
														A3($mdgriffith$elm_ui$Element$Input$renderPlaceholder, place, _List_Nil, textOptions.mR === '')
													]);
											}
										} else {
											return _List_fromArray(
												[
													$mdgriffith$elm_ui$Internal$Model$unstyled(
													A2(
														$elm$html$Html$span,
														_List_fromArray(
															[
																$elm$html$Html$Attributes$class($mdgriffith$elm_ui$Internal$Style$classes.k$)
															]),
														_List_fromArray(
															[
																$elm$html$Html$text(textOptions.mR + '\u00A0')
															])))
												]);
										}
									}()))
							])));
			} else {
				var inputType = _v0.a;
				return A4(
					$mdgriffith$elm_ui$Internal$Model$element,
					$mdgriffith$elm_ui$Internal$Model$asEl,
					$mdgriffith$elm_ui$Internal$Model$div,
					A2(
						$elm$core$List$cons,
						$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
						A2(
							$elm$core$List$cons,
							A2($elm$core$List$any, $mdgriffith$elm_ui$Element$Input$hasFocusStyle, withDefaults) ? $mdgriffith$elm_ui$Internal$Model$NoAttribute : $mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.hi),
							$elm$core$List$concat(
								_List_fromArray(
									[
										redistributed.f,
										function () {
										var _v2 = textOptions.fO;
										if (_v2.$ === 1) {
											return _List_Nil;
										} else {
											var place = _v2.a;
											return _List_fromArray(
												[
													$mdgriffith$elm_ui$Element$behindContent(
													A3($mdgriffith$elm_ui$Element$Input$renderPlaceholder, place, redistributed.R, textOptions.mR === ''))
												]);
										}
									}()
									])))),
					$mdgriffith$elm_ui$Internal$Model$Unkeyed(
						_List_fromArray(
							[inputElement])));
			}
		}();
		return A3(
			$mdgriffith$elm_ui$Element$Input$applyLabel,
			A2(
				$elm$core$List$cons,
				A2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$cursor, $mdgriffith$elm_ui$Internal$Style$classes.j7),
				A2(
					$elm$core$List$cons,
					$mdgriffith$elm_ui$Element$Input$isHiddenLabel(textOptions.hL) ? $mdgriffith$elm_ui$Internal$Model$NoAttribute : $mdgriffith$elm_ui$Element$spacing(5),
					A2($elm$core$List$cons, $mdgriffith$elm_ui$Element$Region$announce, redistributed.o))),
			textOptions.hL,
			wrappedInput);
	});
var $mdgriffith$elm_ui$Element$Input$currentPassword = F2(
	function (attrs, pass) {
		return A3(
			$mdgriffith$elm_ui$Element$Input$textHelper,
			{
				ai: $elm$core$Maybe$Just('current-password'),
				at: false,
				G: $mdgriffith$elm_ui$Element$Input$TextInputNode(
					pass.mx ? 'text' : 'password')
			},
			attrs,
			{hL: pass.hL, lI: pass.lI, fO: pass.fO, mR: pass.mR});
	});
var $mdgriffith$elm_ui$Element$Input$email = $mdgriffith$elm_ui$Element$Input$textHelper(
	{
		ai: $elm$core$Maybe$Just('email'),
		at: false,
		G: $mdgriffith$elm_ui$Element$Input$TextInputNode('email')
	});
var $mdgriffith$elm_ui$Element$Input$HiddenLabel = function (a) {
	return {$: 1, a: a};
};
var $mdgriffith$elm_ui$Element$Input$labelHidden = $mdgriffith$elm_ui$Element$Input$HiddenLabel;
var $author$project$Page$Login$onEnter = function (msg) {
	return $mdgriffith$elm_ui$Element$htmlAttribute(
		A2(
			$elm$html$Html$Events$on,
			'keyup',
			A2(
				$elm$json$Json$Decode$andThen,
				function (key) {
					return (key === 'Enter') ? $elm$json$Json$Decode$succeed(msg) : $elm$json$Json$Decode$fail('Not the enter key');
				},
				A2($elm$json$Json$Decode$field, 'key', $elm$json$Json$Decode$string))));
};
var $mdgriffith$elm_ui$Element$Input$Placeholder = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $mdgriffith$elm_ui$Element$Input$placeholder = $mdgriffith$elm_ui$Element$Input$Placeholder;
var $mdgriffith$elm_ui$Internal$Model$Button = {$: 8};
var $elm$html$Html$Attributes$disabled = $elm$html$Html$Attributes$boolProperty('disabled');
var $mdgriffith$elm_ui$Element$Input$enter = 'Enter';
var $mdgriffith$elm_ui$Element$Input$focusDefault = function (attrs) {
	return A2($elm$core$List$any, $mdgriffith$elm_ui$Element$Input$hasFocusStyle, attrs) ? $mdgriffith$elm_ui$Internal$Model$NoAttribute : $mdgriffith$elm_ui$Internal$Model$htmlClass('focusable');
};
var $elm$html$Html$Events$onClick = function (msg) {
	return A2(
		$elm$html$Html$Events$on,
		'click',
		$elm$json$Json$Decode$succeed(msg));
};
var $mdgriffith$elm_ui$Element$Events$onClick = A2($elm$core$Basics$composeL, $mdgriffith$elm_ui$Internal$Model$Attr, $elm$html$Html$Events$onClick);
var $elm$virtual_dom$VirtualDom$MayPreventDefault = function (a) {
	return {$: 2, a: a};
};
var $elm$html$Html$Events$preventDefaultOn = F2(
	function (event, decoder) {
		return A2(
			$elm$virtual_dom$VirtualDom$on,
			event,
			$elm$virtual_dom$VirtualDom$MayPreventDefault(decoder));
	});
var $mdgriffith$elm_ui$Element$Input$onKeyLookup = function (lookup) {
	var decode = function (code) {
		var _v0 = lookup(code);
		if (_v0.$ === 1) {
			return $elm$json$Json$Decode$fail('No key matched');
		} else {
			var msg = _v0.a;
			return $elm$json$Json$Decode$succeed(msg);
		}
	};
	var isKey = A2(
		$elm$json$Json$Decode$andThen,
		decode,
		A2($elm$json$Json$Decode$field, 'key', $elm$json$Json$Decode$string));
	return $mdgriffith$elm_ui$Internal$Model$Attr(
		A2(
			$elm$html$Html$Events$preventDefaultOn,
			'keydown',
			A2(
				$elm$json$Json$Decode$map,
				function (fired) {
					return _Utils_Tuple2(fired, true);
				},
				isKey)));
};
var $mdgriffith$elm_ui$Element$pointer = A2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$cursor, $mdgriffith$elm_ui$Internal$Style$classes.j6);
var $mdgriffith$elm_ui$Element$Input$space = ' ';
var $elm$html$Html$Attributes$tabindex = function (n) {
	return A2(
		_VirtualDom_attribute,
		'tabIndex',
		$elm$core$String$fromInt(n));
};
var $mdgriffith$elm_ui$Element$Input$button = F2(
	function (attrs, _v0) {
		var onPress = _v0.lM;
		var label = _v0.hL;
		return A4(
			$mdgriffith$elm_ui$Internal$Model$element,
			$mdgriffith$elm_ui$Internal$Model$asEl,
			$mdgriffith$elm_ui$Internal$Model$div,
			A2(
				$elm$core$List$cons,
				$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink),
				A2(
					$elm$core$List$cons,
					$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink),
					A2(
						$elm$core$List$cons,
						$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.dV + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.aS + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.mr + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.h2)))))),
						A2(
							$elm$core$List$cons,
							$mdgriffith$elm_ui$Element$pointer,
							A2(
								$elm$core$List$cons,
								$mdgriffith$elm_ui$Element$Input$focusDefault(attrs),
								A2(
									$elm$core$List$cons,
									$mdgriffith$elm_ui$Internal$Model$Describe($mdgriffith$elm_ui$Internal$Model$Button),
									A2(
										$elm$core$List$cons,
										$mdgriffith$elm_ui$Internal$Model$Attr(
											$elm$html$Html$Attributes$tabindex(0)),
										function () {
											if (onPress.$ === 1) {
												return A2(
													$elm$core$List$cons,
													$mdgriffith$elm_ui$Internal$Model$Attr(
														$elm$html$Html$Attributes$disabled(true)),
													attrs);
											} else {
												var msg = onPress.a;
												return A2(
													$elm$core$List$cons,
													$mdgriffith$elm_ui$Element$Events$onClick(msg),
													A2(
														$elm$core$List$cons,
														$mdgriffith$elm_ui$Element$Input$onKeyLookup(
															function (code) {
																return _Utils_eq(code, $mdgriffith$elm_ui$Element$Input$enter) ? $elm$core$Maybe$Just(msg) : (_Utils_eq(code, $mdgriffith$elm_ui$Element$Input$space) ? $elm$core$Maybe$Just(msg) : $elm$core$Maybe$Nothing);
															}),
														attrs));
											}
										}()))))))),
			$mdgriffith$elm_ui$Internal$Model$Unkeyed(
				_List_fromArray(
					[label])));
	});
var $author$project$Page$Login$primaryButton = $mdgriffith$elm_ui$Element$Input$button(
	_List_fromArray(
		[
			$mdgriffith$elm_ui$Element$Background$color($author$project$Palette$sred),
			$mdgriffith$elm_ui$Element$Font$color($author$project$Palette$white),
			$mdgriffith$elm_ui$Element$padding(10),
			$mdgriffith$elm_ui$Element$Border$rounded(5)
		]));
var $author$project$Page$Login$viewForm = function (form) {
	return A2(
		$mdgriffith$elm_ui$Element$column,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$centerX,
				$mdgriffith$elm_ui$Element$spacing(20)
			]),
		_List_fromArray(
			[
				A2(
				$mdgriffith$elm_ui$Element$row,
				_List_Nil,
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Element$Input$email,
						_List_Nil,
						{
							hL: $mdgriffith$elm_ui$Element$Input$labelHidden('Email'),
							lI: $author$project$Page$Login$EnteredEmail,
							fO: $elm$core$Maybe$Just(
								A2(
									$mdgriffith$elm_ui$Element$Input$placeholder,
									_List_Nil,
									$mdgriffith$elm_ui$Element$text('Email'))),
							mR: form.aT
						})
					])),
				A2(
				$mdgriffith$elm_ui$Element$row,
				_List_Nil,
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Element$Input$currentPassword,
						_List_fromArray(
							[
								$author$project$Page$Login$onEnter($author$project$Page$Login$SubmittedForm)
							]),
						{
							hL: $mdgriffith$elm_ui$Element$Input$labelHidden('Password'),
							lI: $author$project$Page$Login$EnteredPassword,
							fO: $elm$core$Maybe$Just(
								A2(
									$mdgriffith$elm_ui$Element$Input$placeholder,
									_List_Nil,
									$mdgriffith$elm_ui$Element$text('Password'))),
							mx: false,
							mR: form.a$
						})
					])),
				A2(
				$mdgriffith$elm_ui$Element$row,
				_List_fromArray(
					[$mdgriffith$elm_ui$Element$alignRight]),
				_List_fromArray(
					[
						$author$project$Page$Login$primaryButton(
						{
							hL: $mdgriffith$elm_ui$Element$text('Sign in'),
							lM: $elm$core$Maybe$Just($author$project$Page$Login$SubmittedForm)
						})
					]))
			]));
};
var $author$project$Page$Login$viewProblem = function (problem) {
	var errorMessage = function () {
		if (!problem.$) {
			var str = problem.b;
			return str;
		} else {
			var str = problem.a;
			return str;
		}
	}();
	return A2(
		$mdgriffith$elm_ui$Element$column,
		_List_Nil,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$text(errorMessage)
			]));
};
var $author$project$Page$Login$view = function (model) {
	return {
		gU: A2(
			$mdgriffith$elm_ui$Element$column,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width(
					A2($mdgriffith$elm_ui$Element$maximum, 1000, $mdgriffith$elm_ui$Element$fill)),
					$mdgriffith$elm_ui$Element$centerX,
					$mdgriffith$elm_ui$Element$spacing(20),
					$mdgriffith$elm_ui$Element$padding(20)
				]),
			_List_fromArray(
				[
					A2(
					$mdgriffith$elm_ui$Element$row,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$Font$size(24),
							$mdgriffith$elm_ui$Element$centerX
						]),
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$text('Sign in')
						])),
					A2(
					$mdgriffith$elm_ui$Element$row,
					_List_fromArray(
						[$mdgriffith$elm_ui$Element$centerX]),
					A2($elm$core$List$map, $author$project$Page$Login$viewProblem, model.bx)),
					$author$project$Page$Login$viewForm(model.bZ)
				])),
		er: 'Login'
	};
};
var $author$project$Page$NotFound$view = {
	gU: A2(
		$mdgriffith$elm_ui$Element$column,
		_List_Nil,
		_List_fromArray(
			[
				A2(
				$mdgriffith$elm_ui$Element$row,
				_List_Nil,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$text('Not Found')
					]))
			])),
	er: 'Page Not Found'
};
var $author$project$Route$href = function (targetRoute) {
	return $author$project$Route$routeToString(targetRoute);
};
var $author$project$Page$Organize$CampaignOverview$viewEvent = F2(
	function (campaign, event) {
		return A2(
			$mdgriffith$elm_ui$Element$row,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
					$mdgriffith$elm_ui$Element$spacing(10)
				]),
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$text(event.h1),
					A2(
					$mdgriffith$elm_ui$Element$link,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$Background$color($author$project$Palette$sred),
							$mdgriffith$elm_ui$Element$Font$color($author$project$Palette$white),
							$mdgriffith$elm_ui$Element$Border$rounded(3),
							$mdgriffith$elm_ui$Element$padding(10)
						]),
					{
						hL: $mdgriffith$elm_ui$Element$text('Go to Event'),
						cF: $author$project$Route$href(
							A2($author$project$Route$Event, campaign.hs, event.hs))
					})
				]));
	});
var $author$project$Page$Organize$CampaignOverview$view = F2(
	function (settings, model) {
		return {
			gU: A2(
				$mdgriffith$elm_ui$Element$row,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$centerX,
						$mdgriffith$elm_ui$Element$padding(10),
						$mdgriffith$elm_ui$Element$Font$size(20),
						$mdgriffith$elm_ui$Element$width(
						A2(
							$mdgriffith$elm_ui$Element$minimum,
							400,
							A2($mdgriffith$elm_ui$Element$maximum, 1000, $mdgriffith$elm_ui$Element$fill)))
					]),
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Element$column,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$centerX,
								$mdgriffith$elm_ui$Element$spacing(10)
							]),
						function () {
							var _v0 = model.dP;
							if (!_v0.$) {
								var campaign = _v0.a;
								return _Utils_ap(
									_List_fromArray(
										[
											A2(
											$mdgriffith$elm_ui$Element$row,
											_List_fromArray(
												[$mdgriffith$elm_ui$Element$centerX]),
											_List_fromArray(
												[
													A2(
													$mdgriffith$elm_ui$Element$paragraph,
													_List_fromArray(
														[
															$mdgriffith$elm_ui$Element$Font$size(26)
														]),
													_List_fromArray(
														[
															$mdgriffith$elm_ui$Element$text(campaign.h1)
														]))
												]))
										]),
									A2(
										$elm$core$List$map,
										$author$project$Page$Organize$CampaignOverview$viewEvent(campaign),
										campaign.kz));
							} else {
								return _List_Nil;
							}
						}())
					])),
			er: 'Organize - Campaign - Overview'
		};
	});
var $mdgriffith$elm_ui$Element$Font$semiBold = A2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$fontWeight, $mdgriffith$elm_ui$Internal$Style$classes.m0);
var $author$project$Page$Organize$Dashboard$viewCampaign = function (campaign) {
	return A2(
		$mdgriffith$elm_ui$Element$row,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
				$mdgriffith$elm_ui$Element$spacing(10)
			]),
		_List_fromArray(
			[
				A2(
				$mdgriffith$elm_ui$Element$paragraph,
				_List_Nil,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$text(campaign.h1)
					])),
				A2(
				$mdgriffith$elm_ui$Element$paragraph,
				_List_fromArray(
					[$mdgriffith$elm_ui$Element$Font$semiBold]),
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$text(
						$elm$core$String$fromInt(
							$elm$core$List$length(campaign.kz)) + ' events')
					])),
				A2(
				$mdgriffith$elm_ui$Element$link,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$Background$color($author$project$Palette$sred),
						$mdgriffith$elm_ui$Element$Font$color($author$project$Palette$white),
						$mdgriffith$elm_ui$Element$Border$rounded(3),
						$mdgriffith$elm_ui$Element$padding(10)
					]),
				{
					hL: $mdgriffith$elm_ui$Element$text('View Campaign'),
					cF: $author$project$Route$href(
						$author$project$Route$CampaignOverview(campaign.hs))
				})
			]));
};
var $author$project$Page$Organize$Dashboard$view = F2(
	function (settings, model) {
		return {
			gU: A2(
				$mdgriffith$elm_ui$Element$row,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$centerX,
						$mdgriffith$elm_ui$Element$padding(10),
						$mdgriffith$elm_ui$Element$Font$size(20),
						$mdgriffith$elm_ui$Element$width(
						A2(
							$mdgriffith$elm_ui$Element$minimum,
							400,
							A2($mdgriffith$elm_ui$Element$maximum, 1000, $mdgriffith$elm_ui$Element$fill)))
					]),
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Element$column,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$centerX,
								$mdgriffith$elm_ui$Element$spacing(10)
							]),
						_Utils_ap(
							_List_fromArray(
								[
									A2(
									$mdgriffith$elm_ui$Element$row,
									_List_fromArray(
										[$mdgriffith$elm_ui$Element$centerX]),
									_List_fromArray(
										[
											A2(
											$mdgriffith$elm_ui$Element$paragraph,
											_List_Nil,
											_List_fromArray(
												[
													$mdgriffith$elm_ui$Element$text('Current campaigns')
												]))
										]))
								]),
							A2($elm$core$List$map, $author$project$Page$Organize$Dashboard$viewCampaign, model.dQ)))
					])),
			er: 'Admin - Dashboard'
		};
	});
var $author$project$Page$Organize$DetainerWarrantCreation$ChangeTooltip = function (a) {
	return {$: 2, a: a};
};
var $author$project$Page$Organize$DetainerWarrantCreation$DetainerWarrantInfo = {$: 0};
var $mdgriffith$elm_ui$Internal$Model$Top = 0;
var $mdgriffith$elm_ui$Element$alignTop = $mdgriffith$elm_ui$Internal$Model$AlignY(0);
var $author$project$Page$Organize$DetainerWarrantCreation$formOptions = function (model) {
	return {be: model.be, bk: model.bk, g4: model.g4, aV: model.aV, b: model.cI, bv: model.bv, bx: model.bx, F: model.F, a: model.a};
};
var $elm$html$Html$Events$onBlur = function (msg) {
	return A2(
		$elm$html$Html$Events$on,
		'blur',
		$elm$json$Json$Decode$succeed(msg));
};
var $mdgriffith$elm_ui$Element$Events$onLoseFocus = A2($elm$core$Basics$composeL, $mdgriffith$elm_ui$Internal$Model$Attr, $elm$html$Html$Events$onBlur);
var $author$project$Page$Organize$DetainerWarrantCreation$primaryStyles = _List_fromArray(
	[
		$mdgriffith$elm_ui$Element$Background$color($author$project$Palette$sred),
		$mdgriffith$elm_ui$Element$Font$color($author$project$Palette$white),
		$mdgriffith$elm_ui$Element$Font$size(20),
		$mdgriffith$elm_ui$Element$padding(10),
		$mdgriffith$elm_ui$Element$Border$rounded(3)
	]);
var $author$project$Page$Organize$DetainerWarrantCreation$formGroup = function (group) {
	return A2(
		$mdgriffith$elm_ui$Element$row,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$spacing(10),
				$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
			]),
		group);
};
var $author$project$Page$Organize$DetainerWarrantCreation$SubmitAndAddAnother = {$: 51};
var $mdgriffith$elm_ui$Element$rgba255 = F4(
	function (red, green, blue, a) {
		return A4($mdgriffith$elm_ui$Internal$Model$Rgba, red / 255, green / 255, blue / 255, a);
	});
var $author$project$Palette$redLightest = A4($mdgriffith$elm_ui$Element$rgba255, 204, 51, 64, 0.08);
var $author$project$Page$Organize$DetainerWarrantCreation$submitAndAddAnother = A2(
	$mdgriffith$elm_ui$Element$Input$button,
	_List_fromArray(
		[
			$mdgriffith$elm_ui$Element$Background$color($author$project$Palette$redLightest),
			$mdgriffith$elm_ui$Element$Font$color($author$project$Palette$sred),
			$mdgriffith$elm_ui$Element$padding(10),
			$mdgriffith$elm_ui$Element$Border$rounded(3),
			$mdgriffith$elm_ui$Element$Border$width(1),
			$mdgriffith$elm_ui$Element$Border$color($author$project$Palette$sred),
			$mdgriffith$elm_ui$Element$Font$size(22)
		]),
	{
		hL: $mdgriffith$elm_ui$Element$text('Submit and add another'),
		lM: $elm$core$Maybe$Just($author$project$Page$Organize$DetainerWarrantCreation$SubmitAndAddAnother)
	});
var $author$project$Page$Organize$DetainerWarrantCreation$SubmitForm = {$: 50};
var $author$project$Page$Organize$DetainerWarrantCreation$submitButton = A2(
	$mdgriffith$elm_ui$Element$Input$button,
	_Utils_ap(
		$author$project$Page$Organize$DetainerWarrantCreation$primaryStyles,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$Font$size(22)
			])),
	{
		hL: $mdgriffith$elm_ui$Element$text('Submit'),
		lM: $elm$core$Maybe$Just($author$project$Page$Organize$DetainerWarrantCreation$SubmitForm)
	});
var $author$project$Page$Organize$DetainerWarrantCreation$tile = function (groups) {
	return A2(
		$mdgriffith$elm_ui$Element$column,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$spacing(20),
				$mdgriffith$elm_ui$Element$padding(20),
				$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
				$mdgriffith$elm_ui$Element$Border$rounded(3),
				$mdgriffith$elm_ui$Element$Border$color($author$project$Palette$grayLight),
				$mdgriffith$elm_ui$Element$Border$width(1),
				$mdgriffith$elm_ui$Element$Border$shadow(
				{
					jD: 30,
					eL: $author$project$Palette$grayLight,
					lG: _Utils_Tuple2(0, 10),
					f$: 1
				})
			]),
		groups);
};
var $author$project$Page$Organize$DetainerWarrantCreation$AddressInfo = {$: 14};
var $author$project$Page$Organize$DetainerWarrantCreation$ChangedAddress = function (a) {
	return {$: 23, a: a};
};
var $mdgriffith$elm_ui$Element$Input$Above = 2;
var $mdgriffith$elm_ui$Element$Input$Label = F3(
	function (a, b, c) {
		return {$: 0, a: a, b: b, c: c};
	});
var $mdgriffith$elm_ui$Element$Input$labelAbove = $mdgriffith$elm_ui$Element$Input$Label(2);
var $author$project$Page$Organize$DetainerWarrantCreation$requiredStar = A2(
	$mdgriffith$elm_ui$Element$el,
	_List_fromArray(
		[
			$mdgriffith$elm_ui$Element$Font$color($author$project$Palette$sred),
			$mdgriffith$elm_ui$Element$alignTop,
			$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink)
		]),
	$mdgriffith$elm_ui$Element$text('*'));
var $author$project$Page$Organize$DetainerWarrantCreation$requiredLabel = F2(
	function (labelFn, str) {
		return A2(
			labelFn,
			_List_Nil,
			A2(
				$mdgriffith$elm_ui$Element$row,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$spacing(5)
					]),
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$text(str),
						$author$project$Page$Organize$DetainerWarrantCreation$requiredStar
					])));
	});
var $mdgriffith$elm_ui$Element$Input$text = $mdgriffith$elm_ui$Element$Input$textHelper(
	{
		ai: $elm$core$Maybe$Nothing,
		at: false,
		G: $mdgriffith$elm_ui$Element$Input$TextInputNode('text')
	});
var $author$project$Page$Organize$DetainerWarrantCreation$textInput = F2(
	function (attrs, config) {
		return A2(
			$mdgriffith$elm_ui$Element$Input$text,
			_Utils_ap(
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$Border$color($author$project$Palette$grayLight)
					]),
				attrs),
			config);
	});
var $author$project$Page$Organize$DetainerWarrantCreation$focusedButtonStyles = _List_fromArray(
	[
		$mdgriffith$elm_ui$Element$Background$color($author$project$Palette$sred),
		$mdgriffith$elm_ui$Element$Font$color($author$project$Palette$white)
	]);
var $elm$svg$Svg$circle = $elm$svg$Svg$trustedNode('circle');
var $elm$svg$Svg$Attributes$cx = _VirtualDom_attribute('cx');
var $elm$svg$Svg$Attributes$cy = _VirtualDom_attribute('cy');
var $elm$svg$Svg$Attributes$r = _VirtualDom_attribute('r');
var $feathericons$elm_feather$FeatherIcons$helpCircle = A2(
	$feathericons$elm_feather$FeatherIcons$makeBuilder,
	'help-circle',
	_List_fromArray(
		[
			A2(
			$elm$svg$Svg$circle,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$cx('12'),
					$elm$svg$Svg$Attributes$cy('12'),
					$elm$svg$Svg$Attributes$r('10')
				]),
			_List_Nil),
			A2(
			$elm$svg$Svg$path,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3')
				]),
			_List_Nil),
			A2(
			$elm$svg$Svg$line,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$x1('12'),
					$elm$svg$Svg$Attributes$y1('17'),
					$elm$svg$Svg$Attributes$x2('12.01'),
					$elm$svg$Svg$Attributes$y2('17')
				]),
			_List_Nil)
		]));
var $author$project$Page$Organize$DetainerWarrantCreation$hoveredButtonStyles = _List_fromArray(
	[
		$mdgriffith$elm_ui$Element$Background$color($author$project$Palette$sred),
		$mdgriffith$elm_ui$Element$Font$color($author$project$Palette$white)
	]);
var $author$project$Page$Organize$DetainerWarrantCreation$helpButton = function (tooltip) {
	return A2(
		$mdgriffith$elm_ui$Element$Input$button,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$Events$onLoseFocus($author$project$Page$Organize$DetainerWarrantCreation$CloseTooltip),
				$mdgriffith$elm_ui$Element$Font$color($author$project$Palette$sred),
				$mdgriffith$elm_ui$Element$padding(10),
				$mdgriffith$elm_ui$Element$alignBottom,
				$mdgriffith$elm_ui$Element$Border$rounded(3),
				$mdgriffith$elm_ui$Element$mouseOver($author$project$Page$Organize$DetainerWarrantCreation$hoveredButtonStyles),
				$mdgriffith$elm_ui$Element$focused($author$project$Page$Organize$DetainerWarrantCreation$focusedButtonStyles)
			]),
		{
			hL: $mdgriffith$elm_ui$Element$html(
				A2($feathericons$elm_feather$FeatherIcons$toHtml, _List_Nil, $feathericons$elm_feather$FeatherIcons$helpCircle)),
			lM: $elm$core$Maybe$Just(
				$author$project$Page$Organize$DetainerWarrantCreation$ChangeTooltip(tooltip))
		});
};
var $mdgriffith$elm_ui$Element$spacingXY = F2(
	function (x, y) {
		return A2(
			$mdgriffith$elm_ui$Internal$Model$StyleClass,
			$mdgriffith$elm_ui$Internal$Flag$spacing,
			A3(
				$mdgriffith$elm_ui$Internal$Model$SpacingStyle,
				A2($mdgriffith$elm_ui$Internal$Model$spacingName, x, y),
				x,
				y));
	});
var $mdgriffith$elm_ui$Internal$Model$Below = 1;
var $mdgriffith$elm_ui$Element$below = function (element) {
	return A2($mdgriffith$elm_ui$Element$createNearby, 1, element);
};
var $author$project$Page$Organize$DetainerWarrantCreation$viewTooltip = function (str) {
	return A2(
		$mdgriffith$elm_ui$Element$textColumn,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$width(
				A2($mdgriffith$elm_ui$Element$maximum, 600, $mdgriffith$elm_ui$Element$fill)),
				$mdgriffith$elm_ui$Element$padding(10),
				$mdgriffith$elm_ui$Element$Background$color($author$project$Palette$red),
				$mdgriffith$elm_ui$Element$Font$color($author$project$Palette$white),
				$mdgriffith$elm_ui$Element$Border$rounded(3),
				$mdgriffith$elm_ui$Element$Font$size(14),
				$mdgriffith$elm_ui$Element$Border$shadow(
				{
					jD: 6,
					eL: A4($mdgriffith$elm_ui$Element$rgba, 0, 0, 0, 0.32),
					lG: _Utils_Tuple2(0, 3),
					f$: 0
				})
			]),
		_List_fromArray(
			[
				A2(
				$mdgriffith$elm_ui$Element$paragraph,
				_List_Nil,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$text(str)
					]))
			]));
};
var $author$project$Page$Organize$DetainerWarrantCreation$withTooltip = F3(
	function (candidate, active, str) {
		return _Utils_eq(
			$elm$core$Maybe$Just(candidate),
			active) ? _List_fromArray(
			[
				$mdgriffith$elm_ui$Element$below(
				$author$project$Page$Organize$DetainerWarrantCreation$viewTooltip(str))
			]) : _List_Nil;
	});
var $author$project$Page$Organize$DetainerWarrantCreation$viewField = function (field) {
	var tooltip = function () {
		var _v0 = field.a;
		if (!_v0.$) {
			var tip = _v0.a;
			return A3($author$project$Page$Organize$DetainerWarrantCreation$withTooltip, tip, field.e, field.d_);
		} else {
			return _List_Nil;
		}
	}();
	var help = A2(
		$elm$core$Maybe$withDefault,
		$mdgriffith$elm_ui$Element$none,
		A2($elm$core$Maybe$map, $author$project$Page$Organize$DetainerWarrantCreation$helpButton, field.a));
	return A2(
		$mdgriffith$elm_ui$Element$row,
		_Utils_ap(
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
					$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
					A2($mdgriffith$elm_ui$Element$spacingXY, 5, 0),
					A2($mdgriffith$elm_ui$Element$paddingXY, 0, 10)
				]),
			tooltip),
		A2($elm$core$List$cons, help, field.d));
};
var $author$project$Palette$purpleLight = A3($mdgriffith$elm_ui$Element$rgb255, 206, 147, 216);
var $author$project$Page$Organize$DetainerWarrantCreation$withChanges = F2(
	function (hasChanged, attrs) {
		return _Utils_ap(
			attrs,
			hasChanged ? _List_fromArray(
				[
					$mdgriffith$elm_ui$Element$Border$color($author$project$Palette$purpleLight)
				]) : _List_Nil);
	});
var $feathericons$elm_feather$FeatherIcons$alertTriangle = A2(
	$feathericons$elm_feather$FeatherIcons$makeBuilder,
	'alert-triangle',
	_List_fromArray(
		[
			A2(
			$elm$svg$Svg$path,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z')
				]),
			_List_Nil),
			A2(
			$elm$svg$Svg$line,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$x1('12'),
					$elm$svg$Svg$Attributes$y1('9'),
					$elm$svg$Svg$Attributes$x2('12'),
					$elm$svg$Svg$Attributes$y2('13')
				]),
			_List_Nil),
			A2(
			$elm$svg$Svg$line,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$x1('12'),
					$elm$svg$Svg$Attributes$y1('17'),
					$elm$svg$Svg$Attributes$x2('12.01'),
					$elm$svg$Svg$Attributes$y2('17')
				]),
			_List_Nil)
		]));
var $feathericons$elm_feather$FeatherIcons$withSize = F2(
	function (size, _v0) {
		var attrs = _v0.H;
		var src = _v0.eo;
		return {
			H: _Utils_update(
				attrs,
				{f$: size}),
			eo: src
		};
	});
var $author$project$Page$Organize$DetainerWarrantCreation$withValidation = F3(
	function (validatedField, problems, attrs) {
		var maybeError = $elm$core$List$head(
			A2(
				$elm$core$List$filterMap,
				function (problem) {
					if (!problem.$) {
						var field = problem.a;
						var problemText = problem.b;
						return _Utils_eq(validatedField, field) ? $elm$core$Maybe$Just(problemText) : $elm$core$Maybe$Nothing;
					} else {
						return $elm$core$Maybe$Nothing;
					}
				},
				problems));
		return _Utils_ap(
			attrs,
			function () {
				if (!maybeError.$) {
					var errorText = maybeError.a;
					return _List_fromArray(
						[
							$mdgriffith$elm_ui$Element$Border$color($author$project$Palette$sred),
							$mdgriffith$elm_ui$Element$below(
							A2(
								$mdgriffith$elm_ui$Element$row,
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Element$paddingXY, 0, 10),
										$mdgriffith$elm_ui$Element$spacing(5),
										$mdgriffith$elm_ui$Element$Font$color($author$project$Palette$sred),
										$mdgriffith$elm_ui$Element$Font$size(14)
									]),
								_List_fromArray(
									[
										A2(
										$mdgriffith$elm_ui$Element$el,
										_List_Nil,
										$mdgriffith$elm_ui$Element$html(
											A2(
												$feathericons$elm_feather$FeatherIcons$toHtml,
												_List_Nil,
												A2($feathericons$elm_feather$FeatherIcons$withSize, 16, $feathericons$elm_feather$FeatherIcons$alertTriangle)))),
										$mdgriffith$elm_ui$Element$text(errorText)
									])))
						]);
				} else {
					return _List_Nil;
				}
			}());
	});
var $author$project$Page$Organize$DetainerWarrantCreation$viewAddress = F2(
	function (options, form) {
		var hasChanges = A2(
			$elm$core$Maybe$withDefault,
			false,
			A2(
				$elm$core$Maybe$map,
				A2(
					$elm$core$Basics$composeL,
					$elm$core$Basics$neq(form.je),
					function ($) {
						return $.je;
					}),
				A2(
					$elm$core$Maybe$andThen,
					A2(
						$elm$core$Basics$composeL,
						$elm$core$List$head,
						function ($) {
							return $.g0;
						}),
					options.b))) || (_Utils_eq(options.b, $elm$core$Maybe$Nothing) && (form.je !== ''));
		return A2(
			$mdgriffith$elm_ui$Element$row,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width(
					A2($mdgriffith$elm_ui$Element$maximum, 800, $mdgriffith$elm_ui$Element$fill))
				]),
			_List_fromArray(
				[
					$author$project$Page$Organize$DetainerWarrantCreation$viewField(
					{
						d: _List_fromArray(
							[
								A2(
								$author$project$Page$Organize$DetainerWarrantCreation$textInput,
								A3(
									$author$project$Page$Organize$DetainerWarrantCreation$withValidation,
									$author$project$Page$Organize$DetainerWarrantCreation$DefendantAddress,
									options.bx,
									A2($author$project$Page$Organize$DetainerWarrantCreation$withChanges, hasChanges, _List_Nil)),
								{
									hL: A2($author$project$Page$Organize$DetainerWarrantCreation$requiredLabel, $mdgriffith$elm_ui$Element$Input$labelAbove, 'Defendant Address'),
									lI: $author$project$Page$Organize$DetainerWarrantCreation$ChangedAddress,
									fO: $elm$core$Maybe$Just(
										A2(
											$mdgriffith$elm_ui$Element$Input$placeholder,
											_List_Nil,
											$mdgriffith$elm_ui$Element$text('123 Street Address, City, Zip Code'))),
									mR: form.je
								})
							]),
						e: options.a,
						d_: 'The address where the defendant or defendants reside.',
						a: $elm$core$Maybe$Just($author$project$Page$Organize$DetainerWarrantCreation$AddressInfo)
					})
				]));
	});
var $author$project$Page$Organize$DetainerWarrantCreation$AmountClaimedInfo = {$: 9};
var $author$project$Page$Organize$DetainerWarrantCreation$ChangedAmountClaimed = function (a) {
	return {$: 13, a: a};
};
var $author$project$Page$Organize$DetainerWarrantCreation$ConfirmAmountClaimed = {$: 14};
var $author$project$Page$Organize$DetainerWarrantCreation$viewAmountClaimed = F2(
	function (options, form) {
		var hasChanges = A2(
			$elm$core$Maybe$withDefault,
			false,
			A2(
				$elm$core$Maybe$map,
				A2(
					$elm$core$Basics$composeL,
					$elm$core$Basics$neq(form.gH),
					$Massolari$elm_mask$Mask$floatDecimal($Massolari$elm_mask$Mask$defaultDecimalOptions)),
				A2(
					$elm$core$Maybe$andThen,
					function ($) {
						return $.gH;
					},
					options.b))) || (_Utils_eq(options.b, $elm$core$Maybe$Nothing) && (form.gH !== ''));
		return A2(
			$mdgriffith$elm_ui$Element$column,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
				]),
			_List_fromArray(
				[
					$author$project$Page$Organize$DetainerWarrantCreation$viewField(
					{
						d: _List_fromArray(
							[
								A2(
								$author$project$Page$Organize$DetainerWarrantCreation$textInput,
								A2(
									$author$project$Page$Organize$DetainerWarrantCreation$withChanges,
									hasChanges,
									_List_fromArray(
										[
											$mdgriffith$elm_ui$Element$Events$onLoseFocus($author$project$Page$Organize$DetainerWarrantCreation$ConfirmAmountClaimed)
										])),
								{
									hL: A2(
										$mdgriffith$elm_ui$Element$Input$labelAbove,
										_List_Nil,
										$mdgriffith$elm_ui$Element$text('Amount Claimed')),
									lI: $author$project$Page$Organize$DetainerWarrantCreation$ChangedAmountClaimed,
									fO: $elm$core$Maybe$Just(
										A2(
											$mdgriffith$elm_ui$Element$Input$placeholder,
											_List_Nil,
											$mdgriffith$elm_ui$Element$text('$0.00'))),
									mR: (form.gH === '') ? form.gH : ('$' + form.gH)
								})
							]),
						e: options.a,
						d_: 'The monetary amount the plaintiff is requesting from the defendant.',
						a: $elm$core$Maybe$Just($author$project$Page$Organize$DetainerWarrantCreation$AmountClaimedInfo)
					})
				]));
	});
var $author$project$Page$Organize$DetainerWarrantCreation$AmountClaimedCategoryInfo = {$: 10};
var $PaackEng$elm_ui_dropdown$Dropdown$OnSelect = function (a) {
	return {$: 3, a: a};
};
var $PaackEng$elm_ui_dropdown$Dropdown$onClick = function (message) {
	return $mdgriffith$elm_ui$Element$Events$onClick(message);
};
var $PaackEng$elm_ui_dropdown$Dropdown$referenceDataName = 'data-dropdown-id';
var $PaackEng$elm_ui_dropdown$Dropdown$referenceAttr = function (model) {
	return $mdgriffith$elm_ui$Element$htmlAttribute(
		A2($elm$html$Html$Attributes$attribute, $PaackEng$elm_ui_dropdown$Dropdown$referenceDataName, model.hs));
};
var $PaackEng$elm_ui_dropdown$Dropdown$tabIndexAttr = function (tabIndex) {
	return $mdgriffith$elm_ui$Element$htmlAttribute(
		$elm$html$Html$Attributes$tabindex(tabIndex));
};
var $PaackEng$elm_ui_dropdown$Dropdown$itemView = F5(
	function (config, selectedItems, state, i, item) {
		var selected = A2($elm$core$List$member, item, selectedItems);
		var itemAttrs = _List_fromArray(
			[
				$PaackEng$elm_ui_dropdown$Dropdown$onClick(
				config.kp(
					$PaackEng$elm_ui_dropdown$Dropdown$OnSelect(item))),
				$PaackEng$elm_ui_dropdown$Dropdown$referenceAttr(state),
				$PaackEng$elm_ui_dropdown$Dropdown$tabIndexAttr(-1),
				$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
			]);
		var highlighed = _Utils_eq(i, state.ac);
		return A2(
			$mdgriffith$elm_ui$Element$el,
			itemAttrs,
			A3(config.lb, selected, highlighed, item));
	});
var $PaackEng$elm_ui_dropdown$Dropdown$bodyView = F4(
	function (config, selectedItems, state, data) {
		if (state.ad) {
			var items = A2(
				$mdgriffith$elm_ui$Element$column,
				config.cc,
				A2(
					$elm$core$List$indexedMap,
					A3($PaackEng$elm_ui_dropdown$Dropdown$itemView, config, selectedItems, state),
					data));
			var body = A2(
				$mdgriffith$elm_ui$Element$el,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$htmlAttribute(
						A2($elm$html$Html$Attributes$style, 'flex-shrink', '1')),
						$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
					]),
				items);
			return body;
		} else {
			return $mdgriffith$elm_ui$Element$none;
		}
	});
var $PaackEng$elm_ui_dropdown$Dropdown$idAttr = function (id) {
	return $mdgriffith$elm_ui$Element$htmlAttribute(
		$elm$html$Html$Attributes$id(id));
};
var $PaackEng$elm_ui_dropdown$Dropdown$OnClickPrompt = {$: 2};
var $PaackEng$elm_ui_dropdown$Dropdown$OnFilterTyped = function (a) {
	return {$: 4, a: a};
};
var $PaackEng$elm_ui_dropdown$Dropdown$OnKeyDown = function (a) {
	return {$: 5, a: a};
};
var $PaackEng$elm_ui_dropdown$Dropdown$OnBlur = {$: 1};
var $elm$json$Json$Decode$maybe = function (decoder) {
	return $elm$json$Json$Decode$oneOf(
		_List_fromArray(
			[
				A2($elm$json$Json$Decode$map, $elm$core$Maybe$Just, decoder),
				$elm$json$Json$Decode$succeed($elm$core$Maybe$Nothing)
			]));
};
var $PaackEng$elm_ui_dropdown$Dropdown$onBlurAttribute = F2(
	function (config, state) {
		var dataDecoder = A2(
			$elm$json$Json$Decode$at,
			_List_fromArray(
				['relatedTarget', 'attributes', $PaackEng$elm_ui_dropdown$Dropdown$referenceDataName, 'value']),
			$elm$json$Json$Decode$string);
		var attrToMsg = function (attr) {
			return _Utils_eq(attr, state.hs) ? config.kp($PaackEng$elm_ui_dropdown$Dropdown$NoOp) : config.kp($PaackEng$elm_ui_dropdown$Dropdown$OnBlur);
		};
		var blur = A2(
			$elm$json$Json$Decode$map,
			$elm$core$Maybe$withDefault(
				config.kp($PaackEng$elm_ui_dropdown$Dropdown$OnBlur)),
			A2(
				$elm$json$Json$Decode$map,
				$elm$core$Maybe$map(attrToMsg),
				$elm$json$Json$Decode$maybe(dataDecoder)));
		return $mdgriffith$elm_ui$Element$htmlAttribute(
			A2($elm$html$Html$Events$on, 'blur', blur));
	});
var $elm$virtual_dom$VirtualDom$Custom = function (a) {
	return {$: 3, a: a};
};
var $elm$html$Html$Events$custom = F2(
	function (event, decoder) {
		return A2(
			$elm$virtual_dom$VirtualDom$on,
			event,
			$elm$virtual_dom$VirtualDom$Custom(decoder));
	});
var $PaackEng$elm_ui_dropdown$Dropdown$onClickNoPropagation = function (msg) {
	return $mdgriffith$elm_ui$Element$htmlAttribute(
		A2(
			$elm$html$Html$Events$custom,
			'click',
			$elm$json$Json$Decode$succeed(
				{lr: msg, l6: true, mI: true})));
};
var $PaackEng$elm_ui_dropdown$Dropdown$ArrowDown = 0;
var $PaackEng$elm_ui_dropdown$Dropdown$ArrowUp = 1;
var $PaackEng$elm_ui_dropdown$Dropdown$Enter = 2;
var $PaackEng$elm_ui_dropdown$Dropdown$Esc = 3;
var $PaackEng$elm_ui_dropdown$Dropdown$onKeyDown = function (msg) {
	var stringToKey = function (str) {
		switch (str) {
			case 'ArrowDown':
				return $elm$json$Json$Decode$succeed(0);
			case 'ArrowUp':
				return $elm$json$Json$Decode$succeed(1);
			case 'Enter':
				return $elm$json$Json$Decode$succeed(2);
			case 'Escape':
				return $elm$json$Json$Decode$succeed(3);
			default:
				return $elm$json$Json$Decode$fail('not used key');
		}
	};
	var keyDecoder = A2(
		$elm$json$Json$Decode$andThen,
		stringToKey,
		A2($elm$json$Json$Decode$field, 'key', $elm$json$Json$Decode$string));
	return $mdgriffith$elm_ui$Element$htmlAttribute(
		A2(
			$elm$html$Html$Events$on,
			'keydown',
			A2($elm$json$Json$Decode$map, msg, keyDecoder)));
};
var $mdgriffith$elm_ui$Element$Input$search = $mdgriffith$elm_ui$Element$Input$textHelper(
	{
		ai: $elm$core$Maybe$Nothing,
		at: false,
		G: $mdgriffith$elm_ui$Element$Input$TextInputNode('search')
	});
var $PaackEng$elm_ui_dropdown$Dropdown$triggerView = F3(
	function (config, selectedItems, state) {
		var selectAttrs = _Utils_ap(
			_List_fromArray(
				[
					$PaackEng$elm_ui_dropdown$Dropdown$onClick(
					config.kp($PaackEng$elm_ui_dropdown$Dropdown$OnClickPrompt)),
					$PaackEng$elm_ui_dropdown$Dropdown$onKeyDown(
					A2($elm$core$Basics$composeL, config.kp, $PaackEng$elm_ui_dropdown$Dropdown$OnKeyDown)),
					$PaackEng$elm_ui_dropdown$Dropdown$tabIndexAttr(0),
					$PaackEng$elm_ui_dropdown$Dropdown$referenceAttr(state)
				]),
			_Utils_ap(
				(!config.az) ? _List_fromArray(
					[
						A2($PaackEng$elm_ui_dropdown$Dropdown$onBlurAttribute, config, state)
					]) : _List_Nil,
				config.cq));
		var prompt = A2(
			$mdgriffith$elm_ui$Element$el,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
				]),
			function () {
				if (!selectedItems.b) {
					return config.by;
				} else {
					var xs = selectedItems;
					var _v3 = config.dr;
					if (!_v3.$) {
						var f = _v3.a;
						var _v4 = $elm$core$List$head(xs);
						if (_v4.$ === 1) {
							return config.by;
						} else {
							var x = _v4.a;
							return f(x);
						}
					} else {
						var f = _v3.a;
						return f(xs);
					}
				}
			}());
		var search = function () {
			var _v1 = config.az;
			switch (_v1) {
				case 0:
					return prompt;
				case 2:
					return prompt;
				default:
					return A2(
						$mdgriffith$elm_ui$Element$Input$search,
						_Utils_ap(
							_List_fromArray(
								[
									$PaackEng$elm_ui_dropdown$Dropdown$idAttr(state.hs + 'input-search'),
									$mdgriffith$elm_ui$Element$focused(_List_Nil),
									$PaackEng$elm_ui_dropdown$Dropdown$onClickNoPropagation(
									config.kp($PaackEng$elm_ui_dropdown$Dropdown$NoOp)),
									A2($PaackEng$elm_ui_dropdown$Dropdown$onBlurAttribute, config, state)
								]),
							config.cp),
						{
							hL: $mdgriffith$elm_ui$Element$Input$labelHidden('Filter List'),
							lI: A2($elm$core$Basics$composeL, config.kp, $PaackEng$elm_ui_dropdown$Dropdown$OnFilterTyped),
							fO: A2(
								$elm$core$Maybe$map,
								A2(
									$elm$core$Basics$composeR,
									$mdgriffith$elm_ui$Element$text,
									$mdgriffith$elm_ui$Element$Input$placeholder(_List_Nil)),
								config.bW),
							mR: state.bX
						});
			}
		}();
		var _v0 = state.ad ? _Utils_Tuple2(
			search,
			A2($mdgriffith$elm_ui$Element$el, _List_Nil, config.jW)) : _Utils_Tuple2(
			prompt,
			A2($mdgriffith$elm_ui$Element$el, _List_Nil, config.lQ));
		var promptOrSearch = _v0.a;
		var button = _v0.b;
		return A2(
			$mdgriffith$elm_ui$Element$row,
			selectAttrs,
			_List_fromArray(
				[promptOrSearch, button]));
	});
var $PaackEng$elm_ui_dropdown$Dropdown$view = F3(
	function (_v0, model, _v1) {
		var config = _v0;
		var state = _v1;
		var selectedItems = A2($PaackEng$elm_ui_dropdown$Dropdown$selectedItemsAsList, config, model);
		var trigger = A3($PaackEng$elm_ui_dropdown$Dropdown$triggerView, config, selectedItems, state);
		var items = config.ld(model);
		var filter = function (item) {
			return A2(
				$elm$core$String$contains,
				$elm$core$String$toLower(state.bX),
				$elm$core$String$toLower(
					config.ca(item)));
		};
		var filteredData = A2($elm$core$List$filter, filter, items);
		var body = A4($PaackEng$elm_ui_dropdown$Dropdown$bodyView, config, selectedItems, state, filteredData);
		var containerAttrs = _Utils_ap(
			_List_fromArray(
				[
					$PaackEng$elm_ui_dropdown$Dropdown$idAttr(state.hs),
					$mdgriffith$elm_ui$Element$below(body)
				]),
			config.bR);
		return A2(
			$mdgriffith$elm_ui$Element$column,
			containerAttrs,
			_List_fromArray(
				[
					A2(
					$mdgriffith$elm_ui$Element$el,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
						]),
					trigger)
				]));
	});
var $author$project$Page$Organize$DetainerWarrantCreation$viewAmountClaimedCategory = F2(
	function (options, form) {
		var defaultCategory = 3;
		var hasChanges = A2(
			$elm$core$Maybe$withDefault,
			false,
			A2(
				$elm$core$Maybe$map,
				A2(
					$elm$core$Basics$composeL,
					$elm$core$Basics$neq(form.gI),
					function ($) {
						return $.gI;
					}),
				options.b)) || (_Utils_eq(options.b, $elm$core$Maybe$Nothing) && (!_Utils_eq(form.gI, defaultCategory)));
		return A2(
			$mdgriffith$elm_ui$Element$column,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
				]),
			_List_fromArray(
				[
					$author$project$Page$Organize$DetainerWarrantCreation$viewField(
					{
						d: _List_fromArray(
							[
								A2(
								$mdgriffith$elm_ui$Element$column,
								_List_fromArray(
									[
										$mdgriffith$elm_ui$Element$spacing(5),
										$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
									]),
								_List_fromArray(
									[
										A2(
										$mdgriffith$elm_ui$Element$el,
										_List_Nil,
										$mdgriffith$elm_ui$Element$text('Amount Claimed Category')),
										A2(
										$mdgriffith$elm_ui$Element$el,
										_List_Nil,
										A3(
											$PaackEng$elm_ui_dropdown$Dropdown$view,
											$author$project$Page$Organize$DetainerWarrantCreation$categoryDropdownConfig(
												A2($author$project$Page$Organize$DetainerWarrantCreation$withChanges, hasChanges, _List_Nil)),
											{
												lU: $author$project$DetainerWarrant$amountClaimedCategoryOptions,
												C: $elm$core$Maybe$Just(form.gI)
											},
											form.bi))
									]))
							]),
						e: options.a,
						d_: 'Plaintiffs may ask for payment, repossession, or more.',
						a: $elm$core$Maybe$Just($author$project$Page$Organize$DetainerWarrantCreation$AmountClaimedCategoryInfo)
					})
				]));
	});
var $author$project$Page$Organize$DetainerWarrantCreation$CaresInfo = {$: 11};
var $author$project$Page$Organize$DetainerWarrantCreation$viewCares = F2(
	function (options, form) {
		var hasChanges = A2(
			$elm$core$Maybe$withDefault,
			false,
			A2(
				$elm$core$Maybe$map,
				A2(
					$elm$core$Basics$composeL,
					$elm$core$Basics$neq(form.hF),
					function ($) {
						return $.hF;
					}),
				options.b)) || (_Utils_eq(options.b, $elm$core$Maybe$Nothing) && (!_Utils_eq(form.hF, $elm$core$Maybe$Nothing)));
		return A2(
			$mdgriffith$elm_ui$Element$column,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
				]),
			_List_fromArray(
				[
					$author$project$Page$Organize$DetainerWarrantCreation$viewField(
					{
						d: _List_fromArray(
							[
								A2(
								$mdgriffith$elm_ui$Element$column,
								_List_fromArray(
									[
										$mdgriffith$elm_ui$Element$spacing(5),
										$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
									]),
								_List_fromArray(
									[
										A2(
										$mdgriffith$elm_ui$Element$el,
										_List_Nil,
										$mdgriffith$elm_ui$Element$text('Is C.A.R.E.S. property?')),
										A2(
										$mdgriffith$elm_ui$Element$el,
										_List_Nil,
										A3(
											$PaackEng$elm_ui_dropdown$Dropdown$view,
											$author$project$Page$Organize$DetainerWarrantCreation$caresDropdownConfig(
												A2($author$project$Page$Organize$DetainerWarrantCreation$withChanges, hasChanges, _List_Nil)),
											{
												lU: $author$project$DetainerWarrant$ternaryOptions,
												C: $elm$core$Maybe$Just(form.hF)
											},
											form.bP))
									]))
							]),
						e: options.a,
						d_: 'C.A.R.E.S. was an aid package provided during the pandemic. If a docket number has a \"Notice,\" check to see whether the property falls under the CARES act',
						a: $elm$core$Maybe$Just($author$project$Page$Organize$DetainerWarrantCreation$CaresInfo)
					})
				]));
	});
var $author$project$Page$Organize$DetainerWarrantCreation$ChangedCourtDatePicker = function (a) {
	return {$: 6, a: a};
};
var $author$project$Page$Organize$DetainerWarrantCreation$CourtDateInfo = {$: 6};
var $mdgriffith$elm_ui$Element$moveDown = function (y) {
	return A2(
		$mdgriffith$elm_ui$Internal$Model$TransformComponent,
		$mdgriffith$elm_ui$Internal$Flag$moveY,
		$mdgriffith$elm_ui$Internal$Model$MoveY(y));
};
var $fabhof$elm_ui_datepicker$DatePicker$defaultSettings = {
	eO: _List_fromArray(
		[
			A2($mdgriffith$elm_ui$Element$paddingXY, 4, 2),
			$mdgriffith$elm_ui$Element$Border$rounded(3),
			$mdgriffith$elm_ui$Element$mouseOver(
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$Background$color(
					A3($mdgriffith$elm_ui$Element$rgb255, 115, 182, 255))
				]))
		]),
	eR: $elm$core$Basics$always(false),
	eS: _List_fromArray(
		[
			$mdgriffith$elm_ui$Element$Font$color(
			A3($mdgriffith$elm_ui$Element$rgb255, 128, 128, 128)),
			$mdgriffith$elm_ui$Element$Background$color(
			A3($mdgriffith$elm_ui$Element$rgb255, 221, 221, 221))
		]),
	d1: 0,
	e_: _List_fromArray(
		[
			$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
			$mdgriffith$elm_ui$Element$padding(8),
			$mdgriffith$elm_ui$Element$Font$bold
		]),
	de: $elm$core$Maybe$Nothing,
	fv: $mdgriffith$elm_ui$Element$text('►'),
	fM: _List_fromArray(
		[
			$mdgriffith$elm_ui$Element$Border$width(1),
			$mdgriffith$elm_ui$Element$Border$color(
			A3($mdgriffith$elm_ui$Element$rgb255, 186, 189, 182)),
			$mdgriffith$elm_ui$Element$Border$roundEach(
			{jJ: 3, jK: 3, nb: 0, nc: 0}),
			$mdgriffith$elm_ui$Element$moveDown(3),
			$mdgriffith$elm_ui$Element$padding(8),
			$mdgriffith$elm_ui$Element$spacing(4),
			$mdgriffith$elm_ui$Element$Background$color(
			A3($mdgriffith$elm_ui$Element$rgb255, 255, 255, 255))
		]),
	fP: $mdgriffith$elm_ui$Element$text('◄'),
	fX: _List_fromArray(
		[
			$mdgriffith$elm_ui$Element$Background$color(
			A3($mdgriffith$elm_ui$Element$rgb255, 0, 123, 255))
		]),
	f8: _List_fromArray(
		[
			$mdgriffith$elm_ui$Element$spacing(4),
			$mdgriffith$elm_ui$Element$centerX,
			$mdgriffith$elm_ui$Element$centerY
		]),
	gc: _List_fromArray(
		[
			$mdgriffith$elm_ui$Element$Background$color(
			A3($mdgriffith$elm_ui$Element$rgb255, 255, 193, 155))
		]),
	gm: _List_fromArray(
		[$mdgriffith$elm_ui$Element$Font$bold]),
	gs: _List_fromArray(
		[
			$mdgriffith$elm_ui$Element$Font$color(
			A3($mdgriffith$elm_ui$Element$rgb255, 128, 128, 128))
		])
};
var $fabhof$elm_ui_datepicker$DatePicker$Close = {$: 2};
var $fabhof$elm_ui_datepicker$DatePicker$Open = {$: 1};
var $fabhof$elm_ui_datepicker$DatePicker$PickerChanged = function (a) {
	return {$: 2, a: a};
};
var $fabhof$elm_ui_datepicker$DatePicker$TextChanged = function (a) {
	return {$: 1, a: a};
};
var $fabhof$elm_ui_datepicker$Internal$TestHelper$testAttribute = function (name) {
	return A2($elm$html$Html$Attributes$attribute, 'elm-test', name);
};
var $fabhof$elm_ui_datepicker$Internal$TestHelper$inputAttrHtml = $fabhof$elm_ui_datepicker$Internal$TestHelper$testAttribute('input');
var $fabhof$elm_ui_datepicker$Internal$TestHelper$inputAttr = $mdgriffith$elm_ui$Element$htmlAttribute($fabhof$elm_ui_datepicker$Internal$TestHelper$inputAttrHtml);
var $elm$html$Html$Events$onFocus = function (msg) {
	return A2(
		$elm$html$Html$Events$on,
		'focus',
		$elm$json$Json$Decode$succeed(msg));
};
var $mdgriffith$elm_ui$Element$Events$onFocus = A2($elm$core$Basics$composeL, $mdgriffith$elm_ui$Internal$Model$Attr, $elm$html$Html$Events$onFocus);
var $fabhof$elm_ui_datepicker$Internal$TestHelper$calendarAttrHtml = $fabhof$elm_ui_datepicker$Internal$TestHelper$testAttribute('calendar');
var $fabhof$elm_ui_datepicker$Internal$TestHelper$calendarAttr = $mdgriffith$elm_ui$Element$htmlAttribute($fabhof$elm_ui_datepicker$Internal$TestHelper$calendarAttrHtml);
var $mdgriffith$elm_ui$Internal$Model$mapAttr = F2(
	function (fn, attr) {
		switch (attr.$) {
			case 0:
				return $mdgriffith$elm_ui$Internal$Model$NoAttribute;
			case 2:
				var description = attr.a;
				return $mdgriffith$elm_ui$Internal$Model$Describe(description);
			case 6:
				var x = attr.a;
				return $mdgriffith$elm_ui$Internal$Model$AlignX(x);
			case 5:
				var y = attr.a;
				return $mdgriffith$elm_ui$Internal$Model$AlignY(y);
			case 7:
				var x = attr.a;
				return $mdgriffith$elm_ui$Internal$Model$Width(x);
			case 8:
				var x = attr.a;
				return $mdgriffith$elm_ui$Internal$Model$Height(x);
			case 3:
				var x = attr.a;
				var y = attr.b;
				return A2($mdgriffith$elm_ui$Internal$Model$Class, x, y);
			case 4:
				var flag = attr.a;
				var style = attr.b;
				return A2($mdgriffith$elm_ui$Internal$Model$StyleClass, flag, style);
			case 9:
				var location = attr.a;
				var elem = attr.b;
				return A2(
					$mdgriffith$elm_ui$Internal$Model$Nearby,
					location,
					A2($mdgriffith$elm_ui$Internal$Model$map, fn, elem));
			case 1:
				var htmlAttr = attr.a;
				return $mdgriffith$elm_ui$Internal$Model$Attr(
					A2($elm$virtual_dom$VirtualDom$mapAttribute, fn, htmlAttr));
			default:
				var fl = attr.a;
				var trans = attr.b;
				return A2($mdgriffith$elm_ui$Internal$Model$TransformComponent, fl, trans);
		}
	});
var $mdgriffith$elm_ui$Element$mapAttribute = $mdgriffith$elm_ui$Internal$Model$mapAttr;
var $fabhof$elm_ui_datepicker$DatePicker$extAttrs = $elm$core$List$map(
	$mdgriffith$elm_ui$Element$mapAttribute($elm$core$Basics$never));
var $fabhof$elm_ui_datepicker$DatePicker$ChangeMonth = function (a) {
	return {$: 0, a: a};
};
var $justinmimbs$date$Date$Months = 1;
var $justinmimbs$date$Date$add = F3(
	function (unit, n, _v0) {
		var rd = _v0;
		switch (unit) {
			case 0:
				return A3($justinmimbs$date$Date$add, 1, 12 * n, rd);
			case 1:
				var date = $justinmimbs$date$Date$toCalendarDate(rd);
				var wholeMonths = ((12 * (date.nx - 1)) + ($justinmimbs$date$Date$monthToNumber(date.lw) - 1)) + n;
				var m = $justinmimbs$date$Date$numberToMonth(
					A2($elm$core$Basics$modBy, 12, wholeMonths) + 1);
				var y = A2($justinmimbs$date$Date$floorDiv, wholeMonths, 12) + 1;
				return ($justinmimbs$date$Date$daysBeforeYear(y) + A2($justinmimbs$date$Date$daysBeforeMonth, y, m)) + A2(
					$elm$core$Basics$min,
					date.ka,
					A2($justinmimbs$date$Date$daysInMonth, y, m));
			case 2:
				return rd + (7 * n);
			default:
				return rd + n;
		}
	});
var $mdgriffith$elm_ui$Internal$Model$Left = 0;
var $mdgriffith$elm_ui$Element$alignLeft = $mdgriffith$elm_ui$Internal$Model$AlignX(0);
var $fabhof$elm_ui_datepicker$DatePicker$extEle = $mdgriffith$elm_ui$Element$map($elm$core$Basics$never);
var $fabhof$elm_ui_datepicker$Internal$Date$formatMaybeLanguage = F2(
	function (maybeLanguage, string) {
		if (!maybeLanguage.$) {
			var language = maybeLanguage.a;
			return A2($justinmimbs$date$Date$formatWithLanguage, language, string);
		} else {
			return $justinmimbs$date$Date$format(string);
		}
	});
var $fabhof$elm_ui_datepicker$Internal$TestHelper$nextMonthAttrHtml = $fabhof$elm_ui_datepicker$Internal$TestHelper$testAttribute('nextMonth');
var $fabhof$elm_ui_datepicker$Internal$TestHelper$nextMonthAttr = $mdgriffith$elm_ui$Element$htmlAttribute($fabhof$elm_ui_datepicker$Internal$TestHelper$nextMonthAttrHtml);
var $fabhof$elm_ui_datepicker$Internal$TestHelper$previousMonthAttrHtml = $fabhof$elm_ui_datepicker$Internal$TestHelper$testAttribute('previousMonth');
var $fabhof$elm_ui_datepicker$Internal$TestHelper$previousMonthAttr = $mdgriffith$elm_ui$Element$htmlAttribute($fabhof$elm_ui_datepicker$Internal$TestHelper$previousMonthAttrHtml);
var $fabhof$elm_ui_datepicker$DatePicker$pickerHeader = function (_v0) {
	var visibleMonth = _v0._;
	var onChange = _v0.lI;
	var settings = _v0.fZ;
	return A2(
		$mdgriffith$elm_ui$Element$row,
		$fabhof$elm_ui_datepicker$DatePicker$extAttrs(settings.e_),
		_List_fromArray(
			[
				A2(
				$mdgriffith$elm_ui$Element$el,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$alignLeft,
						$mdgriffith$elm_ui$Element$pointer,
						$mdgriffith$elm_ui$Element$Events$onClick(
						onChange(
							$fabhof$elm_ui_datepicker$DatePicker$PickerChanged(
								$fabhof$elm_ui_datepicker$DatePicker$ChangeMonth(
									A3($justinmimbs$date$Date$add, 1, -1, visibleMonth))))),
						$fabhof$elm_ui_datepicker$Internal$TestHelper$previousMonthAttr
					]),
				$fabhof$elm_ui_datepicker$DatePicker$extEle(settings.fP)),
				A2(
				$mdgriffith$elm_ui$Element$el,
				_List_fromArray(
					[$mdgriffith$elm_ui$Element$centerX]),
				$mdgriffith$elm_ui$Element$text(
					A3($fabhof$elm_ui_datepicker$Internal$Date$formatMaybeLanguage, settings.de, 'MMMM yyyy', visibleMonth))),
				A2(
				$mdgriffith$elm_ui$Element$el,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$alignRight,
						$mdgriffith$elm_ui$Element$pointer,
						$mdgriffith$elm_ui$Element$Events$onClick(
						onChange(
							$fabhof$elm_ui_datepicker$DatePicker$PickerChanged(
								$fabhof$elm_ui_datepicker$DatePicker$ChangeMonth(
									A3($justinmimbs$date$Date$add, 1, 1, visibleMonth))))),
						$fabhof$elm_ui_datepicker$Internal$TestHelper$nextMonthAttr
					]),
				$fabhof$elm_ui_datepicker$DatePicker$extEle(settings.fv))
			]));
};
var $justinmimbs$date$Date$Day = 11;
var $justinmimbs$date$Date$Days = 3;
var $justinmimbs$date$Date$weekdayToNumber = function (wd) {
	switch (wd) {
		case 0:
			return 1;
		case 1:
			return 2;
		case 2:
			return 3;
		case 3:
			return 4;
		case 4:
			return 5;
		case 5:
			return 6;
		default:
			return 7;
	}
};
var $justinmimbs$date$Date$daysSincePreviousWeekday = F2(
	function (wd, date) {
		return A2(
			$elm$core$Basics$modBy,
			7,
			($justinmimbs$date$Date$weekdayNumber(date) + 7) - $justinmimbs$date$Date$weekdayToNumber(wd));
	});
var $justinmimbs$date$Date$firstOfMonth = F2(
	function (y, m) {
		return ($justinmimbs$date$Date$daysBeforeYear(y) + A2($justinmimbs$date$Date$daysBeforeMonth, y, m)) + 1;
	});
var $justinmimbs$date$Date$quarterToMonth = function (q) {
	return $justinmimbs$date$Date$numberToMonth((q * 3) - 2);
};
var $justinmimbs$date$Date$floor = F2(
	function (interval, date) {
		var rd = date;
		switch (interval) {
			case 0:
				return $justinmimbs$date$Date$firstOfYear(
					$justinmimbs$date$Date$year(date));
			case 1:
				return A2(
					$justinmimbs$date$Date$firstOfMonth,
					$justinmimbs$date$Date$year(date),
					$justinmimbs$date$Date$quarterToMonth(
						$justinmimbs$date$Date$quarter(date)));
			case 2:
				return A2(
					$justinmimbs$date$Date$firstOfMonth,
					$justinmimbs$date$Date$year(date),
					$justinmimbs$date$Date$month(date));
			case 3:
				return rd - A2($justinmimbs$date$Date$daysSincePreviousWeekday, 0, date);
			case 4:
				return rd - A2($justinmimbs$date$Date$daysSincePreviousWeekday, 0, date);
			case 5:
				return rd - A2($justinmimbs$date$Date$daysSincePreviousWeekday, 1, date);
			case 6:
				return rd - A2($justinmimbs$date$Date$daysSincePreviousWeekday, 2, date);
			case 7:
				return rd - A2($justinmimbs$date$Date$daysSincePreviousWeekday, 3, date);
			case 8:
				return rd - A2($justinmimbs$date$Date$daysSincePreviousWeekday, 4, date);
			case 9:
				return rd - A2($justinmimbs$date$Date$daysSincePreviousWeekday, 5, date);
			case 10:
				return rd - A2($justinmimbs$date$Date$daysSincePreviousWeekday, 6, date);
			default:
				return date;
		}
	});
var $fabhof$elm_ui_datepicker$Internal$Week$Week = $elm$core$Basics$identity;
var $fabhof$elm_ui_datepicker$Internal$Week$WeekModel = F7(
	function (day0, day1, day2, day3, day4, day5, day6) {
		return {cR: day0, cS: day1, cT: day2, cU: day3, cV: day4, cW: day5, cX: day6};
	});
var $fabhof$elm_ui_datepicker$Internal$Week$addNextDay = function (_v0) {
	var _default = _v0.a;
	var days = _v0.b;
	var fn = _v0.c;
	if (days.b) {
		var day = days.a;
		var rest = days.b;
		return _Utils_Tuple3(
			_default,
			rest,
			fn(day));
	} else {
		return _Utils_Tuple3(
			_default,
			_List_Nil,
			fn(_default));
	}
};
var $fabhof$elm_ui_datepicker$Internal$Week$fromListWithDefault = F2(
	function (_default, items) {
		var _v0 = $fabhof$elm_ui_datepicker$Internal$Week$addNextDay(
			$fabhof$elm_ui_datepicker$Internal$Week$addNextDay(
				$fabhof$elm_ui_datepicker$Internal$Week$addNextDay(
					$fabhof$elm_ui_datepicker$Internal$Week$addNextDay(
						$fabhof$elm_ui_datepicker$Internal$Week$addNextDay(
							$fabhof$elm_ui_datepicker$Internal$Week$addNextDay(
								$fabhof$elm_ui_datepicker$Internal$Week$addNextDay(
									_Utils_Tuple3(_default, items, $fabhof$elm_ui_datepicker$Internal$Week$WeekModel))))))));
		var week = _v0.c;
		return week;
	});
var $justinmimbs$date$Date$Weeks = 2;
var $justinmimbs$date$Date$Years = 0;
var $justinmimbs$date$Date$intervalToUnits = function (interval) {
	switch (interval) {
		case 0:
			return _Utils_Tuple2(1, 0);
		case 1:
			return _Utils_Tuple2(3, 1);
		case 2:
			return _Utils_Tuple2(1, 1);
		case 11:
			return _Utils_Tuple2(1, 3);
		default:
			var week = interval;
			return _Utils_Tuple2(1, 2);
	}
};
var $justinmimbs$date$Date$ceiling = F2(
	function (interval, date) {
		var floored = A2($justinmimbs$date$Date$floor, interval, date);
		if (_Utils_eq(date, floored)) {
			return date;
		} else {
			var _v0 = $justinmimbs$date$Date$intervalToUnits(interval);
			var n = _v0.a;
			var unit = _v0.b;
			return A3($justinmimbs$date$Date$add, unit, n, floored);
		}
	});
var $justinmimbs$date$Date$rangeHelp = F5(
	function (unit, step, until, revList, current) {
		rangeHelp:
		while (true) {
			if (_Utils_cmp(current, until) < 0) {
				var _v0 = A3($justinmimbs$date$Date$add, unit, step, current);
				var next = _v0;
				var $temp$unit = unit,
					$temp$step = step,
					$temp$until = until,
					$temp$revList = A2($elm$core$List$cons, current, revList),
					$temp$current = next;
				unit = $temp$unit;
				step = $temp$step;
				until = $temp$until;
				revList = $temp$revList;
				current = $temp$current;
				continue rangeHelp;
			} else {
				return $elm$core$List$reverse(revList);
			}
		}
	});
var $justinmimbs$date$Date$range = F4(
	function (interval, step, _v0, _v1) {
		var start = _v0;
		var until = _v1;
		var _v2 = $justinmimbs$date$Date$intervalToUnits(interval);
		var n = _v2.a;
		var unit = _v2.b;
		var _v3 = A2($justinmimbs$date$Date$ceiling, interval, start);
		var first = _v3;
		return (_Utils_cmp(first, until) < 0) ? A5(
			$justinmimbs$date$Date$rangeHelp,
			unit,
			A2($elm$core$Basics$max, 1, step) * n,
			until,
			_List_Nil,
			first) : _List_Nil;
	});
var $justinmimbs$date$Date$Friday = 8;
var $justinmimbs$date$Date$Monday = 4;
var $justinmimbs$date$Date$Saturday = 9;
var $justinmimbs$date$Date$Sunday = 10;
var $justinmimbs$date$Date$Thursday = 7;
var $justinmimbs$date$Date$Tuesday = 5;
var $justinmimbs$date$Date$Wednesday = 6;
var $fabhof$elm_ui_datepicker$Internal$Week$weekdayToInterval = function (weekday) {
	switch (weekday) {
		case 0:
			return 4;
		case 1:
			return 5;
		case 2:
			return 6;
		case 3:
			return 7;
		case 4:
			return 8;
		case 5:
			return 9;
		default:
			return 10;
	}
};
var $fabhof$elm_ui_datepicker$Internal$Week$calendarWeekDays = F2(
	function (firstDayOfWeek, maybeLanguage) {
		var startDay = A2(
			$justinmimbs$date$Date$floor,
			$fabhof$elm_ui_datepicker$Internal$Week$weekdayToInterval(firstDayOfWeek),
			A3($justinmimbs$date$Date$fromCalendarDate, 2020, 0, 1));
		var days = A4(
			$justinmimbs$date$Date$range,
			11,
			1,
			startDay,
			A3($justinmimbs$date$Date$add, 3, 7, startDay));
		return A2(
			$fabhof$elm_ui_datepicker$Internal$Week$fromListWithDefault,
			'X',
			A2(
				$elm$core$List$map,
				A2($fabhof$elm_ui_datepicker$Internal$Date$formatMaybeLanguage, maybeLanguage, 'EEEEEE'),
				days));
	});
var $fabhof$elm_ui_datepicker$DatePicker$DateChanged = function (a) {
	return {$: 0, a: a};
};
var $fabhof$elm_ui_datepicker$Internal$TestHelper$dayInMonthAttrHtml = $fabhof$elm_ui_datepicker$Internal$TestHelper$testAttribute('dayInMonth');
var $fabhof$elm_ui_datepicker$Internal$TestHelper$dayInMonthAttr = $mdgriffith$elm_ui$Element$htmlAttribute($fabhof$elm_ui_datepicker$Internal$TestHelper$dayInMonthAttrHtml);
var $fabhof$elm_ui_datepicker$Internal$TestHelper$selectedAttrHtml = $fabhof$elm_ui_datepicker$Internal$TestHelper$testAttribute('selected');
var $fabhof$elm_ui_datepicker$Internal$TestHelper$selectedAttr = $mdgriffith$elm_ui$Element$htmlAttribute($fabhof$elm_ui_datepicker$Internal$TestHelper$selectedAttrHtml);
var $fabhof$elm_ui_datepicker$Internal$TestHelper$todayAttrHtml = A2($elm$html$Html$Attributes$attribute, 'elm-test-alt', 'today');
var $fabhof$elm_ui_datepicker$Internal$TestHelper$todayAttr = $mdgriffith$elm_ui$Element$htmlAttribute($fabhof$elm_ui_datepicker$Internal$TestHelper$todayAttrHtml);
var $fabhof$elm_ui_datepicker$DatePicker$dayView = F2(
	function (config, day) {
		var picker = config.fL;
		var settings = config.fZ;
		var attributesForThisDay = $elm$core$List$concat(
			_List_fromArray(
				[
					$fabhof$elm_ui_datepicker$DatePicker$extAttrs(settings.eO),
					(!_Utils_eq(
					$justinmimbs$date$Date$month(config._),
					$justinmimbs$date$Date$month(day))) ? $fabhof$elm_ui_datepicker$DatePicker$extAttrs(settings.gs) : _List_fromArray(
					[$fabhof$elm_ui_datepicker$Internal$TestHelper$dayInMonthAttr]),
					_Utils_eq(picker.F, day) ? A2(
					$elm$core$List$cons,
					$fabhof$elm_ui_datepicker$Internal$TestHelper$todayAttr,
					$fabhof$elm_ui_datepicker$DatePicker$extAttrs(settings.gc)) : _List_Nil,
					_Utils_eq(
					config.a3,
					$elm$core$Maybe$Just(day)) ? A2(
					$elm$core$List$cons,
					$fabhof$elm_ui_datepicker$Internal$TestHelper$selectedAttr,
					$fabhof$elm_ui_datepicker$DatePicker$extAttrs(settings.fX)) : _List_Nil,
					settings.eR(day) ? $fabhof$elm_ui_datepicker$DatePicker$extAttrs(settings.eS) : _List_fromArray(
					[
						$mdgriffith$elm_ui$Element$Events$onClick(
						config.lI(
							$fabhof$elm_ui_datepicker$DatePicker$DateChanged(day))),
						$mdgriffith$elm_ui$Element$pointer
					])
				]));
		return A2(
			$mdgriffith$elm_ui$Element$el,
			attributesForThisDay,
			$mdgriffith$elm_ui$Element$text(
				A3($fabhof$elm_ui_datepicker$Internal$Date$formatMaybeLanguage, settings.de, 'dd', day)));
	});
var $fabhof$elm_ui_datepicker$Internal$Week$getDay = F2(
	function (index, _v0) {
		var week = _v0;
		switch (index) {
			case 0:
				return week.cR;
			case 1:
				return week.cS;
			case 2:
				return week.cT;
			case 3:
				return week.cU;
			case 4:
				return week.cV;
			case 5:
				return week.cW;
			default:
				return week.cX;
		}
	});
var $fabhof$elm_ui_datepicker$Internal$Week$Day0 = 0;
var $fabhof$elm_ui_datepicker$Internal$Week$Day1 = 1;
var $fabhof$elm_ui_datepicker$Internal$Week$Day2 = 2;
var $fabhof$elm_ui_datepicker$Internal$Week$Day3 = 3;
var $fabhof$elm_ui_datepicker$Internal$Week$Day4 = 4;
var $fabhof$elm_ui_datepicker$Internal$Week$Day5 = 5;
var $fabhof$elm_ui_datepicker$Internal$Week$Day6 = 6;
var $fabhof$elm_ui_datepicker$Internal$Week$indexedMap = F2(
	function (fn, _v0) {
		var week = _v0;
		return {
			cR: A2(fn, 0, week.cR),
			cS: A2(fn, 1, week.cS),
			cT: A2(fn, 2, week.cT),
			cU: A2(fn, 3, week.cU),
			cV: A2(fn, 4, week.cV),
			cW: A2(fn, 5, week.cW),
			cX: A2(fn, 6, week.cX)
		};
	});
var $fabhof$elm_ui_datepicker$Internal$Week$toList = function (_v0) {
	var week = _v0;
	return _List_fromArray(
		[week.cR, week.cS, week.cT, week.cU, week.cV, week.cW, week.cX]);
};
var $fabhof$elm_ui_datepicker$DatePicker$pickerColumns = function (config) {
	var weekdays = A2($fabhof$elm_ui_datepicker$Internal$Week$calendarWeekDays, config.fZ.d1, config.fZ.de);
	var toColumn = F2(
		function (index, weekday) {
			return {
				am: A2(
					$mdgriffith$elm_ui$Element$el,
					$fabhof$elm_ui_datepicker$DatePicker$extAttrs(config.fZ.gm),
					$mdgriffith$elm_ui$Element$text(weekday)),
				i_: function (week) {
					return A2(
						$fabhof$elm_ui_datepicker$DatePicker$dayView,
						config,
						A2($fabhof$elm_ui_datepicker$Internal$Week$getDay, index, week));
				},
				i5: $mdgriffith$elm_ui$Element$fill
			};
		});
	return $fabhof$elm_ui_datepicker$Internal$Week$toList(
		A2($fabhof$elm_ui_datepicker$Internal$Week$indexedMap, toColumn, weekdays));
};
var $mdgriffith$elm_ui$Element$InternalColumn = function (a) {
	return {$: 1, a: a};
};
var $mdgriffith$elm_ui$Internal$Model$GridPosition = function (a) {
	return {$: 9, a: a};
};
var $mdgriffith$elm_ui$Internal$Model$GridTemplateStyle = function (a) {
	return {$: 8, a: a};
};
var $elm$core$List$all = F2(
	function (isOkay, list) {
		return !A2(
			$elm$core$List$any,
			A2($elm$core$Basics$composeL, $elm$core$Basics$not, isOkay),
			list);
	});
var $mdgriffith$elm_ui$Internal$Model$AsGrid = 3;
var $mdgriffith$elm_ui$Internal$Model$asGrid = 3;
var $mdgriffith$elm_ui$Internal$Model$getSpacing = F2(
	function (attrs, _default) {
		return A2(
			$elm$core$Maybe$withDefault,
			_default,
			A3(
				$elm$core$List$foldr,
				F2(
					function (attr, acc) {
						if (!acc.$) {
							var x = acc.a;
							return $elm$core$Maybe$Just(x);
						} else {
							if ((attr.$ === 4) && (attr.b.$ === 5)) {
								var _v2 = attr.b;
								var x = _v2.b;
								var y = _v2.c;
								return $elm$core$Maybe$Just(
									_Utils_Tuple2(x, y));
							} else {
								return $elm$core$Maybe$Nothing;
							}
						}
					}),
				$elm$core$Maybe$Nothing,
				attrs));
	});
var $mdgriffith$elm_ui$Internal$Flag$gridPosition = $mdgriffith$elm_ui$Internal$Flag$flag(35);
var $mdgriffith$elm_ui$Internal$Flag$gridTemplate = $mdgriffith$elm_ui$Internal$Flag$flag(34);
var $elm$core$List$repeatHelp = F3(
	function (result, n, value) {
		repeatHelp:
		while (true) {
			if (n <= 0) {
				return result;
			} else {
				var $temp$result = A2($elm$core$List$cons, value, result),
					$temp$n = n - 1,
					$temp$value = value;
				result = $temp$result;
				n = $temp$n;
				value = $temp$value;
				continue repeatHelp;
			}
		}
	});
var $elm$core$List$repeat = F2(
	function (n, value) {
		return A3($elm$core$List$repeatHelp, _List_Nil, n, value);
	});
var $mdgriffith$elm_ui$Element$tableHelper = F2(
	function (attrs, config) {
		var onGrid = F3(
			function (rowLevel, columnLevel, elem) {
				return A4(
					$mdgriffith$elm_ui$Internal$Model$element,
					$mdgriffith$elm_ui$Internal$Model$asEl,
					$mdgriffith$elm_ui$Internal$Model$div,
					_List_fromArray(
						[
							A2(
							$mdgriffith$elm_ui$Internal$Model$StyleClass,
							$mdgriffith$elm_ui$Internal$Flag$gridPosition,
							$mdgriffith$elm_ui$Internal$Model$GridPosition(
								{gQ: columnLevel, hm: 1, iy: rowLevel, i5: 1}))
						]),
					$mdgriffith$elm_ui$Internal$Model$Unkeyed(
						_List_fromArray(
							[elem])));
			});
		var columnWidth = function (col) {
			if (!col.$) {
				var colConfig = col.a;
				return colConfig.i5;
			} else {
				var colConfig = col.a;
				return colConfig.i5;
			}
		};
		var columnHeader = function (col) {
			if (!col.$) {
				var colConfig = col.a;
				return colConfig.am;
			} else {
				var colConfig = col.a;
				return colConfig.am;
			}
		};
		var maybeHeaders = function (headers) {
			return A2(
				$elm$core$List$all,
				$elm$core$Basics$eq($mdgriffith$elm_ui$Internal$Model$Empty),
				headers) ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(
				A2(
					$elm$core$List$indexedMap,
					F2(
						function (col, header) {
							return A3(onGrid, 1, col + 1, header);
						}),
					headers));
		}(
			A2($elm$core$List$map, columnHeader, config.jY));
		var add = F3(
			function (cell, columnConfig, cursor) {
				if (!columnConfig.$) {
					var col = columnConfig.a;
					return _Utils_update(
						cursor,
						{
							aR: cursor.aR + 1,
							aB: A2(
								$elm$core$List$cons,
								A3(
									onGrid,
									cursor.iy,
									cursor.aR,
									A2(
										col.i_,
										_Utils_eq(maybeHeaders, $elm$core$Maybe$Nothing) ? (cursor.iy - 1) : (cursor.iy - 2),
										cell)),
								cursor.aB)
						});
				} else {
					var col = columnConfig.a;
					return {
						aR: cursor.aR + 1,
						aB: A2(
							$elm$core$List$cons,
							A3(
								onGrid,
								cursor.iy,
								cursor.aR,
								col.i_(cell)),
							cursor.aB),
						iy: cursor.iy
					};
				}
			});
		var build = F3(
			function (columns, rowData, cursor) {
				var newCursor = A3(
					$elm$core$List$foldl,
					add(rowData),
					cursor,
					columns);
				return {aR: 1, aB: newCursor.aB, iy: cursor.iy + 1};
			});
		var children = A3(
			$elm$core$List$foldl,
			build(config.jY),
			{
				aR: 1,
				aB: _List_Nil,
				iy: _Utils_eq(maybeHeaders, $elm$core$Maybe$Nothing) ? 1 : 2
			},
			config.eN);
		var _v0 = A2(
			$mdgriffith$elm_ui$Internal$Model$getSpacing,
			attrs,
			_Utils_Tuple2(0, 0));
		var sX = _v0.a;
		var sY = _v0.b;
		var template = A2(
			$mdgriffith$elm_ui$Internal$Model$StyleClass,
			$mdgriffith$elm_ui$Internal$Flag$gridTemplate,
			$mdgriffith$elm_ui$Internal$Model$GridTemplateStyle(
				{
					jY: A2($elm$core$List$map, columnWidth, config.jY),
					mh: A2(
						$elm$core$List$repeat,
						$elm$core$List$length(config.eN),
						$mdgriffith$elm_ui$Internal$Model$Content),
					mB: _Utils_Tuple2(
						$mdgriffith$elm_ui$Element$px(sX),
						$mdgriffith$elm_ui$Element$px(sY))
				}));
		return A4(
			$mdgriffith$elm_ui$Internal$Model$element,
			$mdgriffith$elm_ui$Internal$Model$asGrid,
			$mdgriffith$elm_ui$Internal$Model$div,
			A2(
				$elm$core$List$cons,
				$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
				A2($elm$core$List$cons, template, attrs)),
			$mdgriffith$elm_ui$Internal$Model$Unkeyed(
				function () {
					if (maybeHeaders.$ === 1) {
						return children.aB;
					} else {
						var renderedHeaders = maybeHeaders.a;
						return _Utils_ap(
							renderedHeaders,
							$elm$core$List$reverse(children.aB));
					}
				}()));
	});
var $mdgriffith$elm_ui$Element$table = F2(
	function (attrs, config) {
		return A2(
			$mdgriffith$elm_ui$Element$tableHelper,
			attrs,
			{
				jY: A2($elm$core$List$map, $mdgriffith$elm_ui$Element$InternalColumn, config.jY),
				eN: config.eN
			});
	});
var $fabhof$elm_ui_datepicker$Internal$TestHelper$tableAttrHtml = $fabhof$elm_ui_datepicker$Internal$TestHelper$testAttribute('table');
var $fabhof$elm_ui_datepicker$Internal$TestHelper$tableAttr = $mdgriffith$elm_ui$Element$htmlAttribute($fabhof$elm_ui_datepicker$Internal$TestHelper$tableAttrHtml);
var $fabhof$elm_ui_datepicker$Internal$Week$weeksInMonth = F2(
	function (month, firstDayOfWeek) {
		var weekdayInterval = $fabhof$elm_ui_datepicker$Internal$Week$weekdayToInterval(firstDayOfWeek);
		var weekDays = function (startDay) {
			return A4(
				$justinmimbs$date$Date$range,
				11,
				1,
				startDay,
				A3($justinmimbs$date$Date$add, 3, 7, startDay));
		};
		var toWeek = function (list) {
			return A2(
				$fabhof$elm_ui_datepicker$Internal$Week$fromListWithDefault,
				A2($justinmimbs$date$Date$fromOrdinalDate, 2020, 1),
				list);
		};
		var firstOfMonth = A3(
			$justinmimbs$date$Date$fromCalendarDate,
			$justinmimbs$date$Date$year(month),
			$justinmimbs$date$Date$month(month),
			1);
		var start = A2($justinmimbs$date$Date$floor, weekdayInterval, firstOfMonth);
		var end = A2(
			$justinmimbs$date$Date$ceiling,
			weekdayInterval,
			A3($justinmimbs$date$Date$add, 1, 1, firstOfMonth));
		return A2(
			$elm$core$List$map,
			A2($elm$core$Basics$composeR, weekDays, toWeek),
			A4($justinmimbs$date$Date$range, 11, 7, start, end));
	});
var $fabhof$elm_ui_datepicker$DatePicker$pickerTable = function (config) {
	var settings = config.fZ;
	return A2(
		$mdgriffith$elm_ui$Element$table,
		A2(
			$elm$core$List$cons,
			$fabhof$elm_ui_datepicker$Internal$TestHelper$tableAttr,
			$fabhof$elm_ui_datepicker$DatePicker$extAttrs(settings.f8)),
		{
			jY: $fabhof$elm_ui_datepicker$DatePicker$pickerColumns(config),
			eN: A2($fabhof$elm_ui_datepicker$Internal$Week$weeksInMonth, config._, config.fZ.d1)
		});
};
var $fabhof$elm_ui_datepicker$DatePicker$NothingToDo = {$: 3};
var $fabhof$elm_ui_datepicker$DatePicker$preventDefaultOnMouseDown = function (config) {
	return $mdgriffith$elm_ui$Element$htmlAttribute(
		A2(
			$elm$html$Html$Events$preventDefaultOn,
			'mousedown',
			$elm$json$Json$Decode$succeed(
				_Utils_Tuple2(
					config.lI(
						$fabhof$elm_ui_datepicker$DatePicker$PickerChanged($fabhof$elm_ui_datepicker$DatePicker$NothingToDo)),
					true))));
};
var $fabhof$elm_ui_datepicker$DatePicker$pickerView = function (config) {
	var settings = config.fZ;
	return _List_fromArray(
		[
			$mdgriffith$elm_ui$Element$below(
			A2(
				$mdgriffith$elm_ui$Element$column,
				A2(
					$elm$core$List$cons,
					$fabhof$elm_ui_datepicker$Internal$TestHelper$calendarAttr,
					A2(
						$elm$core$List$cons,
						$fabhof$elm_ui_datepicker$DatePicker$preventDefaultOnMouseDown(config),
						$fabhof$elm_ui_datepicker$DatePicker$extAttrs(settings.fM))),
				_List_fromArray(
					[
						$fabhof$elm_ui_datepicker$DatePicker$pickerHeader(config),
						$fabhof$elm_ui_datepicker$DatePicker$pickerTable(config)
					])))
		]);
};
var $fabhof$elm_ui_datepicker$DatePicker$input = F2(
	function (attributes, inputConfig) {
		var settings = inputConfig.fZ;
		var model = inputConfig.fs;
		var label = inputConfig.hL;
		var placeholder = inputConfig.fO;
		var selected = inputConfig.a3;
		var onChange = inputConfig.lI;
		var _v0 = model;
		var picker = _v0;
		var config = {hL: label, lI: onChange, fL: picker, fO: placeholder, a3: selected, fZ: settings, mR: inputConfig.mR, _: picker._};
		var inputAttributes = picker.lP ? attributes : _Utils_ap(
			attributes,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$Events$onClick(
					onChange(
						$fabhof$elm_ui_datepicker$DatePicker$PickerChanged($fabhof$elm_ui_datepicker$DatePicker$Open)))
				]));
		var pickerEl = picker.lP ? $fabhof$elm_ui_datepicker$DatePicker$pickerView(config) : _List_Nil;
		return A2(
			$mdgriffith$elm_ui$Element$Input$text,
			_Utils_ap(
				inputAttributes,
				_Utils_ap(
					pickerEl,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$Events$onFocus(
							onChange(
								$fabhof$elm_ui_datepicker$DatePicker$PickerChanged($fabhof$elm_ui_datepicker$DatePicker$Open))),
							$mdgriffith$elm_ui$Element$Events$onLoseFocus(
							onChange(
								$fabhof$elm_ui_datepicker$DatePicker$PickerChanged($fabhof$elm_ui_datepicker$DatePicker$Close))),
							$fabhof$elm_ui_datepicker$Internal$TestHelper$inputAttr
						]))),
			{
				hL: label,
				lI: A2($elm$core$Basics$composeL, onChange, $fabhof$elm_ui_datepicker$DatePicker$TextChanged),
				fO: placeholder,
				mR: config.mR
			});
	});
var $author$project$Page$Organize$DetainerWarrantCreation$viewCourtDate = F2(
	function (options, form) {
		var hasChanges = A2(
			$elm$core$Maybe$withDefault,
			false,
			A2(
				$elm$core$Maybe$map,
				A2(
					$elm$core$Basics$composeL,
					$elm$core$Basics$neq(form.bj.gZ),
					function ($) {
						return $.bj;
					}),
				options.b)) || (_Utils_eq(options.b, $elm$core$Maybe$Nothing) && (form.bj.j9 !== ''));
		return A2(
			$mdgriffith$elm_ui$Element$column,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
				]),
			_List_fromArray(
				[
					$author$project$Page$Organize$DetainerWarrantCreation$viewField(
					{
						d: _List_fromArray(
							[
								A2(
								$fabhof$elm_ui_datepicker$DatePicker$input,
								A3(
									$author$project$Page$Organize$DetainerWarrantCreation$withValidation,
									$author$project$Page$Organize$DetainerWarrantCreation$CourtDate,
									options.bx,
									A2(
										$author$project$Page$Organize$DetainerWarrantCreation$withChanges,
										hasChanges,
										_List_fromArray(
											[$mdgriffith$elm_ui$Element$centerX, $mdgriffith$elm_ui$Element$centerY]))),
								{
									hL: A2(
										$mdgriffith$elm_ui$Element$Input$labelAbove,
										_List_Nil,
										$mdgriffith$elm_ui$Element$text('Court Date')),
									fs: form.bj.l2,
									lI: $author$project$Page$Organize$DetainerWarrantCreation$ChangedCourtDatePicker,
									fO: $elm$core$Maybe$Just(
										A2(
											$mdgriffith$elm_ui$Element$Input$placeholder,
											_List_Nil,
											$mdgriffith$elm_ui$Element$text(
												A2(
													$elm$core$Maybe$withDefault,
													'',
													A2($elm$core$Maybe$map, $justinmimbs$date$Date$toIsoString, options.F))))),
									a3: form.bj.gZ,
									fZ: $fabhof$elm_ui_datepicker$DatePicker$defaultSettings,
									mR: form.bj.j9
								})
							]),
						e: options.a,
						d_: 'The date set for deliberating the judgement of the eviction in court.',
						a: $elm$core$Maybe$Just($author$project$Page$Organize$DetainerWarrantCreation$CourtDateInfo)
					})
				]));
	});
var $author$project$Page$Organize$DetainerWarrantCreation$ChangedCourtroomSearchBox = function (a) {
	return {$: 11, a: a};
};
var $author$project$Page$Organize$DetainerWarrantCreation$CourtroomInfo = {$: 7};
var $russelldavies$elm_ui_searchbox$SearchBox$ChangedIndex = function (a) {
	return {$: 2, a: a};
};
var $russelldavies$elm_ui_searchbox$SearchBox$GotFocus = {$: 0};
var $russelldavies$elm_ui_searchbox$SearchBox$LostFocus = {$: 1};
var $russelldavies$elm_ui_searchbox$SearchBox$SearchBoxChanged = function (a) {
	return {$: 2, a: a};
};
var $russelldavies$elm_ui_searchbox$SearchBox$SelectionChanged = function (a) {
	return {$: 0, a: a};
};
var $russelldavies$elm_ui_searchbox$SearchBox$TextChanged = function (a) {
	return {$: 1, a: a};
};
var $elm$html$Html$Attributes$autocomplete = function (bool) {
	return A2(
		$elm$html$Html$Attributes$stringProperty,
		'autocomplete',
		bool ? 'on' : 'off');
};
var $russelldavies$elm_ui_searchbox$SearchBox$Icons$asElement = function (icon) {
	return A2(
		$mdgriffith$elm_ui$Element$el,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$alignRight,
				$mdgriffith$elm_ui$Element$centerY,
				$mdgriffith$elm_ui$Element$padding(5)
			]),
		$mdgriffith$elm_ui$Element$html(icon));
};
var $russelldavies$elm_ui_searchbox$SearchBox$Icons$svgFeatherIcon = function (className) {
	return $elm$svg$Svg$svg(
		_List_fromArray(
			[
				$elm$svg$Svg$Attributes$class('feather feather-' + className),
				$elm$svg$Svg$Attributes$fill('none'),
				$elm$svg$Svg$Attributes$height('24'),
				$elm$svg$Svg$Attributes$stroke('currentColor'),
				$elm$svg$Svg$Attributes$strokeLinecap('round'),
				$elm$svg$Svg$Attributes$strokeLinejoin('round'),
				$elm$svg$Svg$Attributes$strokeWidth('2'),
				$elm$svg$Svg$Attributes$viewBox('0 0 24 24'),
				$elm$svg$Svg$Attributes$width('24')
			]));
};
var $russelldavies$elm_ui_searchbox$SearchBox$Icons$check = $russelldavies$elm_ui_searchbox$SearchBox$Icons$asElement(
	A2(
		$russelldavies$elm_ui_searchbox$SearchBox$Icons$svgFeatherIcon,
		'check',
		_List_fromArray(
			[
				A2(
				$elm$svg$Svg$polyline,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$points('20 6 9 17 4 12')
					]),
				_List_Nil)
			])));
var $russelldavies$elm_ui_searchbox$SearchBox$Icons$loader = $russelldavies$elm_ui_searchbox$SearchBox$Icons$asElement(
	A2(
		$russelldavies$elm_ui_searchbox$SearchBox$Icons$svgFeatherIcon,
		'loader',
		_List_fromArray(
			[
				A2(
				$elm$svg$Svg$line,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$x1('12'),
						$elm$svg$Svg$Attributes$y1('2'),
						$elm$svg$Svg$Attributes$x2('12'),
						$elm$svg$Svg$Attributes$y2('6')
					]),
				_List_Nil),
				A2(
				$elm$svg$Svg$line,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$x1('12'),
						$elm$svg$Svg$Attributes$y1('18'),
						$elm$svg$Svg$Attributes$x2('12'),
						$elm$svg$Svg$Attributes$y2('22')
					]),
				_List_Nil),
				A2(
				$elm$svg$Svg$line,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$x1('4.93'),
						$elm$svg$Svg$Attributes$y1('4.93'),
						$elm$svg$Svg$Attributes$x2('7.76'),
						$elm$svg$Svg$Attributes$y2('7.76')
					]),
				_List_Nil),
				A2(
				$elm$svg$Svg$line,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$x1('16.24'),
						$elm$svg$Svg$Attributes$y1('16.24'),
						$elm$svg$Svg$Attributes$x2('19.07'),
						$elm$svg$Svg$Attributes$y2('19.07')
					]),
				_List_Nil),
				A2(
				$elm$svg$Svg$line,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$x1('2'),
						$elm$svg$Svg$Attributes$y1('12'),
						$elm$svg$Svg$Attributes$x2('6'),
						$elm$svg$Svg$Attributes$y2('12')
					]),
				_List_Nil),
				A2(
				$elm$svg$Svg$line,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$x1('18'),
						$elm$svg$Svg$Attributes$y1('12'),
						$elm$svg$Svg$Attributes$x2('22'),
						$elm$svg$Svg$Attributes$y2('12')
					]),
				_List_Nil),
				A2(
				$elm$svg$Svg$line,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$x1('4.93'),
						$elm$svg$Svg$Attributes$y1('19.07'),
						$elm$svg$Svg$Attributes$x2('7.76'),
						$elm$svg$Svg$Attributes$y2('16.24')
					]),
				_List_Nil),
				A2(
				$elm$svg$Svg$line,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$x1('16.24'),
						$elm$svg$Svg$Attributes$y1('7.76'),
						$elm$svg$Svg$Attributes$x2('19.07'),
						$elm$svg$Svg$Attributes$y2('4.93')
					]),
				_List_Nil)
			])));
var $russelldavies$elm_ui_searchbox$SearchBox$onKeyDown = F3(
	function (msgs, selectionIndex, options) {
		var newIndex = function (operator) {
			return $elm$json$Json$Decode$succeed(
				msgs.eJ(
					A2(
						$elm$core$Basics$modBy,
						$elm$core$List$length(options),
						A2(operator, selectionIndex, 1))));
		};
		var isArrowKey = function (keyName) {
			switch (keyName) {
				case 'ArrowDown':
					return newIndex($elm$core$Basics$add);
				case 'ArrowUp':
					return newIndex($elm$core$Basics$sub);
				case 'Enter':
					return A2(
						$elm$core$Maybe$withDefault,
						$elm$json$Json$Decode$fail('invalid index'),
						A2(
							$elm$core$Maybe$map,
							A2($elm$core$Basics$composeR, msgs.eK, $elm$json$Json$Decode$succeed),
							$elm$core$List$head(
								A2($elm$core$List$drop, selectionIndex, options))));
				default:
					return $elm$json$Json$Decode$fail('key not handled');
			}
		};
		return $mdgriffith$elm_ui$Element$htmlAttribute(
			A2(
				$elm$html$Html$Events$on,
				'keydown',
				A2(
					$elm$json$Json$Decode$andThen,
					isArrowKey,
					A2($elm$json$Json$Decode$field, 'key', $elm$json$Json$Decode$string))));
	});
var $russelldavies$elm_ui_searchbox$SearchBox$colors = {
	jB: A3($mdgriffith$elm_ui$Element$rgb, 0, 0, 0),
	eG: A3($mdgriffith$elm_ui$Element$rgb, 0, 0, 0.8),
	j8: A3($mdgriffith$elm_ui$Element$rgb, 0, 0, 0.9),
	kK: A3($mdgriffith$elm_ui$Element$rgb, 0.9, 0.9, 0.9),
	fR: A3($mdgriffith$elm_ui$Element$rgb, 0.8, 0, 0),
	a3: A3($mdgriffith$elm_ui$Element$rgb255, 245, 250, 253),
	go: A3($mdgriffith$elm_ui$Element$rgb, 1, 1, 1)
};
var $elm$html$Html$Events$onMouseDown = function (msg) {
	return A2(
		$elm$html$Html$Events$on,
		'mousedown',
		$elm$json$Json$Decode$succeed(msg));
};
var $mdgriffith$elm_ui$Element$Events$onMouseDown = A2($elm$core$Basics$composeL, $mdgriffith$elm_ui$Internal$Model$Attr, $elm$html$Html$Events$onMouseDown);
var $mdgriffith$elm_ui$Element$scrollbars = A2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$overflow, $mdgriffith$elm_ui$Internal$Style$classes.mn);
var $russelldavies$elm_ui_searchbox$SearchBox$optionsList = F4(
	function (msgs, toLabel, selectionIndex, options) {
		var optionItem = F2(
			function (index, option) {
				return A2(
					$mdgriffith$elm_ui$Element$el,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
							$mdgriffith$elm_ui$Element$padding(5),
							$mdgriffith$elm_ui$Element$pointer,
							$mdgriffith$elm_ui$Element$Background$color(
							_Utils_eq(index, selectionIndex) ? $russelldavies$elm_ui_searchbox$SearchBox$colors.a3 : $russelldavies$elm_ui_searchbox$SearchBox$colors.go),
							$mdgriffith$elm_ui$Element$Events$onMouseDown(
							msgs.eK(option)),
							$mdgriffith$elm_ui$Element$Events$onMouseEnter(
							msgs.eJ(index))
						]),
					$mdgriffith$elm_ui$Element$text(
						toLabel(option)));
			});
		return A2(
			$mdgriffith$elm_ui$Element$column,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$Background$color($russelldavies$elm_ui_searchbox$SearchBox$colors.go),
					$mdgriffith$elm_ui$Element$Border$width(1),
					$mdgriffith$elm_ui$Element$Border$color(
					A4($mdgriffith$elm_ui$Element$rgba255, 0, 0, 0, 0.15)),
					$mdgriffith$elm_ui$Element$Border$shadow(
					{
						jD: 12,
						eL: A4($mdgriffith$elm_ui$Element$rgba255, 0, 0, 0, 0.175),
						lG: _Utils_Tuple2(0, 6),
						f$: 1
					}),
					$mdgriffith$elm_ui$Element$height(
					A2($mdgriffith$elm_ui$Element$minimum, 250, $mdgriffith$elm_ui$Element$shrink)),
					$mdgriffith$elm_ui$Element$width(
					A2($mdgriffith$elm_ui$Element$maximum, 500, $mdgriffith$elm_ui$Element$fill)),
					$mdgriffith$elm_ui$Element$clip,
					$mdgriffith$elm_ui$Element$scrollbars
				]),
			$elm$core$List$isEmpty(options) ? _List_fromArray(
				[
					A2(
					$mdgriffith$elm_ui$Element$el,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$padding(5)
						]),
					$mdgriffith$elm_ui$Element$text('No matches'))
				]) : A2($elm$core$List$indexedMap, optionItem, options));
	});
var $russelldavies$elm_ui_searchbox$SearchBox$Icons$search = $russelldavies$elm_ui_searchbox$SearchBox$Icons$asElement(
	A2(
		$russelldavies$elm_ui_searchbox$SearchBox$Icons$svgFeatherIcon,
		'search',
		_List_fromArray(
			[
				A2(
				$elm$svg$Svg$circle,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$cx('11'),
						$elm$svg$Svg$Attributes$cy('11'),
						$elm$svg$Svg$Attributes$r('8')
					]),
				_List_Nil),
				A2(
				$elm$svg$Svg$line,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$x1('21'),
						$elm$svg$Svg$Attributes$y1('21'),
						$elm$svg$Svg$Attributes$x2('16.65'),
						$elm$svg$Svg$Attributes$y2('16.65')
					]),
				_List_Nil)
			])));
var $russelldavies$elm_ui_searchbox$SearchBox$input = F2(
	function (userAttributes, config) {
		var msgs = {
			eJ: A2(
				$elm$core$Basics$composeL,
				A2($elm$core$Basics$composeL, config.lI, $russelldavies$elm_ui_searchbox$SearchBox$SearchBoxChanged),
				$russelldavies$elm_ui_searchbox$SearchBox$ChangedIndex),
			eK: A2($elm$core$Basics$composeR, $russelldavies$elm_ui_searchbox$SearchBox$SelectionChanged, config.lI)
		};
		var icon = (!_Utils_eq(config.a3, $elm$core$Maybe$Nothing)) ? $russelldavies$elm_ui_searchbox$SearchBox$Icons$check : (config.dv.dg ? $russelldavies$elm_ui_searchbox$SearchBox$Icons$loader : $russelldavies$elm_ui_searchbox$SearchBox$Icons$search);
		var filteredOptions = A2(
			$elm$core$List$filter,
			config.c5(config.mR),
			A2($elm$core$Maybe$withDefault, _List_Nil, config.lU));
		var optionsBox = (config.dv.da && (_Utils_eq(config.a3, $elm$core$Maybe$Nothing) && (!_Utils_eq(config.lU, $elm$core$Maybe$Nothing)))) ? A4($russelldavies$elm_ui_searchbox$SearchBox$optionsList, msgs, config.dB, config.dv.cr, filteredOptions) : $mdgriffith$elm_ui$Element$none;
		var defaultAttributes = _List_fromArray(
			[
				$mdgriffith$elm_ui$Element$Events$onFocus(
				config.lI(
					$russelldavies$elm_ui_searchbox$SearchBox$SearchBoxChanged($russelldavies$elm_ui_searchbox$SearchBox$GotFocus))),
				$mdgriffith$elm_ui$Element$Events$onLoseFocus(
				config.lI(
					$russelldavies$elm_ui_searchbox$SearchBox$SearchBoxChanged($russelldavies$elm_ui_searchbox$SearchBox$LostFocus))),
				A3($russelldavies$elm_ui_searchbox$SearchBox$onKeyDown, msgs, config.dv.cr, filteredOptions),
				$mdgriffith$elm_ui$Element$htmlAttribute(
				$elm$html$Html$Attributes$autocomplete(false)),
				$mdgriffith$elm_ui$Element$below(optionsBox),
				$mdgriffith$elm_ui$Element$inFront(icon)
			]);
		return A2(
			$mdgriffith$elm_ui$Element$Input$text,
			_Utils_ap(defaultAttributes, userAttributes),
			{
				hL: config.hL,
				lI: _Utils_eq(config.a3, $elm$core$Maybe$Nothing) ? A2($elm$core$Basics$composeL, config.lI, $russelldavies$elm_ui_searchbox$SearchBox$TextChanged) : A2(
					$elm$core$Basics$composeL,
					config.lI,
					$elm$core$Basics$always(
						$russelldavies$elm_ui_searchbox$SearchBox$TextChanged(config.mR))),
				fO: config.fO,
				mR: A2(
					$elm$core$Maybe$withDefault,
					config.mR,
					A2($elm$core$Maybe$map, config.dB, config.a3))
			});
	});
var $author$project$Page$Organize$DetainerWarrantCreation$searchBox = function (attrs) {
	return $russelldavies$elm_ui_searchbox$SearchBox$input(
		_Utils_ap(
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$Border$color($author$project$Palette$grayLight)
				]),
			attrs));
};
var $author$project$Page$Organize$DetainerWarrantCreation$viewCourtroom = F2(
	function (options, form) {
		var hasChanges = A2(
			$elm$core$Maybe$withDefault,
			false,
			A2(
				$elm$core$Maybe$map,
				A2(
					$elm$core$Basics$composeL,
					$elm$core$Basics$neq(form.gW.a4),
					function ($) {
						return $.gW;
					}),
				options.b)) || (_Utils_eq(options.b, $elm$core$Maybe$Nothing) && (form.gW.mR !== ''));
		return A2(
			$mdgriffith$elm_ui$Element$column,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
				]),
			_List_fromArray(
				[
					$author$project$Page$Organize$DetainerWarrantCreation$viewField(
					{
						d: _List_fromArray(
							[
								A2(
								$author$project$Page$Organize$DetainerWarrantCreation$searchBox,
								A2($author$project$Page$Organize$DetainerWarrantCreation$withChanges, hasChanges, _List_Nil),
								{
									c5: F2(
										function (query, option) {
											return true;
										}),
									hL: A2(
										$mdgriffith$elm_ui$Element$Input$labelAbove,
										_List_Nil,
										$mdgriffith$elm_ui$Element$text('Courtroom')),
									lI: $author$project$Page$Organize$DetainerWarrantCreation$ChangedCourtroomSearchBox,
									lU: $elm$core$Maybe$Just(
										A2(
											$elm$core$List$cons,
											{hs: -1, h1: form.gW.mR},
											options.bk)),
									fO: $elm$core$Maybe$Just(
										A2(
											$mdgriffith$elm_ui$Element$Input$placeholder,
											_List_Nil,
											$mdgriffith$elm_ui$Element$text('Search for courtroom'))),
									a3: form.gW.a4,
									dv: form.gW.ms,
									mR: form.gW.mR,
									dB: function ($) {
										return $.h1;
									}
								})
							]),
						e: options.a,
						d_: 'The court room where eviction proceedings will occur.',
						a: $elm$core$Maybe$Just($author$project$Page$Organize$DetainerWarrantCreation$CourtroomInfo)
					})
				]));
	});
var $author$project$Page$Organize$DetainerWarrantCreation$AddDefendant = {$: 31};
var $author$project$Palette$grayLightest = A3($mdgriffith$elm_ui$Element$rgb255, 243, 243, 243);
var $mdgriffith$elm_ui$Element$Border$innerShadow = function (almostShade) {
	var shade = {jD: almostShade.jD, eL: almostShade.eL, hy: true, lG: almostShade.lG, f$: almostShade.f$};
	return A2(
		$mdgriffith$elm_ui$Internal$Model$StyleClass,
		$mdgriffith$elm_ui$Internal$Flag$shadows,
		A3(
			$mdgriffith$elm_ui$Internal$Model$Single,
			$mdgriffith$elm_ui$Internal$Model$boxShadowClass(shade),
			'box-shadow',
			$mdgriffith$elm_ui$Internal$Model$formatBoxShadow(shade)));
};
var $mdgriffith$elm_ui$Element$Border$innerGlow = F2(
	function (clr, size) {
		return $mdgriffith$elm_ui$Element$Border$innerShadow(
			{
				jD: size * 2,
				eL: clr,
				lG: _Utils_Tuple2(0, 0),
				f$: size
			});
	});
var $author$project$Page$Organize$DetainerWarrantCreation$ChangedFirstName = F2(
	function (a, b) {
		return {$: 24, a: a, b: b};
	});
var $author$project$Page$Organize$DetainerWarrantCreation$viewFirstName = F3(
	function (options, index, defendant) {
		var hasChanges = A2(
			$elm$core$Maybe$withDefault,
			false,
			A2(
				$elm$core$Maybe$map,
				A2(
					$elm$core$Basics$composeL,
					$elm$core$Basics$neq(defendant.kE),
					function ($) {
						return $.kE;
					}),
				A2(
					$elm$core$Maybe$andThen,
					A2(
						$elm$core$Basics$composeL,
						$elm$core$List$head,
						function ($) {
							return $.g0;
						}),
					options.b))) || (_Utils_eq(options.b, $elm$core$Maybe$Nothing) && (defendant.kE !== ''));
		return A2(
			$mdgriffith$elm_ui$Element$column,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
				]),
			_List_fromArray(
				[
					$author$project$Page$Organize$DetainerWarrantCreation$viewField(
					{
						d: _List_fromArray(
							[
								A2(
								$author$project$Page$Organize$DetainerWarrantCreation$textInput,
								A3(
									$author$project$Page$Organize$DetainerWarrantCreation$withValidation,
									$author$project$Page$Organize$DetainerWarrantCreation$DefendantFirstName(index),
									options.bx,
									A2($author$project$Page$Organize$DetainerWarrantCreation$withChanges, hasChanges, _List_Nil)),
								{
									hL: A2($author$project$Page$Organize$DetainerWarrantCreation$requiredLabel, $mdgriffith$elm_ui$Element$Input$labelAbove, 'First Name'),
									lI: $author$project$Page$Organize$DetainerWarrantCreation$ChangedFirstName(index),
									fO: $elm$core$Maybe$Nothing,
									mR: defendant.kE
								})
							]),
						e: $elm$core$Maybe$Nothing,
						d_: '',
						a: $elm$core$Maybe$Nothing
					})
				]));
	});
var $author$project$Page$Organize$DetainerWarrantCreation$ChangedLastName = F2(
	function (a, b) {
		return {$: 26, a: a, b: b};
	});
var $author$project$Page$Organize$DetainerWarrantCreation$viewLastName = F3(
	function (options, index, defendant) {
		var hasChanges = A2(
			$elm$core$Maybe$withDefault,
			false,
			A2(
				$elm$core$Maybe$map,
				A2(
					$elm$core$Basics$composeL,
					$elm$core$Basics$neq(defendant.lh),
					function ($) {
						return $.lh;
					}),
				A2(
					$elm$core$Maybe$andThen,
					A2(
						$elm$core$Basics$composeL,
						$elm$core$List$head,
						function ($) {
							return $.g0;
						}),
					options.b))) || (_Utils_eq(options.b, $elm$core$Maybe$Nothing) && (defendant.lh !== ''));
		return A2(
			$mdgriffith$elm_ui$Element$column,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
				]),
			_List_fromArray(
				[
					$author$project$Page$Organize$DetainerWarrantCreation$viewField(
					{
						d: _List_fromArray(
							[
								A2(
								$author$project$Page$Organize$DetainerWarrantCreation$textInput,
								A3(
									$author$project$Page$Organize$DetainerWarrantCreation$withValidation,
									$author$project$Page$Organize$DetainerWarrantCreation$DefendantLastName(index),
									options.bx,
									A2($author$project$Page$Organize$DetainerWarrantCreation$withChanges, hasChanges, _List_Nil)),
								{
									hL: A2($author$project$Page$Organize$DetainerWarrantCreation$requiredLabel, $mdgriffith$elm_ui$Element$Input$labelAbove, 'Last Name'),
									lI: $author$project$Page$Organize$DetainerWarrantCreation$ChangedLastName(index),
									fO: $elm$core$Maybe$Nothing,
									mR: defendant.lh
								})
							]),
						e: $elm$core$Maybe$Nothing,
						d_: '',
						a: $elm$core$Maybe$Nothing
					})
				]));
	});
var $author$project$Page$Organize$DetainerWarrantCreation$ChangedMiddleName = F2(
	function (a, b) {
		return {$: 25, a: a, b: b};
	});
var $author$project$Page$Organize$DetainerWarrantCreation$viewMiddleName = F3(
	function (options, index, defendant) {
		var hasChanges = A2(
			$elm$core$Maybe$withDefault,
			false,
			A2(
				$elm$core$Maybe$map,
				$elm$core$Basics$neq(defendant.ls),
				A2(
					$elm$core$Maybe$andThen,
					function ($) {
						return $.ls;
					},
					A2(
						$elm$core$Maybe$andThen,
						A2(
							$elm$core$Basics$composeL,
							$elm$core$List$head,
							function ($) {
								return $.g0;
							}),
						options.b)))) || (_Utils_eq(options.b, $elm$core$Maybe$Nothing) && (defendant.ls !== ''));
		return A2(
			$mdgriffith$elm_ui$Element$column,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
				]),
			_List_fromArray(
				[
					$author$project$Page$Organize$DetainerWarrantCreation$viewField(
					{
						d: _List_fromArray(
							[
								A2(
								$author$project$Page$Organize$DetainerWarrantCreation$textInput,
								A2($author$project$Page$Organize$DetainerWarrantCreation$withChanges, hasChanges, _List_Nil),
								{
									hL: A2(
										$mdgriffith$elm_ui$Element$Input$labelAbove,
										_List_Nil,
										$mdgriffith$elm_ui$Element$text('Middle Name')),
									lI: $author$project$Page$Organize$DetainerWarrantCreation$ChangedMiddleName(index),
									fO: $elm$core$Maybe$Nothing,
									mR: defendant.ls
								})
							]),
						e: $elm$core$Maybe$Nothing,
						d_: '',
						a: $elm$core$Maybe$Nothing
					})
				]));
	});
var $author$project$Page$Organize$DetainerWarrantCreation$AddPhone = function (a) {
	return {$: 29, a: a};
};
var $author$project$Page$Organize$DetainerWarrantCreation$ChangedPotentialPhones = F3(
	function (a, b, c) {
		return {$: 28, a: a, b: b, c: c};
	});
var $author$project$Page$Organize$DetainerWarrantCreation$PotentialPhoneNumbersInfo = function (a) {
	return {$: 15, a: a};
};
var $author$project$Page$Organize$DetainerWarrantCreation$RemovePhone = F2(
	function (a, b) {
		return {$: 30, a: a, b: b};
	});
var $mdgriffith$elm_ui$Element$Input$OnLeft = 1;
var $mdgriffith$elm_ui$Element$Input$labelLeft = $mdgriffith$elm_ui$Element$Input$Label(1);
var $feathericons$elm_feather$FeatherIcons$plus = A2(
	$feathericons$elm_feather$FeatherIcons$makeBuilder,
	'plus',
	_List_fromArray(
		[
			A2(
			$elm$svg$Svg$line,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$x1('12'),
					$elm$svg$Svg$Attributes$y1('5'),
					$elm$svg$Svg$Attributes$x2('12'),
					$elm$svg$Svg$Attributes$y2('19')
				]),
			_List_Nil),
			A2(
			$elm$svg$Svg$line,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$x1('5'),
					$elm$svg$Svg$Attributes$y1('12'),
					$elm$svg$Svg$Attributes$x2('19'),
					$elm$svg$Svg$Attributes$y2('12')
				]),
			_List_Nil)
		]));
var $feathericons$elm_feather$FeatherIcons$x = A2(
	$feathericons$elm_feather$FeatherIcons$makeBuilder,
	'x',
	_List_fromArray(
		[
			A2(
			$elm$svg$Svg$line,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$x1('18'),
					$elm$svg$Svg$Attributes$y1('6'),
					$elm$svg$Svg$Attributes$x2('6'),
					$elm$svg$Svg$Attributes$y2('18')
				]),
			_List_Nil),
			A2(
			$elm$svg$Svg$line,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$x1('6'),
					$elm$svg$Svg$Attributes$y1('6'),
					$elm$svg$Svg$Attributes$x2('18'),
					$elm$svg$Svg$Attributes$y2('18')
				]),
			_List_Nil)
		]));
var $author$project$Page$Organize$DetainerWarrantCreation$viewPotentialPhones = F3(
	function (options, index, defendant) {
		return A2(
			$mdgriffith$elm_ui$Element$wrappedRow,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
					$mdgriffith$elm_ui$Element$spacing(10)
				]),
			_Utils_ap(
				A2(
					$elm$core$List$indexedMap,
					F2(
						function (i, phone) {
							var originalPhones = A2(
								$elm$core$Maybe$map,
								$elm$core$String$split(','),
								A2(
									$elm$core$Maybe$andThen,
									function ($) {
										return $.l5;
									},
									A2(
										$elm$core$Maybe$andThen,
										$elm_community$list_extra$List$Extra$getAt(index),
										A2(
											$elm$core$Maybe$map,
											function ($) {
												return $.g0;
											},
											options.b))));
							var originalPhone = A2(
								$elm$core$Maybe$andThen,
								$elm_community$list_extra$List$Extra$getAt(i),
								originalPhones);
							var hasChanges = A2(
								$elm$core$Maybe$withDefault,
								false,
								A2(
									$elm$core$Maybe$map,
									$elm$core$Basics$neq(phone),
									originalPhone)) || ((_Utils_eq(options.b, $elm$core$Maybe$Nothing) && (!_Utils_eq(
								defendant.l5,
								_List_fromArray(
									[''])))) || ((!_Utils_eq(options.b, $elm$core$Maybe$Nothing)) && (_Utils_cmp(
								i,
								A2(
									$elm$core$Maybe$withDefault,
									0,
									A2($elm$core$Maybe$map, $elm$core$List$length, originalPhones))) > -1)));
							return A2(
								$mdgriffith$elm_ui$Element$column,
								_List_fromArray(
									[
										$mdgriffith$elm_ui$Element$width(
										$mdgriffith$elm_ui$Element$px(
											(!i) ? 495 : 205))
									]),
								_List_fromArray(
									[
										$author$project$Page$Organize$DetainerWarrantCreation$viewField(
										{
											d: _List_fromArray(
												[
													A2(
													$author$project$Page$Organize$DetainerWarrantCreation$textInput,
													A3(
														$author$project$Page$Organize$DetainerWarrantCreation$withValidation,
														A2($author$project$Page$Organize$DetainerWarrantCreation$DefendantPhoneNumber, index, i),
														options.bx,
														A2($author$project$Page$Organize$DetainerWarrantCreation$withChanges, hasChanges, _List_Nil)),
													{
														hL: (!i) ? A2(
															$mdgriffith$elm_ui$Element$Input$labelLeft,
															_List_fromArray(
																[
																	A2($mdgriffith$elm_ui$Element$paddingXY, 5, 0)
																]),
															$mdgriffith$elm_ui$Element$text('Potential Phone Numbers')) : $mdgriffith$elm_ui$Element$Input$labelHidden('Potential Phone'),
														lI: A2($author$project$Page$Organize$DetainerWarrantCreation$ChangedPotentialPhones, index, i),
														fO: $elm$core$Maybe$Just(
															A2(
																$mdgriffith$elm_ui$Element$Input$placeholder,
																_List_Nil,
																$mdgriffith$elm_ui$Element$text('123-456-7890'))),
														mR: phone
													}),
													(!i) ? $mdgriffith$elm_ui$Element$none : A2(
													$mdgriffith$elm_ui$Element$Input$button,
													_List_fromArray(
														[
															$mdgriffith$elm_ui$Element$padding(2),
															$mdgriffith$elm_ui$Element$alignTop,
															$mdgriffith$elm_ui$Element$Font$color($author$project$Palette$sred),
															$mdgriffith$elm_ui$Element$Border$color($author$project$Palette$sred),
															$mdgriffith$elm_ui$Element$Border$width(1)
														]),
													{
														hL: A2(
															$mdgriffith$elm_ui$Element$el,
															_List_fromArray(
																[
																	$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink),
																	$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink),
																	$mdgriffith$elm_ui$Element$padding(0)
																]),
															$mdgriffith$elm_ui$Element$html(
																A2(
																	$feathericons$elm_feather$FeatherIcons$toHtml,
																	_List_Nil,
																	A2($feathericons$elm_feather$FeatherIcons$withSize, 16, $feathericons$elm_feather$FeatherIcons$x)))),
														lM: $elm$core$Maybe$Just(
															A2($author$project$Page$Organize$DetainerWarrantCreation$RemovePhone, index, i))
													})
												]),
											e: options.a,
											d_: 'Provide a phone number for the tenant so they will be called and texted during upcoming phonebanks and receive notifications about their detainer warrant updates.',
											a: (!i) ? $elm$core$Maybe$Just(
												$author$project$Page$Organize$DetainerWarrantCreation$PotentialPhoneNumbersInfo(index)) : $elm$core$Maybe$Nothing
										})
									]));
						}),
					defendant.l5),
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Element$Input$button,
						$author$project$Page$Organize$DetainerWarrantCreation$primaryStyles,
						{
							hL: A2(
								$mdgriffith$elm_ui$Element$el,
								_List_fromArray(
									[
										$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink),
										$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink)
									]),
								$mdgriffith$elm_ui$Element$html(
									A2(
										$feathericons$elm_feather$FeatherIcons$toHtml,
										_List_Nil,
										A2($feathericons$elm_feather$FeatherIcons$withSize, 15, $feathericons$elm_feather$FeatherIcons$plus)))),
							lM: $elm$core$Maybe$Just(
								$author$project$Page$Organize$DetainerWarrantCreation$AddPhone(index))
						})
					])));
	});
var $author$project$Page$Organize$DetainerWarrantCreation$ChangedSuffix = F2(
	function (a, b) {
		return {$: 27, a: a, b: b};
	});
var $author$project$Page$Organize$DetainerWarrantCreation$viewSuffix = F3(
	function (options, index, defendant) {
		var hasChanges = A2(
			$elm$core$Maybe$withDefault,
			false,
			A2(
				$elm$core$Maybe$map,
				$elm$core$Basics$neq(defendant.mM),
				A2(
					$elm$core$Maybe$andThen,
					function ($) {
						return $.mM;
					},
					A2(
						$elm$core$Maybe$andThen,
						A2(
							$elm$core$Basics$composeL,
							$elm$core$List$head,
							function ($) {
								return $.g0;
							}),
						options.b)))) || (_Utils_eq(options.b, $elm$core$Maybe$Nothing) && (defendant.mM !== ''));
		return A2(
			$mdgriffith$elm_ui$Element$column,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width(
					A2($mdgriffith$elm_ui$Element$maximum, 100, $mdgriffith$elm_ui$Element$fill))
				]),
			_List_fromArray(
				[
					$author$project$Page$Organize$DetainerWarrantCreation$viewField(
					{
						d: _List_fromArray(
							[
								A2(
								$author$project$Page$Organize$DetainerWarrantCreation$textInput,
								A2($author$project$Page$Organize$DetainerWarrantCreation$withChanges, hasChanges, _List_Nil),
								{
									hL: A2(
										$mdgriffith$elm_ui$Element$Input$labelAbove,
										_List_Nil,
										$mdgriffith$elm_ui$Element$text('Suffix')),
									lI: $author$project$Page$Organize$DetainerWarrantCreation$ChangedSuffix(index),
									fO: $elm$core$Maybe$Nothing,
									mR: defendant.mM
								})
							]),
						e: $elm$core$Maybe$Nothing,
						d_: '',
						a: $elm$core$Maybe$Nothing
					})
				]));
	});
var $author$project$Page$Organize$DetainerWarrantCreation$viewDefendantForm = F3(
	function (options, index, defendant) {
		return A2(
			$mdgriffith$elm_ui$Element$column,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
					$mdgriffith$elm_ui$Element$spacing(10),
					$mdgriffith$elm_ui$Element$padding(20),
					$mdgriffith$elm_ui$Element$Border$width(1),
					$mdgriffith$elm_ui$Element$Border$color($author$project$Palette$grayLight),
					A2($mdgriffith$elm_ui$Element$Border$innerGlow, $author$project$Palette$grayLightest, 2),
					$mdgriffith$elm_ui$Element$Border$rounded(5)
				]),
			_List_fromArray(
				[
					A2(
					$mdgriffith$elm_ui$Element$row,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$centerX,
							$mdgriffith$elm_ui$Element$spacing(20)
						]),
					_List_fromArray(
						[
							A3($author$project$Page$Organize$DetainerWarrantCreation$viewFirstName, options, index, defendant),
							A3($author$project$Page$Organize$DetainerWarrantCreation$viewMiddleName, options, index, defendant),
							A3($author$project$Page$Organize$DetainerWarrantCreation$viewLastName, options, index, defendant),
							A3($author$project$Page$Organize$DetainerWarrantCreation$viewSuffix, options, index, defendant)
						])),
					A3($author$project$Page$Organize$DetainerWarrantCreation$viewPotentialPhones, options, index, defendant)
				]));
	});
var $author$project$Page$Organize$DetainerWarrantCreation$viewDefendants = F2(
	function (options, form) {
		return A2(
			$mdgriffith$elm_ui$Element$row,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$centerX,
					$mdgriffith$elm_ui$Element$width(
					A2($mdgriffith$elm_ui$Element$maximum, 1000, $mdgriffith$elm_ui$Element$fill)),
					$mdgriffith$elm_ui$Element$padding(10)
				]),
			_List_fromArray(
				[
					A2(
					$mdgriffith$elm_ui$Element$column,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
							$mdgriffith$elm_ui$Element$spacing(20)
						]),
					_Utils_ap(
						A2(
							$elm$core$List$indexedMap,
							$author$project$Page$Organize$DetainerWarrantCreation$viewDefendantForm(options),
							form.g0),
						_List_fromArray(
							[
								A2(
								$mdgriffith$elm_ui$Element$Input$button,
								_Utils_ap(
									$author$project$Page$Organize$DetainerWarrantCreation$primaryStyles,
									_List_fromArray(
										[$mdgriffith$elm_ui$Element$alignRight])),
								{
									hL: $mdgriffith$elm_ui$Element$text('Add Defendant'),
									lM: $elm$core$Maybe$Just($author$project$Page$Organize$DetainerWarrantCreation$AddDefendant)
								})
							])))
				]));
	});
var $author$project$Page$Organize$DetainerWarrantCreation$ChangedDocketId = function (a) {
	return {$: 4, a: a};
};
var $author$project$Page$Organize$DetainerWarrantCreation$DocketIdInfo = {$: 1};
var $elm$html$Html$Attributes$autofocus = $elm$html$Html$Attributes$boolProperty('autofocus');
var $mdgriffith$elm_ui$Element$Input$focusedOnLoad = $mdgriffith$elm_ui$Internal$Model$Attr(
	$elm$html$Html$Attributes$autofocus(true));
var $author$project$Page$Organize$DetainerWarrantCreation$viewDocketId = F2(
	function (options, form) {
		return A2(
			$mdgriffith$elm_ui$Element$column,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
					$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
					A2($mdgriffith$elm_ui$Element$paddingXY, 0, 10)
				]),
			_List_fromArray(
				[
					$author$project$Page$Organize$DetainerWarrantCreation$viewField(
					{
						d: _List_fromArray(
							[
								function () {
								var _v0 = options.g4;
								if (!_v0.$) {
									var docketId = _v0.a;
									return A2(
										$mdgriffith$elm_ui$Element$el,
										_List_fromArray(
											[
												$mdgriffith$elm_ui$Element$height(
												$mdgriffith$elm_ui$Element$px(41)),
												$mdgriffith$elm_ui$Element$alignBottom,
												$mdgriffith$elm_ui$Element$padding(10),
												$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink)
											]),
										$mdgriffith$elm_ui$Element$text('Docket Number: ' + docketId));
								} else {
									return A2(
										$author$project$Page$Organize$DetainerWarrantCreation$textInput,
										A3(
											$author$project$Page$Organize$DetainerWarrantCreation$withValidation,
											$author$project$Page$Organize$DetainerWarrantCreation$DocketId,
											options.bx,
											_List_fromArray(
												[$mdgriffith$elm_ui$Element$Input$focusedOnLoad])),
										{
											hL: A2($author$project$Page$Organize$DetainerWarrantCreation$requiredLabel, $mdgriffith$elm_ui$Element$Input$labelAbove, 'Docket Number'),
											lI: $author$project$Page$Organize$DetainerWarrantCreation$ChangedDocketId,
											fO: $elm$core$Maybe$Just(
												A2(
													$mdgriffith$elm_ui$Element$Input$placeholder,
													_List_Nil,
													$mdgriffith$elm_ui$Element$text('12AB34'))),
											mR: form.g4
										});
								}
							}()
							]),
						e: options.a,
						d_: 'This is the unique id for a detainer warrant. Please take care when entering this.',
						a: $elm$core$Maybe$Just($author$project$Page$Organize$DetainerWarrantCreation$DocketIdInfo)
					})
				]));
	});
var $author$project$Page$Organize$DetainerWarrantCreation$ChangedFileDatePicker = function (a) {
	return {$: 5, a: a};
};
var $author$project$Page$Organize$DetainerWarrantCreation$FileDateInfo = {$: 2};
var $author$project$Page$Organize$DetainerWarrantCreation$viewFileDate = F2(
	function (options, form) {
		var hasChanges = A2(
			$elm$core$Maybe$withDefault,
			false,
			A2(
				$elm$core$Maybe$map,
				A2(
					$elm$core$Basics$composeL,
					$elm$core$Basics$neq(form.hg.gZ),
					function ($) {
						return $.hg;
					}),
				options.b)) || (_Utils_eq(options.b, $elm$core$Maybe$Nothing) && (!_Utils_eq(form.hg.gZ, $elm$core$Maybe$Nothing)));
		return A2(
			$mdgriffith$elm_ui$Element$column,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
					$mdgriffith$elm_ui$Element$padding(10)
				]),
			_List_fromArray(
				[
					$author$project$Page$Organize$DetainerWarrantCreation$viewField(
					{
						d: _List_fromArray(
							[
								A2(
								$fabhof$elm_ui_datepicker$DatePicker$input,
								A3(
									$author$project$Page$Organize$DetainerWarrantCreation$withValidation,
									$author$project$Page$Organize$DetainerWarrantCreation$FileDate,
									options.bx,
									A2(
										$author$project$Page$Organize$DetainerWarrantCreation$withChanges,
										hasChanges,
										_List_fromArray(
											[
												$mdgriffith$elm_ui$Element$centerX,
												$mdgriffith$elm_ui$Element$centerY,
												$mdgriffith$elm_ui$Element$Border$color($author$project$Palette$grayLight)
											]))),
								{
									hL: A2(
										$mdgriffith$elm_ui$Element$Input$labelAbove,
										_List_Nil,
										$mdgriffith$elm_ui$Element$text('File Date')),
									fs: form.hg.l2,
									lI: $author$project$Page$Organize$DetainerWarrantCreation$ChangedFileDatePicker,
									fO: A2(
										$elm$core$Maybe$map,
										A2(
											$elm$core$Basics$composeL,
											A2(
												$elm$core$Basics$composeL,
												$mdgriffith$elm_ui$Element$Input$placeholder(_List_Nil),
												$mdgriffith$elm_ui$Element$text),
											$justinmimbs$date$Date$toIsoString),
										options.F),
									a3: form.hg.gZ,
									fZ: $fabhof$elm_ui_datepicker$DatePicker$defaultSettings,
									mR: form.hg.j9
								})
							]),
						e: options.a,
						d_: 'The date the detainer warrant was created in the court system.',
						a: $elm$core$Maybe$Just($author$project$Page$Organize$DetainerWarrantCreation$FileDateInfo)
					})
				]));
	});
var $author$project$Page$Organize$DetainerWarrantCreation$AddJudgement = {$: 32};
var $author$project$Page$Organize$DetainerWarrantCreation$ChangedJudgementCourtDatePicker = F2(
	function (a, b) {
		return {$: 34, a: a, b: b};
	});
var $author$project$Page$Organize$DetainerWarrantCreation$JudgementFileDate = 0;
var $author$project$Page$Organize$DetainerWarrantCreation$JudgementInfo = F2(
	function (a, b) {
		return {$: 16, a: a, b: b};
	});
var $author$project$Page$Organize$DetainerWarrantCreation$RemoveJudgement = function (a) {
	return {$: 33, a: a};
};
var $author$project$Page$Organize$DetainerWarrantCreation$Summary = 1;
var $author$project$Page$Organize$DetainerWarrantCreation$ValidJudgement = F2(
	function (a, b) {
		return {$: 7, a: a, b: b};
	});
var $author$project$Page$Organize$DetainerWarrantCreation$ChangedJudgementJudgeSearchBox = F2(
	function (a, b) {
		return {$: 47, a: a, b: b};
	});
var $author$project$Page$Organize$DetainerWarrantCreation$PresidingJudgeInfo = {$: 8};
var $author$project$Page$Organize$DetainerWarrantCreation$viewJudgeSearch = F3(
	function (options, index, form) {
		var hasChanges = false;
		return A2(
			$mdgriffith$elm_ui$Element$column,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
				]),
			_List_fromArray(
				[
					$author$project$Page$Organize$DetainerWarrantCreation$viewField(
					{
						d: _List_fromArray(
							[
								A2(
								$author$project$Page$Organize$DetainerWarrantCreation$searchBox,
								A2($author$project$Page$Organize$DetainerWarrantCreation$withChanges, hasChanges, _List_Nil),
								{
									c5: F2(
										function (query, option) {
											return true;
										}),
									hL: A2(
										$mdgriffith$elm_ui$Element$Input$labelAbove,
										_List_Nil,
										$mdgriffith$elm_ui$Element$text('Judge')),
									lI: $author$project$Page$Organize$DetainerWarrantCreation$ChangedJudgementJudgeSearchBox(index),
									lU: $elm$core$Maybe$Just(
										A2(
											$elm$core$List$cons,
											{jh: _List_Nil, hs: -1, h1: form.dd.mR},
											options.aV)),
									fO: $elm$core$Maybe$Just(
										A2(
											$mdgriffith$elm_ui$Element$Input$placeholder,
											_List_Nil,
											$mdgriffith$elm_ui$Element$text('Search for judge'))),
									a3: form.dd.ih,
									dv: form.dd.ms,
									mR: form.dd.mR,
									dB: function (person) {
										return person.h1;
									}
								})
							]),
						e: options.a,
						d_: 'The judge that will be presiding over the court case.',
						a: $elm$core$Maybe$Just($author$project$Page$Organize$DetainerWarrantCreation$PresidingJudgeInfo)
					})
				]));
	});
var $author$project$Page$Organize$DetainerWarrantCreation$DismissalBasisInfo = 7;
var $author$project$Page$Organize$DetainerWarrantCreation$ToggledWithPrejudice = F2(
	function (a, b) {
		return {$: 46, a: a, b: b};
	});
var $author$project$Page$Organize$DetainerWarrantCreation$WithPrejudiceInfo = 8;
var $mdgriffith$elm_ui$Element$Input$tabindex = A2($elm$core$Basics$composeL, $mdgriffith$elm_ui$Internal$Model$Attr, $elm$html$Html$Attributes$tabindex);
var $mdgriffith$elm_ui$Element$Input$checkbox = F2(
	function (attrs, _v0) {
		var label = _v0.hL;
		var icon = _v0.hr;
		var checked = _v0.dS;
		var onChange = _v0.lI;
		var attributes = _Utils_ap(
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$Input$isHiddenLabel(label) ? $mdgriffith$elm_ui$Internal$Model$NoAttribute : $mdgriffith$elm_ui$Element$spacing(6),
					$mdgriffith$elm_ui$Internal$Model$Attr(
					$elm$html$Html$Events$onClick(
						onChange(!checked))),
					$mdgriffith$elm_ui$Element$Region$announce,
					$mdgriffith$elm_ui$Element$Input$onKeyLookup(
					function (code) {
						return _Utils_eq(code, $mdgriffith$elm_ui$Element$Input$enter) ? $elm$core$Maybe$Just(
							onChange(!checked)) : (_Utils_eq(code, $mdgriffith$elm_ui$Element$Input$space) ? $elm$core$Maybe$Just(
							onChange(!checked)) : $elm$core$Maybe$Nothing);
					}),
					$mdgriffith$elm_ui$Element$Input$tabindex(0),
					$mdgriffith$elm_ui$Element$pointer,
					$mdgriffith$elm_ui$Element$alignLeft,
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
				]),
			attrs);
		return A3(
			$mdgriffith$elm_ui$Element$Input$applyLabel,
			A2(
				$elm$core$List$cons,
				$mdgriffith$elm_ui$Internal$Model$Attr(
					A2($elm$html$Html$Attributes$attribute, 'role', 'checkbox')),
				A2(
					$elm$core$List$cons,
					$mdgriffith$elm_ui$Internal$Model$Attr(
						A2(
							$elm$html$Html$Attributes$attribute,
							'aria-checked',
							checked ? 'true' : 'false')),
					A2(
						$elm$core$List$cons,
						$mdgriffith$elm_ui$Element$Input$hiddenLabelAttribute(label),
						attributes))),
			label,
			A4(
				$mdgriffith$elm_ui$Internal$Model$element,
				$mdgriffith$elm_ui$Internal$Model$asEl,
				$mdgriffith$elm_ui$Internal$Model$div,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$centerY,
						$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
						$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink)
					]),
				$mdgriffith$elm_ui$Internal$Model$Unkeyed(
					_List_fromArray(
						[
							icon(checked)
						]))));
	});
var $elm$core$Basics$pi = _Basics_pi;
var $elm$core$Basics$degrees = function (angleInDegrees) {
	return (angleInDegrees * $elm$core$Basics$pi) / 180;
};
var $mdgriffith$elm_ui$Internal$Model$Rotate = F2(
	function (a, b) {
		return {$: 4, a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Flag$rotate = $mdgriffith$elm_ui$Internal$Flag$flag(24);
var $mdgriffith$elm_ui$Element$rotate = function (angle) {
	return A2(
		$mdgriffith$elm_ui$Internal$Model$TransformComponent,
		$mdgriffith$elm_ui$Internal$Flag$rotate,
		A2(
			$mdgriffith$elm_ui$Internal$Model$Rotate,
			_Utils_Tuple3(0, 0, 1),
			angle));
};
var $mdgriffith$elm_ui$Element$transparent = function (on) {
	return on ? A2(
		$mdgriffith$elm_ui$Internal$Model$StyleClass,
		$mdgriffith$elm_ui$Internal$Flag$transparency,
		A2($mdgriffith$elm_ui$Internal$Model$Transparency, 'transparent', 1.0)) : A2(
		$mdgriffith$elm_ui$Internal$Model$StyleClass,
		$mdgriffith$elm_ui$Internal$Flag$transparency,
		A2($mdgriffith$elm_ui$Internal$Model$Transparency, 'visible', 0.0));
};
var $mdgriffith$elm_ui$Element$Input$defaultCheckbox = function (checked) {
	return A2(
		$mdgriffith$elm_ui$Element$el,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Internal$Model$htmlClass('focusable'),
				$mdgriffith$elm_ui$Element$width(
				$mdgriffith$elm_ui$Element$px(14)),
				$mdgriffith$elm_ui$Element$height(
				$mdgriffith$elm_ui$Element$px(14)),
				$mdgriffith$elm_ui$Element$Font$color($mdgriffith$elm_ui$Element$Input$white),
				$mdgriffith$elm_ui$Element$centerY,
				$mdgriffith$elm_ui$Element$Font$size(9),
				$mdgriffith$elm_ui$Element$Font$center,
				$mdgriffith$elm_ui$Element$Border$rounded(3),
				$mdgriffith$elm_ui$Element$Border$color(
				checked ? A3($mdgriffith$elm_ui$Element$rgb, 59 / 255, 153 / 255, 252 / 255) : A3($mdgriffith$elm_ui$Element$rgb, 211 / 255, 211 / 255, 211 / 255)),
				$mdgriffith$elm_ui$Element$Border$shadow(
				{
					jD: 1,
					eL: checked ? A4($mdgriffith$elm_ui$Element$rgba, 238 / 255, 238 / 255, 238 / 255, 0) : A3($mdgriffith$elm_ui$Element$rgb, 238 / 255, 238 / 255, 238 / 255),
					lG: _Utils_Tuple2(0, 0),
					f$: 1
				}),
				$mdgriffith$elm_ui$Element$Background$color(
				checked ? A3($mdgriffith$elm_ui$Element$rgb, 59 / 255, 153 / 255, 252 / 255) : $mdgriffith$elm_ui$Element$Input$white),
				$mdgriffith$elm_ui$Element$Border$width(
				checked ? 0 : 1),
				$mdgriffith$elm_ui$Element$inFront(
				A2(
					$mdgriffith$elm_ui$Element$el,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$Border$color($mdgriffith$elm_ui$Element$Input$white),
							$mdgriffith$elm_ui$Element$height(
							$mdgriffith$elm_ui$Element$px(6)),
							$mdgriffith$elm_ui$Element$width(
							$mdgriffith$elm_ui$Element$px(9)),
							$mdgriffith$elm_ui$Element$rotate(
							$elm$core$Basics$degrees(-45)),
							$mdgriffith$elm_ui$Element$centerX,
							$mdgriffith$elm_ui$Element$centerY,
							$mdgriffith$elm_ui$Element$moveUp(1),
							$mdgriffith$elm_ui$Element$transparent(!checked),
							$mdgriffith$elm_ui$Element$Border$widthEach(
							{eH: 2, fb: 2, fT: 0, gd: 0})
						]),
					$mdgriffith$elm_ui$Element$none))
			]),
		$mdgriffith$elm_ui$Element$none);
};
var $mdgriffith$elm_ui$Element$Input$OnRight = 0;
var $mdgriffith$elm_ui$Element$Input$labelRight = $mdgriffith$elm_ui$Element$Input$Label(0);
var $author$project$Page$Organize$DetainerWarrantCreation$viewJudgementDefendant = F3(
	function (options, index, form) {
		return _List_fromArray(
			[
				$author$project$Page$Organize$DetainerWarrantCreation$viewField(
				{
					d: _List_fromArray(
						[
							A2(
							$mdgriffith$elm_ui$Element$column,
							_List_fromArray(
								[
									$mdgriffith$elm_ui$Element$spacing(5),
									$mdgriffith$elm_ui$Element$width(
									A2($mdgriffith$elm_ui$Element$minimum, 350, $mdgriffith$elm_ui$Element$fill))
								]),
							_List_fromArray(
								[
									A2(
									$mdgriffith$elm_ui$Element$el,
									_List_Nil,
									$mdgriffith$elm_ui$Element$text('Basis for dismissal')),
									A2(
									$mdgriffith$elm_ui$Element$el,
									_List_fromArray(
										[
											$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
										]),
									A3(
										$PaackEng$elm_ui_dropdown$Dropdown$view,
										A2($author$project$Page$Organize$DetainerWarrantCreation$dismissalBasisDropdownConfig, index, _List_Nil),
										{
											lU: $author$project$DetainerWarrant$dismissalBasisOptions,
											C: $elm$core$Maybe$Just(form.d$)
										},
										form.km))
								]))
						]),
					e: options.a,
					d_: 'Why is the case being dismissed?',
					a: $elm$core$Maybe$Just(
						A2($author$project$Page$Organize$DetainerWarrantCreation$JudgementInfo, index, 7))
				}),
				$author$project$Page$Organize$DetainerWarrantCreation$viewField(
				{
					d: _List_fromArray(
						[
							A2(
							$mdgriffith$elm_ui$Element$row,
							_List_fromArray(
								[
									$mdgriffith$elm_ui$Element$spacing(5),
									$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
								]),
							_List_fromArray(
								[
									A2(
									$mdgriffith$elm_ui$Element$Input$checkbox,
									_List_Nil,
									{
										dS: form.dI,
										hr: $mdgriffith$elm_ui$Element$Input$defaultCheckbox,
										hL: A2(
											$mdgriffith$elm_ui$Element$Input$labelRight,
											_List_Nil,
											$mdgriffith$elm_ui$Element$text('Dismissal is with prejudice')),
										lI: $author$project$Page$Organize$DetainerWarrantCreation$ToggledWithPrejudice(index)
									})
								]))
						]),
					e: options.a,
					d_: 'Whether or not the dismissal is made with prejudice.',
					a: $elm$core$Maybe$Just(
						A2($author$project$Page$Organize$DetainerWarrantCreation$JudgementInfo, index, 8))
				})
			]);
	});
var $author$project$Page$Organize$DetainerWarrantCreation$ChangedInterestRate = F2(
	function (a, b) {
		return {$: 41, a: a, b: b};
	});
var $author$project$Page$Organize$DetainerWarrantCreation$ConfirmedInterestRate = function (a) {
	return {$: 42, a: a};
};
var $author$project$Page$Organize$DetainerWarrantCreation$FeesHaveInterestInfo = 4;
var $author$project$Page$Organize$DetainerWarrantCreation$InterestRateFollowsSiteInfo = 5;
var $author$project$Page$Organize$DetainerWarrantCreation$InterestRateInfo = 6;
var $author$project$Page$Organize$DetainerWarrantCreation$ToggleInterestFollowSite = F2(
	function (a, b) {
		return {$: 43, a: a, b: b};
	});
var $author$project$Page$Organize$DetainerWarrantCreation$ToggleJudgmentInterest = F2(
	function (a, b) {
		return {$: 40, a: a, b: b};
	});
var $author$project$Page$Organize$DetainerWarrantCreation$viewJudgementInterest = F3(
	function (options, index, form) {
		return A2(
			$mdgriffith$elm_ui$Element$column,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$mdgriffith$elm_ui$Element$row,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$spacing(5)
						]),
					_List_fromArray(
						[
							$author$project$Page$Organize$DetainerWarrantCreation$viewField(
							{
								d: _List_fromArray(
									[
										A2(
										$mdgriffith$elm_ui$Element$column,
										_List_fromArray(
											[
												$mdgriffith$elm_ui$Element$spacing(5),
												$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
											]),
										_List_fromArray(
											[
												A2(
												$mdgriffith$elm_ui$Element$Input$checkbox,
												_List_Nil,
												{
													dS: form.b0,
													hr: $mdgriffith$elm_ui$Element$Input$defaultCheckbox,
													hL: A2(
														$mdgriffith$elm_ui$Element$Input$labelAbove,
														_List_Nil,
														$mdgriffith$elm_ui$Element$text('Fees Have Interest')),
													lI: $author$project$Page$Organize$DetainerWarrantCreation$ToggleJudgmentInterest(index)
												})
											]))
									]),
								e: options.a,
								d_: 'Do the fees claimed have interest?',
								a: $elm$core$Maybe$Just(
									A2($author$project$Page$Organize$DetainerWarrantCreation$JudgementInfo, index, 4))
							}),
							form.b0 ? $author$project$Page$Organize$DetainerWarrantCreation$viewField(
							{
								d: _List_fromArray(
									[
										A2(
										$mdgriffith$elm_ui$Element$column,
										_List_fromArray(
											[
												$mdgriffith$elm_ui$Element$spacing(5),
												$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
											]),
										_List_fromArray(
											[
												A2(
												$mdgriffith$elm_ui$Element$Input$checkbox,
												_List_Nil,
												{
													dS: form.b7,
													hr: $mdgriffith$elm_ui$Element$Input$defaultCheckbox,
													hL: A2(
														$mdgriffith$elm_ui$Element$Input$labelAbove,
														_List_Nil,
														$mdgriffith$elm_ui$Element$text('Interest Rate Follows Site')),
													lI: $author$project$Page$Organize$DetainerWarrantCreation$ToggleInterestFollowSite(index)
												})
											]))
									]),
								e: options.a,
								d_: 'Does the interest rate follow from the website?',
								a: $elm$core$Maybe$Just(
									A2($author$project$Page$Organize$DetainerWarrantCreation$JudgementInfo, index, 5))
							}) : $mdgriffith$elm_ui$Element$none
						])),
					form.b7 ? $mdgriffith$elm_ui$Element$none : $author$project$Page$Organize$DetainerWarrantCreation$viewField(
					{
						d: _List_fromArray(
							[
								A2(
								$mdgriffith$elm_ui$Element$column,
								_List_fromArray(
									[
										$mdgriffith$elm_ui$Element$spacing(5),
										$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
									]),
								_List_fromArray(
									[
										A2(
										$author$project$Page$Organize$DetainerWarrantCreation$textInput,
										A2(
											$author$project$Page$Organize$DetainerWarrantCreation$withChanges,
											false,
											_List_fromArray(
												[
													$mdgriffith$elm_ui$Element$Events$onLoseFocus(
													$author$project$Page$Organize$DetainerWarrantCreation$ConfirmedInterestRate(index))
												])),
										{
											hL: A2(
												$mdgriffith$elm_ui$Element$Input$labelAbove,
												_List_Nil,
												$mdgriffith$elm_ui$Element$text('Interest Rate')),
											lI: $author$project$Page$Organize$DetainerWarrantCreation$ChangedInterestRate(index),
											fO: $elm$core$Maybe$Just(
												A2(
													$mdgriffith$elm_ui$Element$Input$placeholder,
													_List_Nil,
													$mdgriffith$elm_ui$Element$text('0%'))),
											mR: form.d6
										})
									]))
							]),
						e: options.a,
						d_: 'The rate of interest that accrues for fees.',
						a: $elm$core$Maybe$Just(
							A2($author$project$Page$Organize$DetainerWarrantCreation$JudgementInfo, index, 6))
					})
				]));
	});
var $author$project$Page$Organize$DetainerWarrantCreation$ChangedJudgementNotes = F2(
	function (a, b) {
		return {$: 48, a: a, b: b};
	});
var $author$project$Page$Organize$DetainerWarrantCreation$JudgementNotesDetail = 9;
var $mdgriffith$elm_ui$Element$Input$multiline = F2(
	function (attrs, multi) {
		return A3(
			$mdgriffith$elm_ui$Element$Input$textHelper,
			{ai: $elm$core$Maybe$Nothing, at: multi.mC, G: $mdgriffith$elm_ui$Element$Input$TextArea},
			attrs,
			{hL: multi.hL, lI: multi.lI, fO: multi.fO, mR: multi.mR});
	});
var $author$project$Page$Organize$DetainerWarrantCreation$viewJudgementNotes = F3(
	function (options, index, form) {
		var hasChanges = A2(
			$elm$core$Maybe$withDefault,
			false,
			A2(
				$elm$core$Maybe$map,
				$elm$core$Basics$neq(form.aZ),
				A2(
					$elm$core$Maybe$andThen,
					function ($) {
						return $.aZ;
					},
					A2(
						$elm$core$Maybe$andThen,
						$elm$core$List$head,
						A2(
							$elm$core$Maybe$map,
							A2(
								$elm$core$Basics$composeL,
								$elm$core$List$take(index),
								function ($) {
									return $.lf;
								}),
							options.b))))) || (_Utils_eq(options.b, $elm$core$Maybe$Nothing) && (form.aZ !== ''));
		return A2(
			$mdgriffith$elm_ui$Element$column,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
				]),
			_List_fromArray(
				[
					$author$project$Page$Organize$DetainerWarrantCreation$viewField(
					{
						d: _List_fromArray(
							[
								A2(
								$mdgriffith$elm_ui$Element$Input$multiline,
								A2($author$project$Page$Organize$DetainerWarrantCreation$withChanges, hasChanges, _List_Nil),
								{
									hL: A2(
										$mdgriffith$elm_ui$Element$Input$labelAbove,
										_List_Nil,
										$mdgriffith$elm_ui$Element$text('Notes')),
									lI: $author$project$Page$Organize$DetainerWarrantCreation$ChangedJudgementNotes(index),
									fO: $elm$core$Maybe$Just(
										A2(
											$mdgriffith$elm_ui$Element$Input$placeholder,
											_List_Nil,
											$mdgriffith$elm_ui$Element$text('Add any notes from the judgement sheet or any comments you think is noteworthy.'))),
									mC: true,
									mR: form.aZ
								})
							]),
						e: options.a,
						d_: 'Any additional notes you have about this particular judgement go here!',
						a: $elm$core$Maybe$Just(
							A2($author$project$Page$Organize$DetainerWarrantCreation$JudgementInfo, index, 9))
					})
				]));
	});
var $author$project$Page$Organize$DetainerWarrantCreation$ChangedFeesAwarded = F2(
	function (a, b) {
		return {$: 37, a: a, b: b};
	});
var $author$project$Page$Organize$DetainerWarrantCreation$ConfirmedFeesAwarded = function (a) {
	return {$: 38, a: a};
};
var $author$project$Page$Organize$DetainerWarrantCreation$FeesAwardedInfo = 2;
var $author$project$Page$Organize$DetainerWarrantCreation$PossessionAwardedInfo = 3;
var $author$project$Page$Organize$DetainerWarrantCreation$ToggleJudgmentPossession = F2(
	function (a, b) {
		return {$: 39, a: a, b: b};
	});
var $author$project$Page$Organize$DetainerWarrantCreation$viewJudgementPossession = F3(
	function (options, index, form) {
		return $author$project$Page$Organize$DetainerWarrantCreation$viewField(
			{
				d: _List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Element$column,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$spacing(5),
								$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
							]),
						_List_fromArray(
							[
								A2(
								$mdgriffith$elm_ui$Element$Input$checkbox,
								_List_Nil,
								{
									dS: form.cK,
									hr: $mdgriffith$elm_ui$Element$Input$defaultCheckbox,
									hL: A2(
										$mdgriffith$elm_ui$Element$Input$labelAbove,
										_List_Nil,
										$mdgriffith$elm_ui$Element$text('Possession Awarded')),
									lI: $author$project$Page$Organize$DetainerWarrantCreation$ToggleJudgmentPossession(index)
								})
							]))
					]),
				e: options.a,
				d_: 'Has the Plaintiff claimed the residence?',
				a: $elm$core$Maybe$Just(
					A2($author$project$Page$Organize$DetainerWarrantCreation$JudgementInfo, index, 3))
			});
	});
var $author$project$Page$Organize$DetainerWarrantCreation$viewJudgementPlaintiff = F3(
	function (options, index, form) {
		return _List_fromArray(
			[
				$author$project$Page$Organize$DetainerWarrantCreation$viewField(
				{
					d: _List_fromArray(
						[
							A2(
							$mdgriffith$elm_ui$Element$column,
							_List_fromArray(
								[
									$mdgriffith$elm_ui$Element$spacing(5),
									$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
								]),
							_List_fromArray(
								[
									A2(
									$author$project$Page$Organize$DetainerWarrantCreation$textInput,
									A2(
										$author$project$Page$Organize$DetainerWarrantCreation$withChanges,
										false,
										_List_fromArray(
											[
												$mdgriffith$elm_ui$Element$Events$onLoseFocus(
												$author$project$Page$Organize$DetainerWarrantCreation$ConfirmedFeesAwarded(index))
											])),
									{
										hL: A2(
											$mdgriffith$elm_ui$Element$Input$labelAbove,
											_List_Nil,
											$mdgriffith$elm_ui$Element$text('Fees Awarded')),
										lI: $author$project$Page$Organize$DetainerWarrantCreation$ChangedFeesAwarded(index),
										fO: $elm$core$Maybe$Just(
											A2(
												$mdgriffith$elm_ui$Element$Input$placeholder,
												_List_Nil,
												$mdgriffith$elm_ui$Element$text('$0.00'))),
										mR: (form.bL === '') ? form.bL : ('$' + form.bL)
									})
								]))
						]),
					e: options.a,
					d_: 'Fees the Plaintiff has been awarded.',
					a: $elm$core$Maybe$Just(
						A2($author$project$Page$Organize$DetainerWarrantCreation$JudgementInfo, index, 2))
				}),
				A3($author$project$Page$Organize$DetainerWarrantCreation$viewJudgementPossession, options, index, form)
			]);
	});
var $author$project$Page$Organize$DetainerWarrantCreation$viewJudgement = F3(
	function (options, index, form) {
		var hasChanges = true;
		return A2(
			$mdgriffith$elm_ui$Element$column,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
					$mdgriffith$elm_ui$Element$spacing(10),
					$mdgriffith$elm_ui$Element$padding(20),
					$mdgriffith$elm_ui$Element$Border$width(1),
					$mdgriffith$elm_ui$Element$Border$color($author$project$Palette$grayLight),
					A2($mdgriffith$elm_ui$Element$Border$innerGlow, $author$project$Palette$grayLightest, 2),
					$mdgriffith$elm_ui$Element$Border$rounded(5),
					$mdgriffith$elm_ui$Element$inFront(
					A2(
						$mdgriffith$elm_ui$Element$row,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$alignRight,
								$mdgriffith$elm_ui$Element$padding(20)
							]),
						_List_fromArray(
							[
								A2(
								$mdgriffith$elm_ui$Element$Input$button,
								$author$project$Page$Organize$DetainerWarrantCreation$primaryStyles,
								{
									hL: A2(
										$mdgriffith$elm_ui$Element$el,
										_List_fromArray(
											[
												$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink),
												$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink),
												$mdgriffith$elm_ui$Element$padding(0)
											]),
										$mdgriffith$elm_ui$Element$html(
											A2(
												$feathericons$elm_feather$FeatherIcons$toHtml,
												_List_Nil,
												A2($feathericons$elm_feather$FeatherIcons$withSize, 16, $feathericons$elm_feather$FeatherIcons$x)))),
									lM: $elm$core$Maybe$Just(
										$author$project$Page$Organize$DetainerWarrantCreation$RemoveJudgement(index))
								})
							])))
				]),
			_List_fromArray(
				[
					A2(
					$mdgriffith$elm_ui$Element$row,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$spacing(5)
						]),
					_List_fromArray(
						[
							$author$project$Page$Organize$DetainerWarrantCreation$viewField(
							{
								d: _List_fromArray(
									[
										A2(
										$fabhof$elm_ui_datepicker$DatePicker$input,
										A3(
											$author$project$Page$Organize$DetainerWarrantCreation$withValidation,
											A2($author$project$Page$Organize$DetainerWarrantCreation$ValidJudgement, index, 0),
											options.bx,
											A2(
												$author$project$Page$Organize$DetainerWarrantCreation$withChanges,
												hasChanges,
												_List_fromArray(
													[
														$mdgriffith$elm_ui$Element$htmlAttribute(
														$elm$html$Html$Attributes$id(
															A2($author$project$Page$Organize$DetainerWarrantCreation$judgementInfoText, index, 0))),
														$mdgriffith$elm_ui$Element$centerX,
														$mdgriffith$elm_ui$Element$centerY,
														$mdgriffith$elm_ui$Element$Border$color($author$project$Palette$grayLight)
													]))),
										{
											hL: A2($author$project$Page$Organize$DetainerWarrantCreation$requiredLabel, $mdgriffith$elm_ui$Element$Input$labelAbove, 'Court Date'),
											fs: form.bj.l2,
											lI: $author$project$Page$Organize$DetainerWarrantCreation$ChangedJudgementCourtDatePicker(index),
											fO: A2(
												$elm$core$Maybe$map,
												A2(
													$elm$core$Basics$composeL,
													A2(
														$elm$core$Basics$composeL,
														$mdgriffith$elm_ui$Element$Input$placeholder(_List_Nil),
														$mdgriffith$elm_ui$Element$text),
													$justinmimbs$date$Date$toIsoString),
												options.F),
											a3: form.bj.gZ,
											fZ: $fabhof$elm_ui_datepicker$DatePicker$defaultSettings,
											mR: form.bj.j9
										})
									]),
								e: options.a,
								d_: 'The date this judgement was filed.',
								a: $elm$core$Maybe$Just(
									A2($author$project$Page$Organize$DetainerWarrantCreation$JudgementInfo, index, 0))
							}),
							A3($author$project$Page$Organize$DetainerWarrantCreation$viewJudgeSearch, options, index, form)
						])),
					A2(
					$mdgriffith$elm_ui$Element$row,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$spacing(5)
						]),
					_List_fromArray(
						[
							$author$project$Page$Organize$DetainerWarrantCreation$viewField(
							{
								d: _List_fromArray(
									[
										A2(
										$mdgriffith$elm_ui$Element$column,
										_List_fromArray(
											[
												$mdgriffith$elm_ui$Element$spacing(5),
												$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
											]),
										_List_fromArray(
											[
												A2(
												$mdgriffith$elm_ui$Element$el,
												_List_Nil,
												$mdgriffith$elm_ui$Element$text('Granted to')),
												A2(
												$mdgriffith$elm_ui$Element$el,
												_List_Nil,
												A3(
													$PaackEng$elm_ui_dropdown$Dropdown$view,
													A2($author$project$Page$Organize$DetainerWarrantCreation$conditionsDropdownConfig, index, _List_Nil),
													{
														lU: $author$project$DetainerWarrant$conditionsOptions,
														C: $elm$core$Maybe$Just(form.cP)
													},
													form.j0))
											]))
									]),
								e: options.a,
								d_: 'The ruling from the court that will determine if fees or repossession are enforced.',
								a: $elm$core$Maybe$Just(
									A2($author$project$Page$Organize$DetainerWarrantCreation$JudgementInfo, index, 1))
							})
						])),
					A2(
					$mdgriffith$elm_ui$Element$row,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$spacing(5)
						]),
					function () {
						var _v0 = form.cP;
						if (!_v0.$) {
							if (!_v0.a) {
								var _v1 = _v0.a;
								return A3($author$project$Page$Organize$DetainerWarrantCreation$viewJudgementPlaintiff, options, index, form);
							} else {
								var _v2 = _v0.a;
								return A3($author$project$Page$Organize$DetainerWarrantCreation$viewJudgementDefendant, options, index, form);
							}
						} else {
							return _List_fromArray(
								[$mdgriffith$elm_ui$Element$none]);
						}
					}()),
					((form.bL !== '') && _Utils_eq(
					form.cP,
					$elm$core$Maybe$Just(0))) ? A3($author$project$Page$Organize$DetainerWarrantCreation$viewJudgementInterest, options, index, form) : $mdgriffith$elm_ui$Element$none,
					A3($author$project$Page$Organize$DetainerWarrantCreation$viewJudgementNotes, options, index, form)
				]));
	});
var $author$project$Page$Organize$DetainerWarrantCreation$viewJudgements = F2(
	function (options, form) {
		return A2(
			$mdgriffith$elm_ui$Element$column,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$centerX,
					$mdgriffith$elm_ui$Element$spacing(20),
					$mdgriffith$elm_ui$Element$width(
					A2($mdgriffith$elm_ui$Element$maximum, 1000, $mdgriffith$elm_ui$Element$fill)),
					$mdgriffith$elm_ui$Element$padding(10)
				]),
			_Utils_ap(
				A2(
					$elm$core$List$indexedMap,
					$author$project$Page$Organize$DetainerWarrantCreation$viewJudgement(options),
					form.lf),
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Element$Input$button,
						_Utils_ap(
							$author$project$Page$Organize$DetainerWarrantCreation$primaryStyles,
							_List_fromArray(
								[
									$elm$core$List$isEmpty(form.lf) ? $mdgriffith$elm_ui$Element$centerX : $mdgriffith$elm_ui$Element$alignRight
								])),
						{
							hL: $mdgriffith$elm_ui$Element$text('Add Judgement'),
							lM: $elm$core$Maybe$Just($author$project$Page$Organize$DetainerWarrantCreation$AddJudgement)
						})
					])));
	});
var $author$project$Page$Organize$DetainerWarrantCreation$LegacyInfo = {$: 12};
var $author$project$Page$Organize$DetainerWarrantCreation$viewLegacy = F2(
	function (options, form) {
		var hasChanges = A2(
			$elm$core$Maybe$withDefault,
			false,
			A2(
				$elm$core$Maybe$map,
				A2(
					$elm$core$Basics$composeL,
					$elm$core$Basics$neq(form.hH),
					function ($) {
						return $.hH;
					}),
				options.b)) || (_Utils_eq(options.b, $elm$core$Maybe$Nothing) && (!_Utils_eq(form.hH, $elm$core$Maybe$Nothing)));
		return A2(
			$mdgriffith$elm_ui$Element$column,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
				]),
			_List_fromArray(
				[
					$author$project$Page$Organize$DetainerWarrantCreation$viewField(
					{
						d: _List_fromArray(
							[
								A2(
								$mdgriffith$elm_ui$Element$column,
								_List_fromArray(
									[
										$mdgriffith$elm_ui$Element$spacing(5),
										$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
									]),
								_List_fromArray(
									[
										A2(
										$mdgriffith$elm_ui$Element$el,
										_List_Nil,
										$mdgriffith$elm_ui$Element$text('Is L.E.G.A.C.Y. property?')),
										A2(
										$mdgriffith$elm_ui$Element$el,
										_List_Nil,
										A3(
											$PaackEng$elm_ui_dropdown$Dropdown$view,
											$author$project$Page$Organize$DetainerWarrantCreation$legacyDropdownConfig(
												A2($author$project$Page$Organize$DetainerWarrantCreation$withChanges, hasChanges, _List_Nil)),
											{
												lU: $author$project$DetainerWarrant$ternaryOptions,
												C: $elm$core$Maybe$Just(form.hH)
											},
											form.cb))
									]))
							]),
						e: options.a,
						d_: 'L.E.G.A.C.Y. is a special court created for handling evictions during the pandemic. Looks up cases listed under \"LEGACY Case DW Numbers\" tab and check if the case is there or not.',
						a: $elm$core$Maybe$Just($author$project$Page$Organize$DetainerWarrantCreation$LegacyInfo)
					})
				]));
	});
var $author$project$Page$Organize$DetainerWarrantCreation$NonpaymentInfo = {$: 13};
var $author$project$Page$Organize$DetainerWarrantCreation$viewNonpayment = F2(
	function (options, form) {
		var hasChanges = A2(
			$elm$core$Maybe$withDefault,
			false,
			A2(
				$elm$core$Maybe$map,
				A2(
					$elm$core$Basics$composeL,
					$elm$core$Basics$neq(form.aD),
					function ($) {
						return $.h3;
					}),
				options.b)) || (_Utils_eq(options.b, $elm$core$Maybe$Nothing) && (!_Utils_eq(form.aD, $elm$core$Maybe$Nothing)));
		return A2(
			$mdgriffith$elm_ui$Element$column,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
				]),
			_List_fromArray(
				[
					$author$project$Page$Organize$DetainerWarrantCreation$viewField(
					{
						d: _List_fromArray(
							[
								A2(
								$mdgriffith$elm_ui$Element$column,
								_List_fromArray(
									[
										$mdgriffith$elm_ui$Element$spacing(5),
										$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
									]),
								_List_fromArray(
									[
										A2(
										$mdgriffith$elm_ui$Element$el,
										_List_Nil,
										$mdgriffith$elm_ui$Element$text('Is nonpayment?')),
										A2(
										$mdgriffith$elm_ui$Element$el,
										_List_Nil,
										A3(
											$PaackEng$elm_ui_dropdown$Dropdown$view,
											$author$project$Page$Organize$DetainerWarrantCreation$nonpaymentDropdownConfig(
												A2($author$project$Page$Organize$DetainerWarrantCreation$withChanges, hasChanges, _List_Nil)),
											{
												lU: $author$project$DetainerWarrant$ternaryOptions,
												C: $elm$core$Maybe$Just(form.aD)
											},
											form.cl))
									]))
							]),
						e: options.a,
						d_: 'People can be evicted for a number of reasons, including non-payment of rent. We want to know if people are being evicted for this reason because those cases should go to the diversionary court. We assume cases that request $$ are for non-payment but this box is sometimes checked on eviction forms.',
						a: $elm$core$Maybe$Just($author$project$Page$Organize$DetainerWarrantCreation$NonpaymentInfo)
					})
				]));
	});
var $author$project$Page$Organize$DetainerWarrantCreation$ChangedNotes = function (a) {
	return {$: 49, a: a};
};
var $author$project$Page$Organize$DetainerWarrantCreation$NotesInfo = {$: 17};
var $author$project$Page$Organize$DetainerWarrantCreation$viewNotes = F2(
	function (options, form) {
		var hasChanges = A2(
			$elm$core$Maybe$withDefault,
			false,
			A2(
				$elm$core$Maybe$map,
				$elm$core$Basics$neq(form.aZ),
				A2(
					$elm$core$Maybe$andThen,
					function ($) {
						return $.aZ;
					},
					options.b))) || (_Utils_eq(options.b, $elm$core$Maybe$Nothing) && (form.aZ !== ''));
		return A2(
			$mdgriffith$elm_ui$Element$column,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
				]),
			_List_fromArray(
				[
					$author$project$Page$Organize$DetainerWarrantCreation$viewField(
					{
						d: _List_fromArray(
							[
								A2(
								$mdgriffith$elm_ui$Element$Input$multiline,
								A2($author$project$Page$Organize$DetainerWarrantCreation$withChanges, hasChanges, _List_Nil),
								{
									hL: A2(
										$mdgriffith$elm_ui$Element$Input$labelAbove,
										_List_Nil,
										$mdgriffith$elm_ui$Element$text('Notes')),
									lI: $author$project$Page$Organize$DetainerWarrantCreation$ChangedNotes,
									fO: $elm$core$Maybe$Just(
										A2(
											$mdgriffith$elm_ui$Element$Input$placeholder,
											_List_Nil,
											$mdgriffith$elm_ui$Element$text('Add anything you think is noteworthy.'))),
									mC: true,
									mR: form.aZ
								})
							]),
						e: options.a,
						d_: 'Any additional notes you have about this case go here! This is a great place to leave feedback for the form as well, perhaps there\'s another field or field option we need to provide.',
						a: $elm$core$Maybe$Just($author$project$Page$Organize$DetainerWarrantCreation$NotesInfo)
					})
				]));
	});
var $author$project$Page$Organize$DetainerWarrantCreation$ChangedPlaintiffAttorneySearchBox = function (a) {
	return {$: 8, a: a};
};
var $author$project$Page$Organize$DetainerWarrantCreation$PlaintiffAttorneyInfo = {$: 5};
var $author$project$Page$Organize$DetainerWarrantCreation$viewPlaintiffAttorneySearch = F2(
	function (options, form) {
		var hasChanges = A2(
			$elm$core$Maybe$withDefault,
			false,
			A2(
				$elm$core$Maybe$map,
				A2(
					$elm$core$Basics$composeL,
					$elm$core$Basics$neq(form.ik.ih),
					function ($) {
						return $.ik;
					}),
				options.b)) || (_Utils_eq(options.b, $elm$core$Maybe$Nothing) && (form.ik.mR !== ''));
		return A2(
			$mdgriffith$elm_ui$Element$column,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
				]),
			_List_fromArray(
				[
					$author$project$Page$Organize$DetainerWarrantCreation$viewField(
					{
						d: _List_fromArray(
							[
								A2(
								$author$project$Page$Organize$DetainerWarrantCreation$searchBox,
								A2($author$project$Page$Organize$DetainerWarrantCreation$withChanges, hasChanges, _List_Nil),
								{
									c5: F2(
										function (query, option) {
											return true;
										}),
									hL: A2(
										$mdgriffith$elm_ui$Element$Input$labelAbove,
										_List_Nil,
										$mdgriffith$elm_ui$Element$text('Plaintiff Attorney')),
									lI: $author$project$Page$Organize$DetainerWarrantCreation$ChangedPlaintiffAttorneySearchBox,
									lU: $elm$core$Maybe$Just(
										A2(
											$elm$core$List$cons,
											{jh: _List_Nil, hs: -1, h1: form.ik.mR},
											options.be)),
									fO: $elm$core$Maybe$Just(
										A2(
											$mdgriffith$elm_ui$Element$Input$placeholder,
											_List_Nil,
											$mdgriffith$elm_ui$Element$text('Search for plaintiff attorney'))),
									a3: form.ik.ih,
									dv: form.ik.ms,
									mR: form.ik.mR,
									dB: function (person) {
										return person.h1;
									}
								})
							]),
						e: options.a,
						d_: 'The plaintiff attorney is the legal representation for the plaintiff in this eviction process.',
						a: $elm$core$Maybe$Just($author$project$Page$Organize$DetainerWarrantCreation$PlaintiffAttorneyInfo)
					})
				]));
	});
var $author$project$Page$Organize$DetainerWarrantCreation$ChangedPlaintiffSearchBox = function (a) {
	return {$: 7, a: a};
};
var $author$project$Page$Organize$DetainerWarrantCreation$PlaintiffInfo = {$: 4};
var $author$project$Page$Organize$DetainerWarrantCreation$viewPlaintiffSearch = F2(
	function (options, form) {
		var hasChanges = A2(
			$elm$core$Maybe$withDefault,
			false,
			A2(
				$elm$core$Maybe$map,
				A2(
					$elm$core$Basics$composeL,
					$elm$core$Basics$neq(form.ij.ih),
					function ($) {
						return $.ij;
					}),
				options.b)) || (_Utils_eq(options.b, $elm$core$Maybe$Nothing) && (form.ij.mR !== ''));
		return A2(
			$mdgriffith$elm_ui$Element$row,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
				]),
			_List_fromArray(
				[
					$author$project$Page$Organize$DetainerWarrantCreation$viewField(
					{
						d: _List_fromArray(
							[
								A2(
								$author$project$Page$Organize$DetainerWarrantCreation$searchBox,
								A2($author$project$Page$Organize$DetainerWarrantCreation$withChanges, hasChanges, _List_Nil),
								{
									c5: F2(
										function (query, option) {
											return true;
										}),
									hL: A2(
										$mdgriffith$elm_ui$Element$Input$labelAbove,
										_List_Nil,
										$mdgriffith$elm_ui$Element$text('Plaintiff')),
									lI: $author$project$Page$Organize$DetainerWarrantCreation$ChangedPlaintiffSearchBox,
									lU: $elm$core$Maybe$Just(
										A2(
											$elm$core$List$cons,
											{jh: _List_Nil, hs: -1, h1: form.ij.mR},
											options.bv)),
									fO: $elm$core$Maybe$Just(
										A2(
											$mdgriffith$elm_ui$Element$Input$placeholder,
											_List_Nil,
											$mdgriffith$elm_ui$Element$text('Search for plaintiff'))),
									a3: form.ij.ih,
									dv: form.ij.ms,
									mR: form.ij.mR,
									dB: function (person) {
										return person.h1;
									}
								})
							]),
						e: options.a,
						d_: 'The plaintiff is typically the landlord seeking money or possession from the defendant (tenant).',
						a: $elm$core$Maybe$Just($author$project$Page$Organize$DetainerWarrantCreation$PlaintiffInfo)
					})
				]));
	});
var $author$project$Page$Organize$DetainerWarrantCreation$ChangedJudgeSearchBox = function (a) {
	return {$: 12, a: a};
};
var $author$project$Page$Organize$DetainerWarrantCreation$viewPresidingJudgeSearch = F2(
	function (options, form) {
		var hasChanges = A2(
			$elm$core$Maybe$withDefault,
			false,
			A2(
				$elm$core$Maybe$map,
				A2(
					$elm$core$Basics$composeL,
					$elm$core$Basics$neq(form.ip.ih),
					function ($) {
						return $.ip;
					}),
				options.b)) || (_Utils_eq(options.b, $elm$core$Maybe$Nothing) && (form.ip.mR !== ''));
		return A2(
			$mdgriffith$elm_ui$Element$column,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
				]),
			_List_fromArray(
				[
					$author$project$Page$Organize$DetainerWarrantCreation$viewField(
					{
						d: _List_fromArray(
							[
								A2(
								$author$project$Page$Organize$DetainerWarrantCreation$searchBox,
								A2($author$project$Page$Organize$DetainerWarrantCreation$withChanges, hasChanges, _List_Nil),
								{
									c5: F2(
										function (query, option) {
											return true;
										}),
									hL: A2(
										$mdgriffith$elm_ui$Element$Input$labelAbove,
										_List_Nil,
										$mdgriffith$elm_ui$Element$text('Presiding Judge')),
									lI: $author$project$Page$Organize$DetainerWarrantCreation$ChangedJudgeSearchBox,
									lU: $elm$core$Maybe$Just(
										A2(
											$elm$core$List$cons,
											{jh: _List_Nil, hs: -1, h1: form.ip.mR},
											options.aV)),
									fO: $elm$core$Maybe$Just(
										A2(
											$mdgriffith$elm_ui$Element$Input$placeholder,
											_List_Nil,
											$mdgriffith$elm_ui$Element$text('Search for judge'))),
									a3: form.ip.ih,
									dv: form.ip.ms,
									mR: form.ip.mR,
									dB: function (person) {
										return person.h1;
									}
								})
							]),
						e: options.a,
						d_: 'The judge that will be presiding over the court case.',
						a: $elm$core$Maybe$Just($author$project$Page$Organize$DetainerWarrantCreation$PresidingJudgeInfo)
					})
				]));
	});
var $author$project$Page$Organize$DetainerWarrantCreation$StatusInfo = {$: 3};
var $author$project$Page$Organize$DetainerWarrantCreation$viewStatus = F2(
	function (options, form) {
		var hasChanges = A2(
			$elm$core$Maybe$withDefault,
			false,
			A2(
				$elm$core$Maybe$map,
				A2(
					$elm$core$Basics$composeL,
					$elm$core$Basics$neq(form.iM),
					function ($) {
						return $.iM;
					}),
				options.b)) || _Utils_eq(options.b, $elm$core$Maybe$Nothing);
		var defaultStatus = 1;
		return A2(
			$mdgriffith$elm_ui$Element$column,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink)
				]),
			_List_fromArray(
				[
					$author$project$Page$Organize$DetainerWarrantCreation$viewField(
					{
						d: _List_fromArray(
							[
								A2(
								$mdgriffith$elm_ui$Element$column,
								_List_fromArray(
									[
										$mdgriffith$elm_ui$Element$spacing(5),
										$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
									]),
								_List_fromArray(
									[
										A2(
										$mdgriffith$elm_ui$Element$el,
										_List_Nil,
										$mdgriffith$elm_ui$Element$text('Status')),
										A2(
										$mdgriffith$elm_ui$Element$el,
										_List_Nil,
										A3(
											$PaackEng$elm_ui_dropdown$Dropdown$view,
											$author$project$Page$Organize$DetainerWarrantCreation$statusDropdownConfig(
												A2($author$project$Page$Organize$DetainerWarrantCreation$withChanges, hasChanges, _List_Nil)),
											{
												lU: $author$project$DetainerWarrant$statusOptions,
												C: $elm$core$Maybe$Just(form.iM)
											},
											form.bC))
									]))
							]),
						e: options.a,
						d_: 'The current status of the case in the court system.',
						a: $elm$core$Maybe$Just($author$project$Page$Organize$DetainerWarrantCreation$StatusInfo)
					})
				]));
	});
var $author$project$Page$Organize$DetainerWarrantCreation$viewForm = F2(
	function (options, formStatus) {
		if (!formStatus.$) {
			var id = formStatus.a;
			return A2(
				$mdgriffith$elm_ui$Element$column,
				_List_Nil,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$text('Fetching docket ' + id)
					]));
		} else {
			var form = formStatus.a;
			return A2(
				$mdgriffith$elm_ui$Element$column,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$centerX,
						$mdgriffith$elm_ui$Element$spacing(30)
					]),
				_List_fromArray(
					[
						$author$project$Page$Organize$DetainerWarrantCreation$tile(
						_List_fromArray(
							[
								A2(
								$mdgriffith$elm_ui$Element$paragraph,
								_List_fromArray(
									[$mdgriffith$elm_ui$Element$Font$center, $mdgriffith$elm_ui$Element$centerX]),
								_List_fromArray(
									[
										$mdgriffith$elm_ui$Element$text('Court')
									])),
								$author$project$Page$Organize$DetainerWarrantCreation$formGroup(
								_List_fromArray(
									[
										A2($author$project$Page$Organize$DetainerWarrantCreation$viewDocketId, options, form),
										A2($author$project$Page$Organize$DetainerWarrantCreation$viewFileDate, options, form),
										A2($author$project$Page$Organize$DetainerWarrantCreation$viewStatus, options, form)
									])),
								$author$project$Page$Organize$DetainerWarrantCreation$formGroup(
								_List_fromArray(
									[
										A2($author$project$Page$Organize$DetainerWarrantCreation$viewPlaintiffSearch, options, form),
										A2($author$project$Page$Organize$DetainerWarrantCreation$viewPlaintiffAttorneySearch, options, form)
									])),
								$author$project$Page$Organize$DetainerWarrantCreation$formGroup(
								_List_fromArray(
									[
										A2($author$project$Page$Organize$DetainerWarrantCreation$viewCourtDate, options, form),
										A2($author$project$Page$Organize$DetainerWarrantCreation$viewCourtroom, options, form),
										A2($author$project$Page$Organize$DetainerWarrantCreation$viewPresidingJudgeSearch, options, form)
									]))
							])),
						$author$project$Page$Organize$DetainerWarrantCreation$tile(
						_List_fromArray(
							[
								A2(
								$mdgriffith$elm_ui$Element$paragraph,
								_List_fromArray(
									[$mdgriffith$elm_ui$Element$Font$center, $mdgriffith$elm_ui$Element$centerX]),
								_List_fromArray(
									[
										$mdgriffith$elm_ui$Element$text('Claims')
									])),
								$author$project$Page$Organize$DetainerWarrantCreation$formGroup(
								_List_fromArray(
									[
										A2($author$project$Page$Organize$DetainerWarrantCreation$viewAmountClaimed, options, form),
										A2($author$project$Page$Organize$DetainerWarrantCreation$viewAmountClaimedCategory, options, form)
									])),
								$author$project$Page$Organize$DetainerWarrantCreation$formGroup(
								_List_fromArray(
									[
										A2($author$project$Page$Organize$DetainerWarrantCreation$viewCares, options, form),
										A2($author$project$Page$Organize$DetainerWarrantCreation$viewLegacy, options, form),
										A2($author$project$Page$Organize$DetainerWarrantCreation$viewNonpayment, options, form)
									]))
							])),
						$author$project$Page$Organize$DetainerWarrantCreation$tile(
						_List_fromArray(
							[
								A2(
								$mdgriffith$elm_ui$Element$paragraph,
								_List_fromArray(
									[$mdgriffith$elm_ui$Element$Font$center, $mdgriffith$elm_ui$Element$centerX]),
								_List_fromArray(
									[
										$mdgriffith$elm_ui$Element$text('Defendants')
									])),
								A2($author$project$Page$Organize$DetainerWarrantCreation$viewAddress, options, form),
								A2($author$project$Page$Organize$DetainerWarrantCreation$viewDefendants, options, form)
							])),
						$author$project$Page$Organize$DetainerWarrantCreation$tile(
						_List_fromArray(
							[
								A2(
								$mdgriffith$elm_ui$Element$paragraph,
								_List_fromArray(
									[$mdgriffith$elm_ui$Element$Font$center, $mdgriffith$elm_ui$Element$centerX]),
								_List_fromArray(
									[
										$mdgriffith$elm_ui$Element$text('Judgements')
									])),
								A2($author$project$Page$Organize$DetainerWarrantCreation$viewJudgements, options, form)
							])),
						$author$project$Page$Organize$DetainerWarrantCreation$tile(
						_List_fromArray(
							[
								A2($author$project$Page$Organize$DetainerWarrantCreation$viewNotes, options, form)
							])),
						A2(
						$mdgriffith$elm_ui$Element$row,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$alignRight,
								$mdgriffith$elm_ui$Element$spacing(10)
							]),
						_List_fromArray(
							[$author$project$Page$Organize$DetainerWarrantCreation$submitAndAddAnother, $author$project$Page$Organize$DetainerWarrantCreation$submitButton]))
					]));
		}
	});
var $author$project$Page$Organize$DetainerWarrantCreation$viewProblem = function (problem) {
	return A2(
		$mdgriffith$elm_ui$Element$paragraph,
		_List_Nil,
		_List_fromArray(
			[
				function () {
				if (!problem.$) {
					var value = problem.b;
					return $mdgriffith$elm_ui$Element$none;
				} else {
					var err = problem.a;
					return $mdgriffith$elm_ui$Element$text('Something went wrong: ' + err);
				}
			}()
			]));
};
var $author$project$Page$Organize$DetainerWarrantCreation$viewProblems = function (problems) {
	return A2(
		$mdgriffith$elm_ui$Element$row,
		_List_Nil,
		_List_fromArray(
			[
				A2(
				$mdgriffith$elm_ui$Element$column,
				_List_Nil,
				A2($elm$core$List$map, $author$project$Page$Organize$DetainerWarrantCreation$viewProblem, problems))
			]));
};
var $author$project$Page$Organize$DetainerWarrantCreation$view = F2(
	function (settings, model) {
		return {
			gU: A2(
				$mdgriffith$elm_ui$Element$row,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$centerX,
						$mdgriffith$elm_ui$Element$padding(20),
						$mdgriffith$elm_ui$Element$Font$size(20),
						$mdgriffith$elm_ui$Element$width(
						A2(
							$mdgriffith$elm_ui$Element$minimum,
							400,
							A2($mdgriffith$elm_ui$Element$maximum, 1200, $mdgriffith$elm_ui$Element$fill))),
						$mdgriffith$elm_ui$Element$inFront(
						A2(
							$mdgriffith$elm_ui$Element$Input$button,
							_Utils_ap(
								$author$project$Page$Organize$DetainerWarrantCreation$primaryStyles,
								_Utils_ap(
									_List_fromArray(
										[
											$mdgriffith$elm_ui$Element$Font$size(14),
											$mdgriffith$elm_ui$Element$alignRight,
											$mdgriffith$elm_ui$Element$alignTop,
											$mdgriffith$elm_ui$Element$Events$onLoseFocus($author$project$Page$Organize$DetainerWarrantCreation$CloseTooltip)
										]),
									A3($author$project$Page$Organize$DetainerWarrantCreation$withTooltip, $author$project$Page$Organize$DetainerWarrantCreation$DetainerWarrantInfo, model.a, 'In some states, such as Tennessee, when a property owner wants to evict a tenant, he must first give notice, known as a detainer warrant. A detainer warrant is not the same as an arrest warrant, however. It is the document that informs the tenant about the court date set in the eviction proceeding. The notification gives the tenant the opportunity to appear in court and tell the judge her side of the story.'))),
							{
								hL: $mdgriffith$elm_ui$Element$text('What is a Detainer Warrant?'),
								lM: $elm$core$Maybe$Just(
									$author$project$Page$Organize$DetainerWarrantCreation$ChangeTooltip($author$project$Page$Organize$DetainerWarrantCreation$DetainerWarrantInfo))
							}))
					]),
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Element$column,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$centerX,
								$mdgriffith$elm_ui$Element$spacing(10)
							]),
						_List_fromArray(
							[
								A2(
								$mdgriffith$elm_ui$Element$row,
								_List_fromArray(
									[
										$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
									]),
								_List_fromArray(
									[
										A2(
										$mdgriffith$elm_ui$Element$column,
										_List_fromArray(
											[
												$mdgriffith$elm_ui$Element$centerX,
												$mdgriffith$elm_ui$Element$width(
												$mdgriffith$elm_ui$Element$px(300))
											]),
										_List_fromArray(
											[
												A2(
												$mdgriffith$elm_ui$Element$paragraph,
												_List_fromArray(
													[
														$mdgriffith$elm_ui$Element$Font$center,
														$mdgriffith$elm_ui$Element$centerX,
														$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink)
													]),
												_List_fromArray(
													[
														$mdgriffith$elm_ui$Element$text(
														function () {
															var _v0 = model.g4;
															if (!_v0.$) {
																return 'Edit';
															} else {
																return 'Create';
															}
														}() + ' Detainer Warrant')
													]))
											]))
									])),
								$author$project$Page$Organize$DetainerWarrantCreation$viewProblems(model.bx),
								A2(
								$mdgriffith$elm_ui$Element$row,
								_List_fromArray(
									[
										$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
									]),
								_List_fromArray(
									[
										A2(
										$author$project$Page$Organize$DetainerWarrantCreation$viewForm,
										$author$project$Page$Organize$DetainerWarrantCreation$formOptions(model),
										model.bZ)
									]))
							]))
					])),
			er: 'Organize - Detainer Warrant - Edit'
		};
	});
var $cuducos$elm_format_number$FormatNumber$Locales$Exact = function (a) {
	return {$: 2, a: a};
};
var $author$project$Page$Organize$DetainerWarrants$buttonLinkAttrs = _List_fromArray(
	[
		$mdgriffith$elm_ui$Element$Background$color($author$project$Palette$white),
		$mdgriffith$elm_ui$Element$Font$color($author$project$Palette$red),
		$mdgriffith$elm_ui$Element$Border$rounded(3),
		$mdgriffith$elm_ui$Element$Border$color($author$project$Palette$sred),
		$mdgriffith$elm_ui$Element$Border$width(1),
		$mdgriffith$elm_ui$Element$padding(10),
		$mdgriffith$elm_ui$Element$Font$size(16),
		$mdgriffith$elm_ui$Element$mouseOver(
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$Background$color($author$project$Palette$redLightest)
			])),
		$mdgriffith$elm_ui$Element$focused(
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$Background$color($author$project$Palette$redLightest)
			]))
	]);
var $author$project$Page$Organize$DetainerWarrants$createNewWarrant = A2(
	$mdgriffith$elm_ui$Element$row,
	_List_fromArray(
		[$mdgriffith$elm_ui$Element$centerX]),
	_List_fromArray(
		[
			A2(
			$mdgriffith$elm_ui$Element$link,
			$author$project$Page$Organize$DetainerWarrants$buttonLinkAttrs,
			{
				hL: $mdgriffith$elm_ui$Element$text('Enter New Detainer Warrant'),
				cF: $author$project$Route$href(
					$author$project$Route$DetainerWarrantCreation($elm$core$Maybe$Nothing))
			})
		]));
var $cuducos$elm_format_number$FormatNumber$Parser$FormattedNumber = F5(
	function (original, integers, decimals, prefix, suffix) {
		return {kb: decimals, hA: integers, h9: original, ek: prefix, mM: suffix};
	});
var $cuducos$elm_format_number$FormatNumber$Parser$Negative = 2;
var $cuducos$elm_format_number$FormatNumber$Parser$Positive = 0;
var $cuducos$elm_format_number$FormatNumber$Parser$Zero = 1;
var $cuducos$elm_format_number$FormatNumber$Parser$classify = function (formatted) {
	var onlyZeros = A2(
		$elm$core$String$all,
		function (_char) {
			return _char === '0';
		},
		$elm$core$String$concat(
			A2(
				$elm$core$List$append,
				formatted.hA,
				$elm$core$List$singleton(formatted.kb))));
	return onlyZeros ? 1 : ((formatted.h9 < 0) ? 2 : 0);
};
var $cuducos$elm_format_number$FormatNumber$Parser$addZerosToFit = F2(
	function (desiredLength, value) {
		var length = $elm$core$String$length(value);
		var missing = (_Utils_cmp(length, desiredLength) < 0) ? $elm$core$Basics$abs(desiredLength - length) : 0;
		return _Utils_ap(
			value,
			A2($elm$core$String$repeat, missing, '0'));
	});
var $elm$core$String$dropRight = F2(
	function (n, string) {
		return (n < 1) ? string : A3($elm$core$String$slice, 0, -n, string);
	});
var $cuducos$elm_format_number$FormatNumber$Parser$removeZeros = function (decimals) {
	return (A2($elm$core$String$right, 1, decimals) !== '0') ? decimals : $cuducos$elm_format_number$FormatNumber$Parser$removeZeros(
		A2($elm$core$String$dropRight, 1, decimals));
};
var $cuducos$elm_format_number$FormatNumber$Parser$getDecimals = F2(
	function (locale, digits) {
		var _v0 = locale.kb;
		switch (_v0.$) {
			case 1:
				return $cuducos$elm_format_number$FormatNumber$Parser$removeZeros(digits);
			case 2:
				return digits;
			default:
				var min = _v0.a;
				return A2($cuducos$elm_format_number$FormatNumber$Parser$addZerosToFit, min, digits);
		}
	});
var $myrho$elm_round$Round$addSign = F2(
	function (signed, str) {
		var isNotZero = A2(
			$elm$core$List$any,
			function (c) {
				return (c !== '0') && (c !== '.');
			},
			$elm$core$String$toList(str));
		return _Utils_ap(
			(signed && isNotZero) ? '-' : '',
			str);
	});
var $myrho$elm_round$Round$increaseNum = function (_v0) {
	var head = _v0.a;
	var tail = _v0.b;
	if (head === '9') {
		var _v1 = $elm$core$String$uncons(tail);
		if (_v1.$ === 1) {
			return '01';
		} else {
			var headtail = _v1.a;
			return A2(
				$elm$core$String$cons,
				'0',
				$myrho$elm_round$Round$increaseNum(headtail));
		}
	} else {
		var c = $elm$core$Char$toCode(head);
		return ((c >= 48) && (c < 57)) ? A2(
			$elm$core$String$cons,
			$elm$core$Char$fromCode(c + 1),
			tail) : '0';
	}
};
var $elm$core$Basics$isInfinite = _Basics_isInfinite;
var $elm$core$Basics$isNaN = _Basics_isNaN;
var $elm$core$String$padRight = F3(
	function (n, _char, string) {
		return _Utils_ap(
			string,
			A2(
				$elm$core$String$repeat,
				n - $elm$core$String$length(string),
				$elm$core$String$fromChar(_char)));
	});
var $myrho$elm_round$Round$splitComma = function (str) {
	var _v0 = A2($elm$core$String$split, '.', str);
	if (_v0.b) {
		if (_v0.b.b) {
			var before = _v0.a;
			var _v1 = _v0.b;
			var after = _v1.a;
			return _Utils_Tuple2(before, after);
		} else {
			var before = _v0.a;
			return _Utils_Tuple2(before, '0');
		}
	} else {
		return _Utils_Tuple2('0', '0');
	}
};
var $myrho$elm_round$Round$toDecimal = function (fl) {
	var _v0 = A2(
		$elm$core$String$split,
		'e',
		$elm$core$String$fromFloat(
			$elm$core$Basics$abs(fl)));
	if (_v0.b) {
		if (_v0.b.b) {
			var num = _v0.a;
			var _v1 = _v0.b;
			var exp = _v1.a;
			var e = A2(
				$elm$core$Maybe$withDefault,
				0,
				$elm$core$String$toInt(
					A2($elm$core$String$startsWith, '+', exp) ? A2($elm$core$String$dropLeft, 1, exp) : exp));
			var _v2 = $myrho$elm_round$Round$splitComma(num);
			var before = _v2.a;
			var after = _v2.b;
			var total = _Utils_ap(before, after);
			var zeroed = (e < 0) ? A2(
				$elm$core$Maybe$withDefault,
				'0',
				A2(
					$elm$core$Maybe$map,
					function (_v3) {
						var a = _v3.a;
						var b = _v3.b;
						return a + ('.' + b);
					},
					A2(
						$elm$core$Maybe$map,
						$elm$core$Tuple$mapFirst($elm$core$String$fromChar),
						$elm$core$String$uncons(
							_Utils_ap(
								A2(
									$elm$core$String$repeat,
									$elm$core$Basics$abs(e),
									'0'),
								total))))) : A3($elm$core$String$padRight, e + 1, '0', total);
			return _Utils_ap(
				(fl < 0) ? '-' : '',
				zeroed);
		} else {
			var num = _v0.a;
			return _Utils_ap(
				(fl < 0) ? '-' : '',
				num);
		}
	} else {
		return '';
	}
};
var $myrho$elm_round$Round$roundFun = F3(
	function (functor, s, fl) {
		if ($elm$core$Basics$isInfinite(fl) || $elm$core$Basics$isNaN(fl)) {
			return $elm$core$String$fromFloat(fl);
		} else {
			var signed = fl < 0;
			var _v0 = $myrho$elm_round$Round$splitComma(
				$myrho$elm_round$Round$toDecimal(
					$elm$core$Basics$abs(fl)));
			var before = _v0.a;
			var after = _v0.b;
			var r = $elm$core$String$length(before) + s;
			var normalized = _Utils_ap(
				A2($elm$core$String$repeat, (-r) + 1, '0'),
				A3(
					$elm$core$String$padRight,
					r,
					'0',
					_Utils_ap(before, after)));
			var totalLen = $elm$core$String$length(normalized);
			var roundDigitIndex = A2($elm$core$Basics$max, 1, r);
			var increase = A2(
				functor,
				signed,
				A3($elm$core$String$slice, roundDigitIndex, totalLen, normalized));
			var remains = A3($elm$core$String$slice, 0, roundDigitIndex, normalized);
			var num = increase ? $elm$core$String$reverse(
				A2(
					$elm$core$Maybe$withDefault,
					'1',
					A2(
						$elm$core$Maybe$map,
						$myrho$elm_round$Round$increaseNum,
						$elm$core$String$uncons(
							$elm$core$String$reverse(remains))))) : remains;
			var numLen = $elm$core$String$length(num);
			var numZeroed = (num === '0') ? num : ((s <= 0) ? _Utils_ap(
				num,
				A2(
					$elm$core$String$repeat,
					$elm$core$Basics$abs(s),
					'0')) : ((_Utils_cmp(
				s,
				$elm$core$String$length(after)) < 0) ? (A3($elm$core$String$slice, 0, numLen - s, num) + ('.' + A3($elm$core$String$slice, numLen - s, numLen, num))) : _Utils_ap(
				before + '.',
				A3($elm$core$String$padRight, s, '0', after))));
			return A2($myrho$elm_round$Round$addSign, signed, numZeroed);
		}
	});
var $myrho$elm_round$Round$round = $myrho$elm_round$Round$roundFun(
	F2(
		function (signed, str) {
			var _v0 = $elm$core$String$uncons(str);
			if (_v0.$ === 1) {
				return false;
			} else {
				if ('5' === _v0.a.a) {
					if (_v0.a.b === '') {
						var _v1 = _v0.a;
						return !signed;
					} else {
						var _v2 = _v0.a;
						return true;
					}
				} else {
					var _v3 = _v0.a;
					var _int = _v3.a;
					return function (i) {
						return ((i > 53) && signed) || ((i >= 53) && (!signed));
					}(
						$elm$core$Char$toCode(_int));
				}
			}
		}));
var $elm$core$List$tail = function (list) {
	if (list.b) {
		var x = list.a;
		var xs = list.b;
		return $elm$core$Maybe$Just(xs);
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $cuducos$elm_format_number$FormatNumber$Parser$splitInParts = F2(
	function (locale, value) {
		var toString = function () {
			var _v1 = locale.kb;
			switch (_v1.$) {
				case 1:
					var max = _v1.a;
					return $myrho$elm_round$Round$round(max);
				case 0:
					return $elm$core$String$fromFloat;
				default:
					var exact = _v1.a;
					return $myrho$elm_round$Round$round(exact);
			}
		}();
		var asList = A2(
			$elm$core$String$split,
			'.',
			toString(value));
		var decimals = function () {
			var _v0 = $elm$core$List$tail(asList);
			if (!_v0.$) {
				var values = _v0.a;
				return A2(
					$elm$core$Maybe$withDefault,
					'',
					$elm$core$List$head(values));
			} else {
				return '';
			}
		}();
		var integers = A2(
			$elm$core$Maybe$withDefault,
			'',
			$elm$core$List$head(asList));
		return _Utils_Tuple2(integers, decimals);
	});
var $cuducos$elm_format_number$FormatNumber$Parser$splitThousands = function (integers) {
	var reversedSplitThousands = function (value) {
		return ($elm$core$String$length(value) > 3) ? A2(
			$elm$core$List$cons,
			A2($elm$core$String$right, 3, value),
			reversedSplitThousands(
				A2($elm$core$String$dropRight, 3, value))) : _List_fromArray(
			[value]);
	};
	return $elm$core$List$reverse(
		reversedSplitThousands(integers));
};
var $cuducos$elm_format_number$FormatNumber$Parser$parse = F2(
	function (locale, original) {
		var parts = A2($cuducos$elm_format_number$FormatNumber$Parser$splitInParts, locale, original);
		var integers = $cuducos$elm_format_number$FormatNumber$Parser$splitThousands(
			A2($elm$core$String$filter, $elm$core$Char$isDigit, parts.a));
		var decimals = A2($cuducos$elm_format_number$FormatNumber$Parser$getDecimals, locale, parts.b);
		var partial = A5($cuducos$elm_format_number$FormatNumber$Parser$FormattedNumber, original, integers, decimals, '', '');
		var _v0 = $cuducos$elm_format_number$FormatNumber$Parser$classify(partial);
		switch (_v0) {
			case 2:
				return _Utils_update(
					partial,
					{ek: locale.ef, mM: locale.fu});
			case 0:
				return _Utils_update(
					partial,
					{ek: locale.$9, mM: locale.io});
			default:
				return _Utils_update(
					partial,
					{ek: locale.jb, mM: locale.jc});
		}
	});
var $cuducos$elm_format_number$FormatNumber$Stringfy$formatDecimals = F2(
	function (locale, decimals) {
		return (decimals === '') ? '' : _Utils_ap(locale.bl, decimals);
	});
var $cuducos$elm_format_number$FormatNumber$Stringfy$stringfy = F2(
	function (locale, formatted) {
		var stringfyDecimals = $cuducos$elm_format_number$FormatNumber$Stringfy$formatDecimals(locale);
		var integers = A2($elm$core$String$join, locale.bF, formatted.hA);
		var decimals = stringfyDecimals(formatted.kb);
		return $elm$core$String$concat(
			_List_fromArray(
				[formatted.ek, integers, decimals, formatted.mM]));
	});
var $cuducos$elm_format_number$FormatNumber$format = F2(
	function (locale, number_) {
		return A2(
			$cuducos$elm_format_number$FormatNumber$Stringfy$stringfy,
			locale,
			A2($cuducos$elm_format_number$FormatNumber$Parser$parse, locale, number_));
	});
var $elm$svg$Svg$animate = $elm$svg$Svg$trustedNode('animate');
var $elm$svg$Svg$Attributes$attributeName = _VirtualDom_attribute('attributeName');
var $elm$svg$Svg$Attributes$begin = _VirtualDom_attribute('begin');
var $elm$svg$Svg$Attributes$dur = _VirtualDom_attribute('dur');
var $elm$svg$Svg$Attributes$enableBackground = _VirtualDom_attribute('enable-background');
var $elm$svg$Svg$Attributes$repeatCount = _VirtualDom_attribute('repeatCount');
var $avh4$elm_color$Color$toCssString = function (_v0) {
	var r = _v0.a;
	var g = _v0.b;
	var b = _v0.c;
	var a = _v0.d;
	var roundTo = function (x) {
		return $elm$core$Basics$round(x * 1000) / 1000;
	};
	var pct = function (x) {
		return $elm$core$Basics$round(x * 10000) / 100;
	};
	return $elm$core$String$concat(
		_List_fromArray(
			[
				'rgba(',
				$elm$core$String$fromFloat(
				pct(r)),
				'%,',
				$elm$core$String$fromFloat(
				pct(g)),
				'%,',
				$elm$core$String$fromFloat(
				pct(b)),
				'%,',
				$elm$core$String$fromFloat(
				roundTo(a)),
				')'
			]));
};
var $elm$svg$Svg$Attributes$values = function (value) {
	return A2(
		_VirtualDom_attribute,
		'values',
		_VirtualDom_noJavaScriptUri(value));
};
var $elm$svg$Svg$Attributes$version = _VirtualDom_attribute('version');
var $elm$svg$Svg$Attributes$x = _VirtualDom_attribute('x');
var $elm$svg$Svg$Attributes$xmlSpace = A2(_VirtualDom_attributeNS, 'http://www.w3.org/XML/1998/namespace', 'xml:space');
var $elm$svg$Svg$Attributes$y = _VirtualDom_attribute('y');
var $author$project$Loader$horizontal = function (color) {
	var fillColor = $avh4$elm_color$Color$toCssString(color);
	return A2(
		$elm$svg$Svg$svg,
		_List_fromArray(
			[
				$elm$svg$Svg$Attributes$width('100px'),
				$elm$svg$Svg$Attributes$height('50px'),
				$elm$svg$Svg$Attributes$version('1.1'),
				$elm$svg$Svg$Attributes$x('0px'),
				$elm$svg$Svg$Attributes$y('0px'),
				$elm$svg$Svg$Attributes$viewBox('0 0 100 50'),
				$elm$svg$Svg$Attributes$enableBackground('new 0 0 0 0'),
				$elm$svg$Svg$Attributes$xmlSpace('preserve')
			]),
		_List_fromArray(
			[
				A2(
				$elm$svg$Svg$circle,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$fill(fillColor),
						$elm$svg$Svg$Attributes$stroke('none'),
						$elm$svg$Svg$Attributes$cx('30'),
						$elm$svg$Svg$Attributes$cy('25'),
						$elm$svg$Svg$Attributes$r('6')
					]),
				_List_fromArray(
					[
						A2(
						$elm$svg$Svg$animate,
						_List_fromArray(
							[
								$elm$svg$Svg$Attributes$attributeName('opacity'),
								$elm$svg$Svg$Attributes$dur('1s'),
								$elm$svg$Svg$Attributes$values('0;1;0'),
								$elm$svg$Svg$Attributes$repeatCount('indefinite'),
								$elm$svg$Svg$Attributes$begin('0.1')
							]),
						_List_Nil)
					])),
				A2(
				$elm$svg$Svg$circle,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$fill(fillColor),
						$elm$svg$Svg$Attributes$stroke('none'),
						$elm$svg$Svg$Attributes$cx('50'),
						$elm$svg$Svg$Attributes$cy('25'),
						$elm$svg$Svg$Attributes$r('6')
					]),
				_List_fromArray(
					[
						A2(
						$elm$svg$Svg$animate,
						_List_fromArray(
							[
								$elm$svg$Svg$Attributes$attributeName('opacity'),
								$elm$svg$Svg$Attributes$dur('1s'),
								$elm$svg$Svg$Attributes$values('0;1;0'),
								$elm$svg$Svg$Attributes$repeatCount('indefinite'),
								$elm$svg$Svg$Attributes$begin('0.2')
							]),
						_List_Nil)
					])),
				A2(
				$elm$svg$Svg$circle,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$fill(fillColor),
						$elm$svg$Svg$Attributes$stroke('none'),
						$elm$svg$Svg$Attributes$cx('70'),
						$elm$svg$Svg$Attributes$cy('25'),
						$elm$svg$Svg$Attributes$r('6')
					]),
				_List_fromArray(
					[
						A2(
						$elm$svg$Svg$animate,
						_List_fromArray(
							[
								$elm$svg$Svg$Attributes$attributeName('opacity'),
								$elm$svg$Svg$Attributes$dur('1s'),
								$elm$svg$Svg$Attributes$values('0;1;0'),
								$elm$svg$Svg$Attributes$repeatCount('indefinite'),
								$elm$svg$Svg$Attributes$begin('0.3')
							]),
						_List_Nil)
					]))
			]));
};
var $FabienHenon$elm_infinite_scroll$InfiniteScroll$isLoading = function (_v0) {
	var model = _v0;
	return model.b8;
};
var $avh4$elm_color$Color$RgbaSpace = F4(
	function (a, b, c, d) {
		return {$: 0, a: a, b: b, c: c, d: d};
	});
var $avh4$elm_color$Color$red = A4($avh4$elm_color$Color$RgbaSpace, 204 / 255, 0 / 255, 0 / 255, 1.0);
var $author$project$Page$Organize$DetainerWarrants$loader = function (_v0) {
	var infiniteScroll = _v0.aC;
	var search = _v0.y;
	return ($FabienHenon$elm_infinite_scroll$InfiniteScroll$isLoading(infiniteScroll) || _Utils_eq(search.ne, $elm$core$Maybe$Nothing)) ? A2(
		$mdgriffith$elm_ui$Element$row,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
				$mdgriffith$elm_ui$Element$alignBottom
			]),
		_List_fromArray(
			[
				A2(
				$mdgriffith$elm_ui$Element$el,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$centerX,
						$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink),
						$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink)
					]),
				$mdgriffith$elm_ui$Element$html(
					$author$project$Loader$horizontal($avh4$elm_color$Color$red)))
			])) : $mdgriffith$elm_ui$Element$none;
};
var $cuducos$elm_format_number$FormatNumber$Locales$Min = function (a) {
	return {$: 0, a: a};
};
var $cuducos$elm_format_number$FormatNumber$Locales$base = {
	bl: '.',
	kb: $cuducos$elm_format_number$FormatNumber$Locales$Min(0),
	ef: '−',
	fu: '',
	$9: '',
	io: '',
	bF: '',
	jb: '',
	jc: ''
};
var $cuducos$elm_format_number$FormatNumber$Locales$usLocale = _Utils_update(
	$cuducos$elm_format_number$FormatNumber$Locales$base,
	{
		kb: $cuducos$elm_format_number$FormatNumber$Locales$Exact(2),
		bF: ','
	});
var $elm$core$List$intersperse = F2(
	function (sep, xs) {
		if (!xs.b) {
			return _List_Nil;
		} else {
			var hd = xs.a;
			var tl = xs.b;
			var step = F2(
				function (x, rest) {
					return A2(
						$elm$core$List$cons,
						sep,
						A2($elm$core$List$cons, x, rest));
				});
			var spersed = A3($elm$core$List$foldr, step, _List_Nil, tl);
			return A2($elm$core$List$cons, hd, spersed);
		}
	});
var $author$project$Page$Organize$DetainerWarrants$viewFilter = function (filters) {
	var ifNonEmpty = F3(
		function (prefix, fn, filter) {
			if (!filter.$) {
				var value = filter.a;
				return _List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Element$paragraph,
						_List_fromArray(
							[$mdgriffith$elm_ui$Element$centerX, $mdgriffith$elm_ui$Element$Font$center]),
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$text(
								prefix + ('\"' + (fn(value) + '\"')))
							]))
					]);
			} else {
				return _List_Nil;
			}
		});
	return $elm$core$List$concat(
		_List_fromArray(
			[
				A3(ifNonEmpty, 'docket number contains ', $elm$core$Basics$identity, filters.g4),
				A3(ifNonEmpty, 'file date is ', $justinmimbs$date$Date$toIsoString, filters.hg),
				A3(ifNonEmpty, 'court date is ', $justinmimbs$date$Date$toIsoString, filters.bj),
				A3(ifNonEmpty, 'plaintiff contains ', $elm$core$Basics$identity, filters.ij),
				A3(ifNonEmpty, 'plaintiff attorney contains ', $elm$core$Basics$identity, filters.ik),
				A3(ifNonEmpty, 'defendant contains ', $elm$core$Basics$identity, filters.eQ),
				A3(ifNonEmpty, 'address contains ', $elm$core$Basics$identity, filters.je)
			]));
};
var $author$project$Page$Organize$DetainerWarrants$viewEmptyResults = function (filters) {
	return A2(
		$mdgriffith$elm_ui$Element$textColumn,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$centerX,
				$mdgriffith$elm_ui$Element$spacing(10)
			]),
		_Utils_ap(
			_List_fromArray(
				[
					A2(
					$mdgriffith$elm_ui$Element$paragraph,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$Font$center,
							$mdgriffith$elm_ui$Element$centerX,
							$mdgriffith$elm_ui$Element$Font$size(24)
						]),
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$text('No detainer warrants exist matching your search criteria:')
						])),
					A2(
					$mdgriffith$elm_ui$Element$paragraph,
					_List_fromArray(
						[$mdgriffith$elm_ui$Element$centerX, $mdgriffith$elm_ui$Element$Font$italic, $mdgriffith$elm_ui$Element$Font$center]),
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$text('where...')
						]))
				]),
			A2(
				$elm$core$List$intersperse,
				A2(
					$mdgriffith$elm_ui$Element$paragraph,
					_List_fromArray(
						[$mdgriffith$elm_ui$Element$centerX, $mdgriffith$elm_ui$Element$Font$center]),
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$text('&')
						])),
				$author$project$Page$Organize$DetainerWarrants$viewFilter(filters))));
};
var $author$project$Page$Organize$DetainerWarrants$SearchWarrants = {$: 9};
var $author$project$Page$Organize$DetainerWarrants$dateSearch = function (_v0) {
	var label = _v0.hL;
	var onChange = _v0.lI;
	var state = _v0.dv;
	var today = _v0.F;
	return A2(
		$fabhof$elm_ui_datepicker$DatePicker$input,
		_List_Nil,
		{
			hL: A2(
				$mdgriffith$elm_ui$Element$Input$labelAbove,
				_List_Nil,
				$mdgriffith$elm_ui$Element$text(label)),
			fs: state.l2,
			lI: onChange,
			fO: $elm$core$Maybe$Nothing,
			a3: state.gZ,
			fZ: $fabhof$elm_ui_datepicker$DatePicker$defaultSettings,
			mR: state.j9
		});
};
var $author$project$Page$Organize$DetainerWarrants$onEnter = function (msg) {
	return $mdgriffith$elm_ui$Element$htmlAttribute(
		A2(
			$elm$html$Html$Events$on,
			'keyup',
			A2(
				$elm$json$Json$Decode$andThen,
				function (key) {
					return (key === 'Enter') ? $elm$json$Json$Decode$succeed(msg) : $elm$json$Json$Decode$fail('Not the enter key');
				},
				A2($elm$json$Json$Decode$field, 'key', $elm$json$Json$Decode$string))));
};
var $author$project$Page$Organize$DetainerWarrants$textSearch = function (_v0) {
	var label = _v0.hL;
	var placeholder = _v0.fO;
	var query = _v0.bz;
	var onChange = _v0.lI;
	return A2(
		$mdgriffith$elm_ui$Element$Input$search,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$width(
				A2($mdgriffith$elm_ui$Element$maximum, 400, $mdgriffith$elm_ui$Element$fill)),
				$author$project$Page$Organize$DetainerWarrants$onEnter($author$project$Page$Organize$DetainerWarrants$SearchWarrants)
			]),
		{
			hL: A2(
				$mdgriffith$elm_ui$Element$Input$labelAbove,
				_List_Nil,
				$mdgriffith$elm_ui$Element$text(label)),
			lI: A2($elm$core$Basics$composeL, onChange, $elm$core$Maybe$Just),
			fO: $elm$core$Maybe$Nothing,
			mR: A2($elm$core$Maybe$withDefault, '', query)
		});
};
var $author$project$Page$Organize$DetainerWarrants$searchField = function (field) {
	if (!field.$) {
		var dateField = field.a;
		return $author$project$Page$Organize$DetainerWarrants$dateSearch(dateField);
	} else {
		var inputField = field.a;
		return $author$project$Page$Organize$DetainerWarrants$textSearch(inputField);
	}
};
var $author$project$Page$Organize$DetainerWarrants$ChangedCourtDate = function (a) {
	return {$: 2, a: a};
};
var $author$project$Page$Organize$DetainerWarrants$ChangedFileDate = function (a) {
	return {$: 1, a: a};
};
var $author$project$Page$Organize$DetainerWarrants$DateSearch = function (a) {
	return {$: 0, a: a};
};
var $author$project$Page$Organize$DetainerWarrants$InputAddress = function (a) {
	return {$: 6, a: a};
};
var $author$project$Page$Organize$DetainerWarrants$InputDefendant = function (a) {
	return {$: 5, a: a};
};
var $author$project$Page$Organize$DetainerWarrants$InputDocketId = function (a) {
	return {$: 0, a: a};
};
var $author$project$Page$Organize$DetainerWarrants$InputPlaintiff = function (a) {
	return {$: 3, a: a};
};
var $author$project$Page$Organize$DetainerWarrants$InputPlaintiffAttorney = function (a) {
	return {$: 4, a: a};
};
var $author$project$Page$Organize$DetainerWarrants$TextSearch = function (a) {
	return {$: 1, a: a};
};
var $author$project$Page$Organize$DetainerWarrants$searchFields = F2(
	function (model, filters) {
		return _List_fromArray(
			[
				$author$project$Page$Organize$DetainerWarrants$TextSearch(
				{hL: 'Docket #', lI: $author$project$Page$Organize$DetainerWarrants$InputDocketId, fO: '', bz: filters.g4}),
				$author$project$Page$Organize$DetainerWarrants$DateSearch(
				{hL: 'File date', lI: $author$project$Page$Organize$DetainerWarrants$ChangedFileDate, dv: model.hg, F: model.iz.F}),
				$author$project$Page$Organize$DetainerWarrants$DateSearch(
				{hL: 'Court date', lI: $author$project$Page$Organize$DetainerWarrants$ChangedCourtDate, dv: model.bj, F: model.iz.F}),
				$author$project$Page$Organize$DetainerWarrants$TextSearch(
				{hL: 'Plaintiff', lI: $author$project$Page$Organize$DetainerWarrants$InputPlaintiff, fO: '', bz: filters.ij}),
				$author$project$Page$Organize$DetainerWarrants$TextSearch(
				{hL: 'Plnt. attorney', lI: $author$project$Page$Organize$DetainerWarrants$InputPlaintiffAttorney, fO: '', bz: filters.ik}),
				$author$project$Page$Organize$DetainerWarrants$TextSearch(
				{hL: 'Defendant', lI: $author$project$Page$Organize$DetainerWarrants$InputDefendant, fO: '', bz: filters.eQ}),
				$author$project$Page$Organize$DetainerWarrants$TextSearch(
				{hL: 'Address', lI: $author$project$Page$Organize$DetainerWarrants$InputAddress, fO: '', bz: filters.je})
			]);
	});
var $author$project$Page$Organize$DetainerWarrants$viewSearchBar = function (model) {
	return A2(
		$mdgriffith$elm_ui$Element$wrappedRow,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$width(
				A2($mdgriffith$elm_ui$Element$maximum, 1200, $mdgriffith$elm_ui$Element$fill)),
				$mdgriffith$elm_ui$Element$spacing(10),
				$mdgriffith$elm_ui$Element$padding(10),
				$mdgriffith$elm_ui$Element$centerY,
				$mdgriffith$elm_ui$Element$centerX
			]),
		_Utils_ap(
			A2(
				$elm$core$List$map,
				$author$project$Page$Organize$DetainerWarrants$searchField,
				A2($author$project$Page$Organize$DetainerWarrants$searchFields, model, model.y.ab)),
			_List_fromArray(
				[
					A2(
					$mdgriffith$elm_ui$Element$Input$button,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$alignBottom,
							$mdgriffith$elm_ui$Element$Background$color($author$project$Palette$redLight),
							$mdgriffith$elm_ui$Element$focused(
							_List_fromArray(
								[
									$mdgriffith$elm_ui$Element$Background$color($author$project$Palette$red)
								])),
							$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
							$mdgriffith$elm_ui$Element$Font$color(
							A3($mdgriffith$elm_ui$Element$rgb, 255, 255, 255)),
							$mdgriffith$elm_ui$Element$padding(10),
							$mdgriffith$elm_ui$Element$Border$rounded(5),
							$mdgriffith$elm_ui$Element$height(
							$mdgriffith$elm_ui$Element$px(50))
						]),
					{
						hL: $mdgriffith$elm_ui$Element$text('Search'),
						lM: $elm$core$Maybe$Just($author$project$Page$Organize$DetainerWarrants$SearchWarrants)
					})
				])));
};
var $elm$core$String$append = _String_append;
var $mdgriffith$elm_ui$Element$InternalIndexedColumn = function (a) {
	return {$: 0, a: a};
};
var $mdgriffith$elm_ui$Element$indexedTable = F2(
	function (attrs, config) {
		return A2(
			$mdgriffith$elm_ui$Element$tableHelper,
			attrs,
			{
				jY: A2($elm$core$List$map, $mdgriffith$elm_ui$Element$InternalIndexedColumn, config.jY),
				eN: config.eN
			});
	});
var $FabienHenon$elm_infinite_scroll$InfiniteScroll$Scroll = function (a) {
	return {$: 0, a: a};
};
var $FabienHenon$elm_infinite_scroll$InfiniteScroll$ScrollPos = F3(
	function (scrollTop, contentHeight, containerHeight) {
		return {gT: containerHeight, gV: contentHeight, iC: scrollTop};
	});
var $FabienHenon$elm_infinite_scroll$InfiniteScroll$clientHeight = $elm$json$Json$Decode$oneOf(
	_List_fromArray(
		[
			A2(
			$elm$json$Json$Decode$at,
			_List_fromArray(
				['target', 'clientHeight']),
			$elm$json$Json$Decode$int),
			A2(
			$elm$json$Json$Decode$at,
			_List_fromArray(
				['target', 'scrollingElement', 'clientHeight']),
			$elm$json$Json$Decode$int)
		]));
var $elm$json$Json$Decode$map3 = _Json_map3;
var $FabienHenon$elm_infinite_scroll$InfiniteScroll$offsetHeight = $elm$json$Json$Decode$oneOf(
	_List_fromArray(
		[
			A2(
			$elm$json$Json$Decode$at,
			_List_fromArray(
				['target', 'offsetHeight']),
			$elm$json$Json$Decode$int),
			A2(
			$elm$json$Json$Decode$at,
			_List_fromArray(
				['target', 'scrollingElement', 'offsetHeight']),
			$elm$json$Json$Decode$int)
		]));
var $FabienHenon$elm_infinite_scroll$InfiniteScroll$decodeScrollPos = A4(
	$elm$json$Json$Decode$map3,
	$FabienHenon$elm_infinite_scroll$InfiniteScroll$ScrollPos,
	$elm$json$Json$Decode$oneOf(
		_List_fromArray(
			[
				A2(
				$elm$json$Json$Decode$at,
				_List_fromArray(
					['target', 'scrollTop']),
				$elm$json$Json$Decode$float),
				A2(
				$elm$json$Json$Decode$at,
				_List_fromArray(
					['target', 'scrollingElement', 'scrollTop']),
				$elm$json$Json$Decode$float)
			])),
	$elm$json$Json$Decode$oneOf(
		_List_fromArray(
			[
				A2(
				$elm$json$Json$Decode$at,
				_List_fromArray(
					['target', 'scrollHeight']),
				$elm$json$Json$Decode$int),
				A2(
				$elm$json$Json$Decode$at,
				_List_fromArray(
					['target', 'scrollingElement', 'scrollHeight']),
				$elm$json$Json$Decode$int)
			])),
	A3($elm$json$Json$Decode$map2, $elm$core$Basics$max, $FabienHenon$elm_infinite_scroll$InfiniteScroll$offsetHeight, $FabienHenon$elm_infinite_scroll$InfiniteScroll$clientHeight));
var $elm$html$Html$Attributes$map = $elm$virtual_dom$VirtualDom$mapAttribute;
var $FabienHenon$elm_infinite_scroll$InfiniteScroll$infiniteScroll = function (mapper) {
	return A2(
		$elm$html$Html$Attributes$map,
		mapper,
		A2(
			$elm$html$Html$Events$stopPropagationOn,
			'scroll',
			A2(
				$elm$json$Json$Decode$map,
				function (pos) {
					return _Utils_Tuple2(
						$FabienHenon$elm_infinite_scroll$InfiniteScroll$Scroll(pos),
						true);
				},
				$FabienHenon$elm_infinite_scroll$InfiniteScroll$decodeScrollPos)));
};
var $author$project$Palette$grayBack = A3($mdgriffith$elm_ui$Element$rgb255, 248, 249, 249);
var $mdgriffith$elm_ui$Internal$Flag$borderStyle = $mdgriffith$elm_ui$Internal$Flag$flag(11);
var $mdgriffith$elm_ui$Element$Border$solid = A2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$borderStyle, $mdgriffith$elm_ui$Internal$Style$classes.jI);
var $author$project$Palette$transparent = A4($mdgriffith$elm_ui$Element$rgba, 0, 0, 0, 0);
var $author$project$Page$Organize$DetainerWarrants$viewDocketId = F4(
	function (hovered, selected, index, warrant) {
		var striped = !A2($elm$core$Basics$modBy, 2, index);
		var attrs = _List_fromArray(
			[
				$mdgriffith$elm_ui$Element$width(
				A2($mdgriffith$elm_ui$Element$maximum, 200, $mdgriffith$elm_ui$Element$shrink)),
				$mdgriffith$elm_ui$Element$height(
				$mdgriffith$elm_ui$Element$px(60)),
				$mdgriffith$elm_ui$Element$Border$widthEach(
				{eH: 0, fb: 4, fT: 0, gd: 0}),
				$mdgriffith$elm_ui$Element$Border$color($author$project$Palette$transparent)
			]);
		return A2(
			$mdgriffith$elm_ui$Element$row,
			_Utils_ap(
				attrs,
				_Utils_ap(
					_Utils_eq(
						selected,
						$elm$core$Maybe$Just(warrant.g4)) ? _List_fromArray(
						[
							$mdgriffith$elm_ui$Element$Border$color($author$project$Palette$sred)
						]) : _List_Nil,
					_Utils_eq(
						hovered,
						$elm$core$Maybe$Just(warrant.g4)) ? _List_fromArray(
						[
							$mdgriffith$elm_ui$Element$Background$color($author$project$Palette$redLightest)
						]) : (striped ? _List_fromArray(
						[
							$mdgriffith$elm_ui$Element$Background$color($author$project$Palette$grayBack)
						]) : _List_Nil))),
			_List_fromArray(
				[
					A2(
					$mdgriffith$elm_ui$Element$column,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
							$mdgriffith$elm_ui$Element$height(
							$mdgriffith$elm_ui$Element$px(60)),
							$mdgriffith$elm_ui$Element$padding(10),
							$mdgriffith$elm_ui$Element$Border$solid,
							$mdgriffith$elm_ui$Element$Border$color($author$project$Palette$grayLight),
							$mdgriffith$elm_ui$Element$Border$widthEach(
							{eH: 1, fb: 0, fT: 0, gd: 0})
						]),
					_List_fromArray(
						[
							A2(
							$mdgriffith$elm_ui$Element$el,
							_List_fromArray(
								[$mdgriffith$elm_ui$Element$centerY]),
							$mdgriffith$elm_ui$Element$text(warrant.g4))
						]))
				]));
	});
var $author$project$Page$Organize$DetainerWarrants$SelectWarrant = function (a) {
	return {$: 7, a: a};
};
var $author$project$Page$Organize$DetainerWarrants$HoverWarrant = function (a) {
	return {$: 8, a: a};
};
var $mdgriffith$elm_ui$Element$clipX = A2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$overflow, $mdgriffith$elm_ui$Internal$Style$classes.jU);
var $author$project$Page$Organize$DetainerWarrants$tableCellAttrs = F3(
	function (striped, hovered, warrant) {
		return _Utils_ap(
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width(
					A2($mdgriffith$elm_ui$Element$maximum, 200, $mdgriffith$elm_ui$Element$shrink)),
					$mdgriffith$elm_ui$Element$height(
					$mdgriffith$elm_ui$Element$px(60)),
					$mdgriffith$elm_ui$Element$clipX,
					$mdgriffith$elm_ui$Element$padding(10),
					$mdgriffith$elm_ui$Element$Border$solid,
					$mdgriffith$elm_ui$Element$Border$color($author$project$Palette$grayLight),
					$mdgriffith$elm_ui$Element$Border$widthEach(
					{eH: 1, fb: 0, fT: 0, gd: 0}),
					$mdgriffith$elm_ui$Element$Events$onMouseDown(
					$author$project$Page$Organize$DetainerWarrants$SelectWarrant(warrant.g4)),
					$mdgriffith$elm_ui$Element$Events$onMouseEnter(
					$author$project$Page$Organize$DetainerWarrants$HoverWarrant(warrant.g4))
				]),
			_Utils_eq(
				hovered,
				$elm$core$Maybe$Just(warrant.g4)) ? _List_fromArray(
				[
					$mdgriffith$elm_ui$Element$Background$color($author$project$Palette$redLightest)
				]) : (striped ? _List_fromArray(
				[
					$mdgriffith$elm_ui$Element$Background$color($author$project$Palette$grayBack)
				]) : _List_Nil));
	});
var $author$project$Page$Organize$DetainerWarrants$viewEditButton = F3(
	function (hovered, index, warrant) {
		return A2(
			$mdgriffith$elm_ui$Element$row,
			A3(
				$author$project$Page$Organize$DetainerWarrants$tableCellAttrs,
				!A2($elm$core$Basics$modBy, 2, index),
				hovered,
				warrant),
			_List_fromArray(
				[
					A2(
					$mdgriffith$elm_ui$Element$link,
					_Utils_ap(
						$author$project$Page$Organize$DetainerWarrants$buttonLinkAttrs,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$Events$onFocus(
								$author$project$Page$Organize$DetainerWarrants$SelectWarrant(warrant.g4))
							])),
					{
						hL: $mdgriffith$elm_ui$Element$text('Edit'),
						cF: $author$project$Route$href(
							$author$project$Route$DetainerWarrantCreation(
								$elm$core$Maybe$Just(warrant.g4)))
					})
				]));
	});
var $author$project$Page$Organize$DetainerWarrants$viewHeaderCell = function (text) {
	return A2(
		$mdgriffith$elm_ui$Element$row,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$width(
				A2($mdgriffith$elm_ui$Element$maximum, 200, $mdgriffith$elm_ui$Element$shrink)),
				$mdgriffith$elm_ui$Element$padding(10),
				$mdgriffith$elm_ui$Element$Font$semiBold,
				$mdgriffith$elm_ui$Element$Border$solid,
				$mdgriffith$elm_ui$Element$Border$color($author$project$Palette$grayLight),
				$mdgriffith$elm_ui$Element$Border$widthEach(
				{eH: 1, fb: 0, fT: 0, gd: 0})
			]),
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$text(text)
			]));
};
var $author$project$Palette$gold = A3($mdgriffith$elm_ui$Element$rgb255, 205, 145, 60);
var $author$project$Palette$purple = A3($mdgriffith$elm_ui$Element$rgb255, 156, 39, 176);
var $author$project$Page$Organize$DetainerWarrants$viewStatusIcon = F3(
	function (hovered, index, warrant) {
		var icon = function (_v3) {
			var letter = _v3.a;
			var fontColor = _v3.b;
			var backgroundColor = _v3.c;
			return A2(
				$mdgriffith$elm_ui$Element$el,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$width(
						$mdgriffith$elm_ui$Element$px(20)),
						$mdgriffith$elm_ui$Element$height(
						$mdgriffith$elm_ui$Element$px(20)),
						$mdgriffith$elm_ui$Element$centerX,
						$mdgriffith$elm_ui$Element$Border$width(1),
						$mdgriffith$elm_ui$Element$Border$rounded(2),
						$mdgriffith$elm_ui$Element$Font$color(fontColor),
						$mdgriffith$elm_ui$Element$Background$color(backgroundColor)
					]),
				A2(
					$mdgriffith$elm_ui$Element$el,
					_List_fromArray(
						[$mdgriffith$elm_ui$Element$centerX, $mdgriffith$elm_ui$Element$centerY]),
					$mdgriffith$elm_ui$Element$text(letter)));
		};
		return A2(
			$mdgriffith$elm_ui$Element$row,
			A3(
				$author$project$Page$Organize$DetainerWarrants$tableCellAttrs,
				!A2($elm$core$Basics$modBy, 2, index),
				hovered,
				warrant),
			_List_fromArray(
				[
					function () {
					var _v0 = warrant.iM;
					if (!_v0.$) {
						if (_v0.a === 1) {
							var _v1 = _v0.a;
							return icon(
								_Utils_Tuple3('P', $author$project$Palette$gold, $author$project$Palette$white));
						} else {
							var _v2 = _v0.a;
							return icon(
								_Utils_Tuple3('C', $author$project$Palette$purple, $author$project$Palette$white));
						}
					} else {
						return $mdgriffith$elm_ui$Element$none;
					}
				}()
				]));
	});
var $author$project$Page$Organize$DetainerWarrants$viewTextRow = F4(
	function (hovered, toText, index, warrant) {
		return A2(
			$mdgriffith$elm_ui$Element$row,
			A3(
				$author$project$Page$Organize$DetainerWarrants$tableCellAttrs,
				!A2($elm$core$Basics$modBy, 2, index),
				hovered,
				warrant),
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$text(
					toText(warrant))
				]));
	});
var $author$project$Page$Organize$DetainerWarrants$viewWarrants = function (model) {
	var cell = $author$project$Page$Organize$DetainerWarrants$viewTextRow(model.bq);
	return A2(
		$mdgriffith$elm_ui$Element$indexedTable,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$width(
				A2($mdgriffith$elm_ui$Element$maximum, 1400, $mdgriffith$elm_ui$Element$fill)),
				$mdgriffith$elm_ui$Element$height(
				$mdgriffith$elm_ui$Element$px(600)),
				$mdgriffith$elm_ui$Element$Font$size(14),
				$mdgriffith$elm_ui$Element$scrollbarY,
				$mdgriffith$elm_ui$Element$htmlAttribute(
				$FabienHenon$elm_infinite_scroll$InfiniteScroll$infiniteScroll($author$project$Page$Organize$DetainerWarrants$InfiniteScrollMsg))
			]),
		{
			jY: _List_fromArray(
				[
					{
					am: $mdgriffith$elm_ui$Element$none,
					i_: $author$project$Page$Organize$DetainerWarrants$viewStatusIcon(model.bq),
					i5: $mdgriffith$elm_ui$Element$px(40)
				},
					{
					am: $author$project$Page$Organize$DetainerWarrants$viewHeaderCell('Docket #'),
					i_: A2($author$project$Page$Organize$DetainerWarrants$viewDocketId, model.bq, model.a3),
					i5: $mdgriffith$elm_ui$Element$fill
				},
					{
					am: $author$project$Page$Organize$DetainerWarrants$viewHeaderCell('File Date'),
					i_: cell(
						A2(
							$elm$core$Basics$composeL,
							A2(
								$elm$core$Basics$composeL,
								$elm$core$Maybe$withDefault(''),
								$elm$core$Maybe$map($justinmimbs$date$Date$toIsoString)),
							function ($) {
								return $.hg;
							})),
					i5: $mdgriffith$elm_ui$Element$fill
				},
					{
					am: $author$project$Page$Organize$DetainerWarrants$viewHeaderCell('Plaintiff'),
					i_: cell(
						A2(
							$elm$core$Basics$composeL,
							A2(
								$elm$core$Basics$composeL,
								$elm$core$Maybe$withDefault(''),
								$elm$core$Maybe$map(
									function ($) {
										return $.h1;
									})),
							function ($) {
								return $.ij;
							})),
					i5: $mdgriffith$elm_ui$Element$fill
				},
					{
					am: $author$project$Page$Organize$DetainerWarrants$viewHeaderCell('Plnt. Attorney'),
					i_: cell(
						A2(
							$elm$core$Basics$composeL,
							A2(
								$elm$core$Basics$composeL,
								$elm$core$Maybe$withDefault(''),
								$elm$core$Maybe$map(
									function ($) {
										return $.h1;
									})),
							function ($) {
								return $.ik;
							})),
					i5: $mdgriffith$elm_ui$Element$fill
				},
					{
					am: $author$project$Page$Organize$DetainerWarrants$viewHeaderCell('Amount Claimed'),
					i_: cell(
						A2(
							$elm$core$Basics$composeL,
							A2(
								$elm$core$Basics$composeL,
								$elm$core$Maybe$withDefault(''),
								$elm$core$Maybe$map(
									A2(
										$elm$core$Basics$composeL,
										$elm$core$String$append('$'),
										$elm$core$String$fromFloat))),
							function ($) {
								return $.gH;
							})),
					i5: $mdgriffith$elm_ui$Element$fill
				},
					{
					am: $author$project$Page$Organize$DetainerWarrants$viewHeaderCell('Address'),
					i_: cell(
						A2(
							$elm$core$Basics$composeL,
							A2(
								$elm$core$Basics$composeL,
								A2(
									$elm$core$Basics$composeL,
									$elm$core$Maybe$withDefault(''),
									$elm$core$Maybe$map(
										function ($) {
											return $.je;
										})),
								$elm$core$List$head),
							function ($) {
								return $.g0;
							})),
					i5: $mdgriffith$elm_ui$Element$fill
				},
					{
					am: $author$project$Page$Organize$DetainerWarrants$viewHeaderCell('Defendant'),
					i_: cell(
						A2(
							$elm$core$Basics$composeL,
							A2(
								$elm$core$Basics$composeL,
								A2(
									$elm$core$Basics$composeL,
									$elm$core$Maybe$withDefault(''),
									$elm$core$Maybe$map(
										function ($) {
											return $.h1;
										})),
								$elm$core$List$head),
							function ($) {
								return $.g0;
							})),
					i5: $mdgriffith$elm_ui$Element$fill
				},
					{
					am: $author$project$Page$Organize$DetainerWarrants$viewHeaderCell('Edit'),
					i_: $author$project$Page$Organize$DetainerWarrants$viewEditButton(model.bq),
					i5: $mdgriffith$elm_ui$Element$fill
				}
				]),
			eN: model.nk
		});
};
var $author$project$Page$Organize$DetainerWarrants$view = F2(
	function (settings, model) {
		return {
			gU: A2(
				$mdgriffith$elm_ui$Element$row,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$centerX,
						$mdgriffith$elm_ui$Element$padding(10),
						$mdgriffith$elm_ui$Element$Font$size(20),
						$mdgriffith$elm_ui$Element$width(
						A2(
							$mdgriffith$elm_ui$Element$minimum,
							400,
							A2($mdgriffith$elm_ui$Element$maximum, 2000, $mdgriffith$elm_ui$Element$fill)))
					]),
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Element$column,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$centerX,
								$mdgriffith$elm_ui$Element$spacing(10),
								$mdgriffith$elm_ui$Element$inFront(
								$author$project$Page$Organize$DetainerWarrants$loader(model))
							]),
						_List_fromArray(
							[
								$author$project$Page$Organize$DetainerWarrants$createNewWarrant,
								$author$project$Page$Organize$DetainerWarrants$viewSearchBar(model),
								function () {
								var _v0 = model.y.ne;
								if (!_v0.$) {
									var total = _v0.a;
									return (total > 1) ? A2(
										$mdgriffith$elm_ui$Element$paragraph,
										_List_fromArray(
											[$mdgriffith$elm_ui$Element$Font$center]),
										_List_fromArray(
											[
												$mdgriffith$elm_ui$Element$text(
												A2(
													$cuducos$elm_format_number$FormatNumber$format,
													_Utils_update(
														$cuducos$elm_format_number$FormatNumber$Locales$usLocale,
														{
															kb: $cuducos$elm_format_number$FormatNumber$Locales$Exact(0)
														}),
													total) + ' detainer warrants matched your search.')
											])) : $mdgriffith$elm_ui$Element$none;
								} else {
									return $mdgriffith$elm_ui$Element$none;
								}
							}(),
								_Utils_eq(
								model.y.ne,
								$elm$core$Maybe$Just(0)) ? A2(
								$elm$core$Maybe$withDefault,
								$mdgriffith$elm_ui$Element$none,
								A2($elm$core$Maybe$map, $author$project$Page$Organize$DetainerWarrants$viewEmptyResults, model.y.dk)) : $author$project$Page$Organize$DetainerWarrants$viewWarrants(model)
							]))
					])),
			er: 'Organize - Detainer Warrants'
		};
	});
var $author$project$Page$Organize$Event$heading = _List_fromArray(
	[
		$mdgriffith$elm_ui$Element$centerX,
		$mdgriffith$elm_ui$Element$Font$size(26)
	]);
var $author$project$Page$Organize$Event$TogglePhoneBankForm = function (a) {
	return {$: 2, a: a};
};
var $author$project$Page$Organize$Event$tableCellAttrs = _List_fromArray(
	[
		$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
		$mdgriffith$elm_ui$Element$height(
		$mdgriffith$elm_ui$Element$px(60)),
		$mdgriffith$elm_ui$Element$padding(10),
		$mdgriffith$elm_ui$Element$Border$solid,
		$mdgriffith$elm_ui$Element$Border$color($author$project$Palette$grayLight),
		$mdgriffith$elm_ui$Element$Border$widthEach(
		{eH: 1, fb: 0, fT: 0, gd: 0})
	]);
var $author$project$Page$Organize$Event$viewContactButton = function (tenant) {
	return A2(
		$mdgriffith$elm_ui$Element$row,
		$author$project$Page$Organize$Event$tableCellAttrs,
		_List_fromArray(
			[
				A2(
				$mdgriffith$elm_ui$Element$Input$button,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$Background$color($author$project$Palette$sred),
						$mdgriffith$elm_ui$Element$Font$color($author$project$Palette$white),
						$mdgriffith$elm_ui$Element$Border$rounded(3),
						$mdgriffith$elm_ui$Element$padding(5)
					]),
				{
					hL: $mdgriffith$elm_ui$Element$text('Start call'),
					lM: $elm$core$Maybe$Just(
						$author$project$Page$Organize$Event$TogglePhoneBankForm(tenant))
				})
			]));
};
var $author$project$Page$Organize$Event$viewHeaderCell = function (text) {
	return A2(
		$mdgriffith$elm_ui$Element$row,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
				$mdgriffith$elm_ui$Element$padding(10),
				$mdgriffith$elm_ui$Element$Font$semiBold,
				$mdgriffith$elm_ui$Element$Border$solid,
				$mdgriffith$elm_ui$Element$Border$color($author$project$Palette$grayLight),
				$mdgriffith$elm_ui$Element$Border$widthEach(
				{eH: 1, fb: 0, fT: 0, gd: 0})
			]),
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$text(text)
			]));
};
var $author$project$Page$Organize$Event$viewTextRow = function (text) {
	return A2(
		$mdgriffith$elm_ui$Element$row,
		$author$project$Page$Organize$Event$tableCellAttrs,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$text(text)
			]));
};
var $author$project$Page$Organize$Event$viewDefendants = F2(
	function (maybeForm, defendants) {
		return A2(
			$mdgriffith$elm_ui$Element$table,
			_List_Nil,
			{
				jY: _List_fromArray(
					[
						{
						am: $author$project$Page$Organize$Event$viewHeaderCell('Name'),
						i_: A2(
							$elm$core$Basics$composeL,
							$author$project$Page$Organize$Event$viewTextRow,
							function ($) {
								return $.h1;
							}),
						i5: $mdgriffith$elm_ui$Element$fill
					},
						{
						am: $author$project$Page$Organize$Event$viewHeaderCell('Address'),
						i_: A2(
							$elm$core$Basics$composeL,
							$author$project$Page$Organize$Event$viewTextRow,
							function ($) {
								return $.je;
							}),
						i5: $mdgriffith$elm_ui$Element$fill
					},
						{
						am: $author$project$Page$Organize$Event$viewHeaderCell('Phone Number'),
						i_: function (defendant) {
							return $author$project$Page$Organize$Event$viewTextRow(
								function () {
									var _v0 = defendant.nj;
									if (!_v0.$) {
										var phone = _v0.a;
										return phone.lA;
									} else {
										return A2(
											$elm$core$Maybe$withDefault,
											'N/A',
											A2(
												$elm$core$Maybe$map,
												A2(
													$elm$core$Basics$composeL,
													A2(
														$elm$core$Basics$composeL,
														$elm$core$String$join(','),
														$elm$core$List$take(2)),
													$elm$core$String$split(',')),
												defendant.l5));
									}
								}());
						},
						i5: $mdgriffith$elm_ui$Element$fill
					},
						{
						am: $author$project$Page$Organize$Event$viewHeaderCell('Phone Type'),
						i_: A2(
							$elm$core$Basics$composeL,
							A2(
								$elm$core$Basics$composeL,
								A2(
									$elm$core$Basics$composeL,
									$author$project$Page$Organize$Event$viewTextRow,
									$elm$core$Maybe$withDefault('')),
								$elm$core$Maybe$andThen(
									function ($) {
										return $.l1;
									})),
							function ($) {
								return $.nj;
							}),
						i5: $mdgriffith$elm_ui$Element$fill
					},
						{
						am: $author$project$Page$Organize$Event$viewHeaderCell('Contact'),
						i_: $author$project$Page$Organize$Event$viewContactButton,
						i5: $mdgriffith$elm_ui$Element$fill
					}
					]),
				eN: function () {
					if (!maybeForm.$) {
						var phoneBankForm = maybeForm.a;
						return A2(
							$elm$core$List$filter,
							A2(
								$elm$core$Basics$composeL,
								$elm$core$Basics$eq(phoneBankForm.cx.hs),
								function ($) {
									return $.hs;
								}),
							defendants);
					} else {
						return defendants;
					}
				}()
			});
	});
var $author$project$Page$Organize$Event$viewStepOne = F2(
	function (user, phoneBankForm) {
		return A2(
			$mdgriffith$elm_ui$Element$paragraph,
			_List_Nil,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$text('\"Hi ' + (phoneBankForm.cx.h1 + ('! As I said, my name is ' + (user.h1 + ' and I am with an organization called the Red Door Collective. We are a group of renters and tenants in Davidson County. I am calling because we are trying to speak to people with upcoming detainer warrants or evictions. Do you have a few minutes to talk?\"'))))
				]));
	});
var $author$project$Palette$blueLight = A3($mdgriffith$elm_ui$Element$rgb255, 128, 222, 234);
var $mdgriffith$elm_ui$Element$Font$underline = $mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.nh);
var $author$project$Page$Organize$Event$viewStepThree = function (phoneBankForm) {
	return _List_fromArray(
		[
			A2(
			$mdgriffith$elm_ui$Element$paragraph,
			_List_Nil,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$text('Step 3: [Depending on how the conversation goes, communicate the following information].')
				])),
			A2(
			$mdgriffith$elm_ui$Element$paragraph,
			_List_Nil,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$text('If they want to know how detainer warrants/the legal process works: Go to “A Reminder on the Proper Legal Eviction Process” section of the Open Table website link.')
				])),
			A2(
			$mdgriffith$elm_ui$Element$paragraph,
			_List_Nil,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$text('If they have an upcoming court date: Currently, all eviction cases are pushed back through June. If your date was between now and then, the plaintiff or your landlord will need to reschedule with the court and they are supposed to inform you of the date. They may not do that, so you should find it yourself [see next section]. ')
				])),
			A2(
			$mdgriffith$elm_ui$Element$paragraph,
			_List_Nil,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$text('If they don’t know their court date: “To find out your court date, you can call the court clerks on a regular basis to ask when their court date is scheduled. Their phone number is 615-862-5195. You can also check '),
					A2(
					$mdgriffith$elm_ui$Element$link,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$Font$color($author$project$Palette$blueLight),
							$mdgriffith$elm_ui$Element$Font$underline
						]),
					{
						hL: $mdgriffith$elm_ui$Element$text('http://circuitclerk.nashville.gov'),
						cF: 'http://circuitclerk.nashville.gov'
					}),
					$mdgriffith$elm_ui$Element$text(' for the upcoming court cases. Go to the website and click “General Sessions” at the top and “civil dockets” on the left side. ')
				])),
			A2(
			$mdgriffith$elm_ui$Element$paragraph,
			_List_Nil,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$text('If they need legal assistance:')
				])),
			A2(
			$mdgriffith$elm_ui$Element$paragraph,
			_List_Nil,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$text('If they need monetary assistance:')
				])),
			A2(
			$mdgriffith$elm_ui$Element$paragraph,
			_List_Nil,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$text('If they want to get in touch/join RDC: We meet weekly on Zoom every Thursday at 6:30PM. You can email us at '),
					A2(
					$mdgriffith$elm_ui$Element$link,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$Font$color($author$project$Palette$blueLight),
							$mdgriffith$elm_ui$Element$Font$underline
						]),
					{
						hL: $mdgriffith$elm_ui$Element$text('reddoormidtn@gmail.com'),
						cF: 'mailto:reddoormidtn@gmail.com'
					}),
					$mdgriffith$elm_ui$Element$text('You can also fill out a form to join our group at [insert bit.ly]')
				])),
			A2(
			$mdgriffith$elm_ui$Element$paragraph,
			_List_Nil,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$text('ALL LINKS/REFERENCES: https://linktr.ee/reddoorcollective')
				]))
		]);
};
var $author$project$Page$Organize$Event$viewStepTwo = function (user) {
	return A2(
		$mdgriffith$elm_ui$Element$paragraph,
		_List_Nil,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$text('\"Awesome! We at Red Door Collective believe housing is a human right and no one should be evicted, especially in a pandemic. We are calling people who have gotten detainer warrants ahead of their court dates to make sure people understand the legal process, know their rights as renters, and are aware of local resources. You said you got a detainer warrant, correct?” [Get to know the tenant and ask about their situation, including if they have plans to leave their residence or worked something out with their landlord, have gotten aid or a lawyer, if they are going to go to court.]\"')
			]));
};
var $author$project$Page$Organize$Event$viewInfoGatheringForm = F2(
	function (user, phoneBankForm) {
		return A2(
			$mdgriffith$elm_ui$Element$textColumn,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$centerX,
					$mdgriffith$elm_ui$Element$spacing(10)
				]),
			_Utils_ap(
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Element$paragraph,
						_List_Nil,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$text('Start with:')
							])),
						A2(
						$mdgriffith$elm_ui$Element$paragraph,
						_List_Nil,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$text('Hi! My name is ' + (user.h1 + ('. Am I speaking with ' + (phoneBankForm.cx.h1 + '?\"'))))
							])),
						A2(
						$mdgriffith$elm_ui$Element$paragraph,
						_List_Nil,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$text('If no: \"Sorry for the wrong number! Have a nice day.\"')
							])),
						A2(
						$mdgriffith$elm_ui$Element$paragraph,
						_List_Nil,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$text('If yes: continue')
							])),
						A2($author$project$Page$Organize$Event$viewStepOne, user, phoneBankForm),
						$author$project$Page$Organize$Event$viewStepTwo(user)
					]),
				$author$project$Page$Organize$Event$viewStepThree(phoneBankForm)));
	});
var $author$project$Page$Organize$Event$viewPhoneBank = F3(
	function (user, maybeForm, phoneBank) {
		return A2(
			$mdgriffith$elm_ui$Element$column,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
					$mdgriffith$elm_ui$Element$spacing(10)
				]),
			_List_fromArray(
				[
					A2(
					$mdgriffith$elm_ui$Element$row,
					$author$project$Page$Organize$Event$heading,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$text(phoneBank.h1)
						])),
					A2(
					$mdgriffith$elm_ui$Element$row,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
						]),
					_List_fromArray(
						[
							A2($author$project$Page$Organize$Event$viewDefendants, maybeForm, phoneBank.mQ)
						])),
					A2(
					$mdgriffith$elm_ui$Element$row,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
							$mdgriffith$elm_ui$Element$padding(10)
						]),
					_List_fromArray(
						[
							function () {
							if (!maybeForm.$) {
								var phoneBankForm = maybeForm.a;
								return A2($author$project$Page$Organize$Event$viewInfoGatheringForm, user, phoneBankForm);
							} else {
								return $mdgriffith$elm_ui$Element$none;
							}
						}()
						]))
				]));
	});
var $author$project$Page$Organize$Event$viewEvent = F3(
	function (user, phoneBankForm, event) {
		switch (event.$) {
			case 0:
				var phoneBank = event.a;
				return A3($author$project$Page$Organize$Event$viewPhoneBank, user, phoneBankForm, phoneBank);
			case 1:
				var canvass = event.a;
				return A2(
					$mdgriffith$elm_ui$Element$row,
					_List_Nil,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$text(canvass.h1)
						]));
			default:
				var generic = event.a;
				return A2(
					$mdgriffith$elm_ui$Element$row,
					_List_Nil,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$text(generic.h1)
						]));
		}
	});
var $author$project$Page$Organize$Event$view = F2(
	function (settings, model) {
		return {
			gU: A2(
				$mdgriffith$elm_ui$Element$row,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$centerX,
						$mdgriffith$elm_ui$Element$padding(10),
						$mdgriffith$elm_ui$Element$Font$size(20),
						$mdgriffith$elm_ui$Element$width(
						A2(
							$mdgriffith$elm_ui$Element$minimum,
							800,
							A2($mdgriffith$elm_ui$Element$maximum, 1200, $mdgriffith$elm_ui$Element$fill)))
					]),
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Element$column,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
								$mdgriffith$elm_ui$Element$spacing(10)
							]),
						_List_fromArray(
							[
								function () {
								var _v0 = _Utils_Tuple2(model.d0, settings.ni);
								if ((!_v0.a.$) && (!_v0.b.$)) {
									var event = _v0.a.a;
									var user = _v0.b.a;
									return A2(
										$mdgriffith$elm_ui$Element$row,
										_List_fromArray(
											[
												$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
											]),
										_List_fromArray(
											[
												A3($author$project$Page$Organize$Event$viewEvent, user, model.dj, event)
											]));
								} else {
									return $mdgriffith$elm_ui$Element$none;
								}
							}()
							]))
					])),
			er: 'Organize - Campaign - Event'
		};
	});
var $author$project$Page$Organize$PlaintiffCreation$ChangeTooltip = function (a) {
	return {$: 1, a: a};
};
var $author$project$Page$Organize$PlaintiffCreation$PlaintiffInfo = 0;
var $author$project$Page$Organize$PlaintiffCreation$formOptions = function (model) {
	return {ia: model.ij, bx: model.bx, a: model.a};
};
var $author$project$Page$Organize$PlaintiffCreation$primaryStyles = _List_fromArray(
	[
		$mdgriffith$elm_ui$Element$Background$color($author$project$Palette$sred),
		$mdgriffith$elm_ui$Element$Font$color($author$project$Palette$white),
		$mdgriffith$elm_ui$Element$Font$size(20),
		$mdgriffith$elm_ui$Element$padding(10),
		$mdgriffith$elm_ui$Element$Border$rounded(3)
	]);
var $author$project$Page$Organize$PlaintiffCreation$formGroup = function (group) {
	return A2(
		$mdgriffith$elm_ui$Element$row,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$spacing(10),
				$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
			]),
		group);
};
var $author$project$Page$Organize$PlaintiffCreation$SubmitAndAddAnother = {$: 7};
var $author$project$Page$Organize$PlaintiffCreation$submitAndAddAnother = A2(
	$mdgriffith$elm_ui$Element$Input$button,
	_List_fromArray(
		[
			$mdgriffith$elm_ui$Element$Background$color($author$project$Palette$redLightest),
			$mdgriffith$elm_ui$Element$Font$color($author$project$Palette$sred),
			$mdgriffith$elm_ui$Element$padding(10),
			$mdgriffith$elm_ui$Element$Border$rounded(3),
			$mdgriffith$elm_ui$Element$Border$width(1),
			$mdgriffith$elm_ui$Element$Border$color($author$project$Palette$sred),
			$mdgriffith$elm_ui$Element$Font$size(22)
		]),
	{
		hL: $mdgriffith$elm_ui$Element$text('Submit and add another'),
		lM: $elm$core$Maybe$Just($author$project$Page$Organize$PlaintiffCreation$SubmitAndAddAnother)
	});
var $author$project$Page$Organize$PlaintiffCreation$SubmitForm = {$: 6};
var $author$project$Page$Organize$PlaintiffCreation$submitButton = A2(
	$mdgriffith$elm_ui$Element$Input$button,
	_Utils_ap(
		$author$project$Page$Organize$PlaintiffCreation$primaryStyles,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$Font$size(22)
			])),
	{
		hL: $mdgriffith$elm_ui$Element$text('Submit'),
		lM: $elm$core$Maybe$Just($author$project$Page$Organize$PlaintiffCreation$SubmitForm)
	});
var $author$project$Page$Organize$PlaintiffCreation$tile = function (groups) {
	return A2(
		$mdgriffith$elm_ui$Element$column,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$spacing(20),
				$mdgriffith$elm_ui$Element$padding(20),
				$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
				$mdgriffith$elm_ui$Element$Border$rounded(3),
				$mdgriffith$elm_ui$Element$Border$color($author$project$Palette$grayLight),
				$mdgriffith$elm_ui$Element$Border$width(1),
				$mdgriffith$elm_ui$Element$Border$shadow(
				{
					jD: 30,
					eL: $author$project$Palette$grayLight,
					lG: _Utils_Tuple2(0, 10),
					f$: 1
				})
			]),
		groups);
};
var $author$project$Page$Organize$PlaintiffCreation$AliasesInfo = 2;
var $elm$regex$Regex$findAtMost = _Regex_findAtMost;
var $author$project$Page$Organize$PlaintiffCreation$matches = function (regex) {
	var validRegex = A2(
		$elm$core$Maybe$withDefault,
		$elm$regex$Regex$never,
		$elm$regex$Regex$fromString(regex));
	return A2(
		$elm$core$Basics$composeR,
		A2($elm$regex$Regex$findAtMost, 1, validRegex),
		A2($elm$core$Basics$composeR, $elm$core$List$isEmpty, $elm$core$Basics$not));
};
var $author$project$MultiInput$bullet = function (attrs) {
	return $mdgriffith$elm_ui$Element$row(
		_Utils_ap(_List_Nil, attrs));
};
var $author$project$MultiInput$InputChanged = function (a) {
	return {$: 4, a: a};
};
var $author$project$MultiInput$KeyDown = function (a) {
	return {$: 2, a: a};
};
var $author$project$MultiInput$TextareaBlurred = function (a) {
	return {$: 1, a: a};
};
var $elm$html$Html$Events$keyCode = A2($elm$json$Json$Decode$field, 'keyCode', $elm$json$Json$Decode$int);
var $author$project$MultiInput$onKeyDown = function (toMsg) {
	return A2(
		$elm$html$Html$Events$on,
		'keydown',
		A2($elm$json$Json$Decode$map, toMsg, $elm$html$Html$Events$keyCode));
};
var $author$project$MultiInput$viewExpandingTextArea = F3(
	function (conf, customAttributes, state) {
		return A2(
			$mdgriffith$elm_ui$Element$Input$multiline,
			_Utils_ap(
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$htmlAttribute(
						$elm$html$Html$Attributes$id(state.hs)),
						$mdgriffith$elm_ui$Element$htmlAttribute(
						$elm$html$Html$Events$onBlur(
							conf.cC(
								$author$project$MultiInput$TextareaBlurred(state.ao)))),
						$mdgriffith$elm_ui$Element$htmlAttribute(
						$author$project$MultiInput$onKeyDown(
							A2($elm$core$Basics$composeL, conf.cC, $author$project$MultiInput$KeyDown))),
						$mdgriffith$elm_ui$Element$Border$width(0),
						$mdgriffith$elm_ui$Element$width(
						A2($mdgriffith$elm_ui$Element$maximum, 600, $mdgriffith$elm_ui$Element$fill)),
						A2($mdgriffith$elm_ui$Element$paddingXY, 5, 10),
						$mdgriffith$elm_ui$Element$focused(
						_List_fromArray(
							[
								A2(
								$mdgriffith$elm_ui$Element$Border$innerGlow,
								A3($mdgriffith$elm_ui$Element$rgb255, 255, 255, 255),
								0)
							]))
					]),
				customAttributes),
			{
				hL: $mdgriffith$elm_ui$Element$Input$labelHidden('Plaintiff aliases'),
				lI: A2($elm$core$Basics$composeL, conf.cC, $author$project$MultiInput$InputChanged),
				fO: $elm$core$Maybe$Just(
					A2(
						$mdgriffith$elm_ui$Element$Input$placeholder,
						_List_Nil,
						$mdgriffith$elm_ui$Element$text(conf.fO))),
				mC: false,
				mR: state.ao
			});
	});
var $author$project$MultiInput$RemoveItem = function (a) {
	return {$: 3, a: a};
};
var $author$project$MultiInput$viewItem = F3(
	function (conf, state, item) {
		return A2(
			$mdgriffith$elm_ui$Element$row,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$padding(10),
					$mdgriffith$elm_ui$Element$Background$color(
					A3($mdgriffith$elm_ui$Element$rgb255, 222, 231, 248)),
					$mdgriffith$elm_ui$Element$Border$rounded(10),
					$mdgriffith$elm_ui$Element$spacing(5)
				]),
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$text(item),
					A2(
					$mdgriffith$elm_ui$Element$Input$button,
					_List_fromArray(
						[
							A2($mdgriffith$elm_ui$Element$paddingXY, 5, 0),
							$mdgriffith$elm_ui$Element$centerY,
							$mdgriffith$elm_ui$Element$Font$center,
							$mdgriffith$elm_ui$Element$Border$widthEach(
							{eH: 0, fb: 1, fT: 0, gd: 0})
						]),
					{
						hL: A2(
							$mdgriffith$elm_ui$Element$el,
							_List_fromArray(
								[$mdgriffith$elm_ui$Element$centerY, $mdgriffith$elm_ui$Element$Font$center]),
							$mdgriffith$elm_ui$Element$text('x')),
						lM: $elm$core$Maybe$Just(
							conf.cC(
								$author$project$MultiInput$RemoveItem(item)))
					})
				]));
	});
var $author$project$MultiInput$view = F4(
	function (conf, customAttributes, items, state) {
		return A2(
			$mdgriffith$elm_ui$Element$column,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$Background$color(
					A3($mdgriffith$elm_ui$Element$rgb255, 255, 255, 255)),
					$mdgriffith$elm_ui$Element$padding(2),
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
				]),
			_List_fromArray(
				[
					A2(
					$mdgriffith$elm_ui$Element$row,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
							$mdgriffith$elm_ui$Element$Events$onMouseDown(
							conf.cC($author$project$MultiInput$FocusElement)),
							$mdgriffith$elm_ui$Element$Background$color(
							A3($mdgriffith$elm_ui$Element$rgb255, 255, 255, 255)),
							$mdgriffith$elm_ui$Element$padding(5),
							$mdgriffith$elm_ui$Element$Border$width(1),
							$mdgriffith$elm_ui$Element$Border$rounded(3),
							$mdgriffith$elm_ui$Element$Border$color($author$project$Palette$grayLight),
							$mdgriffith$elm_ui$Element$spacing(10),
							$mdgriffith$elm_ui$Element$width(
							A2($mdgriffith$elm_ui$Element$minimum, 400, $mdgriffith$elm_ui$Element$fill))
						]),
					_Utils_ap(
						A2(
							$elm$core$List$map,
							A2($author$project$MultiInput$viewItem, conf, state),
							items),
						_List_fromArray(
							[
								A2(
								$author$project$MultiInput$bullet,
								_List_fromArray(
									[
										$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
									]),
								_List_fromArray(
									[
										A3($author$project$MultiInput$viewExpandingTextArea, conf, customAttributes, state)
									]))
							])))
				]));
	});
var $author$project$Page$Organize$PlaintiffCreation$focusedButtonStyles = _List_fromArray(
	[
		$mdgriffith$elm_ui$Element$Background$color($author$project$Palette$sred),
		$mdgriffith$elm_ui$Element$Font$color($author$project$Palette$white)
	]);
var $author$project$Page$Organize$PlaintiffCreation$hoveredButtonStyles = _List_fromArray(
	[
		$mdgriffith$elm_ui$Element$Background$color($author$project$Palette$sred),
		$mdgriffith$elm_ui$Element$Font$color($author$project$Palette$white)
	]);
var $author$project$Page$Organize$PlaintiffCreation$helpButton = function (tooltip) {
	return A2(
		$mdgriffith$elm_ui$Element$Input$button,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$Events$onLoseFocus($author$project$Page$Organize$PlaintiffCreation$CloseTooltip),
				$mdgriffith$elm_ui$Element$Font$color($author$project$Palette$sred),
				$mdgriffith$elm_ui$Element$padding(10),
				$mdgriffith$elm_ui$Element$alignBottom,
				$mdgriffith$elm_ui$Element$Border$rounded(3),
				$mdgriffith$elm_ui$Element$mouseOver($author$project$Page$Organize$PlaintiffCreation$hoveredButtonStyles),
				$mdgriffith$elm_ui$Element$focused($author$project$Page$Organize$PlaintiffCreation$focusedButtonStyles)
			]),
		{
			hL: $mdgriffith$elm_ui$Element$html(
				A2($feathericons$elm_feather$FeatherIcons$toHtml, _List_Nil, $feathericons$elm_feather$FeatherIcons$helpCircle)),
			lM: $elm$core$Maybe$Just(
				$author$project$Page$Organize$PlaintiffCreation$ChangeTooltip(tooltip))
		});
};
var $author$project$Page$Organize$PlaintiffCreation$viewTooltip = function (content) {
	return A2(
		$mdgriffith$elm_ui$Element$textColumn,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$width(
				A2($mdgriffith$elm_ui$Element$maximum, 600, $mdgriffith$elm_ui$Element$fill)),
				$mdgriffith$elm_ui$Element$padding(10),
				$mdgriffith$elm_ui$Element$Background$color($author$project$Palette$red),
				$mdgriffith$elm_ui$Element$Font$color($author$project$Palette$white),
				$mdgriffith$elm_ui$Element$Border$rounded(3),
				$mdgriffith$elm_ui$Element$Font$size(14),
				$mdgriffith$elm_ui$Element$Border$shadow(
				{
					jD: 6,
					eL: A4($mdgriffith$elm_ui$Element$rgba, 0, 0, 0, 0.32),
					lG: _Utils_Tuple2(0, 3),
					f$: 0
				})
			]),
		content);
};
var $author$project$Page$Organize$PlaintiffCreation$withTooltip = F3(
	function (candidate, active, content) {
		return _Utils_eq(
			$elm$core$Maybe$Just(candidate),
			active) ? _List_fromArray(
			[
				$mdgriffith$elm_ui$Element$below(
				$author$project$Page$Organize$PlaintiffCreation$viewTooltip(content))
			]) : _List_Nil;
	});
var $author$project$Page$Organize$PlaintiffCreation$viewField = function (field) {
	var tooltip = function () {
		var _v0 = field.a;
		if (!_v0.$) {
			var tip = _v0.a;
			return A3($author$project$Page$Organize$PlaintiffCreation$withTooltip, tip, field.e, field.d_);
		} else {
			return _List_Nil;
		}
	}();
	var help = A2(
		$elm$core$Maybe$withDefault,
		$mdgriffith$elm_ui$Element$none,
		A2($elm$core$Maybe$map, $author$project$Page$Organize$PlaintiffCreation$helpButton, field.a));
	return A2(
		$mdgriffith$elm_ui$Element$row,
		_Utils_ap(
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
					$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
					A2($mdgriffith$elm_ui$Element$spacingXY, 5, 0),
					A2($mdgriffith$elm_ui$Element$paddingXY, 0, 10)
				]),
			tooltip),
		A2($elm$core$List$cons, help, field.d));
};
var $author$project$Page$Organize$PlaintiffCreation$viewAliases = F2(
	function (options, form) {
		return A2(
			$mdgriffith$elm_ui$Element$column,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width(
					A2($mdgriffith$elm_ui$Element$minimum, 600, $mdgriffith$elm_ui$Element$fill)),
					$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
					A2($mdgriffith$elm_ui$Element$paddingXY, 0, 10)
				]),
			_List_fromArray(
				[
					$author$project$Page$Organize$PlaintiffCreation$viewField(
					{
						d: _List_fromArray(
							[
								A2(
								$mdgriffith$elm_ui$Element$column,
								_List_fromArray(
									[
										$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
										$mdgriffith$elm_ui$Element$spacing(2)
									]),
								_List_fromArray(
									[
										A2(
										$mdgriffith$elm_ui$Element$paragraph,
										_List_Nil,
										_List_fromArray(
											[
												$mdgriffith$elm_ui$Element$text('Aliases')
											])),
										A4(
										$author$project$MultiInput$view,
										{
											k9: $author$project$Page$Organize$PlaintiffCreation$matches('^[a-z0-9]+(?:-[a-z0-9]+)*$'),
											fO: 'Enter alias here',
											cC: $author$project$Page$Organize$PlaintiffCreation$ChangedAliases
										},
										_List_Nil,
										form.jh,
										form.bb)
									]))
							]),
						e: options.a,
						d_: _List_fromArray(
							[
								A2(
								$mdgriffith$elm_ui$Element$paragraph,
								_List_Nil,
								_List_fromArray(
									[
										$mdgriffith$elm_ui$Element$text('These are other names that are used to refer to the same plaintiff.')
									])),
								A2(
								$mdgriffith$elm_ui$Element$paragraph,
								_List_Nil,
								_List_fromArray(
									[
										$mdgriffith$elm_ui$Element$text('Tip: press tab or enter to add another alias.')
									]))
							]),
						a: $elm$core$Maybe$Just(2)
					})
				]));
	});
var $author$project$Page$Organize$PlaintiffCreation$ChangedName = function (a) {
	return {$: 3, a: a};
};
var $author$project$Page$Organize$PlaintiffCreation$NameInfo = 1;
var $author$project$Page$Organize$PlaintiffCreation$requiredStar = A2(
	$mdgriffith$elm_ui$Element$el,
	_List_fromArray(
		[
			$mdgriffith$elm_ui$Element$Font$color($author$project$Palette$sred),
			$mdgriffith$elm_ui$Element$alignTop,
			$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink)
		]),
	$mdgriffith$elm_ui$Element$text('*'));
var $author$project$Page$Organize$PlaintiffCreation$requiredLabel = F2(
	function (labelFn, str) {
		return A2(
			labelFn,
			_List_Nil,
			A2(
				$mdgriffith$elm_ui$Element$row,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$spacing(5)
					]),
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$text(str),
						$author$project$Page$Organize$PlaintiffCreation$requiredStar
					])));
	});
var $author$project$Page$Organize$PlaintiffCreation$textInput = F2(
	function (attrs, config) {
		return A2(
			$mdgriffith$elm_ui$Element$Input$text,
			_Utils_ap(
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$Border$color($author$project$Palette$grayLight)
					]),
				attrs),
			config);
	});
var $author$project$Page$Organize$PlaintiffCreation$withValidation = F3(
	function (validatedField, problems, attrs) {
		var maybeError = $elm$core$List$head(
			A2(
				$elm$core$List$filterMap,
				function (problem) {
					if (!problem.$) {
						var field = problem.a;
						var problemText = problem.b;
						return _Utils_eq(validatedField, field) ? $elm$core$Maybe$Just(problemText) : $elm$core$Maybe$Nothing;
					} else {
						return $elm$core$Maybe$Nothing;
					}
				},
				problems));
		return _Utils_ap(
			attrs,
			function () {
				if (!maybeError.$) {
					var errorText = maybeError.a;
					return _List_fromArray(
						[
							$mdgriffith$elm_ui$Element$Border$color($author$project$Palette$sred),
							$mdgriffith$elm_ui$Element$below(
							A2(
								$mdgriffith$elm_ui$Element$row,
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Element$paddingXY, 0, 10),
										$mdgriffith$elm_ui$Element$spacing(5),
										$mdgriffith$elm_ui$Element$Font$color($author$project$Palette$sred),
										$mdgriffith$elm_ui$Element$Font$size(14)
									]),
								_List_fromArray(
									[
										A2(
										$mdgriffith$elm_ui$Element$el,
										_List_Nil,
										$mdgriffith$elm_ui$Element$html(
											A2(
												$feathericons$elm_feather$FeatherIcons$toHtml,
												_List_Nil,
												A2($feathericons$elm_feather$FeatherIcons$withSize, 16, $feathericons$elm_feather$FeatherIcons$alertTriangle)))),
										$mdgriffith$elm_ui$Element$text(errorText)
									])))
						]);
				} else {
					return _List_Nil;
				}
			}());
	});
var $author$project$Page$Organize$PlaintiffCreation$viewName = F2(
	function (options, form) {
		return A2(
			$mdgriffith$elm_ui$Element$column,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width(
					A2($mdgriffith$elm_ui$Element$minimum, 600, $mdgriffith$elm_ui$Element$fill)),
					$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
					A2($mdgriffith$elm_ui$Element$paddingXY, 0, 10)
				]),
			_List_fromArray(
				[
					$author$project$Page$Organize$PlaintiffCreation$viewField(
					{
						d: _List_fromArray(
							[
								A2(
								$author$project$Page$Organize$PlaintiffCreation$textInput,
								A3(
									$author$project$Page$Organize$PlaintiffCreation$withValidation,
									0,
									options.bx,
									_List_fromArray(
										[$mdgriffith$elm_ui$Element$Input$focusedOnLoad])),
								{
									hL: A2($author$project$Page$Organize$PlaintiffCreation$requiredLabel, $mdgriffith$elm_ui$Element$Input$labelAbove, 'Name'),
									lI: $author$project$Page$Organize$PlaintiffCreation$ChangedName,
									fO: $elm$core$Maybe$Nothing,
									mR: form.h1
								})
							]),
						e: options.a,
						d_: _List_fromArray(
							[
								A2(
								$mdgriffith$elm_ui$Element$paragraph,
								_List_Nil,
								_List_fromArray(
									[
										$mdgriffith$elm_ui$Element$text('This name is how we uniquely identify a Plaintiff.')
									]))
							]),
						a: $elm$core$Maybe$Just(1)
					})
				]));
	});
var $author$project$Page$Organize$PlaintiffCreation$viewForm = F2(
	function (options, formStatus) {
		if (!formStatus.$) {
			var id = formStatus.a;
			return A2(
				$mdgriffith$elm_ui$Element$column,
				_List_Nil,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$text(
						'Fetching plaintiff ' + $elm$core$String$fromInt(id))
					]));
		} else {
			var form = formStatus.a;
			return A2(
				$mdgriffith$elm_ui$Element$column,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$centerX,
						$mdgriffith$elm_ui$Element$spacing(30),
						$mdgriffith$elm_ui$Element$width(
						A2($mdgriffith$elm_ui$Element$maximum, 1200, $mdgriffith$elm_ui$Element$fill))
					]),
				_List_fromArray(
					[
						$author$project$Page$Organize$PlaintiffCreation$tile(
						_List_fromArray(
							[
								A2(
								$mdgriffith$elm_ui$Element$paragraph,
								_List_fromArray(
									[$mdgriffith$elm_ui$Element$Font$center, $mdgriffith$elm_ui$Element$centerX]),
								_List_fromArray(
									[
										$mdgriffith$elm_ui$Element$text('Plaintiff')
									])),
								$author$project$Page$Organize$PlaintiffCreation$formGroup(
								_List_fromArray(
									[
										A2($author$project$Page$Organize$PlaintiffCreation$viewName, options, form)
									])),
								$author$project$Page$Organize$PlaintiffCreation$formGroup(
								_List_fromArray(
									[
										A2($author$project$Page$Organize$PlaintiffCreation$viewAliases, options, form)
									]))
							])),
						A2(
						$mdgriffith$elm_ui$Element$row,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$alignRight,
								$mdgriffith$elm_ui$Element$spacing(10)
							]),
						_List_fromArray(
							[$author$project$Page$Organize$PlaintiffCreation$submitAndAddAnother, $author$project$Page$Organize$PlaintiffCreation$submitButton]))
					]));
		}
	});
var $author$project$Page$Organize$PlaintiffCreation$viewProblem = function (problem) {
	return A2(
		$mdgriffith$elm_ui$Element$paragraph,
		_List_Nil,
		_List_fromArray(
			[
				function () {
				if (!problem.$) {
					var value = problem.b;
					return $mdgriffith$elm_ui$Element$none;
				} else {
					var err = problem.a;
					return $mdgriffith$elm_ui$Element$text('Something went wrong: ' + err);
				}
			}()
			]));
};
var $author$project$Page$Organize$PlaintiffCreation$viewProblems = function (problems) {
	return A2(
		$mdgriffith$elm_ui$Element$row,
		_List_Nil,
		_List_fromArray(
			[
				A2(
				$mdgriffith$elm_ui$Element$column,
				_List_Nil,
				A2($elm$core$List$map, $author$project$Page$Organize$PlaintiffCreation$viewProblem, problems))
			]));
};
var $author$project$Page$Organize$PlaintiffCreation$view = F2(
	function (settings, model) {
		return {
			gU: A2(
				$mdgriffith$elm_ui$Element$row,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$centerX,
						$mdgriffith$elm_ui$Element$padding(20),
						$mdgriffith$elm_ui$Element$Font$size(20),
						$mdgriffith$elm_ui$Element$width(
						A2(
							$mdgriffith$elm_ui$Element$minimum,
							400,
							A2($mdgriffith$elm_ui$Element$maximum, 1200, $mdgriffith$elm_ui$Element$fill))),
						$mdgriffith$elm_ui$Element$inFront(
						A2(
							$mdgriffith$elm_ui$Element$Input$button,
							_Utils_ap(
								$author$project$Page$Organize$PlaintiffCreation$primaryStyles,
								_Utils_ap(
									_List_fromArray(
										[
											$mdgriffith$elm_ui$Element$Font$size(14),
											$mdgriffith$elm_ui$Element$alignRight,
											$mdgriffith$elm_ui$Element$alignTop,
											$mdgriffith$elm_ui$Element$Events$onLoseFocus($author$project$Page$Organize$PlaintiffCreation$CloseTooltip)
										]),
									A3(
										$author$project$Page$Organize$PlaintiffCreation$withTooltip,
										0,
										model.a,
										_List_fromArray(
											[
												A2(
												$mdgriffith$elm_ui$Element$paragraph,
												_List_Nil,
												_List_fromArray(
													[
														$mdgriffith$elm_ui$Element$text('The person sueing a tenant for possession or fees.')
													]))
											])))),
							{
								hL: $mdgriffith$elm_ui$Element$text('What is a Plaintiff?'),
								lM: $elm$core$Maybe$Just(
									$author$project$Page$Organize$PlaintiffCreation$ChangeTooltip(0))
							}))
					]),
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Element$column,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$centerX,
								$mdgriffith$elm_ui$Element$spacing(10)
							]),
						_List_fromArray(
							[
								A2(
								$mdgriffith$elm_ui$Element$row,
								_List_fromArray(
									[
										$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
									]),
								_List_fromArray(
									[
										A2(
										$mdgriffith$elm_ui$Element$column,
										_List_fromArray(
											[
												$mdgriffith$elm_ui$Element$centerX,
												$mdgriffith$elm_ui$Element$width(
												$mdgriffith$elm_ui$Element$px(300))
											]),
										_List_fromArray(
											[
												A2(
												$mdgriffith$elm_ui$Element$paragraph,
												_List_fromArray(
													[
														$mdgriffith$elm_ui$Element$Font$center,
														$mdgriffith$elm_ui$Element$centerX,
														$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink)
													]),
												_List_fromArray(
													[
														$mdgriffith$elm_ui$Element$text(
														function () {
															var _v0 = model.hs;
															if (!_v0.$) {
																return 'Edit';
															} else {
																return 'Create';
															}
														}() + ' Plaintiff')
													]))
											]))
									])),
								$author$project$Page$Organize$PlaintiffCreation$viewProblems(model.bx),
								A2(
								$mdgriffith$elm_ui$Element$row,
								_List_fromArray(
									[
										$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
									]),
								_List_fromArray(
									[
										A2(
										$author$project$Page$Organize$PlaintiffCreation$viewForm,
										$author$project$Page$Organize$PlaintiffCreation$formOptions(model),
										model.bZ)
									]))
							]))
					])),
			er: 'Organize - Plaintiff - Edit'
		};
	});
var $author$project$Page$Organize$Plaintiffs$buttonLinkAttrs = _List_fromArray(
	[
		$mdgriffith$elm_ui$Element$Background$color($author$project$Palette$white),
		$mdgriffith$elm_ui$Element$Font$color($author$project$Palette$red),
		$mdgriffith$elm_ui$Element$Border$rounded(3),
		$mdgriffith$elm_ui$Element$Border$color($author$project$Palette$sred),
		$mdgriffith$elm_ui$Element$Border$width(1),
		$mdgriffith$elm_ui$Element$padding(10),
		$mdgriffith$elm_ui$Element$Font$size(16),
		$mdgriffith$elm_ui$Element$mouseOver(
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$Background$color($author$project$Palette$redLightest)
			])),
		$mdgriffith$elm_ui$Element$focused(
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$Background$color($author$project$Palette$redLightest)
			]))
	]);
var $author$project$Page$Organize$Plaintiffs$createNewPlaintiff = A2(
	$mdgriffith$elm_ui$Element$row,
	_List_fromArray(
		[$mdgriffith$elm_ui$Element$centerX]),
	_List_fromArray(
		[
			A2(
			$mdgriffith$elm_ui$Element$link,
			$author$project$Page$Organize$Plaintiffs$buttonLinkAttrs,
			{
				hL: $mdgriffith$elm_ui$Element$text('Enter New Plaintiff'),
				cF: $author$project$Route$href(
					$author$project$Route$PlaintiffCreation($elm$core$Maybe$Nothing))
			})
		]));
var $author$project$Page$Organize$Plaintiffs$loader = function (_v0) {
	var infiniteScroll = _v0.aC;
	var search = _v0.y;
	return ($FabienHenon$elm_infinite_scroll$InfiniteScroll$isLoading(infiniteScroll) || _Utils_eq(search.ne, $elm$core$Maybe$Nothing)) ? A2(
		$mdgriffith$elm_ui$Element$row,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
				$mdgriffith$elm_ui$Element$alignBottom
			]),
		_List_fromArray(
			[
				A2(
				$mdgriffith$elm_ui$Element$el,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$centerX,
						$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink),
						$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink)
					]),
				$mdgriffith$elm_ui$Element$html(
					$author$project$Loader$horizontal($avh4$elm_color$Color$red)))
			])) : $mdgriffith$elm_ui$Element$none;
};
var $author$project$Page$Organize$Plaintiffs$viewFilter = function (filters) {
	var ifNonEmpty = F3(
		function (prefix, fn, filter) {
			if (!filter.$) {
				var value = filter.a;
				return _List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Element$paragraph,
						_List_fromArray(
							[$mdgriffith$elm_ui$Element$centerX, $mdgriffith$elm_ui$Element$Font$center]),
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$text(
								_Utils_ap(
									prefix,
									fn(value)))
							]))
					]);
			} else {
				return _List_Nil;
			}
		});
	return $elm$core$List$concat(
		_List_fromArray(
			[
				A3(ifNonEmpty, 'name is ', $elm$core$Basics$identity, filters.h1)
			]));
};
var $author$project$Page$Organize$Plaintiffs$viewEmptyResults = function (filters) {
	return A2(
		$mdgriffith$elm_ui$Element$textColumn,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$centerX,
				$mdgriffith$elm_ui$Element$spacing(10)
			]),
		_Utils_ap(
			_List_fromArray(
				[
					A2(
					$mdgriffith$elm_ui$Element$paragraph,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$Font$center,
							$mdgriffith$elm_ui$Element$centerX,
							$mdgriffith$elm_ui$Element$Font$size(24)
						]),
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$text('No plaintiffs exist matching your search criteria:')
						])),
					A2(
					$mdgriffith$elm_ui$Element$paragraph,
					_List_fromArray(
						[$mdgriffith$elm_ui$Element$centerX, $mdgriffith$elm_ui$Element$Font$italic, $mdgriffith$elm_ui$Element$Font$center]),
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$text('where...')
						]))
				]),
			A2(
				$elm$core$List$intersperse,
				A2(
					$mdgriffith$elm_ui$Element$paragraph,
					_List_fromArray(
						[$mdgriffith$elm_ui$Element$centerX, $mdgriffith$elm_ui$Element$Font$center]),
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$text('&')
						])),
				$author$project$Page$Organize$Plaintiffs$viewFilter(filters))));
};
var $author$project$Page$Organize$Plaintiffs$SelectPlaintiff = function (a) {
	return {$: 1, a: a};
};
var $author$project$Page$Organize$Plaintiffs$HoverPlaintiff = function (a) {
	return {$: 2, a: a};
};
var $mdgriffith$elm_ui$Element$scrollbarX = A2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$overflow, $mdgriffith$elm_ui$Internal$Style$classes.mo);
var $author$project$Page$Organize$Plaintiffs$tableCellAttrs = F3(
	function (striped, hovered, plaintiff) {
		return _Utils_ap(
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width(
					A2($mdgriffith$elm_ui$Element$maximum, 400, $mdgriffith$elm_ui$Element$shrink)),
					$mdgriffith$elm_ui$Element$height(
					$mdgriffith$elm_ui$Element$px(60)),
					$mdgriffith$elm_ui$Element$scrollbarX,
					$mdgriffith$elm_ui$Element$padding(10),
					$mdgriffith$elm_ui$Element$Border$solid,
					$mdgriffith$elm_ui$Element$Border$color($author$project$Palette$grayLight),
					$mdgriffith$elm_ui$Element$Border$widthEach(
					{eH: 1, fb: 0, fT: 0, gd: 0}),
					$mdgriffith$elm_ui$Element$Events$onMouseDown(
					$author$project$Page$Organize$Plaintiffs$SelectPlaintiff(plaintiff.h1)),
					$mdgriffith$elm_ui$Element$Events$onMouseEnter(
					$author$project$Page$Organize$Plaintiffs$HoverPlaintiff(plaintiff.h1))
				]),
			_Utils_eq(
				hovered,
				$elm$core$Maybe$Just(plaintiff.h1)) ? _List_fromArray(
				[
					$mdgriffith$elm_ui$Element$Background$color($author$project$Palette$redLightest)
				]) : (striped ? _List_fromArray(
				[
					$mdgriffith$elm_ui$Element$Background$color($author$project$Palette$grayBack)
				]) : _List_Nil));
	});
var $author$project$Page$Organize$Plaintiffs$viewEditButton = F3(
	function (hovered, index, plaintiff) {
		return A2(
			$mdgriffith$elm_ui$Element$row,
			A3(
				$author$project$Page$Organize$Plaintiffs$tableCellAttrs,
				!A2($elm$core$Basics$modBy, 2, index),
				hovered,
				plaintiff),
			_List_fromArray(
				[
					A2(
					$mdgriffith$elm_ui$Element$link,
					_Utils_ap(
						$author$project$Page$Organize$Plaintiffs$buttonLinkAttrs,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$Events$onFocus(
								$author$project$Page$Organize$Plaintiffs$SelectPlaintiff(plaintiff.h1))
							])),
					{
						hL: $mdgriffith$elm_ui$Element$text('Edit'),
						cF: $author$project$Route$href(
							$author$project$Route$PlaintiffCreation(
								$elm$core$Maybe$Just(plaintiff.hs)))
					})
				]));
	});
var $author$project$Page$Organize$Plaintiffs$viewHeaderCell = function (text) {
	return A2(
		$mdgriffith$elm_ui$Element$row,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$width(
				A2($mdgriffith$elm_ui$Element$maximum, 200, $mdgriffith$elm_ui$Element$shrink)),
				$mdgriffith$elm_ui$Element$padding(10),
				$mdgriffith$elm_ui$Element$Font$semiBold,
				$mdgriffith$elm_ui$Element$Border$solid,
				$mdgriffith$elm_ui$Element$Border$color($author$project$Palette$grayLight),
				$mdgriffith$elm_ui$Element$Border$widthEach(
				{eH: 1, fb: 0, fT: 0, gd: 0})
			]),
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$text(text)
			]));
};
var $author$project$Page$Organize$Plaintiffs$viewTextRow = F4(
	function (hovered, toText, index, plaintiff) {
		return A2(
			$mdgriffith$elm_ui$Element$row,
			A3(
				$author$project$Page$Organize$Plaintiffs$tableCellAttrs,
				!A2($elm$core$Basics$modBy, 2, index),
				hovered,
				plaintiff),
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$text(
					toText(plaintiff))
				]));
	});
var $author$project$Page$Organize$Plaintiffs$viewPlaintiffs = function (model) {
	var cell = $author$project$Page$Organize$Plaintiffs$viewTextRow(model.bq);
	return A2(
		$mdgriffith$elm_ui$Element$indexedTable,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$width(
				A2($mdgriffith$elm_ui$Element$maximum, 1400, $mdgriffith$elm_ui$Element$fill)),
				$mdgriffith$elm_ui$Element$height(
				$mdgriffith$elm_ui$Element$px(600)),
				$mdgriffith$elm_ui$Element$Font$size(14),
				$mdgriffith$elm_ui$Element$scrollbarY,
				$mdgriffith$elm_ui$Element$htmlAttribute(
				$FabienHenon$elm_infinite_scroll$InfiniteScroll$infiniteScroll($author$project$Page$Organize$Plaintiffs$InfiniteScrollMsg))
			]),
		{
			jY: _List_fromArray(
				[
					{
					am: $author$project$Page$Organize$Plaintiffs$viewHeaderCell('Name'),
					i_: cell(
						function ($) {
							return $.h1;
						}),
					i5: $mdgriffith$elm_ui$Element$fill
				},
					{
					am: $author$project$Page$Organize$Plaintiffs$viewHeaderCell('Aliases'),
					i_: cell(
						A2(
							$elm$core$Basics$composeL,
							$elm$core$String$join(','),
							function ($) {
								return $.jh;
							})),
					i5: $mdgriffith$elm_ui$Element$fill
				},
					{
					am: $author$project$Page$Organize$Plaintiffs$viewHeaderCell('Edit'),
					i_: $author$project$Page$Organize$Plaintiffs$viewEditButton(model.bq),
					i5: $mdgriffith$elm_ui$Element$fill
				}
				]),
			eN: model.bv
		});
};
var $author$project$Page$Organize$Plaintiffs$SearchPlaintiffs = {$: 3};
var $author$project$Page$Organize$Plaintiffs$InputName = function (a) {
	return {$: 0, a: a};
};
var $author$project$Page$Organize$Plaintiffs$searchFields = F2(
	function (model, filters) {
		return _List_fromArray(
			[
				{hL: 'Name', lI: $author$project$Page$Organize$Plaintiffs$InputName, fO: '', bz: filters.h1}
			]);
	});
var $author$project$Page$Organize$Plaintiffs$onEnter = function (msg) {
	return $mdgriffith$elm_ui$Element$htmlAttribute(
		A2(
			$elm$html$Html$Events$on,
			'keyup',
			A2(
				$elm$json$Json$Decode$andThen,
				function (key) {
					return (key === 'Enter') ? $elm$json$Json$Decode$succeed(msg) : $elm$json$Json$Decode$fail('Not the enter key');
				},
				A2($elm$json$Json$Decode$field, 'key', $elm$json$Json$Decode$string))));
};
var $author$project$Page$Organize$Plaintiffs$textSearch = function (_v0) {
	var label = _v0.hL;
	var placeholder = _v0.fO;
	var query = _v0.bz;
	var onChange = _v0.lI;
	return A2(
		$mdgriffith$elm_ui$Element$Input$search,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$width(
				A2($mdgriffith$elm_ui$Element$maximum, 400, $mdgriffith$elm_ui$Element$fill)),
				$author$project$Page$Organize$Plaintiffs$onEnter($author$project$Page$Organize$Plaintiffs$SearchPlaintiffs)
			]),
		{
			hL: A2(
				$mdgriffith$elm_ui$Element$Input$labelAbove,
				_List_Nil,
				$mdgriffith$elm_ui$Element$text(label)),
			lI: A2($elm$core$Basics$composeL, onChange, $elm$core$Maybe$Just),
			fO: $elm$core$Maybe$Nothing,
			mR: A2($elm$core$Maybe$withDefault, '', query)
		});
};
var $author$project$Page$Organize$Plaintiffs$viewSearchBar = function (model) {
	return A2(
		$mdgriffith$elm_ui$Element$row,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$width(
				A2($mdgriffith$elm_ui$Element$maximum, 1200, $mdgriffith$elm_ui$Element$fill)),
				$mdgriffith$elm_ui$Element$spacing(10),
				$mdgriffith$elm_ui$Element$padding(10),
				$mdgriffith$elm_ui$Element$centerY,
				$mdgriffith$elm_ui$Element$centerX
			]),
		_List_fromArray(
			[
				A2(
				$mdgriffith$elm_ui$Element$column,
				_List_fromArray(
					[$mdgriffith$elm_ui$Element$centerX]),
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Element$row,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$spacing(10)
							]),
						_Utils_ap(
							A2(
								$elm$core$List$map,
								$author$project$Page$Organize$Plaintiffs$textSearch,
								A2($author$project$Page$Organize$Plaintiffs$searchFields, model, model.y.ab)),
							_List_fromArray(
								[
									A2(
									$mdgriffith$elm_ui$Element$Input$button,
									_List_fromArray(
										[
											$mdgriffith$elm_ui$Element$alignBottom,
											$mdgriffith$elm_ui$Element$Background$color($author$project$Palette$redLight),
											$mdgriffith$elm_ui$Element$focused(
											_List_fromArray(
												[
													$mdgriffith$elm_ui$Element$Background$color($author$project$Palette$red)
												])),
											$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
											$mdgriffith$elm_ui$Element$Font$color(
											A3($mdgriffith$elm_ui$Element$rgb, 255, 255, 255)),
											$mdgriffith$elm_ui$Element$padding(10),
											$mdgriffith$elm_ui$Element$Border$rounded(5),
											$mdgriffith$elm_ui$Element$height(
											$mdgriffith$elm_ui$Element$px(50))
										]),
									{
										hL: $mdgriffith$elm_ui$Element$text('Search'),
										lM: $elm$core$Maybe$Just($author$project$Page$Organize$Plaintiffs$SearchPlaintiffs)
									})
								])))
					]))
			]));
};
var $author$project$Page$Organize$Plaintiffs$view = F2(
	function (settings, model) {
		return {
			gU: A2(
				$mdgriffith$elm_ui$Element$row,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$centerX,
						$mdgriffith$elm_ui$Element$padding(10),
						$mdgriffith$elm_ui$Element$Font$size(20),
						$mdgriffith$elm_ui$Element$width(
						A2(
							$mdgriffith$elm_ui$Element$minimum,
							400,
							A2($mdgriffith$elm_ui$Element$maximum, 2000, $mdgriffith$elm_ui$Element$fill)))
					]),
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Element$column,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$centerX,
								$mdgriffith$elm_ui$Element$spacing(10),
								$mdgriffith$elm_ui$Element$inFront(
								$author$project$Page$Organize$Plaintiffs$loader(model))
							]),
						_List_fromArray(
							[
								$author$project$Page$Organize$Plaintiffs$createNewPlaintiff,
								$author$project$Page$Organize$Plaintiffs$viewSearchBar(model),
								function () {
								var _v0 = model.y.ne;
								if (!_v0.$) {
									var total = _v0.a;
									return (total > 1) ? A2(
										$mdgriffith$elm_ui$Element$paragraph,
										_List_fromArray(
											[$mdgriffith$elm_ui$Element$Font$center]),
										_List_fromArray(
											[
												$mdgriffith$elm_ui$Element$text(
												A2(
													$cuducos$elm_format_number$FormatNumber$format,
													_Utils_update(
														$cuducos$elm_format_number$FormatNumber$Locales$usLocale,
														{
															kb: $cuducos$elm_format_number$FormatNumber$Locales$Exact(0)
														}),
													total) + ' plaintiffs matched your search.')
											])) : $mdgriffith$elm_ui$Element$none;
								} else {
									return $mdgriffith$elm_ui$Element$none;
								}
							}(),
								_Utils_eq(
								model.y.ne,
								$elm$core$Maybe$Just(0)) ? A2(
								$elm$core$Maybe$withDefault,
								$mdgriffith$elm_ui$Element$none,
								A2($elm$core$Maybe$map, $author$project$Page$Organize$Plaintiffs$viewEmptyResults, model.y.dk)) : $author$project$Page$Organize$Plaintiffs$viewPlaintiffs(model)
							]))
					])),
			er: 'Organize - Plaintiffs'
		};
	});
var $author$project$Page$Trends$HoverAmounts = function (a) {
	return {$: 6, a: a};
};
var $terezka$line_charts$Internal$Dots$Circle = 1;
var $terezka$line_charts$LineChart$Dots$circle = 1;
var $terezka$line_charts$Internal$Dots$Diamond = 4;
var $terezka$line_charts$LineChart$Dots$diamond = 4;
var $avh4$elm_color$Color$lightGreen = A4($avh4$elm_color$Color$RgbaSpace, 138 / 255, 226 / 255, 52 / 255, 1.0);
var $terezka$line_charts$Internal$Line$Series = $elm$core$Basics$identity;
var $terezka$line_charts$Internal$Line$SeriesConfig = F5(
	function (color, shape, dashing, label, data) {
		return {eL: color, gY: dashing, eN: data, hL: label, iH: shape};
	});
var $terezka$line_charts$Internal$Line$line = F4(
	function (color_, shape_, label_, data_) {
		return A5($terezka$line_charts$Internal$Line$SeriesConfig, color_, shape_, _List_Nil, label_, data_);
	});
var $terezka$line_charts$LineChart$line = $terezka$line_charts$Internal$Line$line;
var $terezka$line_charts$Internal$Dots$Square = 3;
var $terezka$line_charts$LineChart$Dots$square = 3;
var $terezka$line_charts$Internal$Dots$Triangle = 2;
var $terezka$line_charts$LineChart$Dots$triangle = 2;
var $author$project$Page$Trends$viewAmountAwardedLine = F2(
	function (toLine, amounts) {
		return A2(toLine, 'Amount awarded', amounts);
	});
var $author$project$Page$Trends$amountAwardedLines = function (amounts) {
	var shapes = _List_fromArray(
		[$terezka$line_charts$LineChart$Dots$triangle, $terezka$line_charts$LineChart$Dots$circle, $terezka$line_charts$LineChart$Dots$diamond, $terezka$line_charts$LineChart$Dots$square]);
	var shape = function (index) {
		return A2(
			$elm$core$Maybe$withDefault,
			$terezka$line_charts$LineChart$Dots$triangle,
			$elm$core$List$head(
				A2($elm$core$List$drop, index, shapes)));
	};
	var colors = _List_fromArray(
		[$avh4$elm_color$Color$lightGreen]);
	var color = function (index) {
		return A2(
			$elm$core$Maybe$withDefault,
			$avh4$elm_color$Color$red,
			$elm$core$List$head(
				A2($elm$core$List$drop, index, colors)));
	};
	return _List_fromArray(
		[
			A2(
			$author$project$Page$Trends$viewAmountAwardedLine,
			A2(
				$terezka$line_charts$LineChart$line,
				color(0),
				shape(0)),
			amounts)
		]);
};
var $avh4$elm_color$Color$black = A4($avh4$elm_color$Color$RgbaSpace, 0 / 255, 0 / 255, 0 / 255, 1.0);
var $terezka$line_charts$Internal$Axis$Config = $elm$core$Basics$identity;
var $terezka$line_charts$Internal$Axis$custom = $elm$core$Basics$identity;
var $terezka$line_charts$LineChart$Axis$custom = $terezka$line_charts$Internal$Axis$custom;
var $terezka$line_charts$Internal$Axis$Title$Config = $elm$core$Basics$identity;
var $terezka$line_charts$Internal$Axis$Title$custom = F4(
	function (position, x, y, title) {
		return {
			lG: _Utils_Tuple2(x, y),
			im: position,
			i_: title
		};
	});
var $elm$svg$Svg$Attributes$style = _VirtualDom_attribute('style');
var $elm$svg$Svg$text = $elm$virtual_dom$VirtualDom$text;
var $elm$svg$Svg$text_ = $elm$svg$Svg$trustedNode('text');
var $elm$svg$Svg$tspan = $elm$svg$Svg$trustedNode('tspan');
var $terezka$line_charts$Internal$Svg$label = F2(
	function (color, string) {
		return A2(
			$elm$svg$Svg$text_,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$fill(color),
					$elm$svg$Svg$Attributes$style('pointer-events: none;')
				]),
			_List_fromArray(
				[
					A2(
					$elm$svg$Svg$tspan,
					_List_Nil,
					_List_fromArray(
						[
							$elm$svg$Svg$text(string)
						]))
				]));
	});
var $terezka$line_charts$Internal$Axis$Title$atPosition = F3(
	function (position, x, y) {
		return A2(
			$elm$core$Basics$composeL,
			A3($terezka$line_charts$Internal$Axis$Title$custom, position, x, y),
			$terezka$line_charts$Internal$Svg$label('inherit'));
	});
var $terezka$line_charts$Internal$Axis$Title$atAxisMax = function () {
	var position = F2(
		function (data, range) {
			return range.hV;
		});
	return $terezka$line_charts$Internal$Axis$Title$atPosition(position);
}();
var $terezka$line_charts$Internal$Axis$Title$default = A2($terezka$line_charts$Internal$Axis$Title$atAxisMax, 0, 0);
var $terezka$line_charts$LineChart$Axis$Title$default = $terezka$line_charts$Internal$Axis$Title$default;
var $terezka$line_charts$Internal$Axis$Line$Config = $elm$core$Basics$identity;
var $terezka$line_charts$Internal$Axis$Line$custom = $elm$core$Basics$identity;
var $terezka$line_charts$Internal$Axis$Line$full = function (color) {
	return $terezka$line_charts$Internal$Axis$Line$custom(
		F2(
			function (data, range) {
				return {eL: color, hb: range.hV, kz: _List_Nil, f7: range.fp, i5: 1};
			}));
};
var $terezka$line_charts$LineChart$Axis$Line$full = $terezka$line_charts$Internal$Axis$Line$full;
var $terezka$line_charts$Internal$Axis$Range$Padded = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $terezka$line_charts$Internal$Axis$Range$padded = $terezka$line_charts$Internal$Axis$Range$Padded;
var $terezka$line_charts$LineChart$Axis$Range$padded = $terezka$line_charts$Internal$Axis$Range$padded;
var $terezka$line_charts$Internal$Axis$Tick$Config = $elm$core$Basics$identity;
var $terezka$line_charts$Internal$Axis$Tick$custom = $elm$core$Basics$identity;
var $terezka$line_charts$LineChart$Axis$Tick$custom = $terezka$line_charts$Internal$Axis$Tick$custom;
var $ryannhg$date_format$DateFormat$AmPmLowercase = {$: 23};
var $ryannhg$date_format$DateFormat$amPmLowercase = $ryannhg$date_format$DateFormat$AmPmLowercase;
var $ryannhg$date_format$DateFormat$DayOfWeekNameFull = {$: 14};
var $ryannhg$date_format$DateFormat$dayOfWeekNameFull = $ryannhg$date_format$DateFormat$DayOfWeekNameFull;
var $ryannhg$date_format$DateFormat$Language$Language = F6(
	function (toMonthName, toMonthAbbreviation, toWeekdayName, toWeekdayAbbreviation, toAmPm, toOrdinalSuffix) {
		return {m5: toAmPm, m6: toMonthAbbreviation, m7: toMonthName, cB: toOrdinalSuffix, m9: toWeekdayAbbreviation, na: toWeekdayName};
	});
var $ryannhg$date_format$DateFormat$Language$toEnglishAmPm = function (hour) {
	return (hour > 11) ? 'pm' : 'am';
};
var $ryannhg$date_format$DateFormat$Language$toEnglishMonthName = function (month) {
	switch (month) {
		case 0:
			return 'January';
		case 1:
			return 'February';
		case 2:
			return 'March';
		case 3:
			return 'April';
		case 4:
			return 'May';
		case 5:
			return 'June';
		case 6:
			return 'July';
		case 7:
			return 'August';
		case 8:
			return 'September';
		case 9:
			return 'October';
		case 10:
			return 'November';
		default:
			return 'December';
	}
};
var $ryannhg$date_format$DateFormat$Language$toEnglishSuffix = function (num) {
	var _v0 = A2($elm$core$Basics$modBy, 100, num);
	switch (_v0) {
		case 11:
			return 'th';
		case 12:
			return 'th';
		case 13:
			return 'th';
		default:
			var _v1 = A2($elm$core$Basics$modBy, 10, num);
			switch (_v1) {
				case 1:
					return 'st';
				case 2:
					return 'nd';
				case 3:
					return 'rd';
				default:
					return 'th';
			}
	}
};
var $ryannhg$date_format$DateFormat$Language$toEnglishWeekdayName = function (weekday) {
	switch (weekday) {
		case 0:
			return 'Monday';
		case 1:
			return 'Tuesday';
		case 2:
			return 'Wednesday';
		case 3:
			return 'Thursday';
		case 4:
			return 'Friday';
		case 5:
			return 'Saturday';
		default:
			return 'Sunday';
	}
};
var $ryannhg$date_format$DateFormat$Language$english = A6(
	$ryannhg$date_format$DateFormat$Language$Language,
	$ryannhg$date_format$DateFormat$Language$toEnglishMonthName,
	A2(
		$elm$core$Basics$composeR,
		$ryannhg$date_format$DateFormat$Language$toEnglishMonthName,
		$elm$core$String$left(3)),
	$ryannhg$date_format$DateFormat$Language$toEnglishWeekdayName,
	A2(
		$elm$core$Basics$composeR,
		$ryannhg$date_format$DateFormat$Language$toEnglishWeekdayName,
		$elm$core$String$left(3)),
	$ryannhg$date_format$DateFormat$Language$toEnglishAmPm,
	$ryannhg$date_format$DateFormat$Language$toEnglishSuffix);
var $elm$time$Time$toHour = F2(
	function (zone, time) {
		return A2(
			$elm$core$Basics$modBy,
			24,
			A2(
				$elm$time$Time$flooredDiv,
				A2($elm$time$Time$toAdjustedMinutes, zone, time),
				60));
	});
var $ryannhg$date_format$DateFormat$amPm = F3(
	function (language, zone, posix) {
		return language.m5(
			A2($elm$time$Time$toHour, zone, posix));
	});
var $ryannhg$date_format$DateFormat$dayOfMonth = $elm$time$Time$toDay;
var $ryannhg$date_format$DateFormat$days = _List_fromArray(
	[6, 0, 1, 2, 3, 4, 5]);
var $elm$time$Time$toWeekday = F2(
	function (zone, time) {
		var _v0 = A2(
			$elm$core$Basics$modBy,
			7,
			A2(
				$elm$time$Time$flooredDiv,
				A2($elm$time$Time$toAdjustedMinutes, zone, time),
				60 * 24));
		switch (_v0) {
			case 0:
				return 3;
			case 1:
				return 4;
			case 2:
				return 5;
			case 3:
				return 6;
			case 4:
				return 0;
			case 5:
				return 1;
			default:
				return 2;
		}
	});
var $ryannhg$date_format$DateFormat$dayOfWeek = F2(
	function (zone, posix) {
		return function (_v1) {
			var i = _v1.a;
			return i;
		}(
			A2(
				$elm$core$Maybe$withDefault,
				_Utils_Tuple2(0, 6),
				$elm$core$List$head(
					A2(
						$elm$core$List$filter,
						function (_v0) {
							var day = _v0.b;
							return _Utils_eq(
								day,
								A2($elm$time$Time$toWeekday, zone, posix));
						},
						A2(
							$elm$core$List$indexedMap,
							F2(
								function (i, day) {
									return _Utils_Tuple2(i, day);
								}),
							$ryannhg$date_format$DateFormat$days)))));
	});
var $ryannhg$date_format$DateFormat$isLeapYear = function (year_) {
	return (!(!A2($elm$core$Basics$modBy, 4, year_))) ? false : ((!(!A2($elm$core$Basics$modBy, 100, year_))) ? true : ((!(!A2($elm$core$Basics$modBy, 400, year_))) ? false : true));
};
var $ryannhg$date_format$DateFormat$daysInMonth = F2(
	function (year_, month) {
		switch (month) {
			case 0:
				return 31;
			case 1:
				return $ryannhg$date_format$DateFormat$isLeapYear(year_) ? 29 : 28;
			case 2:
				return 31;
			case 3:
				return 30;
			case 4:
				return 31;
			case 5:
				return 30;
			case 6:
				return 31;
			case 7:
				return 31;
			case 8:
				return 30;
			case 9:
				return 31;
			case 10:
				return 30;
			default:
				return 31;
		}
	});
var $ryannhg$date_format$DateFormat$months = _List_fromArray(
	[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]);
var $ryannhg$date_format$DateFormat$monthPair = F2(
	function (zone, posix) {
		return A2(
			$elm$core$Maybe$withDefault,
			_Utils_Tuple2(0, 0),
			$elm$core$List$head(
				A2(
					$elm$core$List$filter,
					function (_v0) {
						var i = _v0.a;
						var m = _v0.b;
						return _Utils_eq(
							m,
							A2($elm$time$Time$toMonth, zone, posix));
					},
					A2(
						$elm$core$List$indexedMap,
						F2(
							function (a, b) {
								return _Utils_Tuple2(a, b);
							}),
						$ryannhg$date_format$DateFormat$months))));
	});
var $ryannhg$date_format$DateFormat$monthNumber_ = F2(
	function (zone, posix) {
		return 1 + function (_v0) {
			var i = _v0.a;
			var m = _v0.b;
			return i;
		}(
			A2($ryannhg$date_format$DateFormat$monthPair, zone, posix));
	});
var $elm$core$List$sum = function (numbers) {
	return A3($elm$core$List$foldl, $elm$core$Basics$add, 0, numbers);
};
var $ryannhg$date_format$DateFormat$dayOfYear = F2(
	function (zone, posix) {
		var monthsBeforeThisOne = A2(
			$elm$core$List$take,
			A2($ryannhg$date_format$DateFormat$monthNumber_, zone, posix) - 1,
			$ryannhg$date_format$DateFormat$months);
		var daysBeforeThisMonth = $elm$core$List$sum(
			A2(
				$elm$core$List$map,
				$ryannhg$date_format$DateFormat$daysInMonth(
					A2($elm$time$Time$toYear, zone, posix)),
				monthsBeforeThisOne));
		return daysBeforeThisMonth + A2($ryannhg$date_format$DateFormat$dayOfMonth, zone, posix);
	});
var $ryannhg$date_format$DateFormat$quarter = F2(
	function (zone, posix) {
		return (A2($ryannhg$date_format$DateFormat$monthNumber_, zone, posix) / 4) | 0;
	});
var $ryannhg$date_format$DateFormat$toFixedLength = F2(
	function (totalChars, num) {
		var numStr = $elm$core$String$fromInt(num);
		var numZerosNeeded = totalChars - $elm$core$String$length(numStr);
		var zeros = A2(
			$elm$core$String$join,
			'',
			A2(
				$elm$core$List$map,
				function (_v0) {
					return '0';
				},
				A2($elm$core$List$range, 1, numZerosNeeded)));
		return _Utils_ap(zeros, numStr);
	});
var $elm$time$Time$toMillis = F2(
	function (_v0, time) {
		return A2(
			$elm$core$Basics$modBy,
			1000,
			$elm$time$Time$posixToMillis(time));
	});
var $elm$time$Time$toMinute = F2(
	function (zone, time) {
		return A2(
			$elm$core$Basics$modBy,
			60,
			A2($elm$time$Time$toAdjustedMinutes, zone, time));
	});
var $ryannhg$date_format$DateFormat$toNonMilitary = function (num) {
	return (!num) ? 12 : ((num <= 12) ? num : (num - 12));
};
var $elm$time$Time$toSecond = F2(
	function (_v0, time) {
		return A2(
			$elm$core$Basics$modBy,
			60,
			A2(
				$elm$time$Time$flooredDiv,
				$elm$time$Time$posixToMillis(time),
				1000));
	});
var $elm$core$String$toUpper = _String_toUpper;
var $ryannhg$date_format$DateFormat$millisecondsPerYear = $elm$core$Basics$round((((1000 * 60) * 60) * 24) * 365.25);
var $ryannhg$date_format$DateFormat$firstDayOfYear = F2(
	function (zone, time) {
		return $elm$time$Time$millisToPosix(
			$ryannhg$date_format$DateFormat$millisecondsPerYear * A2($elm$time$Time$toYear, zone, time));
	});
var $ryannhg$date_format$DateFormat$weekOfYear = F2(
	function (zone, posix) {
		var firstDay = A2($ryannhg$date_format$DateFormat$firstDayOfYear, zone, posix);
		var firstDayOffset = A2($ryannhg$date_format$DateFormat$dayOfWeek, zone, firstDay);
		var daysSoFar = A2($ryannhg$date_format$DateFormat$dayOfYear, zone, posix);
		return (((daysSoFar + firstDayOffset) / 7) | 0) + 1;
	});
var $ryannhg$date_format$DateFormat$year = F2(
	function (zone, time) {
		return $elm$core$String$fromInt(
			A2($elm$time$Time$toYear, zone, time));
	});
var $ryannhg$date_format$DateFormat$piece = F4(
	function (language, zone, posix, token) {
		switch (token.$) {
			case 0:
				return $elm$core$String$fromInt(
					A2($ryannhg$date_format$DateFormat$monthNumber_, zone, posix));
			case 1:
				return function (num) {
					return _Utils_ap(
						$elm$core$String$fromInt(num),
						language.cB(num));
				}(
					A2($ryannhg$date_format$DateFormat$monthNumber_, zone, posix));
			case 2:
				return A2(
					$ryannhg$date_format$DateFormat$toFixedLength,
					2,
					A2($ryannhg$date_format$DateFormat$monthNumber_, zone, posix));
			case 3:
				return language.m6(
					A2($elm$time$Time$toMonth, zone, posix));
			case 4:
				return language.m7(
					A2($elm$time$Time$toMonth, zone, posix));
			case 17:
				return $elm$core$String$fromInt(
					1 + A2($ryannhg$date_format$DateFormat$quarter, zone, posix));
			case 18:
				return function (num) {
					return _Utils_ap(
						$elm$core$String$fromInt(num),
						language.cB(num));
				}(
					1 + A2($ryannhg$date_format$DateFormat$quarter, zone, posix));
			case 5:
				return $elm$core$String$fromInt(
					A2($ryannhg$date_format$DateFormat$dayOfMonth, zone, posix));
			case 6:
				return function (num) {
					return _Utils_ap(
						$elm$core$String$fromInt(num),
						language.cB(num));
				}(
					A2($ryannhg$date_format$DateFormat$dayOfMonth, zone, posix));
			case 7:
				return A2(
					$ryannhg$date_format$DateFormat$toFixedLength,
					2,
					A2($ryannhg$date_format$DateFormat$dayOfMonth, zone, posix));
			case 8:
				return $elm$core$String$fromInt(
					A2($ryannhg$date_format$DateFormat$dayOfYear, zone, posix));
			case 9:
				return function (num) {
					return _Utils_ap(
						$elm$core$String$fromInt(num),
						language.cB(num));
				}(
					A2($ryannhg$date_format$DateFormat$dayOfYear, zone, posix));
			case 10:
				return A2(
					$ryannhg$date_format$DateFormat$toFixedLength,
					3,
					A2($ryannhg$date_format$DateFormat$dayOfYear, zone, posix));
			case 11:
				return $elm$core$String$fromInt(
					A2($ryannhg$date_format$DateFormat$dayOfWeek, zone, posix));
			case 12:
				return function (num) {
					return _Utils_ap(
						$elm$core$String$fromInt(num),
						language.cB(num));
				}(
					A2($ryannhg$date_format$DateFormat$dayOfWeek, zone, posix));
			case 13:
				return language.m9(
					A2($elm$time$Time$toWeekday, zone, posix));
			case 14:
				return language.na(
					A2($elm$time$Time$toWeekday, zone, posix));
			case 19:
				return $elm$core$String$fromInt(
					A2($ryannhg$date_format$DateFormat$weekOfYear, zone, posix));
			case 20:
				return function (num) {
					return _Utils_ap(
						$elm$core$String$fromInt(num),
						language.cB(num));
				}(
					A2($ryannhg$date_format$DateFormat$weekOfYear, zone, posix));
			case 21:
				return A2(
					$ryannhg$date_format$DateFormat$toFixedLength,
					2,
					A2($ryannhg$date_format$DateFormat$weekOfYear, zone, posix));
			case 15:
				return A2(
					$elm$core$String$right,
					2,
					A2($ryannhg$date_format$DateFormat$year, zone, posix));
			case 16:
				return A2($ryannhg$date_format$DateFormat$year, zone, posix);
			case 22:
				return $elm$core$String$toUpper(
					A3($ryannhg$date_format$DateFormat$amPm, language, zone, posix));
			case 23:
				return $elm$core$String$toLower(
					A3($ryannhg$date_format$DateFormat$amPm, language, zone, posix));
			case 24:
				return $elm$core$String$fromInt(
					A2($elm$time$Time$toHour, zone, posix));
			case 25:
				return A2(
					$ryannhg$date_format$DateFormat$toFixedLength,
					2,
					A2($elm$time$Time$toHour, zone, posix));
			case 26:
				return $elm$core$String$fromInt(
					$ryannhg$date_format$DateFormat$toNonMilitary(
						A2($elm$time$Time$toHour, zone, posix)));
			case 27:
				return A2(
					$ryannhg$date_format$DateFormat$toFixedLength,
					2,
					$ryannhg$date_format$DateFormat$toNonMilitary(
						A2($elm$time$Time$toHour, zone, posix)));
			case 28:
				return $elm$core$String$fromInt(
					1 + A2($elm$time$Time$toHour, zone, posix));
			case 29:
				return A2(
					$ryannhg$date_format$DateFormat$toFixedLength,
					2,
					1 + A2($elm$time$Time$toHour, zone, posix));
			case 30:
				return $elm$core$String$fromInt(
					A2($elm$time$Time$toMinute, zone, posix));
			case 31:
				return A2(
					$ryannhg$date_format$DateFormat$toFixedLength,
					2,
					A2($elm$time$Time$toMinute, zone, posix));
			case 32:
				return $elm$core$String$fromInt(
					A2($elm$time$Time$toSecond, zone, posix));
			case 33:
				return A2(
					$ryannhg$date_format$DateFormat$toFixedLength,
					2,
					A2($elm$time$Time$toSecond, zone, posix));
			case 34:
				return $elm$core$String$fromInt(
					A2($elm$time$Time$toMillis, zone, posix));
			case 35:
				return A2(
					$ryannhg$date_format$DateFormat$toFixedLength,
					3,
					A2($elm$time$Time$toMillis, zone, posix));
			default:
				var string = token.a;
				return string;
		}
	});
var $ryannhg$date_format$DateFormat$formatWithLanguage = F4(
	function (language, tokens, zone, time) {
		return A2(
			$elm$core$String$join,
			'',
			A2(
				$elm$core$List$map,
				A3($ryannhg$date_format$DateFormat$piece, language, zone, time),
				tokens));
	});
var $ryannhg$date_format$DateFormat$format = $ryannhg$date_format$DateFormat$formatWithLanguage($ryannhg$date_format$DateFormat$Language$english);
var $ryannhg$date_format$DateFormat$HourNumber = {$: 26};
var $ryannhg$date_format$DateFormat$hourNumber = $ryannhg$date_format$DateFormat$HourNumber;
var $ryannhg$date_format$DateFormat$MillisecondNumber = {$: 34};
var $ryannhg$date_format$DateFormat$millisecondNumber = $ryannhg$date_format$DateFormat$MillisecondNumber;
var $ryannhg$date_format$DateFormat$MinuteNumber = {$: 30};
var $ryannhg$date_format$DateFormat$minuteNumber = $ryannhg$date_format$DateFormat$MinuteNumber;
var $ryannhg$date_format$DateFormat$MonthNameAbbreviated = {$: 3};
var $ryannhg$date_format$DateFormat$monthNameAbbreviated = $ryannhg$date_format$DateFormat$MonthNameAbbreviated;
var $ryannhg$date_format$DateFormat$SecondNumber = {$: 32};
var $ryannhg$date_format$DateFormat$secondNumber = $ryannhg$date_format$DateFormat$SecondNumber;
var $ryannhg$date_format$DateFormat$YearNumber = {$: 16};
var $ryannhg$date_format$DateFormat$yearNumber = $ryannhg$date_format$DateFormat$YearNumber;
var $terezka$line_charts$LineChart$Axis$Tick$formatBold = function (unit) {
	var tokens = function () {
		switch (unit) {
			case 0:
				return _List_fromArray(
					[$ryannhg$date_format$DateFormat$millisecondNumber]);
			case 1:
				return _List_fromArray(
					[$ryannhg$date_format$DateFormat$secondNumber]);
			case 2:
				return _List_fromArray(
					[$ryannhg$date_format$DateFormat$minuteNumber]);
			case 3:
				return _List_fromArray(
					[$ryannhg$date_format$DateFormat$hourNumber, $ryannhg$date_format$DateFormat$amPmLowercase]);
			case 4:
				return _List_fromArray(
					[$ryannhg$date_format$DateFormat$dayOfWeekNameFull]);
			case 5:
				return _List_fromArray(
					[$ryannhg$date_format$DateFormat$monthNameAbbreviated]);
			default:
				return _List_fromArray(
					[$ryannhg$date_format$DateFormat$yearNumber]);
		}
	}();
	return $ryannhg$date_format$DateFormat$format(tokens);
};
var $ryannhg$date_format$DateFormat$DayOfMonthSuffix = {$: 6};
var $ryannhg$date_format$DateFormat$dayOfMonthSuffix = $ryannhg$date_format$DateFormat$DayOfMonthSuffix;
var $ryannhg$date_format$DateFormat$MinuteFixed = {$: 31};
var $ryannhg$date_format$DateFormat$minuteFixed = $ryannhg$date_format$DateFormat$MinuteFixed;
var $terezka$line_charts$LineChart$Axis$Tick$formatNorm = function (unit) {
	var tokens = function () {
		switch (unit) {
			case 0:
				return _List_fromArray(
					[$ryannhg$date_format$DateFormat$millisecondNumber]);
			case 1:
				return _List_fromArray(
					[$ryannhg$date_format$DateFormat$secondNumber]);
			case 2:
				return _List_fromArray(
					[$ryannhg$date_format$DateFormat$minuteFixed]);
			case 3:
				return _List_fromArray(
					[$ryannhg$date_format$DateFormat$hourNumber, $ryannhg$date_format$DateFormat$amPmLowercase]);
			case 4:
				return _List_fromArray(
					[$ryannhg$date_format$DateFormat$dayOfMonthSuffix]);
			case 5:
				return _List_fromArray(
					[$ryannhg$date_format$DateFormat$monthNameAbbreviated]);
			default:
				return _List_fromArray(
					[$ryannhg$date_format$DateFormat$yearNumber]);
		}
	}();
	return $ryannhg$date_format$DateFormat$format(tokens);
};
var $terezka$line_charts$LineChart$Axis$Tick$Day = 4;
var $terezka$line_charts$LineChart$Axis$Tick$Hour = 3;
var $terezka$line_charts$LineChart$Axis$Tick$Minute = 2;
var $terezka$line_charts$LineChart$Axis$Tick$Month = 5;
var $terezka$line_charts$LineChart$Axis$Tick$Second = 1;
var $terezka$line_charts$LineChart$Axis$Tick$Year = 6;
var $terezka$line_charts$LineChart$Axis$Tick$nextUnit = function (unit) {
	switch (unit) {
		case 0:
			return 1;
		case 1:
			return 2;
		case 2:
			return 3;
		case 3:
			return 4;
		case 4:
			return 5;
		case 5:
			return 6;
		default:
			return 6;
	}
};
var $terezka$line_charts$LineChart$Axis$Tick$format = function (_v0) {
	var zone = _v0.nA;
	var change = _v0.jQ;
	var interval = _v0.k5;
	var timestamp = _v0.m4;
	var isFirst = _v0.k7;
	if (isFirst) {
		return A3(
			$terezka$line_charts$LineChart$Axis$Tick$formatBold,
			$terezka$line_charts$LineChart$Axis$Tick$nextUnit(interval.gi),
			zone,
			timestamp);
	} else {
		if (!change.$) {
			var change_ = change.a;
			return A3($terezka$line_charts$LineChart$Axis$Tick$formatBold, change_, zone, timestamp);
		} else {
			return A3($terezka$line_charts$LineChart$Axis$Tick$formatNorm, interval.gi, zone, timestamp);
		}
	}
};
var $avh4$elm_color$Color$gray = A4($avh4$elm_color$Color$RgbaSpace, 211 / 255, 215 / 255, 207 / 255, 1.0);
var $terezka$line_charts$Internal$Axis$Tick$Negative = 0;
var $terezka$line_charts$LineChart$Axis$Tick$negative = 0;
var $terezka$line_charts$LineChart$Axis$Tick$time = function (time_) {
	return $terezka$line_charts$LineChart$Axis$Tick$custom(
		{
			eL: $avh4$elm_color$Color$gray,
			g3: $terezka$line_charts$LineChart$Axis$Tick$negative,
			d4: true,
			hL: $elm$core$Maybe$Just(
				A2(
					$terezka$line_charts$Internal$Svg$label,
					'inherit',
					$terezka$line_charts$LineChart$Axis$Tick$format(time_))),
			hN: 5,
			im: $elm$time$Time$posixToMillis(time_.m4),
			i5: 1
		});
};
var $terezka$line_charts$Internal$Axis$Ticks$Config = $elm$core$Basics$identity;
var $terezka$line_charts$Internal$Axis$Ticks$custom = $elm$core$Basics$identity;
var $terezka$line_charts$Internal$Coordinate$smallestRange = F2(
	function (data, range_) {
		return {
			hV: A2($elm$core$Basics$min, data.hV, range_.hV),
			fp: A2($elm$core$Basics$max, data.fp, range_.fp)
		};
	});
var $terezka$line_charts$LineChart$Axis$Tick$Interval = F2(
	function (unit, multiple) {
		return {lz: multiple, gi: unit};
	});
var $terezka$line_charts$LineChart$Axis$Tick$Millisecond = 0;
var $terezka$line_charts$Internal$Axis$Values$Time$all = _List_fromArray(
	[0, 1, 2, 3, 4, 5, 6]);
var $justinmimbs$time_extra$Time$Extra$Day = 11;
var $justinmimbs$time_extra$Time$Extra$Millisecond = 15;
var $justinmimbs$time_extra$Time$Extra$Month = 2;
var $justinmimbs$date$Date$toRataDie = function (_v0) {
	var rd = _v0;
	return rd;
};
var $justinmimbs$time_extra$Time$Extra$dateToMillis = function (date) {
	var daysSinceEpoch = $justinmimbs$date$Date$toRataDie(date) - 719163;
	return daysSinceEpoch * 86400000;
};
var $justinmimbs$time_extra$Time$Extra$timeFromClock = F4(
	function (hour, minute, second, millisecond) {
		return (((hour * 3600000) + (minute * 60000)) + (second * 1000)) + millisecond;
	});
var $justinmimbs$time_extra$Time$Extra$timeFromPosix = F2(
	function (zone, posix) {
		return A4(
			$justinmimbs$time_extra$Time$Extra$timeFromClock,
			A2($elm$time$Time$toHour, zone, posix),
			A2($elm$time$Time$toMinute, zone, posix),
			A2($elm$time$Time$toSecond, zone, posix),
			A2($elm$time$Time$toMillis, zone, posix));
	});
var $justinmimbs$time_extra$Time$Extra$toOffset = F2(
	function (zone, posix) {
		var millis = $elm$time$Time$posixToMillis(posix);
		var localMillis = $justinmimbs$time_extra$Time$Extra$dateToMillis(
			A2($justinmimbs$date$Date$fromPosix, zone, posix)) + A2($justinmimbs$time_extra$Time$Extra$timeFromPosix, zone, posix);
		return ((localMillis - millis) / 60000) | 0;
	});
var $justinmimbs$time_extra$Time$Extra$posixFromDateTime = F3(
	function (zone, date, time) {
		var millis = $justinmimbs$time_extra$Time$Extra$dateToMillis(date) + time;
		var offset0 = A2(
			$justinmimbs$time_extra$Time$Extra$toOffset,
			zone,
			$elm$time$Time$millisToPosix(millis));
		var posix1 = $elm$time$Time$millisToPosix(millis - (offset0 * 60000));
		var offset1 = A2($justinmimbs$time_extra$Time$Extra$toOffset, zone, posix1);
		if (_Utils_eq(offset0, offset1)) {
			return posix1;
		} else {
			var posix2 = $elm$time$Time$millisToPosix(millis - (offset1 * 60000));
			var offset2 = A2($justinmimbs$time_extra$Time$Extra$toOffset, zone, posix2);
			return _Utils_eq(offset1, offset2) ? posix2 : posix1;
		}
	});
var $justinmimbs$time_extra$Time$Extra$add = F4(
	function (interval, n, zone, posix) {
		add:
		while (true) {
			switch (interval) {
				case 15:
					return $elm$time$Time$millisToPosix(
						$elm$time$Time$posixToMillis(posix) + n);
				case 14:
					var $temp$interval = 15,
						$temp$n = n * 1000,
						$temp$zone = zone,
						$temp$posix = posix;
					interval = $temp$interval;
					n = $temp$n;
					zone = $temp$zone;
					posix = $temp$posix;
					continue add;
				case 13:
					var $temp$interval = 15,
						$temp$n = n * 60000,
						$temp$zone = zone,
						$temp$posix = posix;
					interval = $temp$interval;
					n = $temp$n;
					zone = $temp$zone;
					posix = $temp$posix;
					continue add;
				case 12:
					var $temp$interval = 15,
						$temp$n = n * 3600000,
						$temp$zone = zone,
						$temp$posix = posix;
					interval = $temp$interval;
					n = $temp$n;
					zone = $temp$zone;
					posix = $temp$posix;
					continue add;
				case 11:
					return A3(
						$justinmimbs$time_extra$Time$Extra$posixFromDateTime,
						zone,
						A3(
							$justinmimbs$date$Date$add,
							3,
							n,
							A2($justinmimbs$date$Date$fromPosix, zone, posix)),
						A2($justinmimbs$time_extra$Time$Extra$timeFromPosix, zone, posix));
				case 2:
					return A3(
						$justinmimbs$time_extra$Time$Extra$posixFromDateTime,
						zone,
						A3(
							$justinmimbs$date$Date$add,
							1,
							n,
							A2($justinmimbs$date$Date$fromPosix, zone, posix)),
						A2($justinmimbs$time_extra$Time$Extra$timeFromPosix, zone, posix));
				case 0:
					var $temp$interval = 2,
						$temp$n = n * 12,
						$temp$zone = zone,
						$temp$posix = posix;
					interval = $temp$interval;
					n = $temp$n;
					zone = $temp$zone;
					posix = $temp$posix;
					continue add;
				case 1:
					var $temp$interval = 2,
						$temp$n = n * 3,
						$temp$zone = zone,
						$temp$posix = posix;
					interval = $temp$interval;
					n = $temp$n;
					zone = $temp$zone;
					posix = $temp$posix;
					continue add;
				case 3:
					var $temp$interval = 11,
						$temp$n = n * 7,
						$temp$zone = zone,
						$temp$posix = posix;
					interval = $temp$interval;
					n = $temp$n;
					zone = $temp$zone;
					posix = $temp$posix;
					continue add;
				default:
					var weekday = interval;
					var $temp$interval = 11,
						$temp$n = n * 7,
						$temp$zone = zone,
						$temp$posix = posix;
					interval = $temp$interval;
					n = $temp$n;
					zone = $temp$zone;
					posix = $temp$posix;
					continue add;
			}
		}
	});
var $justinmimbs$date$Date$Month = 2;
var $justinmimbs$date$Date$Quarter = 1;
var $justinmimbs$date$Date$Week = 3;
var $justinmimbs$date$Date$Year = 0;
var $justinmimbs$time_extra$Time$Extra$floorDate = F3(
	function (dateInterval, zone, posix) {
		return A3(
			$justinmimbs$time_extra$Time$Extra$posixFromDateTime,
			zone,
			A2(
				$justinmimbs$date$Date$floor,
				dateInterval,
				A2($justinmimbs$date$Date$fromPosix, zone, posix)),
			0);
	});
var $justinmimbs$time_extra$Time$Extra$floor = F3(
	function (interval, zone, posix) {
		switch (interval) {
			case 15:
				return posix;
			case 14:
				return A3(
					$justinmimbs$time_extra$Time$Extra$posixFromDateTime,
					zone,
					A2($justinmimbs$date$Date$fromPosix, zone, posix),
					A4(
						$justinmimbs$time_extra$Time$Extra$timeFromClock,
						A2($elm$time$Time$toHour, zone, posix),
						A2($elm$time$Time$toMinute, zone, posix),
						A2($elm$time$Time$toSecond, zone, posix),
						0));
			case 13:
				return A3(
					$justinmimbs$time_extra$Time$Extra$posixFromDateTime,
					zone,
					A2($justinmimbs$date$Date$fromPosix, zone, posix),
					A4(
						$justinmimbs$time_extra$Time$Extra$timeFromClock,
						A2($elm$time$Time$toHour, zone, posix),
						A2($elm$time$Time$toMinute, zone, posix),
						0,
						0));
			case 12:
				return A3(
					$justinmimbs$time_extra$Time$Extra$posixFromDateTime,
					zone,
					A2($justinmimbs$date$Date$fromPosix, zone, posix),
					A4(
						$justinmimbs$time_extra$Time$Extra$timeFromClock,
						A2($elm$time$Time$toHour, zone, posix),
						0,
						0,
						0));
			case 11:
				return A3($justinmimbs$time_extra$Time$Extra$floorDate, 11, zone, posix);
			case 2:
				return A3($justinmimbs$time_extra$Time$Extra$floorDate, 2, zone, posix);
			case 0:
				return A3($justinmimbs$time_extra$Time$Extra$floorDate, 0, zone, posix);
			case 1:
				return A3($justinmimbs$time_extra$Time$Extra$floorDate, 1, zone, posix);
			case 3:
				return A3($justinmimbs$time_extra$Time$Extra$floorDate, 3, zone, posix);
			case 4:
				return A3($justinmimbs$time_extra$Time$Extra$floorDate, 4, zone, posix);
			case 5:
				return A3($justinmimbs$time_extra$Time$Extra$floorDate, 5, zone, posix);
			case 6:
				return A3($justinmimbs$time_extra$Time$Extra$floorDate, 6, zone, posix);
			case 7:
				return A3($justinmimbs$time_extra$Time$Extra$floorDate, 7, zone, posix);
			case 8:
				return A3($justinmimbs$time_extra$Time$Extra$floorDate, 8, zone, posix);
			case 9:
				return A3($justinmimbs$time_extra$Time$Extra$floorDate, 9, zone, posix);
			default:
				return A3($justinmimbs$time_extra$Time$Extra$floorDate, 10, zone, posix);
		}
	});
var $justinmimbs$time_extra$Time$Extra$ceiling = F3(
	function (interval, zone, posix) {
		var floored = A3($justinmimbs$time_extra$Time$Extra$floor, interval, zone, posix);
		return _Utils_eq(floored, posix) ? posix : A4($justinmimbs$time_extra$Time$Extra$add, interval, 1, zone, floored);
	});
var $justinmimbs$time_extra$Time$Extra$Hour = 12;
var $justinmimbs$time_extra$Time$Extra$Minute = 13;
var $justinmimbs$time_extra$Time$Extra$Second = 14;
var $justinmimbs$time_extra$Time$Extra$Year = 0;
var $terezka$line_charts$Internal$Axis$Values$Time$toExtraUnit = function (unit) {
	switch (unit) {
		case 0:
			return 15;
		case 1:
			return 14;
		case 2:
			return 13;
		case 3:
			return 12;
		case 4:
			return 11;
		case 5:
			return 2;
		default:
			return 0;
	}
};
var $terezka$line_charts$Internal$Axis$Values$Time$beginAt = F4(
	function (zone, min, unit, multiple) {
		return A3(
			$justinmimbs$time_extra$Time$Extra$ceiling,
			$terezka$line_charts$Internal$Axis$Values$Time$toExtraUnit(unit),
			zone,
			A4(
				$justinmimbs$time_extra$Time$Extra$add,
				$terezka$line_charts$Internal$Axis$Values$Time$toExtraUnit(unit),
				multiple,
				zone,
				min));
	});
var $terezka$line_charts$Internal$Axis$Values$Time$multiples = function (unit) {
	switch (unit) {
		case 0:
			return _List_fromArray(
				[1, 2, 5, 10, 20, 25, 50, 100, 200, 500]);
		case 1:
			return _List_fromArray(
				[1, 2, 5, 10, 15, 30]);
		case 2:
			return _List_fromArray(
				[1, 2, 5, 10, 15, 30]);
		case 3:
			return _List_fromArray(
				[1, 2, 3, 4, 6, 8, 12]);
		case 4:
			return _List_fromArray(
				[1, 2]);
		case 5:
			return _List_fromArray(
				[1, 2, 3, 4, 6]);
		default:
			return _List_fromArray(
				[1, 2, 5, 10, 20, 25, 50, 100, 200, 500, 1000, 10000]);
	}
};
var $terezka$line_charts$Internal$Axis$Values$Time$toMs = function (unit) {
	switch (unit) {
		case 0:
			return 1;
		case 1:
			return 1000;
		case 2:
			return 60000;
		case 3:
			return 3600000;
		case 4:
			return 24 * 3600000;
		case 5:
			return (28 * 24) * 3600000;
		default:
			return (364 * 24) * 3600000;
	}
};
var $terezka$line_charts$Internal$Axis$Values$Time$findBestMultiple = F2(
	function (interval, unit) {
		var middleOfNext = F2(
			function (m1, m2) {
				return ((m1 * $terezka$line_charts$Internal$Axis$Values$Time$toMs(unit)) + (m2 * $terezka$line_charts$Internal$Axis$Values$Time$toMs(unit))) / 2;
			});
		var findBest_ = function (multiples_) {
			findBest_:
			while (true) {
				if (multiples_.b) {
					if (multiples_.b.b) {
						var m1 = multiples_.a;
						var _v1 = multiples_.b;
						var m2 = _v1.a;
						var rest = _v1.b;
						if (_Utils_cmp(
							interval,
							A2(middleOfNext, m1, m2)) < 1) {
							return m1;
						} else {
							var $temp$multiples_ = A2($elm$core$List$cons, m2, rest);
							multiples_ = $temp$multiples_;
							continue findBest_;
						}
					} else {
						var m = multiples_.a;
						return m;
					}
				} else {
					return 1;
				}
			}
		};
		return findBest_(
			$terezka$line_charts$Internal$Axis$Values$Time$multiples(unit));
	});
var $terezka$line_charts$Internal$Axis$Values$Time$highestMultiple = A2(
	$elm$core$Basics$composeR,
	$elm$core$List$reverse,
	A2(
		$elm$core$Basics$composeR,
		$elm$core$List$head,
		A2(
			$elm$core$Basics$composeR,
			$elm$core$Maybe$withDefault(0),
			$elm$core$Basics$toFloat)));
var $terezka$line_charts$Internal$Axis$Values$Time$findBestUnit = F2(
	function (interval, units_) {
		var middleOfNext = F2(
			function (u1, u2) {
				return (($terezka$line_charts$Internal$Axis$Values$Time$toMs(u1) * $terezka$line_charts$Internal$Axis$Values$Time$highestMultiple(
					$terezka$line_charts$Internal$Axis$Values$Time$multiples(u1))) + $terezka$line_charts$Internal$Axis$Values$Time$toMs(u2)) / 2;
			});
		var findBest_ = F2(
			function (units__, u0) {
				findBest_:
				while (true) {
					if (units__.b) {
						if (units__.b.b) {
							var u1 = units__.a;
							var _v1 = units__.b;
							var u2 = _v1.a;
							var rest = _v1.b;
							if (_Utils_cmp(
								interval,
								A2(middleOfNext, u1, u2)) < 1) {
								return u1;
							} else {
								var $temp$units__ = A2($elm$core$List$cons, u2, rest),
									$temp$u0 = u1;
								units__ = $temp$units__;
								u0 = $temp$u0;
								continue findBest_;
							}
						} else {
							var u = units__.a;
							return u;
						}
					} else {
						return 6;
					}
				}
			});
		return A2(findBest_, units_, 6);
	});
var $terezka$line_charts$Internal$Axis$Values$Time$floatToPosix = function (ms) {
	return $elm$time$Time$millisToPosix(
		$elm$core$Basics$round(ms));
};
var $justinmimbs$time_extra$Time$Extra$Week = 3;
var $justinmimbs$time_extra$Time$Extra$toFractionalDay = F2(
	function (zone, posix) {
		return A2($justinmimbs$time_extra$Time$Extra$timeFromPosix, zone, posix) / 86400000;
	});
var $justinmimbs$time_extra$Time$Extra$toMonths = F2(
	function (zone, posix) {
		var wholeMonths = (12 * (A2($elm$time$Time$toYear, zone, posix) - 1)) + ($justinmimbs$date$Date$monthToNumber(
			A2($elm$time$Time$toMonth, zone, posix)) - 1);
		var fractionalMonth = (A2($elm$time$Time$toDay, zone, posix) + A2($justinmimbs$time_extra$Time$Extra$toFractionalDay, zone, posix)) / 100;
		return wholeMonths + fractionalMonth;
	});
var $justinmimbs$time_extra$Time$Extra$toRataDieMoment = F2(
	function (zone, posix) {
		return $justinmimbs$date$Date$toRataDie(
			A2($justinmimbs$date$Date$fromPosix, zone, posix)) + A2($justinmimbs$time_extra$Time$Extra$toFractionalDay, zone, posix);
	});
var $elm$core$Basics$truncate = _Basics_truncate;
var $justinmimbs$time_extra$Time$Extra$diff = F4(
	function (interval, zone, posix1, posix2) {
		diff:
		while (true) {
			switch (interval) {
				case 15:
					return $elm$time$Time$posixToMillis(posix2) - $elm$time$Time$posixToMillis(posix1);
				case 14:
					return (A4($justinmimbs$time_extra$Time$Extra$diff, 15, zone, posix1, posix2) / 1000) | 0;
				case 13:
					return (A4($justinmimbs$time_extra$Time$Extra$diff, 15, zone, posix1, posix2) / 60000) | 0;
				case 12:
					return (A4($justinmimbs$time_extra$Time$Extra$diff, 15, zone, posix1, posix2) / 3600000) | 0;
				case 11:
					return (A2($justinmimbs$time_extra$Time$Extra$toRataDieMoment, zone, posix2) - A2($justinmimbs$time_extra$Time$Extra$toRataDieMoment, zone, posix1)) | 0;
				case 2:
					return (A2($justinmimbs$time_extra$Time$Extra$toMonths, zone, posix2) - A2($justinmimbs$time_extra$Time$Extra$toMonths, zone, posix1)) | 0;
				case 0:
					return (A4($justinmimbs$time_extra$Time$Extra$diff, 2, zone, posix1, posix2) / 12) | 0;
				case 1:
					return (A4($justinmimbs$time_extra$Time$Extra$diff, 2, zone, posix1, posix2) / 3) | 0;
				case 3:
					return (A4($justinmimbs$time_extra$Time$Extra$diff, 11, zone, posix1, posix2) / 7) | 0;
				default:
					var weekday = interval;
					var $temp$interval = 3,
						$temp$zone = zone,
						$temp$posix1 = A3($justinmimbs$time_extra$Time$Extra$floor, weekday, zone, posix1),
						$temp$posix2 = A3($justinmimbs$time_extra$Time$Extra$floor, weekday, zone, posix2);
					interval = $temp$interval;
					zone = $temp$zone;
					posix1 = $temp$posix1;
					posix2 = $temp$posix2;
					continue diff;
			}
		}
	});
var $terezka$line_charts$Internal$Axis$Values$Time$getUnitChange = F4(
	function (interval, zone, value, next_) {
		var equalBy = function (unit) {
			return !A4(
				$justinmimbs$time_extra$Time$Extra$diff,
				$terezka$line_charts$Internal$Axis$Values$Time$toExtraUnit(unit),
				zone,
				A3(
					$justinmimbs$time_extra$Time$Extra$floor,
					$terezka$line_charts$Internal$Axis$Values$Time$toExtraUnit(unit),
					zone,
					value),
				A3(
					$justinmimbs$time_extra$Time$Extra$floor,
					$terezka$line_charts$Internal$Axis$Values$Time$toExtraUnit(unit),
					zone,
					next_));
		};
		var unitChange_ = function (units) {
			unitChange_:
			while (true) {
				if (units.b) {
					var unit = units.a;
					var rest = units.b;
					if (_Utils_cmp(
						$terezka$line_charts$Internal$Axis$Values$Time$toMs(unit),
						$terezka$line_charts$Internal$Axis$Values$Time$toMs(interval)) < 1) {
						var $temp$units = rest;
						units = $temp$units;
						continue unitChange_;
					} else {
						if (!equalBy(unit)) {
							return $elm$core$Maybe$Just(unit);
						} else {
							return $elm$core$Maybe$Nothing;
						}
					}
				} else {
					return $elm$core$Maybe$Nothing;
				}
			}
		};
		return unitChange_($terezka$line_charts$Internal$Axis$Values$Time$all);
	});
var $terezka$line_charts$Internal$Axis$Values$Time$next = F4(
	function (zone, timestamp, unit, multiple) {
		return A4(
			$justinmimbs$time_extra$Time$Extra$add,
			$terezka$line_charts$Internal$Axis$Values$Time$toExtraUnit(unit),
			multiple,
			zone,
			timestamp);
	});
var $terezka$line_charts$Internal$Axis$Values$Time$posixsToFloat = function (posix) {
	return $elm$time$Time$posixToMillis(posix);
};
var $terezka$line_charts$Internal$Axis$Values$Time$values = F3(
	function (zone, amountRough, range) {
		var intervalRough = (range.hV - range.fp) / amountRough;
		var unit = A2($terezka$line_charts$Internal$Axis$Values$Time$findBestUnit, intervalRough, $terezka$line_charts$Internal$Axis$Values$Time$all);
		var multiple = A2($terezka$line_charts$Internal$Axis$Values$Time$findBestMultiple, intervalRough, unit);
		var toTime = F3(
			function (unitChange, value, isFirst) {
				return {
					jQ: unitChange,
					k5: A2($terezka$line_charts$LineChart$Axis$Tick$Interval, unit, multiple),
					k7: isFirst,
					m4: value,
					nA: zone
				};
			});
		var toTimes = F3(
			function (values_, unitChange, acc) {
				toTimes:
				while (true) {
					if (values_.b) {
						if (values_.b.b) {
							var value = values_.a;
							var _v1 = values_.b;
							var next_ = _v1.a;
							var rest = _v1.b;
							var newUnitChange = A4($terezka$line_charts$Internal$Axis$Values$Time$getUnitChange, unit, zone, value, next_);
							var isFirst = $elm$core$List$isEmpty(acc);
							var newAcc = A2(
								$elm$core$List$cons,
								A3(toTime, unitChange, value, isFirst),
								acc);
							var $temp$values_ = A2($elm$core$List$cons, next_, rest),
								$temp$unitChange = newUnitChange,
								$temp$acc = newAcc;
							values_ = $temp$values_;
							unitChange = $temp$unitChange;
							acc = $temp$acc;
							continue toTimes;
						} else {
							var value = values_.a;
							return A2(
								$elm$core$List$cons,
								A3(
									toTime,
									unitChange,
									value,
									$elm$core$List$isEmpty(acc)),
								acc);
						}
					} else {
						return acc;
					}
				}
			});
		var interval = $terezka$line_charts$Internal$Axis$Values$Time$toMs(unit) * multiple;
		var beginning = A4(
			$terezka$line_charts$Internal$Axis$Values$Time$beginAt,
			zone,
			$terezka$line_charts$Internal$Axis$Values$Time$floatToPosix(range.fp),
			unit,
			multiple);
		var toPositions = F2(
			function (acc, i) {
				toPositions:
				while (true) {
					var next_ = A4($terezka$line_charts$Internal$Axis$Values$Time$next, zone, beginning, unit, i * multiple);
					if (_Utils_cmp(
						$terezka$line_charts$Internal$Axis$Values$Time$posixsToFloat(next_),
						range.hV) > 0) {
						return acc;
					} else {
						var $temp$acc = _Utils_ap(
							acc,
							_List_fromArray(
								[next_])),
							$temp$i = i + 1;
						acc = $temp$acc;
						i = $temp$i;
						continue toPositions;
					}
				}
			});
		return A3(
			toTimes,
			A2(toPositions, _List_Nil, 0),
			$elm$core$Maybe$Nothing,
			_List_Nil);
	});
var $terezka$line_charts$Internal$Axis$Values$time = $terezka$line_charts$Internal$Axis$Values$Time$values;
var $terezka$line_charts$Internal$Axis$Ticks$timeCustom = F3(
	function (zone, amount, tick) {
		return $terezka$line_charts$Internal$Axis$Ticks$custom(
			F2(
				function (data, range) {
					return A2(
						$elm$core$List$map,
						tick,
						A3(
							$terezka$line_charts$Internal$Axis$Values$time,
							zone,
							amount,
							A2($terezka$line_charts$Internal$Coordinate$smallestRange, data, range)));
				}));
	});
var $terezka$line_charts$LineChart$Axis$Ticks$timeCustom = $terezka$line_charts$Internal$Axis$Ticks$timeCustom;
var $elm$time$Time$utc = A2($elm$time$Time$Zone, 0, _List_Nil);
var $author$project$Page$Trends$ticksConfig = A3($terezka$line_charts$LineChart$Axis$Ticks$timeCustom, $elm$time$Time$utc, 10, $terezka$line_charts$LineChart$Axis$Tick$time);
var $author$project$Page$Trends$amountsXAxisConfig = $terezka$line_charts$LineChart$Axis$custom(
	{
		eC: $terezka$line_charts$LineChart$Axis$Line$full($avh4$elm_color$Color$black),
		fN: 1000,
		fQ: A2($terezka$line_charts$LineChart$Axis$Range$padded, 20, 20),
		gb: $author$project$Page$Trends$ticksConfig,
		er: $terezka$line_charts$LineChart$Axis$Title$default('Month'),
		gj: A2(
			$elm$core$Basics$composeL,
			A2(
				$elm$core$Basics$composeL,
				A2($elm$core$Basics$composeL, $elm$core$Maybe$Just, $elm$core$Basics$toFloat),
				$elm$time$Time$posixToMillis),
			function ($) {
				return $.aJ;
			})
	});
var $terezka$line_charts$Internal$Area$None = {$: 0};
var $terezka$line_charts$Internal$Area$none = $terezka$line_charts$Internal$Area$None;
var $terezka$line_charts$LineChart$Area$default = $terezka$line_charts$Internal$Area$none;
var $terezka$line_charts$Internal$Axis$Intersection$Config = $elm$core$Basics$identity;
var $terezka$line_charts$Internal$Data$Point = F2(
	function (x, y) {
		return {gt: x, nt: y};
	});
var $terezka$line_charts$Internal$Axis$Intersection$custom = F2(
	function (toX, toY) {
		return function (_v0) {
			var x = _v0.gt;
			var y = _v0.nt;
			return A2(
				$terezka$line_charts$Internal$Data$Point,
				toX(x),
				toY(y));
		};
	});
var $terezka$line_charts$Internal$Axis$Intersection$default = A2(
	$terezka$line_charts$Internal$Axis$Intersection$custom,
	function ($) {
		return $.fp;
	},
	function ($) {
		return $.fp;
	});
var $terezka$line_charts$LineChart$Axis$Intersection$default = $terezka$line_charts$Internal$Axis$Intersection$default;
var $avh4$elm_color$Color$scaleFrom255 = function (c) {
	return c / 255;
};
var $avh4$elm_color$Color$rgb255 = F3(
	function (r, g, b) {
		return A4(
			$avh4$elm_color$Color$RgbaSpace,
			$avh4$elm_color$Color$scaleFrom255(r),
			$avh4$elm_color$Color$scaleFrom255(g),
			$avh4$elm_color$Color$scaleFrom255(b),
			1.0);
	});
var $terezka$line_charts$LineChart$Colors$grayLightest = A3($avh4$elm_color$Color$rgb255, 243, 243, 243);
var $terezka$line_charts$Internal$Grid$Lines = F2(
	function (a, b) {
		return {$: 1, a: a, b: b};
	});
var $terezka$line_charts$Internal$Grid$lines = $terezka$line_charts$Internal$Grid$Lines;
var $terezka$line_charts$Internal$Grid$default = A2($terezka$line_charts$Internal$Grid$lines, 1, $terezka$line_charts$LineChart$Colors$grayLightest);
var $terezka$line_charts$LineChart$Grid$default = $terezka$line_charts$Internal$Grid$default;
var $terezka$line_charts$Internal$Interpolation$Linear = 0;
var $terezka$line_charts$LineChart$Interpolation$linear = 0;
var $terezka$line_charts$LineChart$Interpolation$default = $terezka$line_charts$LineChart$Interpolation$linear;
var $terezka$line_charts$Internal$Line$Config = $elm$core$Basics$identity;
var $terezka$line_charts$Internal$Line$Style = $elm$core$Basics$identity;
var $terezka$line_charts$Internal$Line$style = F2(
	function (width, color_) {
		return {eL: color_, i5: width};
	});
var $terezka$line_charts$Internal$Line$default = function (_v0) {
	return A2($terezka$line_charts$Internal$Line$style, 1, $elm$core$Basics$identity);
};
var $terezka$line_charts$LineChart$Line$default = $terezka$line_charts$Internal$Line$default;
var $terezka$line_charts$Internal$Axis$Values$Around = function (a) {
	return {$: 1, a: a};
};
var $terezka$line_charts$Internal$Axis$Values$around = $terezka$line_charts$Internal$Axis$Values$Around;
var $terezka$line_charts$Internal$Axis$Values$ceilingTo = F2(
	function (prec, number) {
		return prec * $elm$core$Basics$ceiling(number / prec);
	});
var $terezka$line_charts$Internal$Axis$Values$getBeginning = F2(
	function (min, interval) {
		var multiple = min / interval;
		return _Utils_eq(
			multiple,
			$elm$core$Basics$round(multiple)) ? min : A2($terezka$line_charts$Internal$Axis$Values$ceilingTo, interval, min);
	});
var $terezka$line_charts$Internal$Axis$Values$correctFloat = function (prec) {
	return A2(
		$elm$core$Basics$composeR,
		$myrho$elm_round$Round$round(prec),
		A2(
			$elm$core$Basics$composeR,
			$elm$core$String$toFloat,
			$elm$core$Maybe$withDefault(0)));
};
var $terezka$line_charts$Internal$Axis$Values$getMultiples = F3(
	function (magnitude, allowDecimals, hasTickAmount) {
		var defaults = hasTickAmount ? _List_fromArray(
			[1, 1.2, 1.5, 2, 2.5, 3, 4, 5, 6, 8, 10]) : _List_fromArray(
			[1, 2, 2.5, 5, 10]);
		return allowDecimals ? defaults : ((magnitude === 1) ? A2(
			$elm$core$List$filter,
			function (n) {
				return _Utils_eq(
					$elm$core$Basics$round(n),
					n);
			},
			defaults) : ((magnitude <= 0.1) ? _List_fromArray(
			[1 / magnitude]) : defaults));
	});
var $terezka$line_charts$Internal$Axis$Values$getPrecision = function (number) {
	var _v0 = A2(
		$elm$core$String$split,
		'e',
		$elm$core$String$fromFloat(number));
	if ((_v0.b && _v0.b.b) && (!_v0.b.b.b)) {
		var before = _v0.a;
		var _v1 = _v0.b;
		var after = _v1.a;
		return $elm$core$Basics$abs(
			A2(
				$elm$core$Maybe$withDefault,
				0,
				$elm$core$String$toInt(after)));
	} else {
		var _v2 = A2(
			$elm$core$String$split,
			'.',
			$elm$core$String$fromFloat(number));
		if ((_v2.b && _v2.b.b) && (!_v2.b.b.b)) {
			var before = _v2.a;
			var _v3 = _v2.b;
			var after = _v3.a;
			return $elm$core$String$length(after);
		} else {
			return 0;
		}
	}
};
var $elm$core$Basics$e = _Basics_e;
var $terezka$line_charts$Internal$Utils$magnitude = function (num) {
	return A2(
		$elm$core$Basics$pow,
		10,
		$elm$core$Basics$floor(
			A2($elm$core$Basics$logBase, $elm$core$Basics$e, num) / A2($elm$core$Basics$logBase, $elm$core$Basics$e, 10)));
};
var $terezka$line_charts$Internal$Axis$Values$getInterval = F3(
	function (intervalRaw, allowDecimals, hasTickAmount) {
		var magnitude = $terezka$line_charts$Internal$Utils$magnitude(intervalRaw);
		var multiples = A3($terezka$line_charts$Internal$Axis$Values$getMultiples, magnitude, allowDecimals, hasTickAmount);
		var normalized = intervalRaw / magnitude;
		var findMultipleExact = function (multiples_) {
			findMultipleExact:
			while (true) {
				if (multiples_.b) {
					var m1 = multiples_.a;
					var rest = multiples_.b;
					if (_Utils_cmp(m1 * magnitude, intervalRaw) > -1) {
						return m1;
					} else {
						var $temp$multiples_ = rest;
						multiples_ = $temp$multiples_;
						continue findMultipleExact;
					}
				} else {
					return 1;
				}
			}
		};
		var findMultiple = function (multiples_) {
			findMultiple:
			while (true) {
				if (multiples_.b) {
					if (multiples_.b.b) {
						var m1 = multiples_.a;
						var _v2 = multiples_.b;
						var m2 = _v2.a;
						var rest = _v2.b;
						if (_Utils_cmp(normalized, (m1 + m2) / 2) < 1) {
							return m1;
						} else {
							var $temp$multiples_ = A2($elm$core$List$cons, m2, rest);
							multiples_ = $temp$multiples_;
							continue findMultiple;
						}
					} else {
						var m1 = multiples_.a;
						var rest = multiples_.b;
						if (_Utils_cmp(normalized, m1) < 1) {
							return m1;
						} else {
							var $temp$multiples_ = rest;
							multiples_ = $temp$multiples_;
							continue findMultiple;
						}
					}
				} else {
					return 1;
				}
			}
		};
		var multiple = hasTickAmount ? findMultipleExact(multiples) : findMultiple(multiples);
		var precision = $terezka$line_charts$Internal$Axis$Values$getPrecision(magnitude) + $terezka$line_charts$Internal$Axis$Values$getPrecision(multiple);
		return A2($terezka$line_charts$Internal$Axis$Values$correctFloat, precision, multiple * magnitude);
	});
var $terezka$line_charts$Internal$Axis$Values$positions = F5(
	function (range, beginning, interval, m, acc) {
		positions:
		while (true) {
			var next = A2(
				$terezka$line_charts$Internal$Axis$Values$correctFloat,
				$terezka$line_charts$Internal$Axis$Values$getPrecision(interval),
				beginning + (m * interval));
			if (_Utils_cmp(next, range.hV) > 0) {
				return acc;
			} else {
				var $temp$range = range,
					$temp$beginning = beginning,
					$temp$interval = interval,
					$temp$m = m + 1,
					$temp$acc = _Utils_ap(
					acc,
					_List_fromArray(
						[next]));
				range = $temp$range;
				beginning = $temp$beginning;
				interval = $temp$interval;
				m = $temp$m;
				acc = $temp$acc;
				continue positions;
			}
		}
	});
var $terezka$line_charts$Internal$Axis$Values$values = F4(
	function (allowDecimals, exact, amountRough, range) {
		var intervalRough = (range.hV - range.fp) / amountRough;
		var interval = A3($terezka$line_charts$Internal$Axis$Values$getInterval, intervalRough, allowDecimals, exact);
		var intervalSafe = (!interval) ? 1 : interval;
		var beginning = A2($terezka$line_charts$Internal$Axis$Values$getBeginning, range.fp, intervalSafe);
		var amountRoughSafe = (!amountRough) ? 1 : amountRough;
		return A5($terezka$line_charts$Internal$Axis$Values$positions, range, beginning, intervalSafe, 0, _List_Nil);
	});
var $terezka$line_charts$Internal$Axis$Values$float = function (amount) {
	if (!amount.$) {
		var amount_ = amount.a;
		return A3($terezka$line_charts$Internal$Axis$Values$values, true, true, amount_);
	} else {
		var amount_ = amount.a;
		return A3($terezka$line_charts$Internal$Axis$Values$values, true, false, amount_);
	}
};
var $terezka$line_charts$Internal$Axis$Ticks$floatCustom = F2(
	function (amount, tick) {
		return $terezka$line_charts$Internal$Axis$Ticks$custom(
			F2(
				function (data, range) {
					return A2(
						$elm$core$List$map,
						tick,
						A2(
							$terezka$line_charts$Internal$Axis$Values$float,
							$terezka$line_charts$Internal$Axis$Values$around(amount),
							A2($terezka$line_charts$Internal$Coordinate$smallestRange, data, range)));
				}));
	});
var $terezka$line_charts$LineChart$Axis$Ticks$floatCustom = $terezka$line_charts$Internal$Axis$Ticks$floatCustom;
var $author$project$Page$Trends$formatDollars = function (number) {
	return '$' + A2($cuducos$elm_format_number$FormatNumber$format, $cuducos$elm_format_number$FormatNumber$Locales$usLocale, number);
};
var $ryannhg$date_format$DateFormat$DayOfMonthFixed = {$: 7};
var $ryannhg$date_format$DateFormat$dayOfMonthFixed = $ryannhg$date_format$DateFormat$DayOfMonthFixed;
var $ryannhg$date_format$DateFormat$Text = function (a) {
	return {$: 36, a: a};
};
var $ryannhg$date_format$DateFormat$text = $ryannhg$date_format$DateFormat$Text;
var $author$project$Page$Trends$dateFormat = A2(
	$ryannhg$date_format$DateFormat$format,
	_List_fromArray(
		[
			$ryannhg$date_format$DateFormat$dayOfMonthFixed,
			$ryannhg$date_format$DateFormat$text(' '),
			$ryannhg$date_format$DateFormat$monthNameAbbreviated
		]),
	$elm$time$Time$utc);
var $author$project$Page$Trends$formatXAmounts = function (info) {
	return 'Month: ' + $author$project$Page$Trends$dateFormat(info.aJ);
};
var $author$project$Page$Trends$formatYAmounts = function (info) {
	return $author$project$Page$Trends$formatDollars(info.ge);
};
var $terezka$line_charts$Internal$Legends$Grouped = F2(
	function (a, b) {
		return {$: 2, a: a, b: b};
	});
var $terezka$line_charts$Internal$Legends$groupedCustom = F2(
	function (sampleWidth, container) {
		return A2(
			$terezka$line_charts$Internal$Legends$Grouped,
			sampleWidth,
			function (_v0) {
				return container;
			});
	});
var $terezka$line_charts$LineChart$Legends$groupedCustom = $terezka$line_charts$Internal$Legends$groupedCustom;
var $mdgriffith$elm_ui$Internal$Model$Heading = function (a) {
	return {$: 4, a: a};
};
var $mdgriffith$elm_ui$Element$Region$heading = A2($elm$core$Basics$composeL, $mdgriffith$elm_ui$Internal$Model$Describe, $mdgriffith$elm_ui$Internal$Model$Heading);
var $terezka$line_charts$Internal$Dots$Aura = F2(
	function (a, b) {
		return {$: 2, a: a, b: b};
	});
var $terezka$line_charts$Internal$Dots$Style = $elm$core$Basics$identity;
var $terezka$line_charts$Internal$Dots$style = F2(
	function (radius, variety) {
		return {l8: radius, gk: variety};
	});
var $terezka$line_charts$Internal$Dots$aura = F3(
	function (radius, aura_, opacity) {
		return A2(
			$terezka$line_charts$Internal$Dots$style,
			radius,
			A2($terezka$line_charts$Internal$Dots$Aura, aura_, opacity));
	});
var $terezka$line_charts$LineChart$Dots$aura = $terezka$line_charts$Internal$Dots$aura;
var $terezka$line_charts$Internal$Dots$Config = $elm$core$Basics$identity;
var $terezka$line_charts$Internal$Dots$customAny = $elm$core$Basics$identity;
var $terezka$line_charts$Internal$Dots$Disconnected = function (a) {
	return {$: 1, a: a};
};
var $terezka$line_charts$Internal$Dots$disconnected = F2(
	function (radius, border) {
		return A2(
			$terezka$line_charts$Internal$Dots$style,
			radius,
			$terezka$line_charts$Internal$Dots$Disconnected(border));
	});
var $terezka$line_charts$LineChart$Dots$disconnected = $terezka$line_charts$Internal$Dots$disconnected;
var $terezka$line_charts$LineChart$Dots$hoverMany = function (hovered) {
	var styleLegend = function (_v0) {
		return A2($terezka$line_charts$LineChart$Dots$disconnected, 10, 2);
	};
	var styleIndividual = function (datum) {
		return A2(
			$elm$core$List$any,
			$elm$core$Basics$eq(datum),
			hovered) ? A3($terezka$line_charts$LineChart$Dots$aura, 7, 6, 0.3) : A2($terezka$line_charts$LineChart$Dots$disconnected, 10, 2);
	};
	return $terezka$line_charts$Internal$Dots$customAny(
		{fa: styleIndividual, fd: styleLegend});
};
var $terezka$line_charts$Internal$Events$Config = $elm$core$Basics$identity;
var $terezka$line_charts$Internal$Events$custom = $elm$core$Basics$identity;
var $terezka$line_charts$Internal$Events$Decoder = $elm$core$Basics$identity;
var $terezka$line_charts$Internal$Coordinate$lengthX = function (system) {
	return A2($elm$core$Basics$max, 1, (system.d2.f$.i5 - system.d2.ec.fb) - system.d2.ec.fT);
};
var $terezka$line_charts$Internal$Coordinate$reachX = function (system) {
	var diff = system.gt.hV - system.gt.fp;
	return (diff > 0) ? diff : 1;
};
var $terezka$line_charts$LineChart$Coordinate$scaleSvgX = F2(
	function (system, value) {
		return (value * $terezka$line_charts$Internal$Coordinate$lengthX(system)) / $terezka$line_charts$Internal$Coordinate$reachX(system);
	});
var $terezka$line_charts$LineChart$Coordinate$toSvgX = F2(
	function (system, value) {
		return A2($terezka$line_charts$LineChart$Coordinate$scaleSvgX, system, value - system.gt.fp) + system.d2.ec.fb;
	});
var $terezka$line_charts$Internal$Events$distanceX = F3(
	function (system, searched, dot) {
		return $elm$core$Basics$abs(
			A2($terezka$line_charts$LineChart$Coordinate$toSvgX, system, dot.gt) - A2($terezka$line_charts$LineChart$Coordinate$toSvgX, system, searched.gt));
	});
var $terezka$line_charts$Internal$Events$getNearestXHelp = F3(
	function (points, system, searched) {
		var distanceX_ = A2($terezka$line_charts$Internal$Events$distanceX, system, searched);
		var getClosest = F2(
			function (point, allClosest) {
				var _v0 = $elm$core$List$head(allClosest);
				if (!_v0.$) {
					var closest = _v0.a;
					return _Utils_eq(closest.l4.gt, point.l4.gt) ? A2($elm$core$List$cons, point, allClosest) : ((_Utils_cmp(
						distanceX_(closest.l4),
						distanceX_(point.l4)) > 0) ? _List_fromArray(
						[point]) : allClosest);
				} else {
					return _List_fromArray(
						[point]);
				}
			});
		return A3($elm$core$List$foldl, getClosest, _List_Nil, points);
	});
var $terezka$line_charts$LineChart$Coordinate$scaleDataX = F2(
	function (system, value) {
		return (value * $terezka$line_charts$Internal$Coordinate$reachX(system)) / $terezka$line_charts$Internal$Coordinate$lengthX(system);
	});
var $terezka$line_charts$LineChart$Coordinate$toDataX = F2(
	function (system, value) {
		return system.gt.fp + A2($terezka$line_charts$LineChart$Coordinate$scaleDataX, system, value - system.d2.ec.fb);
	});
var $terezka$line_charts$Internal$Coordinate$lengthY = function (system) {
	return A2($elm$core$Basics$max, 1, (system.d2.f$.hm - system.d2.ec.eH) - system.d2.ec.gd);
};
var $terezka$line_charts$Internal$Coordinate$reachY = function (system) {
	var diff = system.nt.hV - system.nt.fp;
	return (diff > 0) ? diff : 1;
};
var $terezka$line_charts$LineChart$Coordinate$scaleDataY = F2(
	function (system, value) {
		return (value * $terezka$line_charts$Internal$Coordinate$reachY(system)) / $terezka$line_charts$Internal$Coordinate$lengthY(system);
	});
var $terezka$line_charts$LineChart$Coordinate$toDataY = F2(
	function (system, value) {
		return system.nt.hV - A2($terezka$line_charts$LineChart$Coordinate$scaleDataY, system, value - system.d2.ec.gd);
	});
var $terezka$line_charts$LineChart$Coordinate$toData = F2(
	function (system, point) {
		return {
			gt: A2($terezka$line_charts$LineChart$Coordinate$toDataX, system, point.gt),
			nt: A2($terezka$line_charts$LineChart$Coordinate$toDataY, system, point.nt)
		};
	});
var $terezka$line_charts$Internal$Events$getNearestX = F3(
	function (points, system, searchedSvg) {
		var searched = A2($terezka$line_charts$LineChart$Coordinate$toData, system, searchedSvg);
		return A2(
			$elm$core$List$map,
			function ($) {
				return $.ni;
			},
			A3($terezka$line_charts$Internal$Events$getNearestXHelp, points, system, searched));
	});
var $terezka$line_charts$Internal$Events$Event = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $elm$svg$Svg$Events$on = $elm$html$Html$Events$on;
var $terezka$line_charts$Internal$Events$onMouseLeave = function (msg) {
	return A2(
		$terezka$line_charts$Internal$Events$Event,
		false,
		F2(
			function (_v0, _v1) {
				return A2(
					$elm$svg$Svg$Events$on,
					'mouseleave',
					$elm$json$Json$Decode$succeed(msg));
			}));
};
var $terezka$line_charts$Internal$Events$Options = F3(
	function (stopPropagation, preventDefault, catchOutsideChart) {
		return {gN: catchOutsideChart, l6: preventDefault, mI: stopPropagation};
	});
var $elm$svg$Svg$Events$custom = $elm$html$Html$Events$custom;
var $terezka$line_charts$Internal$Events$map = F2(
	function (f, _v0) {
		var a = _v0;
		return F3(
			function (ps, s, p) {
				return f(
					A3(a, ps, s, p));
			});
	});
var $terezka$line_charts$LineChart$Coordinate$Point = F2(
	function (x, y) {
		return {gt: x, nt: y};
	});
var $debois$elm_dom$DOM$offsetHeight = A2($elm$json$Json$Decode$field, 'offsetHeight', $elm$json$Json$Decode$float);
var $debois$elm_dom$DOM$offsetWidth = A2($elm$json$Json$Decode$field, 'offsetWidth', $elm$json$Json$Decode$float);
var $debois$elm_dom$DOM$offsetLeft = A2($elm$json$Json$Decode$field, 'offsetLeft', $elm$json$Json$Decode$float);
var $debois$elm_dom$DOM$offsetParent = F2(
	function (x, decoder) {
		return $elm$json$Json$Decode$oneOf(
			_List_fromArray(
				[
					A2(
					$elm$json$Json$Decode$field,
					'offsetParent',
					$elm$json$Json$Decode$null(x)),
					A2($elm$json$Json$Decode$field, 'offsetParent', decoder)
				]));
	});
var $debois$elm_dom$DOM$offsetTop = A2($elm$json$Json$Decode$field, 'offsetTop', $elm$json$Json$Decode$float);
var $debois$elm_dom$DOM$scrollLeft = A2($elm$json$Json$Decode$field, 'scrollLeft', $elm$json$Json$Decode$float);
var $debois$elm_dom$DOM$scrollTop = A2($elm$json$Json$Decode$field, 'scrollTop', $elm$json$Json$Decode$float);
var $debois$elm_dom$DOM$position = F2(
	function (x, y) {
		return A2(
			$elm$json$Json$Decode$andThen,
			function (_v0) {
				var x_ = _v0.a;
				var y_ = _v0.b;
				return A2(
					$debois$elm_dom$DOM$offsetParent,
					_Utils_Tuple2(x_, y_),
					A2($debois$elm_dom$DOM$position, x_, y_));
			},
			A5(
				$elm$json$Json$Decode$map4,
				F4(
					function (scrollLeftP, scrollTopP, offsetLeftP, offsetTopP) {
						return _Utils_Tuple2((x + offsetLeftP) - scrollLeftP, (y + offsetTopP) - scrollTopP);
					}),
				$debois$elm_dom$DOM$scrollLeft,
				$debois$elm_dom$DOM$scrollTop,
				$debois$elm_dom$DOM$offsetLeft,
				$debois$elm_dom$DOM$offsetTop));
	});
var $debois$elm_dom$DOM$boundingClientRect = A4(
	$elm$json$Json$Decode$map3,
	F3(
		function (_v0, width, height) {
			var x = _v0.a;
			var y = _v0.b;
			return {hm: height, fb: x, gd: y, i5: width};
		}),
	A2($debois$elm_dom$DOM$position, 0, 0),
	$debois$elm_dom$DOM$offsetWidth,
	$debois$elm_dom$DOM$offsetHeight);
var $debois$elm_dom$DOM$parentElement = function (decoder) {
	return A2($elm$json$Json$Decode$field, 'parentElement', decoder);
};
function $terezka$line_charts$Internal$Events$cyclic$position() {
	return $elm$json$Json$Decode$oneOf(
		_List_fromArray(
			[
				$debois$elm_dom$DOM$boundingClientRect,
				$elm$json$Json$Decode$lazy(
				function (_v0) {
					return $debois$elm_dom$DOM$parentElement(
						$terezka$line_charts$Internal$Events$cyclic$position());
				})
			]));
}
var $terezka$line_charts$Internal$Events$position = $terezka$line_charts$Internal$Events$cyclic$position();
$terezka$line_charts$Internal$Events$cyclic$position = function () {
	return $terezka$line_charts$Internal$Events$position;
};
var $debois$elm_dom$DOM$target = function (decoder) {
	return A2($elm$json$Json$Decode$field, 'target', decoder);
};
var $terezka$line_charts$Internal$Events$toJsonDecoder = F4(
	function (options, data, system, _v0) {
		var decoder = _v0;
		var withOptions = function (msg) {
			return {lr: msg, l6: options.l6, mI: options.mI};
		};
		var handle = F3(
			function (mouseX, mouseY, _v1) {
				var left = _v1.fb;
				var top = _v1.gd;
				var height = _v1.hm;
				var width = _v1.i5;
				var y = mouseY - top;
				var x = mouseX - left;
				var widthPercent = width / system.d2.f$.i5;
				var newSize = {hm: height, i5: width};
				var heightPercent = height / system.d2.f$.hm;
				var newMargin = {eH: system.d2.ec.eH * heightPercent, fb: system.d2.ec.fb * widthPercent, fT: system.d2.ec.fT * widthPercent, gd: system.d2.ec.gd * heightPercent};
				var newSystem = _Utils_update(
					system,
					{
						d2: {ec: newMargin, f$: newSize}
					});
				return A3(
					decoder,
					data,
					newSystem,
					A2($terezka$line_charts$LineChart$Coordinate$Point, x, y));
			});
		return A2(
			$elm$json$Json$Decode$map,
			withOptions,
			A4(
				$elm$json$Json$Decode$map3,
				handle,
				A2($elm$json$Json$Decode$field, 'pageX', $elm$json$Json$Decode$float),
				A2($elm$json$Json$Decode$field, 'pageY', $elm$json$Json$Decode$float),
				$debois$elm_dom$DOM$target($terezka$line_charts$Internal$Events$position)));
	});
var $terezka$line_charts$Internal$Events$on = F3(
	function (event, toMsg, decoder) {
		return A2(
			$terezka$line_charts$Internal$Events$Event,
			false,
			F2(
				function (data, system) {
					var defaultOptions = A3($terezka$line_charts$Internal$Events$Options, false, false, false);
					return A2(
						$elm$svg$Svg$Events$custom,
						event,
						A4(
							$terezka$line_charts$Internal$Events$toJsonDecoder,
							defaultOptions,
							data,
							system,
							A2($terezka$line_charts$Internal$Events$map, toMsg, decoder)));
				}));
	});
var $terezka$line_charts$Internal$Events$onMouseMove = $terezka$line_charts$Internal$Events$on('mousemove');
var $terezka$line_charts$Internal$Events$hoverMany = function (msg) {
	return $terezka$line_charts$Internal$Events$custom(
		_List_fromArray(
			[
				A2($terezka$line_charts$Internal$Events$onMouseMove, msg, $terezka$line_charts$Internal$Events$getNearestX),
				$terezka$line_charts$Internal$Events$onMouseLeave(
				msg(_List_Nil))
			]));
};
var $terezka$line_charts$LineChart$Events$hoverMany = $terezka$line_charts$Internal$Events$hoverMany;
var $terezka$line_charts$Internal$Junk$Config = $elm$core$Basics$identity;
var $terezka$line_charts$Internal$Junk$find = F2(
	function (hovered, data) {
		find:
		while (true) {
			if (!hovered.b) {
				return $elm$core$Maybe$Nothing;
			} else {
				var first = hovered.a;
				var rest = hovered.b;
				if (A2(
					$elm$core$List$any,
					$elm$core$Basics$eq(first),
					data)) {
					return $elm$core$Maybe$Just(first);
				} else {
					var $temp$hovered = rest,
						$temp$data = data;
					hovered = $temp$hovered;
					data = $temp$data;
					continue find;
				}
			}
		}
	});
var $terezka$line_charts$Internal$Junk$shouldFlip = F2(
	function (system, x) {
		return _Utils_cmp(x - system.gt.fp, system.gt.hV - x) > 0;
	});
var $terezka$line_charts$Internal$Junk$standardStyles = _List_fromArray(
	[
		_Utils_Tuple2('padding', '5px'),
		_Utils_Tuple2('min-width', '100px'),
		_Utils_Tuple2('background', 'rgba(255,255,255,0.8)'),
		_Utils_Tuple2('border', '1px solid #d3d3d3'),
		_Utils_Tuple2('border-radius', '5px'),
		_Utils_Tuple2('pointer-events', 'none')
	]);
var $terezka$line_charts$LineChart$Coordinate$scaleSvgY = F2(
	function (system, value) {
		return (value * $terezka$line_charts$Internal$Coordinate$lengthY(system)) / $terezka$line_charts$Internal$Coordinate$reachY(system);
	});
var $terezka$line_charts$LineChart$Coordinate$toSvgY = F2(
	function (system, value) {
		return A2($terezka$line_charts$LineChart$Coordinate$scaleSvgY, system, system.nt.hV - value) + system.d2.ec.gd;
	});
var $terezka$line_charts$Internal$Junk$hoverAt = F5(
	function (system, x, y, styles, view) {
		var yPercentage = (A2($terezka$line_charts$LineChart$Coordinate$toSvgY, system, y) * 100) / system.d2.f$.hm;
		var space = A2($terezka$line_charts$Internal$Junk$shouldFlip, system, x) ? (-15) : 15;
		var xPercentage = ((A2($terezka$line_charts$LineChart$Coordinate$toSvgX, system, x) + space) * 100) / system.d2.f$.i5;
		var positionStyles = _List_fromArray(
			[
				_Utils_Tuple2(
				'left',
				$elm$core$String$fromFloat(xPercentage) + '%'),
				_Utils_Tuple2(
				'top',
				$elm$core$String$fromFloat(yPercentage) + '%'),
				_Utils_Tuple2('margin-right', '-400px'),
				_Utils_Tuple2('position', 'absolute'),
				A2($terezka$line_charts$Internal$Junk$shouldFlip, system, x) ? _Utils_Tuple2('transform', 'translateX(-100%)') : _Utils_Tuple2('transform', 'translateX(0)')
			]);
		var containerStyles = _Utils_ap(
			$terezka$line_charts$Internal$Junk$standardStyles,
			_Utils_ap(positionStyles, styles));
		return A2(
			$elm$html$Html$div,
			A2(
				$elm$core$List$map,
				function (_v0) {
					var p = _v0.a;
					var v = _v0.b;
					return A2($elm$html$Html$Attributes$style, p, v);
				},
				containerStyles),
			view);
	});
var $terezka$line_charts$Internal$Junk$middle = F2(
	function (r, system) {
		var range = r(system);
		return range.fp + ((range.hV - range.fp) / 2);
	});
var $terezka$line_charts$Internal$Junk$hover = F3(
	function (system, x, styles) {
		var y = A2(
			$terezka$line_charts$Internal$Junk$middle,
			function ($) {
				return $.nt;
			},
			system);
		var containerStyles = _Utils_ap(
			_List_fromArray(
				[
					A2($terezka$line_charts$Internal$Junk$shouldFlip, system, x) ? _Utils_Tuple2('transform', 'translate(-100%, -50%)') : _Utils_Tuple2('transform', 'translate(0, -50%)')
				]),
			styles);
		return A4($terezka$line_charts$Internal$Junk$hoverAt, system, x, y, containerStyles);
	});
var $terezka$line_charts$Internal$Junk$viewHeader = $elm$html$Html$p(
	_List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'margin-top', '3px'),
			A2($elm$html$Html$Attributes$style, 'margin-bottom', '5px'),
			A2($elm$html$Html$Attributes$style, 'padding', '3px'),
			A2($elm$html$Html$Attributes$style, 'border-bottom', '1px solid rgb(163, 163, 163)')
		]));
var $terezka$line_charts$Internal$Utils$viewMaybe = F2(
	function (a, view) {
		return A2(
			$elm$core$Maybe$withDefault,
			$elm$svg$Svg$text(''),
			A2($elm$core$Maybe$map, view, a));
	});
var $terezka$line_charts$Internal$Junk$viewRow = F3(
	function (color, label, value) {
		return A2(
			$elm$html$Html$p,
			_List_fromArray(
				[
					A2($elm$html$Html$Attributes$style, 'margin', '3px'),
					A2($elm$html$Html$Attributes$style, 'color', color)
				]),
			_List_fromArray(
				[
					$elm$html$Html$text(label + (': ' + value))
				]));
	});
var $terezka$line_charts$Internal$Junk$hoverManyHtml = F8(
	function (system, toX, toY, formatX, formatY, first, hovered, series) {
		var x = A2(
			$elm$core$Maybe$withDefault,
			A2(
				$terezka$line_charts$Internal$Junk$middle,
				function ($) {
					return $.gt;
				},
				system),
			toX(first));
		var viewValue = function (_v0) {
			var color = _v0.a;
			var label = _v0.b;
			var data = _v0.c;
			return A2(
				$terezka$line_charts$Internal$Utils$viewMaybe,
				A2($terezka$line_charts$Internal$Junk$find, hovered, data),
				function (hovered_) {
					return A3(
						$terezka$line_charts$Internal$Junk$viewRow,
						$avh4$elm_color$Color$toCssString(color),
						label,
						formatY(hovered_));
				});
		};
		return A4(
			$terezka$line_charts$Internal$Junk$hover,
			system,
			x,
			_List_Nil,
			A2(
				$elm$core$List$cons,
				$terezka$line_charts$Internal$Junk$viewHeader(
					_List_fromArray(
						[
							$elm$html$Html$text(
							formatX(first))
						])),
				A2($elm$core$List$map, viewValue, series)));
	});
var $terezka$line_charts$Internal$Junk$Layers = F3(
	function (below, above, html) {
		return {jd: above, jA: below, kT: html};
	});
var $terezka$line_charts$Internal$Junk$none = F4(
	function (_v0, _v1, _v2, _v3) {
		return A3($terezka$line_charts$Internal$Junk$Layers, _List_Nil, _List_Nil, _List_Nil);
	});
var $terezka$line_charts$Internal$Utils$concat = F3(
	function (first, second, third) {
		return _Utils_ap(
			first,
			_Utils_ap(second, third));
	});
var $terezka$line_charts$LineChart$Colors$gray = A3($avh4$elm_color$Color$rgb255, 163, 163, 163);
var $terezka$line_charts$Internal$Path$Line = function (a) {
	return {$: 1, a: a};
};
var $terezka$line_charts$Internal$Path$Move = function (a) {
	return {$: 0, a: a};
};
var $terezka$line_charts$Internal$Path$join = function (commands) {
	return A2($elm$core$String$join, ' ', commands);
};
var $terezka$line_charts$Internal$Path$bool = function (bool_) {
	return bool_ ? '1' : '0';
};
var $terezka$line_charts$Internal$Path$point = function (point_) {
	return $elm$core$String$fromFloat(point_.gt) + (' ' + $elm$core$String$fromFloat(point_.nt));
};
var $terezka$line_charts$Internal$Path$points = function (points_) {
	return A2(
		$elm$core$String$join,
		',',
		A2($elm$core$List$map, $terezka$line_charts$Internal$Path$point, points_));
};
var $terezka$line_charts$Internal$Path$toString = function (command) {
	switch (command.$) {
		case 9:
			return 'Z';
		case 0:
			var p = command.a;
			return 'M' + $terezka$line_charts$Internal$Path$point(p);
		case 1:
			var p = command.a;
			return 'L' + $terezka$line_charts$Internal$Path$point(p);
		case 2:
			var x = command.a;
			return 'H' + $elm$core$String$fromFloat(x);
		case 3:
			var y = command.a;
			return 'V' + $elm$core$String$fromFloat(y);
		case 4:
			var c1 = command.a;
			var c2 = command.b;
			var p = command.c;
			return 'C' + $terezka$line_charts$Internal$Path$points(
				_List_fromArray(
					[c1, c2, p]));
		case 5:
			var c1 = command.a;
			var p = command.b;
			return 'Q' + $terezka$line_charts$Internal$Path$points(
				_List_fromArray(
					[c1, p]));
		case 6:
			var c1 = command.a;
			var p = command.b;
			return 'Q' + $terezka$line_charts$Internal$Path$points(
				_List_fromArray(
					[c1, p]));
		case 7:
			var p = command.a;
			return 'T' + $terezka$line_charts$Internal$Path$point(p);
		default:
			var rx = command.a;
			var ry = command.b;
			var xAxisRotation = command.c;
			var largeArcFlag = command.d;
			var sweepFlag = command.e;
			var p = command.f;
			return 'A' + $terezka$line_charts$Internal$Path$join(
				_List_fromArray(
					[
						$elm$core$String$fromFloat(rx),
						$elm$core$String$fromFloat(ry),
						$elm$core$String$fromInt(xAxisRotation),
						$terezka$line_charts$Internal$Path$bool(largeArcFlag),
						$terezka$line_charts$Internal$Path$bool(sweepFlag),
						$terezka$line_charts$Internal$Path$point(p)
					]));
	}
};
var $terezka$line_charts$Internal$Path$Arc = F6(
	function (a, b, c, d, e, f) {
		return {$: 8, a: a, b: b, c: c, d: d, e: e, f: f};
	});
var $terezka$line_charts$Internal$Path$Close = {$: 9};
var $terezka$line_charts$Internal$Path$CubicBeziers = F3(
	function (a, b, c) {
		return {$: 4, a: a, b: b, c: c};
	});
var $terezka$line_charts$Internal$Path$CubicBeziersShort = F2(
	function (a, b) {
		return {$: 5, a: a, b: b};
	});
var $terezka$line_charts$Internal$Path$Horizontal = function (a) {
	return {$: 2, a: a};
};
var $terezka$line_charts$Internal$Path$QuadraticBeziers = F2(
	function (a, b) {
		return {$: 6, a: a, b: b};
	});
var $terezka$line_charts$Internal$Path$QuadraticBeziersShort = function (a) {
	return {$: 7, a: a};
};
var $terezka$line_charts$Internal$Path$Vertical = function (a) {
	return {$: 3, a: a};
};
var $terezka$line_charts$LineChart$Coordinate$toSvg = F2(
	function (system, point) {
		return {
			gt: A2($terezka$line_charts$LineChart$Coordinate$toSvgX, system, point.gt),
			nt: A2($terezka$line_charts$LineChart$Coordinate$toSvgY, system, point.nt)
		};
	});
var $terezka$line_charts$Internal$Path$translate = F2(
	function (system, command) {
		switch (command.$) {
			case 0:
				var p = command.a;
				return $terezka$line_charts$Internal$Path$Move(
					A2($terezka$line_charts$LineChart$Coordinate$toSvg, system, p));
			case 1:
				var p = command.a;
				return $terezka$line_charts$Internal$Path$Line(
					A2($terezka$line_charts$LineChart$Coordinate$toSvg, system, p));
			case 2:
				var x = command.a;
				return $terezka$line_charts$Internal$Path$Horizontal(
					A2($terezka$line_charts$LineChart$Coordinate$toSvgX, system, x));
			case 3:
				var y = command.a;
				return $terezka$line_charts$Internal$Path$Vertical(
					A2($terezka$line_charts$LineChart$Coordinate$toSvgY, system, y));
			case 4:
				var c1 = command.a;
				var c2 = command.b;
				var p = command.c;
				return A3(
					$terezka$line_charts$Internal$Path$CubicBeziers,
					A2($terezka$line_charts$LineChart$Coordinate$toSvg, system, c1),
					A2($terezka$line_charts$LineChart$Coordinate$toSvg, system, c2),
					A2($terezka$line_charts$LineChart$Coordinate$toSvg, system, p));
			case 5:
				var c1 = command.a;
				var p = command.b;
				return A2(
					$terezka$line_charts$Internal$Path$CubicBeziersShort,
					A2($terezka$line_charts$LineChart$Coordinate$toSvg, system, c1),
					A2($terezka$line_charts$LineChart$Coordinate$toSvg, system, p));
			case 6:
				var c1 = command.a;
				var p = command.b;
				return A2(
					$terezka$line_charts$Internal$Path$QuadraticBeziers,
					A2($terezka$line_charts$LineChart$Coordinate$toSvg, system, c1),
					A2($terezka$line_charts$LineChart$Coordinate$toSvg, system, p));
			case 7:
				var p = command.a;
				return $terezka$line_charts$Internal$Path$QuadraticBeziersShort(
					A2($terezka$line_charts$LineChart$Coordinate$toSvg, system, p));
			case 8:
				var rx = command.a;
				var ry = command.b;
				var xAxisRotation = command.c;
				var largeArcFlag = command.d;
				var sweepFlag = command.e;
				var p = command.f;
				return A6(
					$terezka$line_charts$Internal$Path$Arc,
					rx,
					ry,
					xAxisRotation,
					largeArcFlag,
					sweepFlag,
					A2($terezka$line_charts$LineChart$Coordinate$toSvg, system, p));
			default:
				return $terezka$line_charts$Internal$Path$Close;
		}
	});
var $terezka$line_charts$Internal$Path$description = F2(
	function (system, commands) {
		return $terezka$line_charts$Internal$Path$join(
			A2(
				$elm$core$List$map,
				A2(
					$elm$core$Basics$composeR,
					$terezka$line_charts$Internal$Path$translate(system),
					$terezka$line_charts$Internal$Path$toString),
				commands));
	});
var $terezka$line_charts$Internal$Path$viewPath = function (attributes) {
	return A2($elm$svg$Svg$path, attributes, _List_Nil);
};
var $terezka$line_charts$Internal$Path$view = F3(
	function (system, attributes, commands) {
		return $terezka$line_charts$Internal$Path$viewPath(
			_Utils_ap(
				attributes,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$d(
						A2($terezka$line_charts$Internal$Path$description, system, commands))
					])));
	});
var $terezka$line_charts$Internal$Svg$vertical = F5(
	function (system, userAttributes, x, y1, y2) {
		var attributes = A3(
			$terezka$line_charts$Internal$Utils$concat,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$stroke(
					$avh4$elm_color$Color$toCssString($terezka$line_charts$LineChart$Colors$gray)),
					$elm$svg$Svg$Attributes$style('pointer-events: none;')
				]),
			userAttributes,
			_List_Nil);
		return A3(
			$terezka$line_charts$Internal$Path$view,
			system,
			attributes,
			_List_fromArray(
				[
					$terezka$line_charts$Internal$Path$Move(
					{gt: x, nt: y1}),
					$terezka$line_charts$Internal$Path$Line(
					{gt: x, nt: y1}),
					$terezka$line_charts$Internal$Path$Line(
					{gt: x, nt: y2})
				]));
	});
var $terezka$line_charts$Internal$Svg$verticalGrid = F3(
	function (system, userAttributes, x) {
		var attributes = A3(
			$terezka$line_charts$Internal$Utils$concat,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$stroke(
					$avh4$elm_color$Color$toCssString($terezka$line_charts$LineChart$Colors$gray)),
					$elm$svg$Svg$Attributes$style('pointer-events: none;')
				]),
			userAttributes,
			_List_Nil);
		return A5($terezka$line_charts$Internal$Svg$vertical, system, attributes, x, system.nt.fp, system.nt.hV);
	});
var $terezka$line_charts$Internal$Junk$hoverMany = F3(
	function (hovered, formatX, formatY) {
		if (!hovered.b) {
			return $terezka$line_charts$Internal$Junk$none;
		} else {
			var first = hovered.a;
			var rest = hovered.b;
			return F4(
				function (series, toX, toY, system) {
					var xValue = A2(
						$elm$core$Maybe$withDefault,
						0,
						toX(first));
					return {
						jd: _List_Nil,
						jA: _List_fromArray(
							[
								A3($terezka$line_charts$Internal$Svg$verticalGrid, system, _List_Nil, xValue)
							]),
						kT: _List_fromArray(
							[
								A8($terezka$line_charts$Internal$Junk$hoverManyHtml, system, toX, toY, formatX, formatY, first, hovered, series)
							])
					};
				});
		}
	});
var $terezka$line_charts$LineChart$Junk$hoverMany = $terezka$line_charts$Internal$Junk$hoverMany;
var $terezka$line_charts$LineChart$Junk$label = function (color) {
	return $terezka$line_charts$Internal$Svg$label(
		$avh4$elm_color$Color$toCssString(color));
};
var $terezka$line_charts$Internal$Axis$Tick$Positive = 1;
var $terezka$line_charts$LineChart$Axis$Tick$positive = 1;
var $terezka$line_charts$Internal$Container$Margin = F4(
	function (top, right, bottom, left) {
		return {eH: bottom, fb: left, fT: right, gd: top};
	});
var $terezka$line_charts$Internal$Container$Config = $elm$core$Basics$identity;
var $terezka$line_charts$Internal$Container$custom = $elm$core$Basics$identity;
var $terezka$line_charts$Internal$Container$Static = 0;
var $terezka$line_charts$Internal$Container$static = 0;
var $terezka$line_charts$Internal$Container$styled = F2(
	function (id, styles) {
		return $terezka$line_charts$Internal$Container$custom(
			{
				dL: A2(
					$elm$core$List$map,
					function (_v0) {
						var p = _v0.a;
						var v = _v0.b;
						return A2($elm$html$Html$Attributes$style, p, v);
					},
					styles),
				dM: _List_Nil,
				hs: id,
				ec: A4($terezka$line_charts$Internal$Container$Margin, 60, 140, 60, 80),
				f$: $terezka$line_charts$Internal$Container$static
			});
	});
var $terezka$line_charts$LineChart$Container$styled = $terezka$line_charts$Internal$Container$styled;
var $terezka$line_charts$Internal$Junk$addBelow = F2(
	function (below, layers) {
		return _Utils_update(
			layers,
			{
				jA: _Utils_ap(below, layers.jA)
			});
	});
var $terezka$line_charts$LineChart$chartAreaAttributes = function (system) {
	return _List_fromArray(
		[
			$elm$svg$Svg$Attributes$x(
			$elm$core$String$fromFloat(system.d2.ec.fb)),
			$elm$svg$Svg$Attributes$y(
			$elm$core$String$fromFloat(system.d2.ec.gd)),
			$elm$svg$Svg$Attributes$width(
			$elm$core$String$fromFloat(
				$terezka$line_charts$Internal$Coordinate$lengthX(system))),
			$elm$svg$Svg$Attributes$height(
			$elm$core$String$fromFloat(
				$terezka$line_charts$Internal$Coordinate$lengthY(system)))
		]);
};
var $elm$svg$Svg$rect = $elm$svg$Svg$trustedNode('rect');
var $terezka$line_charts$Internal$Events$toChartAttributes = F3(
	function (data, system, _v0) {
		var events = _v0;
		var order = function (_v1) {
			var outside = _v1.a;
			var event = _v1.b;
			return outside ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(
				A2(event, data, system));
		};
		return A2($elm$core$List$filterMap, order, events);
	});
var $terezka$line_charts$LineChart$chartAreaPlatform = F3(
	function (config, data, system) {
		var attributes = $elm$core$List$concat(
			_List_fromArray(
				[
					_List_fromArray(
					[
						$elm$svg$Svg$Attributes$fill('transparent')
					]),
					$terezka$line_charts$LineChart$chartAreaAttributes(system),
					A3($terezka$line_charts$Internal$Events$toChartAttributes, data, system, config.kz)
				]));
		return A2($elm$svg$Svg$rect, attributes, _List_Nil);
	});
var $elm$svg$Svg$clipPath = $elm$svg$Svg$trustedNode('clipPath');
var $elm$svg$Svg$Attributes$id = _VirtualDom_attribute('id');
var $terezka$line_charts$Internal$Utils$toChartAreaId = function (id) {
	return 'chart__chart-area--' + id;
};
var $terezka$line_charts$LineChart$clipPath = function (system) {
	return A2(
		$elm$svg$Svg$clipPath,
		_List_fromArray(
			[
				$elm$svg$Svg$Attributes$id(
				$terezka$line_charts$Internal$Utils$toChartAreaId(system.hs))
			]),
		_List_fromArray(
			[
				A2(
				$elm$svg$Svg$rect,
				$terezka$line_charts$LineChart$chartAreaAttributes(system),
				_List_Nil)
			]));
};
var $terezka$line_charts$Internal$Line$color = F3(
	function (_v0, _v1, data_) {
		var config = _v0;
		var line_ = _v1;
		var _v2 = config(
			A2(
				$elm$core$List$map,
				function ($) {
					return $.ni;
				},
				data_));
		var style_ = _v2;
		return style_.eL(line_.eL);
	});
var $terezka$line_charts$Internal$Container$properties = F2(
	function (f, _v0) {
		var properties_ = _v0;
		return f(properties_);
	});
var $terezka$line_charts$Internal$Container$sizeStyles = F3(
	function (_v0, width, height) {
		var properties_ = _v0;
		var _v1 = properties_.f$;
		if (!_v1) {
			return _List_fromArray(
				[
					A2(
					$elm$html$Html$Attributes$style,
					'height',
					$elm$core$String$fromFloat(height) + 'px'),
					A2(
					$elm$html$Html$Attributes$style,
					'width',
					$elm$core$String$fromFloat(width) + 'px')
				]);
		} else {
			return _List_Nil;
		}
	});
var $terezka$line_charts$LineChart$container = F4(
	function (config, _v0, junkHtml, plot) {
		var frame = _v0.d2;
		var userAttributes = A2(
			$terezka$line_charts$Internal$Container$properties,
			function ($) {
				return $.dL;
			},
			config.gS);
		var sizeStyles = A3($terezka$line_charts$Internal$Container$sizeStyles, config.gS, frame.f$.i5, frame.f$.hm);
		var styles = A2(
			$elm$core$List$cons,
			A2($elm$html$Html$Attributes$style, 'position', 'relative'),
			sizeStyles);
		return A2(
			$elm$html$Html$div,
			_Utils_ap(styles, userAttributes),
			A2($elm$core$List$cons, plot, junkHtml));
	});
var $terezka$line_charts$Internal$Line$data = function (_v0) {
	var config = _v0;
	return config.eN;
};
var $elm$svg$Svg$defs = $elm$svg$Svg$trustedNode('defs');
var $elm$svg$Svg$g = $elm$svg$Svg$trustedNode('g');
var $terezka$line_charts$Internal$Junk$getLayers = F5(
	function (series, toX, toY, system, _v0) {
		var toLayers = _v0;
		return A4(toLayers, series, toX, toY, system);
	});
var $terezka$line_charts$Internal$Line$label = function (_v0) {
	var config = _v0;
	return config.hL;
};
var $terezka$line_charts$Internal$Events$toContainerAttributes = F3(
	function (data, system, _v0) {
		var events = _v0;
		var order = function (_v1) {
			var outside = _v1.a;
			var event = _v1.b;
			return outside ? $elm$core$Maybe$Just(
				A2(event, data, system)) : $elm$core$Maybe$Nothing;
		};
		return A2($elm$core$List$filterMap, order, events);
	});
var $terezka$line_charts$Internal$Data$Data = F3(
	function (user, point, isReal) {
		return {k8: isReal, l4: point, ni: user};
	});
var $terezka$line_charts$LineChart$setY = F2(
	function (datum, y) {
		return A3(
			$terezka$line_charts$Internal$Data$Data,
			datum.ni,
			A2($terezka$line_charts$Internal$Data$Point, datum.l4.gt, y),
			datum.k8);
	});
var $terezka$line_charts$LineChart$normalize = function (datasets) {
	if (datasets.b) {
		var highest = datasets.a;
		var belows = datasets.b;
		var toPercentage = F2(
			function (highest_, datum) {
				return A2($terezka$line_charts$LineChart$setY, datum, (100 * datum.l4.nt) / highest_.l4.nt);
			});
		return A2(
			$elm$core$List$map,
			A2($elm$core$List$map2, toPercentage, highest),
			A2($elm$core$List$cons, highest, belows));
	} else {
		return datasets;
	}
};
var $terezka$line_charts$Internal$Utils$withFirst = F2(
	function (stuff, process) {
		if (stuff.b) {
			var first = stuff.a;
			var rest = stuff.b;
			return $elm$core$Maybe$Just(
				A2(process, first, rest));
		} else {
			return $elm$core$Maybe$Nothing;
		}
	});
var $terezka$line_charts$LineChart$addBelows = F2(
	function (alldata, dataBelowAll) {
		var add = F2(
			function (below, datum) {
				return A2($terezka$line_charts$LineChart$setY, below, below.l4.nt + datum.l4.nt);
			});
		var iterate = F4(
			function (datum0, dataTop, dataBelowTop, result) {
				iterate:
				while (true) {
					var _v0 = _Utils_Tuple2(dataTop, dataBelowTop);
					if (_v0.a.b) {
						if (_v0.b.b) {
							var _v1 = _v0.a;
							var datum1 = _v1.a;
							var data = _v1.b;
							var _v2 = _v0.b;
							var datumBelow = _v2.a;
							var dataBelow = _v2.b;
							if (_Utils_cmp(datum1.l4.gt, datumBelow.l4.gt) > 0) {
								if (datumBelow.k8) {
									var $temp$datum0 = datum0,
										$temp$dataTop = A2($elm$core$List$cons, datum1, data),
										$temp$dataBelowTop = dataBelow,
										$temp$result = A2(
										$elm$core$List$cons,
										A2(add, datumBelow, datum0),
										result);
									datum0 = $temp$datum0;
									dataTop = $temp$dataTop;
									dataBelowTop = $temp$dataBelowTop;
									result = $temp$result;
									continue iterate;
								} else {
									var breakdata = _Utils_update(
										datum0,
										{k8: false});
									var $temp$datum0 = datum0,
										$temp$dataTop = A2($elm$core$List$cons, datum1, data),
										$temp$dataBelowTop = dataBelow,
										$temp$result = A2(
										$elm$core$List$cons,
										A2(add, datumBelow, datum0),
										result);
									datum0 = $temp$datum0;
									dataTop = $temp$dataTop;
									dataBelowTop = $temp$dataBelowTop;
									result = $temp$result;
									continue iterate;
								}
							} else {
								var $temp$datum0 = datum1,
									$temp$dataTop = data,
									$temp$dataBelowTop = A2($elm$core$List$cons, datumBelow, dataBelow),
									$temp$result = result;
								datum0 = $temp$datum0;
								dataTop = $temp$dataTop;
								dataBelowTop = $temp$dataBelowTop;
								result = $temp$result;
								continue iterate;
							}
						} else {
							var _v4 = _v0.a;
							var datum1 = _v4.a;
							var data = _v4.b;
							return result;
						}
					} else {
						if (_v0.b.b) {
							var _v3 = _v0.b;
							var datumBelow = _v3.a;
							var dataBelow = _v3.b;
							if (_Utils_cmp(datum0.l4.gt, datumBelow.l4.gt) < 1) {
								var $temp$datum0 = datum0,
									$temp$dataTop = _List_Nil,
									$temp$dataBelowTop = dataBelow,
									$temp$result = A2(
									$elm$core$List$cons,
									A2(add, datumBelow, datum0),
									result);
								datum0 = $temp$datum0;
								dataTop = $temp$dataTop;
								dataBelowTop = $temp$dataBelowTop;
								result = $temp$result;
								continue iterate;
							} else {
								var $temp$datum0 = datum0,
									$temp$dataTop = _List_Nil,
									$temp$dataBelowTop = dataBelow,
									$temp$result = A2($elm$core$List$cons, datumBelow, result);
								datum0 = $temp$datum0;
								dataTop = $temp$dataTop;
								dataBelowTop = $temp$dataBelowTop;
								result = $temp$result;
								continue iterate;
							}
						} else {
							return result;
						}
					}
				}
			});
		return $elm$core$List$reverse(
			A2(
				$elm$core$Maybe$withDefault,
				_List_Nil,
				A2(
					$terezka$line_charts$Internal$Utils$withFirst,
					alldata,
					F2(
						function (first, rest) {
							return A4(iterate, first, rest, dataBelowAll, _List_Nil);
						}))));
	});
var $terezka$line_charts$LineChart$stack = function (dataset) {
	var stackBelows = F2(
		function (dataset_, result) {
			if (dataset_.b) {
				var data = dataset_.a;
				var belows = dataset_.b;
				return A2(
					stackBelows,
					belows,
					A2(
						$elm$core$List$cons,
						A3($elm$core$List$foldl, $terezka$line_charts$LineChart$addBelows, data, belows),
						result));
			} else {
				return result;
			}
		});
	return $elm$core$List$reverse(
		A2(stackBelows, dataset, _List_Nil));
};
var $terezka$line_charts$Internal$Axis$variable = function (_v0) {
	var config = _v0;
	return config.gj;
};
var $terezka$line_charts$LineChart$toDataPoints = F2(
	function (config, lines) {
		var y = $terezka$line_charts$Internal$Axis$variable(config.nt);
		var x = $terezka$line_charts$Internal$Axis$variable(config.gt);
		var addPoint = function (datum) {
			var _v1 = _Utils_Tuple2(
				x(datum),
				y(datum));
			if (!_v1.a.$) {
				if (!_v1.b.$) {
					var x_ = _v1.a.a;
					var y_ = _v1.b.a;
					return $elm$core$Maybe$Just(
						A3(
							$terezka$line_charts$Internal$Data$Data,
							datum,
							A2($terezka$line_charts$Internal$Data$Point, x_, y_),
							true));
				} else {
					var x_ = _v1.a.a;
					var _v2 = _v1.b;
					return $elm$core$Maybe$Just(
						A3(
							$terezka$line_charts$Internal$Data$Data,
							datum,
							A2($terezka$line_charts$Internal$Data$Point, x_, 0),
							false));
				}
			} else {
				if (!_v1.b.$) {
					var _v3 = _v1.a;
					var y_ = _v1.b.a;
					return $elm$core$Maybe$Nothing;
				} else {
					var _v4 = _v1.a;
					var _v5 = _v1.b;
					return $elm$core$Maybe$Nothing;
				}
			}
		};
		var data = A2(
			$elm$core$List$map,
			A2(
				$elm$core$Basics$composeR,
				$terezka$line_charts$Internal$Line$data,
				$elm$core$List$filterMap(addPoint)),
			lines);
		var _v0 = config.gJ;
		switch (_v0.$) {
			case 0:
				return data;
			case 1:
				return data;
			case 2:
				return $terezka$line_charts$LineChart$stack(data);
			default:
				return $terezka$line_charts$LineChart$normalize(
					$terezka$line_charts$LineChart$stack(data));
		}
	});
var $terezka$line_charts$Internal$Coordinate$Frame = F2(
	function (margin, size) {
		return {ec: margin, f$: size};
	});
var $terezka$line_charts$Internal$Coordinate$Size = F2(
	function (width, height) {
		return {hm: height, i5: width};
	});
var $terezka$line_charts$LineChart$Coordinate$Range = F2(
	function (min, max) {
		return {hV: max, fp: min};
	});
var $terezka$line_charts$Internal$Axis$Range$applyX = F2(
	function (range, system) {
		switch (range.$) {
			case 0:
				var padMin = range.a;
				var padMax = range.b;
				var _v1 = system;
				var frame = _v1.d2;
				var _v2 = frame;
				var size = _v2.f$;
				var system_ = _Utils_update(
					system,
					{
						d2: _Utils_update(
							frame,
							{
								f$: _Utils_update(
									size,
									{
										i5: A2($elm$core$Basics$max, 1, (size.i5 - padMin) - padMax)
									})
							})
					});
				var scale = $terezka$line_charts$LineChart$Coordinate$scaleDataX(system_);
				return A2(
					$terezka$line_charts$LineChart$Coordinate$Range,
					system.gt.fp - scale(padMin),
					system.gt.hV + scale(padMax));
			case 1:
				var min = range.a;
				var max = range.b;
				return A2($terezka$line_charts$LineChart$Coordinate$Range, min, max);
			default:
				var toRange = range.a;
				return toRange(system.gt);
		}
	});
var $terezka$line_charts$Internal$Axis$Range$applyY = F2(
	function (range, system) {
		switch (range.$) {
			case 0:
				var padMin = range.a;
				var padMax = range.b;
				var _v1 = system;
				var frame = _v1.d2;
				var _v2 = frame;
				var size = _v2.f$;
				var system_ = _Utils_update(
					system,
					{
						d2: _Utils_update(
							frame,
							{
								f$: _Utils_update(
									size,
									{
										hm: A2($elm$core$Basics$max, 1, (size.hm - padMin) - padMax)
									})
							})
					});
				var scale = $terezka$line_charts$LineChart$Coordinate$scaleDataY(system_);
				return A2(
					$terezka$line_charts$LineChart$Coordinate$Range,
					system.nt.fp - scale(padMin),
					system.nt.hV + scale(padMax));
			case 1:
				var min = range.a;
				var max = range.b;
				return A2($terezka$line_charts$LineChart$Coordinate$Range, min, max);
			default:
				var toRange = range.a;
				return toRange(system.nt);
		}
	});
var $terezka$line_charts$Internal$Coordinate$ground = function (range_) {
	return _Utils_update(
		range_,
		{
			fp: A2($elm$core$Basics$min, range_.fp, 0)
		});
};
var $terezka$line_charts$Internal$Area$hasArea = function (config) {
	switch (config.$) {
		case 0:
			return false;
		case 1:
			return true;
		case 2:
			return true;
		default:
			return true;
	}
};
var $terezka$line_charts$Internal$Axis$pixels = function (_v0) {
	var config = _v0;
	return config.fN;
};
var $terezka$line_charts$Internal$Axis$range = function (_v0) {
	var config = _v0;
	return config.fQ;
};
var $terezka$line_charts$Internal$Coordinate$maximum = function (toValue) {
	return A2(
		$elm$core$Basics$composeR,
		$elm$core$List$map(toValue),
		A2(
			$elm$core$Basics$composeR,
			$elm$core$List$maximum,
			$elm$core$Maybe$withDefault(1)));
};
var $terezka$line_charts$Internal$Coordinate$minimum = function (toValue) {
	return A2(
		$elm$core$Basics$composeR,
		$elm$core$List$map(toValue),
		A2(
			$elm$core$Basics$composeR,
			$elm$core$List$minimum,
			$elm$core$Maybe$withDefault(0)));
};
var $terezka$line_charts$Internal$Coordinate$range = F2(
	function (toValue, data) {
		var range_ = {
			hV: A2($terezka$line_charts$Internal$Coordinate$maximum, toValue, data),
			fp: A2($terezka$line_charts$Internal$Coordinate$minimum, toValue, data)
		};
		return _Utils_eq(range_.fp, range_.hV) ? _Utils_update(
			range_,
			{hV: range_.hV + 1}) : range_;
	});
var $terezka$line_charts$LineChart$toSystem = F2(
	function (config, data) {
		var yRange = A2(
			$terezka$line_charts$Internal$Coordinate$range,
			A2(
				$elm$core$Basics$composeR,
				function ($) {
					return $.l4;
				},
				function ($) {
					return $.nt;
				}),
			data);
		var xRange = A2(
			$terezka$line_charts$Internal$Coordinate$range,
			A2(
				$elm$core$Basics$composeR,
				function ($) {
					return $.l4;
				},
				function ($) {
					return $.gt;
				}),
			data);
		var size = A2(
			$terezka$line_charts$Internal$Coordinate$Size,
			$terezka$line_charts$Internal$Axis$pixels(config.gt),
			$terezka$line_charts$Internal$Axis$pixels(config.nt));
		var hasArea = $terezka$line_charts$Internal$Area$hasArea(config.gJ);
		var container_ = A2($terezka$line_charts$Internal$Container$properties, $elm$core$Basics$identity, config.gS);
		var frame = A2($terezka$line_charts$Internal$Coordinate$Frame, container_.ec, size);
		var adjustDomainRange = function (domain) {
			return hasArea ? $terezka$line_charts$Internal$Coordinate$ground(domain) : domain;
		};
		var system = {
			d2: frame,
			hs: container_.hs,
			gt: xRange,
			gu: xRange,
			nt: adjustDomainRange(yRange),
			gv: yRange
		};
		return _Utils_update(
			system,
			{
				gt: A2(
					$terezka$line_charts$Internal$Axis$Range$applyX,
					$terezka$line_charts$Internal$Axis$range(config.gt),
					system),
				nt: A2(
					$terezka$line_charts$Internal$Axis$Range$applyY,
					$terezka$line_charts$Internal$Axis$range(config.nt),
					system)
			});
	});
var $terezka$line_charts$Internal$Axis$ticks = function (_v0) {
	var config = _v0;
	return config.gb;
};
var $terezka$line_charts$Internal$Axis$Tick$properties = function (_v0) {
	var properties_ = _v0;
	return properties_;
};
var $terezka$line_charts$Internal$Axis$Ticks$ticks = F3(
	function (dataRange, range, _v0) {
		var values = _v0;
		return A2(
			$elm$core$List$map,
			$terezka$line_charts$Internal$Axis$Tick$properties,
			A2(values, dataRange, range));
	});
var $terezka$line_charts$Internal$Svg$gridDot = F3(
	function (radius, color, point) {
		return A2(
			$elm$svg$Svg$circle,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$cx(
					$elm$core$String$fromFloat(point.gt)),
					$elm$svg$Svg$Attributes$cy(
					$elm$core$String$fromFloat(point.nt)),
					$elm$svg$Svg$Attributes$r(
					$elm$core$String$fromFloat(radius)),
					$elm$svg$Svg$Attributes$fill(
					$avh4$elm_color$Color$toCssString(color))
				]),
			_List_Nil);
	});
var $terezka$line_charts$Internal$Grid$viewDots = F5(
	function (system, verticals, horizontals, radius, color) {
		var dot = F2(
			function (x, y) {
				return A2(
					$terezka$line_charts$LineChart$Coordinate$toSvg,
					system,
					A2($terezka$line_charts$LineChart$Coordinate$Point, x, y));
			});
		var dots_ = function (g) {
			return A2(
				$elm$core$List$map,
				dot(g),
				horizontals);
		};
		var alldots = A2($elm$core$List$concatMap, dots_, verticals);
		return A2(
			$elm$core$List$map,
			A2($terezka$line_charts$Internal$Svg$gridDot, radius, color),
			alldots);
	});
var $terezka$line_charts$Internal$Svg$horizontal = F5(
	function (system, userAttributes, y, x1, x2) {
		var attributes = A3(
			$terezka$line_charts$Internal$Utils$concat,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$stroke(
					$avh4$elm_color$Color$toCssString($terezka$line_charts$LineChart$Colors$gray)),
					$elm$svg$Svg$Attributes$style('pointer-events: none;')
				]),
			userAttributes,
			_List_Nil);
		return A3(
			$terezka$line_charts$Internal$Path$view,
			system,
			attributes,
			_List_fromArray(
				[
					$terezka$line_charts$Internal$Path$Move(
					{gt: x1, nt: y}),
					$terezka$line_charts$Internal$Path$Line(
					{gt: x1, nt: y}),
					$terezka$line_charts$Internal$Path$Line(
					{gt: x2, nt: y})
				]));
	});
var $terezka$line_charts$Internal$Svg$horizontalGrid = F3(
	function (system, userAttributes, y) {
		var attributes = A3(
			$terezka$line_charts$Internal$Utils$concat,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$stroke(
					$avh4$elm_color$Color$toCssString($terezka$line_charts$LineChart$Colors$gray)),
					$elm$svg$Svg$Attributes$style('pointer-events: none;')
				]),
			userAttributes,
			_List_Nil);
		return A5($terezka$line_charts$Internal$Svg$horizontal, system, attributes, y, system.gt.fp, system.gt.hV);
	});
var $terezka$line_charts$Internal$Grid$viewLines = F5(
	function (system, verticals, horizontals, width, color) {
		var attributes = _List_fromArray(
			[
				$elm$svg$Svg$Attributes$strokeWidth(
				$elm$core$String$fromFloat(width)),
				$elm$svg$Svg$Attributes$stroke(
				$avh4$elm_color$Color$toCssString(color))
			]);
		return _Utils_ap(
			A2(
				$elm$core$List$map,
				A2($terezka$line_charts$Internal$Svg$horizontalGrid, system, attributes),
				horizontals),
			A2(
				$elm$core$List$map,
				A2($terezka$line_charts$Internal$Svg$verticalGrid, system, attributes),
				verticals));
	});
var $terezka$line_charts$Internal$Grid$view = F4(
	function (system, xAxis, yAxis, grid) {
		var hasGrid = function (tick) {
			return tick.d4 ? $elm$core$Maybe$Just(tick.im) : $elm$core$Maybe$Nothing;
		};
		var horizontals = A2(
			$elm$core$List$filterMap,
			hasGrid,
			A3(
				$terezka$line_charts$Internal$Axis$Ticks$ticks,
				system.gv,
				system.nt,
				$terezka$line_charts$Internal$Axis$ticks(yAxis)));
		var verticals = A2(
			$elm$core$List$filterMap,
			hasGrid,
			A3(
				$terezka$line_charts$Internal$Axis$Ticks$ticks,
				system.gu,
				system.gt,
				$terezka$line_charts$Internal$Axis$ticks(xAxis)));
		if (!grid.$) {
			var radius = grid.a;
			var color = grid.b;
			return A5($terezka$line_charts$Internal$Grid$viewDots, system, verticals, horizontals, radius, color);
		} else {
			var width = grid.a;
			var color = grid.b;
			return A5($terezka$line_charts$Internal$Grid$viewLines, system, verticals, horizontals, width, color);
		}
	});
var $terezka$line_charts$Internal$Svg$End = 2;
var $terezka$line_charts$Internal$Svg$Start = 0;
var $terezka$line_charts$Internal$Svg$anchorStyle = function (anchor) {
	var anchorString = function () {
		switch (anchor) {
			case 0:
				return 'start';
			case 1:
				return 'middle';
			default:
				return 'end';
		}
	}();
	return $elm$svg$Svg$Attributes$style('text-anchor: ' + (anchorString + ';'));
};
var $terezka$line_charts$Internal$Svg$Transfrom = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $terezka$line_charts$Internal$Svg$move = F3(
	function (system, x, y) {
		return A2(
			$terezka$line_charts$Internal$Svg$Transfrom,
			A2($terezka$line_charts$LineChart$Coordinate$toSvgX, system, x),
			A2($terezka$line_charts$LineChart$Coordinate$toSvgY, system, y));
	});
var $terezka$line_charts$Internal$Svg$offset = F2(
	function (x, y) {
		return A2($terezka$line_charts$Internal$Svg$Transfrom, x, y);
	});
var $terezka$line_charts$Internal$Svg$addPosition = F2(
	function (_v0, _v1) {
		var x = _v0.a;
		var y = _v0.b;
		var xf = _v1.a;
		var yf = _v1.b;
		return A2($terezka$line_charts$Internal$Svg$Transfrom, xf + x, yf + y);
	});
var $terezka$line_charts$Internal$Svg$toPosition = A2(
	$elm$core$List$foldr,
	$terezka$line_charts$Internal$Svg$addPosition,
	A2($terezka$line_charts$Internal$Svg$Transfrom, 0, 0));
var $elm$svg$Svg$Attributes$transform = _VirtualDom_attribute('transform');
var $terezka$line_charts$Internal$Svg$transform = function (translations) {
	var _v0 = $terezka$line_charts$Internal$Svg$toPosition(translations);
	var x = _v0.a;
	var y = _v0.b;
	return $elm$svg$Svg$Attributes$transform(
		'translate(' + ($elm$core$String$fromFloat(x) + (', ' + ($elm$core$String$fromFloat(y) + ')'))));
};
var $terezka$line_charts$Internal$Legends$viewFree = F5(
	function (system, placement, viewLabel, line, data) {
		var _v0 = function () {
			if (!placement) {
				return _Utils_Tuple3(data, 2, -10);
			} else {
				return _Utils_Tuple3(
					$elm$core$List$reverse(data),
					0,
					10);
			}
		}();
		var orderedPoints = _v0.a;
		var anchor = _v0.b;
		var xOffset = _v0.c;
		var transform = function (_v3) {
			var x = _v3.gt;
			var y = _v3.nt;
			return $terezka$line_charts$Internal$Svg$transform(
				_List_fromArray(
					[
						A3($terezka$line_charts$Internal$Svg$move, system, x, y),
						A2($terezka$line_charts$Internal$Svg$offset, xOffset, 3)
					]));
		};
		var viewLegend = function (_v2) {
			var point = _v2.l4;
			return A2(
				$elm$svg$Svg$g,
				_List_fromArray(
					[
						transform(point),
						$terezka$line_charts$Internal$Svg$anchorStyle(anchor)
					]),
				_List_fromArray(
					[
						viewLabel(
						$terezka$line_charts$Internal$Line$label(line))
					]));
		};
		return A2(
			$terezka$line_charts$Internal$Utils$viewMaybe,
			$elm$core$List$head(orderedPoints),
			viewLegend);
	});
var $terezka$line_charts$Internal$Legends$viewFrees = F3(
	function (_v0, placement, view_) {
		var system = _v0.iQ;
		var lines = _v0.fm;
		var data = _v0.eN;
		return A2(
			$elm$svg$Svg$g,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$class('chart__legends')
				]),
			A3(
				$elm$core$List$map2,
				A3($terezka$line_charts$Internal$Legends$viewFree, system, placement, view_),
				lines,
				data));
	});
var $terezka$line_charts$Internal$Line$shape = function (_v0) {
	var config = _v0;
	return config.iH;
};
var $elm$core$Basics$sqrt = _Basics_sqrt;
var $elm$svg$Svg$Attributes$strokeOpacity = _VirtualDom_attribute('stroke-opacity');
var $terezka$line_charts$Internal$Dots$varietyAttributes = F2(
	function (color, variety) {
		switch (variety.$) {
			case 0:
				var width = variety.a;
				return _List_fromArray(
					[
						$elm$svg$Svg$Attributes$stroke(
						$avh4$elm_color$Color$toCssString(color)),
						$elm$svg$Svg$Attributes$strokeWidth(
						$elm$core$String$fromInt(width)),
						$elm$svg$Svg$Attributes$fill('white')
					]);
			case 2:
				var width = variety.a;
				var opacity = variety.b;
				return _List_fromArray(
					[
						$elm$svg$Svg$Attributes$stroke(
						$avh4$elm_color$Color$toCssString(color)),
						$elm$svg$Svg$Attributes$strokeWidth(
						$elm$core$String$fromInt(width)),
						$elm$svg$Svg$Attributes$strokeOpacity(
						$elm$core$String$fromFloat(opacity)),
						$elm$svg$Svg$Attributes$fill(
						$avh4$elm_color$Color$toCssString(color))
					]);
			case 1:
				var width = variety.a;
				return _List_fromArray(
					[
						$elm$svg$Svg$Attributes$stroke('white'),
						$elm$svg$Svg$Attributes$strokeWidth(
						$elm$core$String$fromInt(width)),
						$elm$svg$Svg$Attributes$fill(
						$avh4$elm_color$Color$toCssString(color))
					]);
			default:
				return _List_fromArray(
					[
						$elm$svg$Svg$Attributes$fill(
						$avh4$elm_color$Color$toCssString(color))
					]);
		}
	});
var $terezka$line_charts$Internal$Dots$viewCircle = F5(
	function (events, variety, color, area, point) {
		var radius = $elm$core$Basics$sqrt(area / $elm$core$Basics$pi);
		var attributes = _List_fromArray(
			[
				$elm$svg$Svg$Attributes$cx(
				$elm$core$String$fromFloat(point.gt)),
				$elm$svg$Svg$Attributes$cy(
				$elm$core$String$fromFloat(point.nt)),
				$elm$svg$Svg$Attributes$r(
				$elm$core$String$fromFloat(radius))
			]);
		return A2(
			$elm$svg$Svg$circle,
			_Utils_ap(
				events,
				_Utils_ap(
					attributes,
					A2($terezka$line_charts$Internal$Dots$varietyAttributes, color, variety))),
			_List_Nil);
	});
var $terezka$line_charts$Internal$Dots$pathPlus = F2(
	function (area, point) {
		var side = $elm$core$Basics$sqrt(area / 5);
		var r6 = side / 2;
		var r3 = side;
		var commands = _List_fromArray(
			[
				'M' + ($elm$core$String$fromFloat(point.gt - r6) + (' ' + $elm$core$String$fromFloat((point.nt - r3) - r6))),
				'v' + $elm$core$String$fromFloat(r3),
				'h' + $elm$core$String$fromFloat(-r3),
				'v' + $elm$core$String$fromFloat(r3),
				'h' + $elm$core$String$fromFloat(r3),
				'v' + $elm$core$String$fromFloat(r3),
				'h' + $elm$core$String$fromFloat(r3),
				'v' + $elm$core$String$fromFloat(-r3),
				'h' + $elm$core$String$fromFloat(r3),
				'v' + $elm$core$String$fromFloat(-r3),
				'h' + $elm$core$String$fromFloat(-r3),
				'v' + $elm$core$String$fromFloat(-r3),
				'h' + $elm$core$String$fromFloat(-r3),
				'v' + $elm$core$String$fromFloat(r3)
			]);
		return A2($elm$core$String$join, ' ', commands);
	});
var $terezka$line_charts$Internal$Dots$viewCross = F5(
	function (events, variety, color, area, point) {
		var rotation = 'rotate(45 ' + ($elm$core$String$fromFloat(point.gt) + (' ' + ($elm$core$String$fromFloat(point.nt) + ')')));
		var attributes = _List_fromArray(
			[
				$elm$svg$Svg$Attributes$d(
				A2($terezka$line_charts$Internal$Dots$pathPlus, area, point)),
				$elm$svg$Svg$Attributes$transform(rotation)
			]);
		return A2(
			$elm$svg$Svg$path,
			_Utils_ap(
				events,
				_Utils_ap(
					attributes,
					A2($terezka$line_charts$Internal$Dots$varietyAttributes, color, variety))),
			_List_Nil);
	});
var $terezka$line_charts$Internal$Dots$viewDiamond = F5(
	function (events, variety, color, area, point) {
		var side = $elm$core$Basics$sqrt(area);
		var rotation = 'rotate(45 ' + ($elm$core$String$fromFloat(point.gt) + (' ' + ($elm$core$String$fromFloat(point.nt) + ')')));
		var attributes = _List_fromArray(
			[
				$elm$svg$Svg$Attributes$x(
				$elm$core$String$fromFloat(point.gt - (side / 2))),
				$elm$svg$Svg$Attributes$y(
				$elm$core$String$fromFloat(point.nt - (side / 2))),
				$elm$svg$Svg$Attributes$width(
				$elm$core$String$fromFloat(side)),
				$elm$svg$Svg$Attributes$height(
				$elm$core$String$fromFloat(side)),
				$elm$svg$Svg$Attributes$transform(rotation)
			]);
		return A2(
			$elm$svg$Svg$rect,
			_Utils_ap(
				events,
				_Utils_ap(
					attributes,
					A2($terezka$line_charts$Internal$Dots$varietyAttributes, color, variety))),
			_List_Nil);
	});
var $terezka$line_charts$Internal$Dots$viewPlus = F5(
	function (events, variety, color, area, point) {
		var attributes = _List_fromArray(
			[
				$elm$svg$Svg$Attributes$d(
				A2($terezka$line_charts$Internal$Dots$pathPlus, area, point))
			]);
		return A2(
			$elm$svg$Svg$path,
			_Utils_ap(
				events,
				_Utils_ap(
					attributes,
					A2($terezka$line_charts$Internal$Dots$varietyAttributes, color, variety))),
			_List_Nil);
	});
var $terezka$line_charts$Internal$Dots$viewSquare = F5(
	function (events, variety, color, area, point) {
		var side = $elm$core$Basics$sqrt(area);
		var attributes = _List_fromArray(
			[
				$elm$svg$Svg$Attributes$x(
				$elm$core$String$fromFloat(point.gt - (side / 2))),
				$elm$svg$Svg$Attributes$y(
				$elm$core$String$fromFloat(point.nt - (side / 2))),
				$elm$svg$Svg$Attributes$width(
				$elm$core$String$fromFloat(side)),
				$elm$svg$Svg$Attributes$height(
				$elm$core$String$fromFloat(side))
			]);
		return A2(
			$elm$svg$Svg$rect,
			_Utils_ap(
				events,
				_Utils_ap(
					attributes,
					A2($terezka$line_charts$Internal$Dots$varietyAttributes, color, variety))),
			_List_Nil);
	});
var $elm$core$Basics$tan = _Basics_tan;
var $terezka$line_charts$Internal$Dots$pathTriangle = F2(
	function (area, point) {
		var side = $elm$core$Basics$sqrt(
			(area * 4) / $elm$core$Basics$sqrt(3));
		var height = ($elm$core$Basics$sqrt(3) * side) / 2;
		var fromMiddle = height - (($elm$core$Basics$tan(
			$elm$core$Basics$degrees(30)) * side) / 2);
		var commands = _List_fromArray(
			[
				'M' + ($elm$core$String$fromFloat(point.gt) + (' ' + $elm$core$String$fromFloat(point.nt - fromMiddle))),
				'l' + ($elm$core$String$fromFloat((-side) / 2) + (' ' + $elm$core$String$fromFloat(height))),
				'h' + $elm$core$String$fromFloat(side),
				'z'
			]);
		return A2($elm$core$String$join, ' ', commands);
	});
var $terezka$line_charts$Internal$Dots$viewTriangle = F5(
	function (events, variety, color, area, point) {
		var attributes = _List_fromArray(
			[
				$elm$svg$Svg$Attributes$d(
				A2($terezka$line_charts$Internal$Dots$pathTriangle, area, point))
			]);
		return A2(
			$elm$svg$Svg$path,
			_Utils_ap(
				events,
				_Utils_ap(
					attributes,
					A2($terezka$line_charts$Internal$Dots$varietyAttributes, color, variety))),
			_List_Nil);
	});
var $terezka$line_charts$Internal$Dots$viewShape = F5(
	function (system, _v0, shape, color, point) {
		var radius = _v0.l8;
		var variety = _v0.gk;
		var view_ = function () {
			switch (shape) {
				case 1:
					return $terezka$line_charts$Internal$Dots$viewCircle;
				case 2:
					return $terezka$line_charts$Internal$Dots$viewTriangle;
				case 3:
					return $terezka$line_charts$Internal$Dots$viewSquare;
				case 4:
					return $terezka$line_charts$Internal$Dots$viewDiamond;
				case 5:
					return $terezka$line_charts$Internal$Dots$viewCross;
				case 6:
					return $terezka$line_charts$Internal$Dots$viewPlus;
				default:
					return F5(
						function (_v2, _v3, _v4, _v5, _v6) {
							return $elm$svg$Svg$text('');
						});
			}
		}();
		var size = (2 * $elm$core$Basics$pi) * radius;
		var pointSvg = A2($terezka$line_charts$LineChart$Coordinate$toSvg, system, point);
		return A5(view_, _List_Nil, variety, color, size, pointSvg);
	});
var $terezka$line_charts$Internal$Dots$viewSample = F5(
	function (_v0, shape, color, system, data) {
		var config = _v0;
		var _v1 = config.fd(
			A2(
				$elm$core$List$map,
				function ($) {
					return $.ni;
				},
				data));
		var style_ = _v1;
		return A4($terezka$line_charts$Internal$Dots$viewShape, system, style_, shape, color);
	});
var $elm$svg$Svg$Attributes$fillOpacity = _VirtualDom_attribute('fill-opacity');
var $terezka$line_charts$Internal$Area$opacity = function (config) {
	switch (config.$) {
		case 0:
			return 0;
		case 1:
			var opacity_ = config.a;
			return opacity_;
		case 2:
			var opacity_ = config.a;
			return opacity_;
		default:
			var opacity_ = config.a;
			return opacity_;
	}
};
var $terezka$line_charts$Internal$Line$toAreaAttributes = F3(
	function (_v0, _v1, area) {
		var serie = _v0;
		var style_ = _v1;
		return _List_fromArray(
			[
				$elm$svg$Svg$Attributes$class('chart__interpolation__area__fragment'),
				$elm$svg$Svg$Attributes$fill(
				$avh4$elm_color$Color$toCssString(
					style_.eL(serie.eL)))
			]);
	});
var $elm$svg$Svg$Attributes$strokeDasharray = _VirtualDom_attribute('stroke-dasharray');
var $terezka$line_charts$Internal$Line$toSeriesAttributes = F2(
	function (_v0, _v1) {
		var serie = _v0;
		var style_ = _v1;
		return _List_fromArray(
			[
				$elm$svg$Svg$Attributes$style('pointer-events: none;'),
				$elm$svg$Svg$Attributes$class('chart__interpolation__line__fragment'),
				$elm$svg$Svg$Attributes$stroke(
				$avh4$elm_color$Color$toCssString(
					style_.eL(serie.eL))),
				$elm$svg$Svg$Attributes$strokeWidth(
				$elm$core$String$fromFloat(style_.i5)),
				$elm$svg$Svg$Attributes$strokeDasharray(
				A2(
					$elm$core$String$join,
					' ',
					A2($elm$core$List$map, $elm$core$String$fromFloat, serie.gY))),
				$elm$svg$Svg$Attributes$fill('transparent')
			]);
	});
var $terezka$line_charts$Internal$Utils$viewIf = F2(
	function (condition, view) {
		return condition ? view(0) : $elm$svg$Svg$text('');
	});
var $terezka$line_charts$Internal$Line$viewSample = F5(
	function (_v0, line_, area, data_, sampleWidth) {
		var look = _v0;
		var style_ = look(
			A2(
				$elm$core$List$map,
				function ($) {
					return $.ni;
				},
				data_));
		var sizeAttributes = _List_fromArray(
			[
				$elm$svg$Svg$Attributes$x1('0'),
				$elm$svg$Svg$Attributes$y1('0'),
				$elm$svg$Svg$Attributes$x2(
				$elm$core$String$fromFloat(sampleWidth)),
				$elm$svg$Svg$Attributes$y2('0')
			]);
		var rectangleAttributes = _List_fromArray(
			[
				$elm$svg$Svg$Attributes$x('0'),
				$elm$svg$Svg$Attributes$y('0'),
				$elm$svg$Svg$Attributes$height('9'),
				$elm$svg$Svg$Attributes$width(
				$elm$core$String$fromFloat(sampleWidth))
			]);
		var lineAttributes = A2($terezka$line_charts$Internal$Line$toSeriesAttributes, line_, style_);
		var areaAttributes = A2(
			$elm$core$List$cons,
			$elm$svg$Svg$Attributes$fillOpacity(
				$elm$core$String$fromFloat(
					$terezka$line_charts$Internal$Area$opacity(area))),
			A3($terezka$line_charts$Internal$Line$toAreaAttributes, line_, style_, area));
		var viewRectangle = function (_v1) {
			return A2(
				$elm$svg$Svg$rect,
				_Utils_ap(areaAttributes, rectangleAttributes),
				_List_Nil);
		};
		return A2(
			$elm$svg$Svg$g,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$elm$svg$Svg$line,
					_Utils_ap(lineAttributes, sizeAttributes),
					_List_Nil),
					A2(
					$terezka$line_charts$Internal$Utils$viewIf,
					$terezka$line_charts$Internal$Area$hasArea(area),
					viewRectangle)
				]));
	});
var $terezka$line_charts$Internal$Legends$viewSample = F4(
	function (_v0, sampleWidth, line, data) {
		var system = _v0.iQ;
		var lineConfig = _v0.hS;
		var dotsConfig = _v0.g6;
		var area = _v0.gJ;
		var shape = $terezka$line_charts$Internal$Line$shape(line);
		var dotPosition = A2(
			$terezka$line_charts$LineChart$Coordinate$toData,
			system,
			A2($terezka$line_charts$Internal$Data$Point, sampleWidth / 2, 0));
		var color = A3($terezka$line_charts$Internal$Line$color, lineConfig, line, data);
		return A2(
			$elm$svg$Svg$g,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$class('chart__sample')
				]),
			_List_fromArray(
				[
					A5($terezka$line_charts$Internal$Line$viewSample, lineConfig, line, area, data, sampleWidth),
					A6($terezka$line_charts$Internal$Dots$viewSample, dotsConfig, shape, color, system, data, dotPosition)
				]));
	});
var $terezka$line_charts$Internal$Legends$viewGrouped = F3(
	function (_arguments, sampleWidth, container) {
		var toLegend = F2(
			function (line, data) {
				return {
					hL: $terezka$line_charts$Internal$Line$label(line),
					mi: A4($terezka$line_charts$Internal$Legends$viewSample, _arguments, sampleWidth, line, data)
				};
			});
		var legends = A3($elm$core$List$map2, toLegend, _arguments.fm, _arguments.eN);
		return A2(container, _arguments.iQ, legends);
	});
var $terezka$line_charts$Internal$Legends$view = function (_arguments) {
	var _v0 = _arguments.hM;
	switch (_v0.$) {
		case 1:
			var placement = _v0.a;
			var view_ = _v0.b;
			return A3($terezka$line_charts$Internal$Legends$viewFrees, _arguments, placement, view_);
		case 2:
			var sampleWidth = _v0.a;
			var container = _v0.b;
			return A3(
				$terezka$line_charts$Internal$Legends$viewGrouped,
				_arguments,
				sampleWidth,
				container(_arguments));
		default:
			return $elm$svg$Svg$text('');
	}
};
var $terezka$line_charts$Internal$Area$opacityContainer = function (config) {
	switch (config.$) {
		case 0:
			return 1;
		case 1:
			var opacity_ = config.a;
			return 1;
		case 2:
			var opacity_ = config.a;
			return opacity_;
		default:
			var opacity_ = config.a;
			return opacity_;
	}
};
var $terezka$line_charts$Internal$Utils$unzip3 = function (pairs) {
	var step = F2(
		function (_v0, _v1) {
			var a = _v0.a;
			var b = _v0.b;
			var c = _v0.c;
			var aas = _v1.a;
			var bs = _v1.b;
			var cs = _v1.c;
			return _Utils_Tuple3(
				A2($elm$core$List$cons, a, aas),
				A2($elm$core$List$cons, b, bs),
				A2($elm$core$List$cons, c, cs));
		});
	return A3(
		$elm$core$List$foldr,
		step,
		_Utils_Tuple3(_List_Nil, _List_Nil, _List_Nil),
		pairs);
};
var $elm$core$List$map3 = _List_map3;
var $terezka$line_charts$Internal$Line$viewNormal = function (_v0) {
	var areas = _v0.a;
	var lines = _v0.b;
	var dots = _v0.c;
	var view_ = F3(
		function (area_, line_, dots_) {
			return A2(
				$elm$svg$Svg$g,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$class('chart__line')
					]),
				_List_fromArray(
					[area_, line_, dots_]));
		});
	return A4($elm$core$List$map3, view_, areas, lines, dots);
};
var $terezka$line_charts$Internal$Data$isWithinRange = F2(
	function (system, point) {
		return _Utils_eq(
			A3($elm$core$Basics$clamp, system.gt.fp, system.gt.hV, point.gt),
			point.gt) && _Utils_eq(
			A3($elm$core$Basics$clamp, system.nt.fp, system.nt.hV, point.nt),
			point.nt);
	});
var $terezka$line_charts$Internal$Utils$part = F4(
	function (isReal, points, current, parts) {
		part:
		while (true) {
			if (points.b) {
				var first = points.a;
				var rest = points.b;
				if (isReal(first)) {
					var $temp$isReal = isReal,
						$temp$points = rest,
						$temp$current = _Utils_ap(
						current,
						_List_fromArray(
							[first])),
						$temp$parts = parts;
					isReal = $temp$isReal;
					points = $temp$points;
					current = $temp$current;
					parts = $temp$parts;
					continue part;
				} else {
					var $temp$isReal = isReal,
						$temp$points = rest,
						$temp$current = _List_Nil,
						$temp$parts = A2(
						$elm$core$List$cons,
						_Utils_Tuple2(
							current,
							$elm$core$Maybe$Just(first)),
						parts);
					isReal = $temp$isReal;
					points = $temp$points;
					current = $temp$current;
					parts = $temp$parts;
					continue part;
				}
			} else {
				return A2(
					$elm$core$List$cons,
					_Utils_Tuple2(current, $elm$core$Maybe$Nothing),
					parts);
			}
		}
	});
var $terezka$line_charts$Internal$Interpolation$linear = $elm$core$List$map(
	$elm$core$List$map($terezka$line_charts$Internal$Path$Line));
var $terezka$line_charts$Internal$Interpolation$First = {$: 0};
var $terezka$line_charts$Internal$Interpolation$Previous = function (a) {
	return {$: 1, a: a};
};
var $terezka$line_charts$Internal$Interpolation$monotoneCurve = F4(
	function (point0, point1, tangent0, tangent1) {
		var dx = (point1.gt - point0.gt) / 3;
		return A3(
			$terezka$line_charts$Internal$Path$CubicBeziers,
			{gt: point0.gt + dx, nt: point0.nt + (dx * tangent0)},
			{gt: point1.gt - dx, nt: point1.nt - (dx * tangent1)},
			point1);
	});
var $terezka$line_charts$Internal$Interpolation$slope2 = F3(
	function (point0, point1, t) {
		var h = point1.gt - point0.gt;
		return (!(!h)) ? ((((3 * (point1.nt - point0.nt)) / h) - t) / 2) : t;
	});
var $terezka$line_charts$Internal$Interpolation$sign = function (x) {
	return (x < 0) ? (-1) : 1;
};
var $terezka$line_charts$Internal$Interpolation$toH = F2(
	function (h0, h1) {
		return (!h0) ? ((h1 < 0) ? (0 * (-1)) : h1) : h0;
	});
var $terezka$line_charts$Internal$Interpolation$slope3 = F3(
	function (point0, point1, point2) {
		var h1 = point2.gt - point1.gt;
		var h0 = point1.gt - point0.gt;
		var s0h = A2($terezka$line_charts$Internal$Interpolation$toH, h0, h1);
		var s0 = (point1.nt - point0.nt) / s0h;
		var s1h = A2($terezka$line_charts$Internal$Interpolation$toH, h1, h0);
		var s1 = (point2.nt - point1.nt) / s1h;
		var p = ((s0 * h1) + (s1 * h0)) / (h0 + h1);
		var slope = ($terezka$line_charts$Internal$Interpolation$sign(s0) + $terezka$line_charts$Internal$Interpolation$sign(s1)) * A2(
			$elm$core$Basics$min,
			A2(
				$elm$core$Basics$min,
				$elm$core$Basics$abs(s0),
				$elm$core$Basics$abs(s1)),
			0.5 * $elm$core$Basics$abs(p));
		return $elm$core$Basics$isNaN(slope) ? 0 : slope;
	});
var $terezka$line_charts$Internal$Interpolation$monotonePart = F2(
	function (points, _v0) {
		var tangent = _v0.a;
		var commands = _v0.b;
		var _v1 = _Utils_Tuple2(tangent, points);
		_v1$4:
		while (true) {
			if (!_v1.a.$) {
				if (_v1.b.b && _v1.b.b.b) {
					if (_v1.b.b.b.b) {
						var _v2 = _v1.a;
						var _v3 = _v1.b;
						var p0 = _v3.a;
						var _v4 = _v3.b;
						var p1 = _v4.a;
						var _v5 = _v4.b;
						var p2 = _v5.a;
						var rest = _v5.b;
						var t1 = A3($terezka$line_charts$Internal$Interpolation$slope3, p0, p1, p2);
						var t0 = A3($terezka$line_charts$Internal$Interpolation$slope2, p0, p1, t1);
						return A2(
							$terezka$line_charts$Internal$Interpolation$monotonePart,
							A2(
								$elm$core$List$cons,
								p1,
								A2($elm$core$List$cons, p2, rest)),
							_Utils_Tuple2(
								$terezka$line_charts$Internal$Interpolation$Previous(t1),
								_Utils_ap(
									commands,
									_List_fromArray(
										[
											A4($terezka$line_charts$Internal$Interpolation$monotoneCurve, p0, p1, t0, t1)
										]))));
					} else {
						var _v9 = _v1.a;
						var _v10 = _v1.b;
						var p0 = _v10.a;
						var _v11 = _v10.b;
						var p1 = _v11.a;
						var t1 = A3($terezka$line_charts$Internal$Interpolation$slope3, p0, p1, p1);
						return _Utils_Tuple2(
							$terezka$line_charts$Internal$Interpolation$Previous(t1),
							_Utils_ap(
								commands,
								_List_fromArray(
									[
										A4($terezka$line_charts$Internal$Interpolation$monotoneCurve, p0, p1, t1, t1),
										$terezka$line_charts$Internal$Path$Line(p1)
									])));
					}
				} else {
					break _v1$4;
				}
			} else {
				if (_v1.b.b && _v1.b.b.b) {
					if (_v1.b.b.b.b) {
						var t0 = _v1.a.a;
						var _v6 = _v1.b;
						var p0 = _v6.a;
						var _v7 = _v6.b;
						var p1 = _v7.a;
						var _v8 = _v7.b;
						var p2 = _v8.a;
						var rest = _v8.b;
						var t1 = A3($terezka$line_charts$Internal$Interpolation$slope3, p0, p1, p2);
						return A2(
							$terezka$line_charts$Internal$Interpolation$monotonePart,
							A2(
								$elm$core$List$cons,
								p1,
								A2($elm$core$List$cons, p2, rest)),
							_Utils_Tuple2(
								$terezka$line_charts$Internal$Interpolation$Previous(t1),
								_Utils_ap(
									commands,
									_List_fromArray(
										[
											A4($terezka$line_charts$Internal$Interpolation$monotoneCurve, p0, p1, t0, t1)
										]))));
					} else {
						var t0 = _v1.a.a;
						var _v12 = _v1.b;
						var p0 = _v12.a;
						var _v13 = _v12.b;
						var p1 = _v13.a;
						var t1 = A3($terezka$line_charts$Internal$Interpolation$slope3, p0, p1, p1);
						return _Utils_Tuple2(
							$terezka$line_charts$Internal$Interpolation$Previous(t1),
							_Utils_ap(
								commands,
								_List_fromArray(
									[
										A4($terezka$line_charts$Internal$Interpolation$monotoneCurve, p0, p1, t0, t1),
										$terezka$line_charts$Internal$Path$Line(p1)
									])));
					}
				} else {
					break _v1$4;
				}
			}
		}
		return _Utils_Tuple2(tangent, commands);
	});
var $terezka$line_charts$Internal$Interpolation$monotoneSection = F2(
	function (points, _v0) {
		var tangent = _v0.a;
		var acc = _v0.b;
		var _v1 = function () {
			if (points.b) {
				var p0 = points.a;
				var rest = points.b;
				return A2(
					$terezka$line_charts$Internal$Interpolation$monotonePart,
					A2($elm$core$List$cons, p0, rest),
					_Utils_Tuple2(
						tangent,
						_List_fromArray(
							[
								$terezka$line_charts$Internal$Path$Line(p0)
							])));
			} else {
				return _Utils_Tuple2(tangent, _List_Nil);
			}
		}();
		var t0 = _v1.a;
		var commands = _v1.b;
		return _Utils_Tuple2(
			t0,
			A2($elm$core$List$cons, commands, acc));
	});
var $terezka$line_charts$Internal$Interpolation$monotone = function (sections) {
	return A3(
		$elm$core$List$foldr,
		$terezka$line_charts$Internal$Interpolation$monotoneSection,
		_Utils_Tuple2($terezka$line_charts$Internal$Interpolation$First, _List_Nil),
		sections).b;
};
var $terezka$line_charts$Internal$Interpolation$after = F2(
	function (a, b) {
		return _List_fromArray(
			[
				a,
				A2($terezka$line_charts$Internal$Data$Point, b.gt, a.nt),
				b
			]);
	});
var $terezka$line_charts$Internal$Interpolation$stepped = function (sections) {
	var expand = F2(
		function (result, section) {
			expand:
			while (true) {
				if (section.a.b) {
					if (section.a.b.b) {
						var _v1 = section.a;
						var a = _v1.a;
						var _v2 = _v1.b;
						var b = _v2.a;
						var rest = _v2.b;
						var broken = section.b;
						var $temp$result = _Utils_ap(
							result,
							A2($terezka$line_charts$Internal$Interpolation$after, a, b)),
							$temp$section = _Utils_Tuple2(
							A2($elm$core$List$cons, b, rest),
							broken);
						result = $temp$result;
						section = $temp$section;
						continue expand;
					} else {
						if (!section.b.$) {
							var _v3 = section.a;
							var last = _v3.a;
							var broken = section.b.a;
							return _Utils_ap(
								result,
								_List_fromArray(
									[
										A2($terezka$line_charts$Internal$Data$Point, broken.gt, last.nt)
									]));
						} else {
							var _v4 = section.a;
							var last = _v4.a;
							var _v5 = section.b;
							return result;
						}
					}
				} else {
					return result;
				}
			}
		});
	return A2(
		$elm$core$List$map,
		A2(
			$elm$core$Basics$composeR,
			expand(_List_Nil),
			$elm$core$List$map($terezka$line_charts$Internal$Path$Line)),
		sections);
};
var $terezka$line_charts$Internal$Interpolation$toCommands = F2(
	function (interpolation, data) {
		var pointsSections = $elm$core$List$map(
			A2(
				$elm$core$Basics$composeR,
				$elm$core$Tuple$mapFirst(
					$elm$core$List$map(
						function ($) {
							return $.l4;
						})),
				$elm$core$Tuple$mapSecond(
					$elm$core$Maybe$map(
						function ($) {
							return $.l4;
						}))));
		var points = $elm$core$List$map(
			A2(
				$elm$core$Basics$composeR,
				$elm$core$Tuple$first,
				$elm$core$List$map(
					function ($) {
						return $.l4;
					})));
		switch (interpolation) {
			case 0:
				return $terezka$line_charts$Internal$Interpolation$linear(
					points(data));
			case 1:
				return $terezka$line_charts$Internal$Interpolation$monotone(
					points(data));
			default:
				return $terezka$line_charts$Internal$Interpolation$stepped(
					pointsSections(data));
		}
	});
var $terezka$line_charts$Internal$Area$opacitySingle = function (config) {
	switch (config.$) {
		case 0:
			return 0;
		case 1:
			var opacity_ = config.a;
			return opacity_;
		case 2:
			var opacity_ = config.a;
			return 1;
		default:
			var opacity_ = config.a;
			return 1;
	}
};
var $terezka$line_charts$Internal$Path$toPoint = function (command) {
	switch (command.$) {
		case 9:
			return A2($terezka$line_charts$LineChart$Coordinate$Point, 0, 0);
		case 0:
			var p = command.a;
			return p;
		case 1:
			var p = command.a;
			return p;
		case 2:
			var x = command.a;
			return A2($terezka$line_charts$LineChart$Coordinate$Point, x, 0);
		case 3:
			var y = command.a;
			return A2($terezka$line_charts$LineChart$Coordinate$Point, 0, y);
		case 4:
			var c1 = command.a;
			var c2 = command.b;
			var p = command.c;
			return p;
		case 5:
			var c1 = command.a;
			var p = command.b;
			return p;
		case 6:
			var c1 = command.a;
			var p = command.b;
			return p;
		case 7:
			var p = command.a;
			return p;
		default:
			var rx = command.a;
			var ry = command.b;
			var xAxisRotation = command.c;
			var largeArcFlag = command.d;
			var sweepFlag = command.e;
			var p = command.f;
			return p;
	}
};
var $terezka$line_charts$Internal$Utils$towardsZero = function (_v0) {
	var max = _v0.hV;
	var min = _v0.fp;
	return A3($elm$core$Basics$clamp, min, max, 0);
};
var $terezka$line_charts$Internal$Utils$last = function (list) {
	return $elm$core$List$head(
		A2(
			$elm$core$List$drop,
			$elm$core$List$length(list) - 1,
			list));
};
var $terezka$line_charts$Internal$Utils$lastSafe = F2(
	function (first, rest) {
		return A2(
			$elm$core$Maybe$withDefault,
			first,
			$terezka$line_charts$Internal$Utils$last(rest));
	});
var $terezka$line_charts$Internal$Utils$viewWithEdges = F2(
	function (stuff, view) {
		if (stuff.b) {
			var first = stuff.a;
			var rest = stuff.b;
			return A3(
				view,
				first,
				rest,
				A2($terezka$line_charts$Internal$Utils$lastSafe, first, rest));
		} else {
			return $elm$svg$Svg$text('');
		}
	});
var $elm$svg$Svg$Attributes$clipPath = _VirtualDom_attribute('clip-path');
var $terezka$line_charts$Internal$Svg$withinChartArea = function (_v0) {
	var id = _v0.hs;
	return $elm$svg$Svg$Attributes$clipPath(
		'url(#' + ($terezka$line_charts$Internal$Utils$toChartAreaId(id) + ')'));
};
var $terezka$line_charts$LineChart$Junk$withinChartArea = $terezka$line_charts$Internal$Svg$withinChartArea;
var $terezka$line_charts$Internal$Line$viewArea = F5(
	function (_v0, line_, style_, interpolation, data_) {
		var system = _v0.iQ;
		var lineConfig = _v0.hS;
		var area = _v0.gJ;
		var ground = function (point) {
			return A2(
				$terezka$line_charts$Internal$Data$Point,
				point.gt,
				$terezka$line_charts$Internal$Utils$towardsZero(system.nt));
		};
		var commands = F3(
			function (first, middle, last) {
				return A3(
					$terezka$line_charts$Internal$Utils$concat,
					_List_fromArray(
						[
							$terezka$line_charts$Internal$Path$Move(
							ground(
								$terezka$line_charts$Internal$Path$toPoint(first))),
							$terezka$line_charts$Internal$Path$Line(
							$terezka$line_charts$Internal$Path$toPoint(first))
						]),
					interpolation,
					_List_fromArray(
						[
							$terezka$line_charts$Internal$Path$Line(
							ground(
								$terezka$line_charts$Internal$Path$toPoint(last)))
						]));
			});
		var attributes = A2(
			$elm$core$List$cons,
			$terezka$line_charts$LineChart$Junk$withinChartArea(system),
			A2(
				$elm$core$List$cons,
				$elm$svg$Svg$Attributes$fillOpacity(
					$elm$core$String$fromFloat(
						$terezka$line_charts$Internal$Area$opacitySingle(area))),
				A3($terezka$line_charts$Internal$Line$toAreaAttributes, line_, style_, area)));
		return A2(
			$terezka$line_charts$Internal$Utils$viewWithEdges,
			interpolation,
			F3(
				function (first, middle, last) {
					return A3(
						$terezka$line_charts$Internal$Path$view,
						system,
						attributes,
						A3(commands, first, middle, last));
				}));
	});
var $terezka$line_charts$Internal$Dots$view = F2(
	function (_v0, data) {
		var system = _v0.iQ;
		var dotsConfig = _v0.g6;
		var shape = _v0.iH;
		var color = _v0.eL;
		var _v1 = dotsConfig;
		var config = _v1;
		var _v2 = config.fa(data.ni);
		var style_ = _v2;
		return A5($terezka$line_charts$Internal$Dots$viewShape, system, style_, shape, color, data.l4);
	});
var $terezka$line_charts$Internal$Line$viewDot = F3(
	function (_arguments, _v0, _v1) {
		var lineConfig = _v0;
		var style_ = _v1;
		return $terezka$line_charts$Internal$Dots$view(
			{
				eL: style_.eL(lineConfig.eL),
				g6: _arguments.g6,
				iH: lineConfig.iH,
				iQ: _arguments.iQ
			});
	});
var $terezka$line_charts$Internal$Utils$viewWithFirst = F2(
	function (stuff, view) {
		if (stuff.b) {
			var first = stuff.a;
			var rest = stuff.b;
			return A2(view, first, rest);
		} else {
			return $elm$svg$Svg$text('');
		}
	});
var $terezka$line_charts$Internal$Line$viewSeries = F5(
	function (_v0, line_, style_, interpolation, data_) {
		var system = _v0.iQ;
		var lineConfig = _v0.hS;
		var attributes = A2(
			$elm$core$List$cons,
			$terezka$line_charts$LineChart$Junk$withinChartArea(system),
			A2($terezka$line_charts$Internal$Line$toSeriesAttributes, line_, style_));
		return A2(
			$terezka$line_charts$Internal$Utils$viewWithFirst,
			data_,
			F2(
				function (first, _v1) {
					return A3(
						$terezka$line_charts$Internal$Path$view,
						system,
						attributes,
						A2(
							$elm$core$List$cons,
							$terezka$line_charts$Internal$Path$Move(first.l4),
							interpolation));
				}));
	});
var $terezka$line_charts$Internal$Line$viewSingle = F3(
	function (_arguments, line_, data_) {
		var style_ = function (_v1) {
			var look = _v1;
			return look(
				A2(
					$elm$core$List$map,
					function ($) {
						return $.ni;
					},
					data_));
		}(_arguments.hS);
		var sections = A4(
			$terezka$line_charts$Internal$Utils$part,
			function ($) {
				return $.k8;
			},
			data_,
			_List_Nil,
			_List_Nil);
		var parts = A2($elm$core$List$map, $elm$core$Tuple$first, sections);
		var viewDots = A2(
			$elm$svg$Svg$g,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$class('chart__dots')
				]),
			A2(
				$elm$core$List$map,
				A3($terezka$line_charts$Internal$Line$viewDot, _arguments, line_, style_),
				A2(
					$elm$core$List$filter,
					A2(
						$elm$core$Basics$composeL,
						$terezka$line_charts$Internal$Data$isWithinRange(_arguments.iQ),
						function ($) {
							return $.l4;
						}),
					$elm$core$List$concat(parts))));
		var commands = A2($terezka$line_charts$Internal$Interpolation$toCommands, _arguments.hC, sections);
		var viewAreas = function (_v0) {
			return A2(
				$elm$svg$Svg$g,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$class('chart__interpolation__area')
					]),
				A3(
					$elm$core$List$map2,
					A3($terezka$line_charts$Internal$Line$viewArea, _arguments, line_, style_),
					commands,
					parts));
		};
		var viewSeriess = A2(
			$elm$svg$Svg$g,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$class('chart__interpolation__line')
				]),
			A3(
				$elm$core$List$map2,
				A3($terezka$line_charts$Internal$Line$viewSeries, _arguments, line_, style_),
				commands,
				parts));
		return _Utils_Tuple3(
			A2(
				$terezka$line_charts$Internal$Utils$viewIf,
				$terezka$line_charts$Internal$Area$hasArea(_arguments.gJ),
				viewAreas),
			viewSeriess,
			viewDots);
	});
var $terezka$line_charts$Internal$Line$viewStacked = F2(
	function (area, _v0) {
		var areas = _v0.a;
		var lines = _v0.b;
		var dots = _v0.c;
		var toList = F2(
			function (l, d) {
				return _List_fromArray(
					[l, d]);
			});
		var opacity = 'opacity: ' + $elm$core$String$fromFloat(
			$terezka$line_charts$Internal$Area$opacityContainer(area));
		var bottoms = $elm$core$List$concat(
			A3($elm$core$List$map2, toList, lines, dots));
		return _List_fromArray(
			[
				A2(
				$elm$svg$Svg$g,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$class('chart__bottoms'),
						$elm$svg$Svg$Attributes$style(opacity)
					]),
				areas),
				A2(
				$elm$svg$Svg$g,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$class('chart__tops')
					]),
				bottoms)
			]);
	});
var $terezka$line_charts$Internal$Line$view = F3(
	function (_arguments, lines, datas) {
		var container = $elm$svg$Svg$g(
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$class('chart__lines')
				]));
		var buildSeriesViews = ($terezka$line_charts$Internal$Area$opacityContainer(_arguments.gJ) < 1) ? $terezka$line_charts$Internal$Line$viewStacked(_arguments.gJ) : $terezka$line_charts$Internal$Line$viewNormal;
		return container(
			buildSeriesViews(
				$terezka$line_charts$Internal$Utils$unzip3(
					A3(
						$elm$core$List$map2,
						$terezka$line_charts$Internal$Line$viewSingle(_arguments),
						lines,
						datas))));
	});
var $terezka$line_charts$LineChart$viewBoxAttribute = function (_v0) {
	var frame = _v0.d2;
	return $elm$svg$Svg$Attributes$viewBox(
		'0 0 ' + ($elm$core$String$fromFloat(frame.f$.i5) + (' ' + $elm$core$String$fromFloat(frame.f$.hm))));
};
var $terezka$line_charts$Internal$Axis$Line$config = function (_v0) {
	var config_ = _v0;
	return config_;
};
var $terezka$line_charts$Internal$Axis$Title$config = function (_v0) {
	var title = _v0;
	return title;
};
var $terezka$line_charts$Internal$Axis$Intersection$getY = function (_v0) {
	var func = _v0;
	return A2(
		$elm$core$Basics$composeL,
		function ($) {
			return $.nt;
		},
		func);
};
var $terezka$line_charts$Internal$Axis$attributesLine = F2(
	function (system, _v0) {
		var events = _v0.kz;
		var width = _v0.i5;
		var color = _v0.eL;
		return _Utils_ap(
			events,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$strokeWidth(
					$elm$core$String$fromFloat(width)),
					$elm$svg$Svg$Attributes$stroke(
					$avh4$elm_color$Color$toCssString(color)),
					$terezka$line_charts$Internal$Svg$withinChartArea(system)
				]));
	});
var $terezka$line_charts$Internal$Axis$viewHorizontalAxisLine = F3(
	function (system, axisPosition, config) {
		return A5(
			$terezka$line_charts$Internal$Svg$horizontal,
			system,
			A2($terezka$line_charts$Internal$Axis$attributesLine, system, config),
			axisPosition,
			config.f7,
			config.hb);
	});
var $terezka$line_charts$Internal$Axis$attributesTick = function (_v0) {
	var width = _v0.i5;
	var color = _v0.eL;
	return _List_fromArray(
		[
			$elm$svg$Svg$Attributes$strokeWidth(
			$elm$core$String$fromFloat(width)),
			$elm$svg$Svg$Attributes$stroke(
			$avh4$elm_color$Color$toCssString(color))
		]);
};
var $terezka$line_charts$Internal$Axis$Tick$isPositive = function (direction) {
	if (direction === 1) {
		return true;
	} else {
		return false;
	}
};
var $terezka$line_charts$Internal$Axis$lengthOfTick = function (_v0) {
	var length = _v0.hN;
	var direction = _v0.g3;
	return $terezka$line_charts$Internal$Axis$Tick$isPositive(direction) ? (-length) : length;
};
var $terezka$line_charts$Internal$Svg$Middle = 1;
var $terezka$line_charts$Internal$Axis$viewHorizontalLabel = F4(
	function (system, _v0, position, view) {
		var direction = _v0.g3;
		var length = _v0.hN;
		var yOffset = $terezka$line_charts$Internal$Axis$Tick$isPositive(direction) ? ((-5) - length) : (15 + length);
		return A2(
			$elm$svg$Svg$g,
			_List_fromArray(
				[
					$terezka$line_charts$Internal$Svg$transform(
					_List_fromArray(
						[
							A3($terezka$line_charts$Internal$Svg$move, system, position.gt, position.nt),
							A2($terezka$line_charts$Internal$Svg$offset, 0, yOffset)
						])),
					$terezka$line_charts$Internal$Svg$anchorStyle(1)
				]),
			_List_fromArray(
				[view]));
	});
var $terezka$line_charts$Internal$Svg$xTick = F5(
	function (system, height, userAttributes, y, x) {
		var attributes = A3(
			$terezka$line_charts$Internal$Utils$concat,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$stroke(
					$avh4$elm_color$Color$toCssString($terezka$line_charts$LineChart$Colors$gray))
				]),
			userAttributes,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$x1(
					$elm$core$String$fromFloat(
						A2($terezka$line_charts$LineChart$Coordinate$toSvgX, system, x))),
					$elm$svg$Svg$Attributes$x2(
					$elm$core$String$fromFloat(
						A2($terezka$line_charts$LineChart$Coordinate$toSvgX, system, x))),
					$elm$svg$Svg$Attributes$y1(
					$elm$core$String$fromFloat(
						A2($terezka$line_charts$LineChart$Coordinate$toSvgY, system, y))),
					$elm$svg$Svg$Attributes$y2(
					$elm$core$String$fromFloat(
						A2($terezka$line_charts$LineChart$Coordinate$toSvgY, system, y) + height))
				]));
		return A2($elm$svg$Svg$line, attributes, _List_Nil);
	});
var $terezka$line_charts$Internal$Axis$viewHorizontalTick = F3(
	function (system, point, tick) {
		var x = point.gt;
		var y = point.nt;
		return A2(
			$elm$svg$Svg$g,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$class('chart__tick')
				]),
			_List_fromArray(
				[
					A5(
					$terezka$line_charts$Internal$Svg$xTick,
					system,
					$terezka$line_charts$Internal$Axis$lengthOfTick(tick),
					$terezka$line_charts$Internal$Axis$attributesTick(tick),
					y,
					x),
					A2(
					$terezka$line_charts$Internal$Utils$viewMaybe,
					tick.hL,
					A3($terezka$line_charts$Internal$Axis$viewHorizontalLabel, system, tick, point))
				]));
	});
var $terezka$line_charts$Internal$Axis$viewHorizontalTitle = F3(
	function (system, at, _v0) {
		var title = _v0.er;
		var position = at(
			A2(title.im, system.gu, system.gt));
		var _v1 = title.lG;
		var xOffset = _v1.a;
		var yOffset = _v1.b;
		return A2(
			$elm$svg$Svg$g,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$class('chart__title'),
					$terezka$line_charts$Internal$Svg$transform(
					_List_fromArray(
						[
							A3($terezka$line_charts$Internal$Svg$move, system, position.gt, position.nt),
							A2($terezka$line_charts$Internal$Svg$offset, xOffset + 15, yOffset + 5)
						])),
					$terezka$line_charts$Internal$Svg$anchorStyle(0)
				]),
			_List_fromArray(
				[title.i_]));
	});
var $terezka$line_charts$Internal$Axis$viewHorizontal = F3(
	function (system, intersection, _v0) {
		var config = _v0;
		var viewConfig = {
			hD: A2($terezka$line_charts$Internal$Axis$Intersection$getY, intersection, system),
			hR: A3($terezka$line_charts$Internal$Axis$Line$config, config.eC, system.gu, system.gt),
			gb: A3($terezka$line_charts$Internal$Axis$Ticks$ticks, system.gu, system.gt, config.gb),
			er: $terezka$line_charts$Internal$Axis$Title$config(config.er)
		};
		var viewAxisLine = A2($terezka$line_charts$Internal$Axis$viewHorizontalAxisLine, system, viewConfig.hD);
		var at = function (x) {
			return {gt: x, nt: viewConfig.hD};
		};
		var viewTick = function (tick) {
			return A3(
				$terezka$line_charts$Internal$Axis$viewHorizontalTick,
				system,
				at(tick.im),
				tick);
		};
		return A2(
			$elm$svg$Svg$g,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$class('chart__axis--horizontal')
				]),
			_List_fromArray(
				[
					A3($terezka$line_charts$Internal$Axis$viewHorizontalTitle, system, at, viewConfig),
					viewAxisLine(viewConfig.hR),
					A2(
					$elm$svg$Svg$g,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$class('chart__ticks')
						]),
					A2($elm$core$List$map, viewTick, viewConfig.gb))
				]));
	});
var $terezka$line_charts$Internal$Axis$Intersection$getX = function (_v0) {
	var func = _v0;
	return A2(
		$elm$core$Basics$composeL,
		function ($) {
			return $.gt;
		},
		func);
};
var $terezka$line_charts$Internal$Axis$viewVerticalAxisLine = F3(
	function (system, axisPosition, config) {
		return A5(
			$terezka$line_charts$Internal$Svg$vertical,
			system,
			A2($terezka$line_charts$Internal$Axis$attributesLine, system, config),
			axisPosition,
			config.f7,
			config.hb);
	});
var $terezka$line_charts$Internal$Axis$viewVerticalLabel = F4(
	function (system, _v0, position, view) {
		var direction = _v0.g3;
		var length = _v0.hN;
		var xOffset = $terezka$line_charts$Internal$Axis$Tick$isPositive(direction) ? (5 + length) : ((-5) - length);
		var anchor = $terezka$line_charts$Internal$Axis$Tick$isPositive(direction) ? 0 : 2;
		return A2(
			$elm$svg$Svg$g,
			_List_fromArray(
				[
					$terezka$line_charts$Internal$Svg$transform(
					_List_fromArray(
						[
							A3($terezka$line_charts$Internal$Svg$move, system, position.gt, position.nt),
							A2($terezka$line_charts$Internal$Svg$offset, xOffset, 5)
						])),
					$terezka$line_charts$Internal$Svg$anchorStyle(anchor)
				]),
			_List_fromArray(
				[view]));
	});
var $terezka$line_charts$Internal$Svg$yTick = F5(
	function (system, width, userAttributes, x, y) {
		var attributes = A3(
			$terezka$line_charts$Internal$Utils$concat,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$class('chart__tick'),
					$elm$svg$Svg$Attributes$stroke(
					$avh4$elm_color$Color$toCssString($terezka$line_charts$LineChart$Colors$gray))
				]),
			userAttributes,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$x1(
					$elm$core$String$fromFloat(
						A2($terezka$line_charts$LineChart$Coordinate$toSvgX, system, x))),
					$elm$svg$Svg$Attributes$x2(
					$elm$core$String$fromFloat(
						A2($terezka$line_charts$LineChart$Coordinate$toSvgX, system, x) - width)),
					$elm$svg$Svg$Attributes$y1(
					$elm$core$String$fromFloat(
						A2($terezka$line_charts$LineChart$Coordinate$toSvgY, system, y))),
					$elm$svg$Svg$Attributes$y2(
					$elm$core$String$fromFloat(
						A2($terezka$line_charts$LineChart$Coordinate$toSvgY, system, y)))
				]));
		return A2($elm$svg$Svg$line, attributes, _List_Nil);
	});
var $terezka$line_charts$Internal$Axis$viewVerticalTick = F3(
	function (system, point, tick) {
		var x = point.gt;
		var y = point.nt;
		return A2(
			$elm$svg$Svg$g,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$class('chart__tick')
				]),
			_List_fromArray(
				[
					A5(
					$terezka$line_charts$Internal$Svg$yTick,
					system,
					$terezka$line_charts$Internal$Axis$lengthOfTick(tick),
					$terezka$line_charts$Internal$Axis$attributesTick(tick),
					x,
					y),
					A2(
					$terezka$line_charts$Internal$Utils$viewMaybe,
					tick.hL,
					A3($terezka$line_charts$Internal$Axis$viewVerticalLabel, system, tick, point))
				]));
	});
var $terezka$line_charts$Internal$Axis$viewVerticalTitle = F3(
	function (system, at, _v0) {
		var title = _v0.er;
		var position = at(
			A2(title.im, system.gv, system.nt));
		var _v1 = title.lG;
		var xOffset = _v1.a;
		var yOffset = _v1.b;
		return A2(
			$elm$svg$Svg$g,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$class('chart__title'),
					$terezka$line_charts$Internal$Svg$transform(
					_List_fromArray(
						[
							A3($terezka$line_charts$Internal$Svg$move, system, position.gt, position.nt),
							A2($terezka$line_charts$Internal$Svg$offset, xOffset + 2, yOffset - 10)
						])),
					$terezka$line_charts$Internal$Svg$anchorStyle(2)
				]),
			_List_fromArray(
				[title.i_]));
	});
var $terezka$line_charts$Internal$Axis$viewVertical = F3(
	function (system, intersection, _v0) {
		var config = _v0;
		var viewConfig = {
			hD: A2($terezka$line_charts$Internal$Axis$Intersection$getX, intersection, system),
			hR: A3($terezka$line_charts$Internal$Axis$Line$config, config.eC, system.gv, system.nt),
			gb: A3($terezka$line_charts$Internal$Axis$Ticks$ticks, system.gv, system.nt, config.gb),
			er: $terezka$line_charts$Internal$Axis$Title$config(config.er)
		};
		var viewAxisLine = A2($terezka$line_charts$Internal$Axis$viewVerticalAxisLine, system, viewConfig.hD);
		var at = function (y) {
			return {gt: viewConfig.hD, nt: y};
		};
		var viewTick = function (tick) {
			return A3(
				$terezka$line_charts$Internal$Axis$viewVerticalTick,
				system,
				at(tick.im),
				tick);
		};
		return A2(
			$elm$svg$Svg$g,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$class('chart__axis--vertical')
				]),
			_List_fromArray(
				[
					A3($terezka$line_charts$Internal$Axis$viewVerticalTitle, system, at, viewConfig),
					viewAxisLine(viewConfig.hR),
					A2(
					$elm$svg$Svg$g,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$class('chart__ticks')
						]),
					A2($elm$core$List$map, viewTick, viewConfig.gb))
				]));
	});
var $terezka$line_charts$LineChart$viewCustom = F2(
	function (config, lines) {
		var junkLineInfo = function (line_) {
			return _Utils_Tuple3(
				A3($terezka$line_charts$Internal$Line$color, config.hR, line_, _List_Nil),
				$terezka$line_charts$Internal$Line$label(line_),
				$terezka$line_charts$Internal$Line$data(line_));
		};
		var getJunk = A3(
			$terezka$line_charts$Internal$Junk$getLayers,
			A2($elm$core$List$map, junkLineInfo, lines),
			$terezka$line_charts$Internal$Axis$variable(config.gt),
			$terezka$line_charts$Internal$Axis$variable(config.nt));
		var data = A2($terezka$line_charts$LineChart$toDataPoints, config, lines);
		var dataAll = $elm$core$List$concat(data);
		var dataSafe = A2(
			$elm$core$List$map,
			$elm$core$List$filter(
				function ($) {
					return $.k8;
				}),
			data);
		var dataAllSafe = $elm$core$List$concat(dataSafe);
		var system = A2($terezka$line_charts$LineChart$toSystem, config, dataAllSafe);
		var viewLines = $terezka$line_charts$Internal$Line$view(
			{gJ: config.gJ, g6: config.g5, hC: config.hC, hS: config.hR, iQ: system});
		var viewLegends = $terezka$line_charts$Internal$Legends$view(
			{
				gJ: config.gJ,
				eN: dataSafe,
				g6: config.g5,
				hM: config.hM,
				hS: config.hR,
				fm: lines,
				iQ: system,
				gt: $terezka$line_charts$Internal$Axis$variable(config.gt),
				nt: $terezka$line_charts$Internal$Axis$variable(config.nt)
			});
		var attributes = $elm$core$List$concat(
			_List_fromArray(
				[
					A2(
					$terezka$line_charts$Internal$Container$properties,
					function ($) {
						return $.dM;
					},
					config.gS),
					A3($terezka$line_charts$Internal$Events$toContainerAttributes, dataAll, system, config.kz),
					_List_fromArray(
					[
						$terezka$line_charts$LineChart$viewBoxAttribute(system)
					])
				]));
		var addGrid = $terezka$line_charts$Internal$Junk$addBelow(
			A4($terezka$line_charts$Internal$Grid$view, system, config.gt, config.nt, config.d4));
		var junk = addGrid(
			A2(getJunk, system, config.hJ));
		return A4(
			$terezka$line_charts$LineChart$container,
			config,
			system,
			junk.kT,
			A2(
				$elm$svg$Svg$svg,
				attributes,
				_List_fromArray(
					[
						A2(
						$elm$svg$Svg$defs,
						_List_Nil,
						_List_fromArray(
							[
								$terezka$line_charts$LineChart$clipPath(system)
							])),
						A2(
						$elm$svg$Svg$g,
						_List_fromArray(
							[
								$elm$svg$Svg$Attributes$class('chart__junk--below')
							]),
						junk.jA),
						A2(viewLines, lines, data),
						A3($terezka$line_charts$LineChart$chartAreaPlatform, config, dataAll, system),
						A3($terezka$line_charts$Internal$Axis$viewHorizontal, system, config.hD, config.gt),
						A3($terezka$line_charts$Internal$Axis$viewVertical, system, config.hD, config.nt),
						viewLegends,
						A2(
						$elm$svg$Svg$g,
						_List_fromArray(
							[
								$elm$svg$Svg$Attributes$class('chart__junk--above')
							]),
						junk.jd)
					])));
	});
var $terezka$line_charts$LineChart$Junk$move = $terezka$line_charts$Internal$Svg$move;
var $terezka$line_charts$LineChart$Junk$offset = $terezka$line_charts$Internal$Svg$offset;
var $terezka$line_charts$LineChart$Junk$transform = $terezka$line_charts$Internal$Svg$transform;
var $author$project$Page$Trends$viewLabel = function (label) {
	return A2(
		$elm$svg$Svg$g,
		_List_fromArray(
			[
				$terezka$line_charts$LineChart$Junk$transform(
				_List_fromArray(
					[
						A2($terezka$line_charts$LineChart$Junk$offset, 40, 4)
					]))
			]),
		_List_fromArray(
			[
				A2($terezka$line_charts$LineChart$Junk$label, $avh4$elm_color$Color$black, label)
			]));
};
var $author$project$Page$Trends$viewLegend = F2(
	function (index, _v0) {
		var sample = _v0.mi;
		var label = _v0.hL;
		return A2(
			$elm$svg$Svg$g,
			_List_fromArray(
				[
					$terezka$line_charts$LineChart$Junk$transform(
					_List_fromArray(
						[
							A2($terezka$line_charts$LineChart$Junk$offset, 20, index * 14)
						]))
				]),
			_List_fromArray(
				[
					sample,
					$author$project$Page$Trends$viewLabel(label)
				]));
	});
var $author$project$Page$Trends$viewLegends = F2(
	function (system, legends) {
		return A2(
			$elm$svg$Svg$g,
			_List_fromArray(
				[
					$terezka$line_charts$LineChart$Junk$transform(
					_List_fromArray(
						[
							A3($terezka$line_charts$LineChart$Junk$move, system, system.gt.hV, system.nt.hV),
							A2($terezka$line_charts$LineChart$Junk$offset, -240, 20)
						]))
				]),
			A2($elm$core$List$indexedMap, $author$project$Page$Trends$viewLegend, legends));
	});
var $author$project$Page$Trends$amountAwardedChart = F2(
	function (model, amountAwardedHistory) {
		return A2(
			$mdgriffith$elm_ui$Element$column,
			_List_fromArray(
				[$mdgriffith$elm_ui$Element$centerX]),
			_List_fromArray(
				[
					A2(
					$mdgriffith$elm_ui$Element$paragraph,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$Region$heading(1),
							$mdgriffith$elm_ui$Element$Font$size(20),
							$mdgriffith$elm_ui$Element$Font$bold,
							$mdgriffith$elm_ui$Element$Font$center
						]),
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$text('Amount awarded in fees to plaintiffs')
						])),
					A2(
					$mdgriffith$elm_ui$Element$row,
					_List_Nil,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$html(
							A2(
								$terezka$line_charts$LineChart$viewCustom,
								{
									gJ: $terezka$line_charts$LineChart$Area$default,
									gS: A2(
										$terezka$line_charts$LineChart$Container$styled,
										'line-chart-2',
										_List_fromArray(
											[
												_Utils_Tuple2('font-family', 'monospace')
											])),
									g5: $terezka$line_charts$LineChart$Dots$hoverMany(model.dc),
									kz: $terezka$line_charts$LineChart$Events$hoverMany($author$project$Page$Trends$HoverAmounts),
									d4: $terezka$line_charts$LineChart$Grid$default,
									hC: $terezka$line_charts$LineChart$Interpolation$default,
									hD: $terezka$line_charts$LineChart$Axis$Intersection$default,
									hJ: A3($terezka$line_charts$LineChart$Junk$hoverMany, model.dc, $author$project$Page$Trends$formatXAmounts, $author$project$Page$Trends$formatYAmounts),
									hM: A2($terezka$line_charts$LineChart$Legends$groupedCustom, 30, $author$project$Page$Trends$viewLegends),
									hR: $terezka$line_charts$LineChart$Line$default,
									gt: $author$project$Page$Trends$amountsXAxisConfig,
									nt: $terezka$line_charts$LineChart$Axis$custom(
										{
											eC: $terezka$line_charts$LineChart$Axis$Line$full($avh4$elm_color$Color$black),
											fN: 600,
											fQ: A2($terezka$line_charts$LineChart$Axis$Range$padded, 20, 20),
											gb: A2(
												$terezka$line_charts$LineChart$Axis$Ticks$floatCustom,
												7,
												function (number) {
													return $terezka$line_charts$LineChart$Axis$Tick$custom(
														{
															eL: $avh4$elm_color$Color$black,
															g3: $terezka$line_charts$LineChart$Axis$Tick$positive,
															d4: true,
															hL: $elm$core$Maybe$Just(
																A2(
																	$terezka$line_charts$LineChart$Junk$label,
																	$avh4$elm_color$Color$black,
																	$author$project$Page$Trends$formatDollars(number))),
															hN: 7,
															im: number,
															i5: 1
														});
												}),
											er: $terezka$line_charts$LineChart$Axis$Title$default('Awards'),
											gj: A2(
												$elm$core$Basics$composeL,
												A2($elm$core$Basics$composeL, $elm$core$Maybe$Just, $elm$core$Basics$toFloat),
												function ($) {
													return $.ge;
												})
										})
								},
								$author$project$Page$Trends$amountAwardedLines(amountAwardedHistory)))
						]))
				]));
	});
var $author$project$Page$Trends$Hover = function (a) {
	return {$: 5, a: a};
};
var $terezka$line_charts$Internal$Axis$Title$atDataMax = function () {
	var position = F2(
		function (data, range) {
			return A2($elm$core$Basics$min, data.hV, range.hV);
		});
	return $terezka$line_charts$Internal$Axis$Title$atPosition(position);
}();
var $terezka$line_charts$Internal$Axis$Tick$float = function (n) {
	return $terezka$line_charts$Internal$Axis$Tick$custom(
		{
			eL: $terezka$line_charts$LineChart$Colors$gray,
			g3: 0,
			d4: true,
			hL: $elm$core$Maybe$Just(
				A2(
					$terezka$line_charts$Internal$Svg$label,
					'inherit',
					$elm$core$String$fromFloat(n))),
			hN: 5,
			im: n,
			i5: 1
		});
};
var $terezka$line_charts$LineChart$Axis$Tick$float = $terezka$line_charts$Internal$Axis$Tick$float;
var $terezka$line_charts$Internal$Axis$Line$rangeFrame = function (color) {
	return $terezka$line_charts$Internal$Axis$Line$custom(
		F2(
			function (data, range) {
				var smallest = A2($terezka$line_charts$Internal$Coordinate$smallestRange, data, range);
				return {eL: color, hb: smallest.hV, kz: _List_Nil, f7: smallest.fp, i5: 1};
			}));
};
var $terezka$line_charts$Internal$Axis$default = F3(
	function (pixels_, title_, variable_) {
		return $terezka$line_charts$Internal$Axis$custom(
			{
				eC: $terezka$line_charts$Internal$Axis$Line$rangeFrame($terezka$line_charts$LineChart$Colors$gray),
				fN: pixels_,
				fQ: A2($terezka$line_charts$Internal$Axis$Range$padded, 20, 20),
				gb: $terezka$line_charts$Internal$Axis$Ticks$custom(
					F2(
						function (data, range_) {
							var smallest = A2($terezka$line_charts$Internal$Coordinate$smallestRange, data, range_);
							var rangeSmall = smallest.hV - smallest.fp;
							var rangeLong = range_.hV - range_.fp;
							var diff = 1 - ((rangeLong - rangeSmall) / rangeLong);
							var amount = $elm$core$Basics$round((diff * pixels_) / 90);
							return A2(
								$elm$core$List$map,
								$terezka$line_charts$LineChart$Axis$Tick$float,
								A2(
									$terezka$line_charts$Internal$Axis$Values$float,
									$terezka$line_charts$Internal$Axis$Values$around(amount),
									smallest));
						})),
				er: A3($terezka$line_charts$Internal$Axis$Title$atDataMax, 0, 0, title_),
				gj: A2($elm$core$Basics$composeL, $elm$core$Maybe$Just, variable_)
			});
	});
var $terezka$line_charts$LineChart$Axis$default = $terezka$line_charts$Internal$Axis$default;
var $author$project$Page$Trends$formatX = function (info) {
	return 'Month: ' + $author$project$Page$Trends$dateFormat(
		$elm$time$Time$millisToPosix(
			$elm$core$Basics$round(info.gZ)));
};
var $author$project$Page$Trends$formatY = function (info) {
	return $elm$core$String$fromFloat(info.hd);
};
var $avh4$elm_color$Color$brown = A4($avh4$elm_color$Color$RgbaSpace, 193 / 255, 125 / 255, 17 / 255, 1.0);
var $avh4$elm_color$Color$darkBlue = A4($avh4$elm_color$Color$RgbaSpace, 32 / 255, 74 / 255, 135 / 255, 1.0);
var $avh4$elm_color$Color$darkGreen = A4($avh4$elm_color$Color$RgbaSpace, 78 / 255, 154 / 255, 6 / 255, 1.0);
var $avh4$elm_color$Color$darkGrey = A4($avh4$elm_color$Color$RgbaSpace, 186 / 255, 189 / 255, 182 / 255, 1.0);
var $avh4$elm_color$Color$lightBlue = A4($avh4$elm_color$Color$RgbaSpace, 114 / 255, 159 / 255, 207 / 255, 1.0);
var $avh4$elm_color$Color$orange = A4($avh4$elm_color$Color$RgbaSpace, 245 / 255, 121 / 255, 0 / 255, 1.0);
var $avh4$elm_color$Color$purple = A4($avh4$elm_color$Color$RgbaSpace, 117 / 255, 80 / 255, 123 / 255, 1.0);
var $author$project$Page$Trends$viewTopEvictorLine = F2(
	function (toLine, evictor) {
		return A2(toLine, evictor.h1, evictor.kP);
	});
var $avh4$elm_color$Color$yellow = A4($avh4$elm_color$Color$RgbaSpace, 237 / 255, 212 / 255, 0 / 255, 1.0);
var $author$project$Page$Trends$lines = function (topEvictors) {
	var shapes = _List_fromArray(
		[$terezka$line_charts$LineChart$Dots$triangle, $terezka$line_charts$LineChart$Dots$circle, $terezka$line_charts$LineChart$Dots$diamond, $terezka$line_charts$LineChart$Dots$square]);
	var shape = function (index) {
		return A2(
			$elm$core$Maybe$withDefault,
			$terezka$line_charts$LineChart$Dots$triangle,
			$elm$core$List$head(
				A2($elm$core$List$drop, index, shapes)));
	};
	var colors = _List_fromArray(
		[$avh4$elm_color$Color$orange, $avh4$elm_color$Color$yellow, $avh4$elm_color$Color$purple, $avh4$elm_color$Color$red, $avh4$elm_color$Color$darkBlue, $avh4$elm_color$Color$lightBlue, $avh4$elm_color$Color$darkGreen, $avh4$elm_color$Color$darkGrey, $avh4$elm_color$Color$lightGreen, $avh4$elm_color$Color$brown]);
	var color = function (index) {
		return A2(
			$elm$core$Maybe$withDefault,
			$avh4$elm_color$Color$red,
			$elm$core$List$head(
				A2($elm$core$List$drop, index, colors)));
	};
	return A2(
		$elm$core$List$indexedMap,
		F2(
			function (index, evictor) {
				return A2(
					$author$project$Page$Trends$viewTopEvictorLine,
					A2(
						$terezka$line_charts$LineChart$line,
						color(index),
						shape(index)),
					evictor);
			}),
		topEvictors);
};
var $author$project$Page$Trends$xAxisConfig = $terezka$line_charts$LineChart$Axis$custom(
	{
		eC: $terezka$line_charts$LineChart$Axis$Line$full($avh4$elm_color$Color$black),
		fN: 1000,
		fQ: A2($terezka$line_charts$LineChart$Axis$Range$padded, 20, 20),
		gb: $author$project$Page$Trends$ticksConfig,
		er: $terezka$line_charts$LineChart$Axis$Title$default('Month'),
		gj: A2(
			$elm$core$Basics$composeL,
			$elm$core$Maybe$Just,
			function ($) {
				return $.gZ;
			})
	});
var $author$project$Page$Trends$chart = function (model) {
	return A2(
		$mdgriffith$elm_ui$Element$column,
		_List_fromArray(
			[$mdgriffith$elm_ui$Element$centerX]),
		_List_fromArray(
			[
				A2(
				$mdgriffith$elm_ui$Element$paragraph,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$Region$heading(1),
						$mdgriffith$elm_ui$Element$Font$size(20),
						$mdgriffith$elm_ui$Element$Font$bold,
						$mdgriffith$elm_ui$Element$Font$center
					]),
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$text('Top 10 Evictors in Davidson Co. TN by month')
					])),
				A2(
				$mdgriffith$elm_ui$Element$row,
				_List_Nil,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$html(
						A2(
							$terezka$line_charts$LineChart$viewCustom,
							{
								gJ: $terezka$line_charts$LineChart$Area$default,
								gS: A2(
									$terezka$line_charts$LineChart$Container$styled,
									'line-chart-1',
									_List_fromArray(
										[
											_Utils_Tuple2('font-family', 'monospace')
										])),
								g5: $terezka$line_charts$LineChart$Dots$hoverMany(model.kS),
								kz: $terezka$line_charts$LineChart$Events$hoverMany($author$project$Page$Trends$Hover),
								d4: $terezka$line_charts$LineChart$Grid$default,
								hC: $terezka$line_charts$LineChart$Interpolation$default,
								hD: $terezka$line_charts$LineChart$Axis$Intersection$default,
								hJ: A3($terezka$line_charts$LineChart$Junk$hoverMany, model.kS, $author$project$Page$Trends$formatX, $author$project$Page$Trends$formatY),
								hM: A2($terezka$line_charts$LineChart$Legends$groupedCustom, 30, $author$project$Page$Trends$viewLegends),
								hR: $terezka$line_charts$LineChart$Line$default,
								gt: $author$project$Page$Trends$xAxisConfig,
								nt: A3(
									$terezka$line_charts$LineChart$Axis$default,
									600,
									'Evictions',
									function ($) {
										return $.hd;
									})
							},
							$author$project$Page$Trends$lines(model.es)))
					]))
			]));
};
var $ryannhg$date_format$DateFormat$DayOfMonthNumber = {$: 5};
var $ryannhg$date_format$DateFormat$dayOfMonthNumber = $ryannhg$date_format$DateFormat$DayOfMonthNumber;
var $ryannhg$date_format$DateFormat$MonthNameFull = {$: 4};
var $ryannhg$date_format$DateFormat$monthNameFull = $ryannhg$date_format$DateFormat$MonthNameFull;
var $author$project$Page$Trends$dateFormatLong = A2(
	$ryannhg$date_format$DateFormat$format,
	_List_fromArray(
		[
			$ryannhg$date_format$DateFormat$monthNameFull,
			$ryannhg$date_format$DateFormat$text(' '),
			$ryannhg$date_format$DateFormat$dayOfMonthNumber,
			$ryannhg$date_format$DateFormat$text(', '),
			$ryannhg$date_format$DateFormat$yearNumber
		]),
	$elm$time$Time$utc);
var $elm_community$typed_svg$TypedSvg$Types$Translate = F2(
	function (a, b) {
		return {$: 5, a: a, b: b};
	});
var $elm_community$typed_svg$TypedSvg$Core$attribute = $elm$virtual_dom$VirtualDom$attribute;
var $elm_community$typed_svg$TypedSvg$Attributes$class = function (names) {
	return A2(
		$elm_community$typed_svg$TypedSvg$Core$attribute,
		'class',
		A2($elm$core$String$join, ' ', names));
};
var $elm_community$typed_svg$TypedSvg$Types$AnchorMiddle = 2;
var $gampleman$elm_visualization$Scale$bandwidth = function (_v0) {
	var scale = _v0;
	return scale.eD;
};
var $ryannhg$date_format$DateFormat$YearNumberLastTwo = {$: 15};
var $ryannhg$date_format$DateFormat$yearNumberLastTwo = $ryannhg$date_format$DateFormat$YearNumberLastTwo;
var $author$project$Page$Trends$barDateFormat = A2(
	$ryannhg$date_format$DateFormat$format,
	_List_fromArray(
		[
			$ryannhg$date_format$DateFormat$monthNameAbbreviated,
			$ryannhg$date_format$DateFormat$text(' '),
			$ryannhg$date_format$DateFormat$yearNumberLastTwo
		]),
	$elm$time$Time$utc);
var $gampleman$elm_visualization$Scale$convert = F2(
	function (_v0, value) {
		var scale = _v0;
		return A3(scale.Q, scale.eV, scale.fQ, value);
	});
var $elm$virtual_dom$VirtualDom$nodeNS = function (tag) {
	return _VirtualDom_nodeNS(
		_VirtualDom_noScript(tag));
};
var $elm_community$typed_svg$TypedSvg$Core$node = $elm$virtual_dom$VirtualDom$nodeNS('http://www.w3.org/2000/svg');
var $elm_community$typed_svg$TypedSvg$g = $elm_community$typed_svg$TypedSvg$Core$node('g');
var $author$project$Page$Trends$h = 600;
var $elm_community$typed_svg$TypedSvg$TypesToStrings$lengthToString = function (length) {
	switch (length.$) {
		case 0:
			var x = length.a;
			return $elm$core$String$fromFloat(x) + 'cm';
		case 1:
			var x = length.a;
			return $elm$core$String$fromFloat(x) + 'em';
		case 2:
			var x = length.a;
			return $elm$core$String$fromFloat(x) + 'ex';
		case 3:
			var x = length.a;
			return $elm$core$String$fromFloat(x) + 'in';
		case 4:
			var x = length.a;
			return $elm$core$String$fromFloat(x) + 'mm';
		case 5:
			var x = length.a;
			return $elm$core$String$fromFloat(x);
		case 6:
			var x = length.a;
			return $elm$core$String$fromFloat(x) + 'pc';
		case 7:
			var x = length.a;
			return $elm$core$String$fromFloat(x) + '%';
		case 8:
			var x = length.a;
			return $elm$core$String$fromFloat(x) + 'pt';
		case 9:
			var x = length.a;
			return $elm$core$String$fromFloat(x) + 'px';
		default:
			var x = length.a;
			return $elm$core$String$fromFloat(x) + 'rem';
	}
};
var $elm_community$typed_svg$TypedSvg$Attributes$height = function (length) {
	return A2(
		$elm_community$typed_svg$TypedSvg$Core$attribute,
		'height',
		$elm_community$typed_svg$TypedSvg$TypesToStrings$lengthToString(length));
};
var $elm_community$typed_svg$TypedSvg$Types$Px = function (a) {
	return {$: 9, a: a};
};
var $elm_community$typed_svg$TypedSvg$Types$px = $elm_community$typed_svg$TypedSvg$Types$Px;
var $elm_community$typed_svg$TypedSvg$Attributes$InPx$height = function (value) {
	return $elm_community$typed_svg$TypedSvg$Attributes$height(
		$elm_community$typed_svg$TypedSvg$Types$px(value));
};
var $author$project$Page$Trends$padding = 30;
var $elm_community$typed_svg$TypedSvg$rect = $elm_community$typed_svg$TypedSvg$Core$node('rect');
var $elm_community$typed_svg$TypedSvg$Core$text = $elm$virtual_dom$VirtualDom$text;
var $elm_community$typed_svg$TypedSvg$TypesToStrings$anchorAlignmentToString = function (anchorAlignment) {
	switch (anchorAlignment) {
		case 0:
			return 'inherit';
		case 1:
			return 'start';
		case 2:
			return 'middle';
		default:
			return 'end';
	}
};
var $elm_community$typed_svg$TypedSvg$Attributes$textAnchor = function (anchorAlignment) {
	return A2(
		$elm_community$typed_svg$TypedSvg$Core$attribute,
		'text-anchor',
		$elm_community$typed_svg$TypedSvg$TypesToStrings$anchorAlignmentToString(anchorAlignment));
};
var $elm_community$typed_svg$TypedSvg$text_ = $elm_community$typed_svg$TypedSvg$Core$node('text');
var $gampleman$elm_visualization$Scale$Scale = $elm$core$Basics$identity;
var $gampleman$elm_visualization$Scale$toRenderable = F2(
	function (toString, _v0) {
		var scale = _v0;
		return {
			Q: F3(
				function (dmn, rng, value) {
					return A3(scale.Q, dmn, rng, value) + (A2($elm$core$Basics$max, scale.eD - 1, 0) / 2);
				}),
			eV: scale.eV,
			fQ: scale.fQ,
			co: F2(
				function (_v1, rng) {
					return rng;
				}),
			ga: F2(
				function (_v2, _v3) {
					return toString;
				}),
			gb: F2(
				function (dmn, _v4) {
					return dmn;
				})
		};
	});
var $elm_community$typed_svg$TypedSvg$Attributes$width = function (length) {
	return A2(
		$elm_community$typed_svg$TypedSvg$Core$attribute,
		'width',
		$elm_community$typed_svg$TypedSvg$TypesToStrings$lengthToString(length));
};
var $elm_community$typed_svg$TypedSvg$Attributes$InPx$width = function (value) {
	return $elm_community$typed_svg$TypedSvg$Attributes$width(
		$elm_community$typed_svg$TypedSvg$Types$px(value));
};
var $elm_community$typed_svg$TypedSvg$Attributes$x = function (length) {
	return A2(
		$elm_community$typed_svg$TypedSvg$Core$attribute,
		'x',
		$elm_community$typed_svg$TypedSvg$TypesToStrings$lengthToString(length));
};
var $elm_community$typed_svg$TypedSvg$Attributes$InPx$x = function (value) {
	return $elm_community$typed_svg$TypedSvg$Attributes$x(
		$elm_community$typed_svg$TypedSvg$Types$px(value));
};
var $elm_community$typed_svg$TypedSvg$Attributes$y = function (length) {
	return A2(
		$elm_community$typed_svg$TypedSvg$Core$attribute,
		'y',
		$elm_community$typed_svg$TypedSvg$TypesToStrings$lengthToString(length));
};
var $elm_community$typed_svg$TypedSvg$Attributes$InPx$y = function (value) {
	return $elm_community$typed_svg$TypedSvg$Attributes$y(
		$elm_community$typed_svg$TypedSvg$Types$px(value));
};
var $gampleman$elm_visualization$Scale$Internal$bimap = F4(
	function (_v0, _v1, deinterpolate, reinterpolate) {
		var d0 = _v0.a;
		var d1 = _v0.b;
		var r0 = _v1.a;
		var r1 = _v1.b;
		var _v2 = (_Utils_cmp(d1, d0) < 0) ? _Utils_Tuple2(
			A2(deinterpolate, d1, d0),
			A2(reinterpolate, r1, r0)) : _Utils_Tuple2(
			A2(deinterpolate, d0, d1),
			A2(reinterpolate, r0, r1));
		var de = _v2.a;
		var re = _v2.b;
		return A2($elm$core$Basics$composeL, re, de);
	});
var $gampleman$elm_visualization$Scale$Linear$deinterpolate = F3(
	function (a, b, x) {
		var normalizedB = b - a;
		return (!normalizedB) ? 0 : ((x - a) / normalizedB);
	});
var $gampleman$elm_visualization$Scale$Internal$interpolateFloat = F3(
	function (from, to, time) {
		return from + ((to - from) * time);
	});
var $gampleman$elm_visualization$Scale$Linear$convert = F2(
	function (domain, range) {
		return A4($gampleman$elm_visualization$Scale$Internal$bimap, domain, range, $gampleman$elm_visualization$Scale$Linear$deinterpolate, $gampleman$elm_visualization$Scale$Internal$interpolateFloat);
	});
var $gampleman$elm_visualization$Scale$Linear$interpolate = $gampleman$elm_visualization$Scale$Internal$interpolateFloat;
var $gampleman$elm_visualization$Scale$Linear$invert = F2(
	function (domain, range) {
		return A4($gampleman$elm_visualization$Scale$Internal$bimap, range, domain, $gampleman$elm_visualization$Scale$Linear$deinterpolate, $gampleman$elm_visualization$Scale$Linear$interpolate);
	});
var $gampleman$elm_visualization$Statistics$tickStep = F3(
	function (start, stop, count) {
		var step0 = $elm$core$Basics$abs(stop - start) / A2($elm$core$Basics$max, 0, count);
		var step1 = A2(
			$elm$core$Basics$pow,
			10,
			$elm$core$Basics$floor(
				A2($elm$core$Basics$logBase, $elm$core$Basics$e, step0) / A2($elm$core$Basics$logBase, $elm$core$Basics$e, 10)));
		var error = step0 / step1;
		var step2 = (_Utils_cmp(
			error,
			$elm$core$Basics$sqrt(50)) > -1) ? (step1 * 10) : ((_Utils_cmp(
			error,
			$elm$core$Basics$sqrt(10)) > -1) ? (step1 * 5) : ((_Utils_cmp(
			error,
			$elm$core$Basics$sqrt(2)) > -1) ? (step1 * 2) : step1));
		return (_Utils_cmp(stop, start) < 0) ? (-step2) : step2;
	});
var $gampleman$elm_visualization$Scale$Linear$nice = F2(
	function (_v0, count) {
		var start = _v0.a;
		var stop = _v0.b;
		var step0 = A3($gampleman$elm_visualization$Statistics$tickStep, start, stop, count);
		var step1 = A3(
			$gampleman$elm_visualization$Statistics$tickStep,
			$elm$core$Basics$floor(start / step0) * step0,
			$elm$core$Basics$ceiling(stop / step0) * step0,
			count);
		return _Utils_Tuple2(
			$elm$core$Basics$floor(start / step1) * step1,
			$elm$core$Basics$ceiling(stop / step1) * step1);
	});
var $gampleman$elm_visualization$Scale$Linear$rangeExtent = F2(
	function (d, r) {
		return r;
	});
var $gampleman$elm_visualization$Scale$Linear$exponent = function (x) {
	return (!x) ? 0 : ((x < 1) ? (1 + $gampleman$elm_visualization$Scale$Linear$exponent(x * 10)) : 0);
};
var $gampleman$elm_visualization$Scale$Linear$precisionFixed = function (step) {
	return A2(
		$elm$core$Basics$max,
		0,
		$gampleman$elm_visualization$Scale$Linear$exponent(
			$elm$core$Basics$abs(step)));
};
var $gampleman$elm_visualization$Scale$Internal$toFixed = F2(
	function (precision, value) {
		var power = A2($elm$core$Basics$pow, 10, precision);
		var pad = function (num) {
			_v0$2:
			while (true) {
				if (num.b) {
					if (num.b.b) {
						if (!num.b.b.b) {
							var x = num.a;
							var _v1 = num.b;
							var y = _v1.a;
							return _List_fromArray(
								[
									x,
									A3($elm$core$String$padRight, precision, '0', y)
								]);
						} else {
							break _v0$2;
						}
					} else {
						var val = num.a;
						return (precision > 0) ? _List_fromArray(
							[
								val,
								A3($elm$core$String$padRight, precision, '0', '')
							]) : _List_fromArray(
							[val]);
					}
				} else {
					break _v0$2;
				}
			}
			var val = num;
			return val;
		};
		return A2(
			$elm$core$String$join,
			'.',
			pad(
				A2(
					$elm$core$String$split,
					'.',
					$elm$core$String$fromFloat(
						$elm$core$Basics$round(value * power) / power))));
	});
var $gampleman$elm_visualization$Scale$Linear$tickFormat = F2(
	function (_v0, count) {
		var start = _v0.a;
		var stop = _v0.b;
		return $gampleman$elm_visualization$Scale$Internal$toFixed(
			$gampleman$elm_visualization$Scale$Linear$precisionFixed(
				A3($gampleman$elm_visualization$Statistics$tickStep, start, stop, count)));
	});
var $gampleman$elm_visualization$Statistics$range = F3(
	function (start, stop, step) {
		var n = A2(
			$elm$core$Basics$max,
			0,
			0 | $elm$core$Basics$ceiling((stop - start) / step));
		var helper = F2(
			function (i, list) {
				return (i >= 0) ? A2(
					helper,
					i - 1,
					A2($elm$core$List$cons, start + (step * i), list)) : list;
			});
		return A2(helper, n - 1, _List_Nil);
	});
var $gampleman$elm_visualization$Statistics$ticks = F3(
	function (start, stop, count) {
		var step = A3($gampleman$elm_visualization$Statistics$tickStep, start, stop, count);
		var end = ($elm$core$Basics$floor(stop / step) * step) + (step / 2);
		var beg = $elm$core$Basics$ceiling(start / step) * step;
		return A3($gampleman$elm_visualization$Statistics$range, beg, end, step);
	});
var $gampleman$elm_visualization$Scale$Linear$ticks = F2(
	function (_v0, count) {
		var start = _v0.a;
		var end = _v0.b;
		return A3($gampleman$elm_visualization$Statistics$ticks, start, end, count);
	});
var $gampleman$elm_visualization$Scale$linear = F2(
	function (range_, domain_) {
		return {Q: $gampleman$elm_visualization$Scale$Linear$convert, eV: domain_, d7: $gampleman$elm_visualization$Scale$Linear$invert, dh: $gampleman$elm_visualization$Scale$Linear$nice, fQ: range_, co: $gampleman$elm_visualization$Scale$Linear$rangeExtent, ga: $gampleman$elm_visualization$Scale$Linear$tickFormat, gb: $gampleman$elm_visualization$Scale$Linear$ticks};
	});
var $author$project$Page$Trends$yScale = A2(
	$gampleman$elm_visualization$Scale$linear,
	_Utils_Tuple2($author$project$Page$Trends$h - (2 * $author$project$Page$Trends$padding), 0),
	_Utils_Tuple2(0, 800));
var $author$project$Page$Trends$column = F2(
	function (scale, _v0) {
		var time = _v0.aJ;
		var total = _v0.et;
		return A2(
			$elm_community$typed_svg$TypedSvg$g,
			_List_fromArray(
				[
					$elm_community$typed_svg$TypedSvg$Attributes$class(
					_List_fromArray(
						['column']))
				]),
			_List_fromArray(
				[
					A2(
					$elm_community$typed_svg$TypedSvg$rect,
					_List_fromArray(
						[
							$elm_community$typed_svg$TypedSvg$Attributes$InPx$x(
							A2($gampleman$elm_visualization$Scale$convert, scale, time)),
							$elm_community$typed_svg$TypedSvg$Attributes$InPx$y(
							A2($gampleman$elm_visualization$Scale$convert, $author$project$Page$Trends$yScale, total)),
							$elm_community$typed_svg$TypedSvg$Attributes$InPx$width(
							$gampleman$elm_visualization$Scale$bandwidth(scale)),
							$elm_community$typed_svg$TypedSvg$Attributes$InPx$height(
							($author$project$Page$Trends$h - A2($gampleman$elm_visualization$Scale$convert, $author$project$Page$Trends$yScale, total)) - (2 * $author$project$Page$Trends$padding))
						]),
					_List_Nil),
					A2(
					$elm_community$typed_svg$TypedSvg$text_,
					_List_fromArray(
						[
							$elm_community$typed_svg$TypedSvg$Attributes$InPx$x(
							A2(
								$gampleman$elm_visualization$Scale$convert,
								A2($gampleman$elm_visualization$Scale$toRenderable, $author$project$Page$Trends$barDateFormat, scale),
								time)),
							$elm_community$typed_svg$TypedSvg$Attributes$InPx$y(
							A2($gampleman$elm_visualization$Scale$convert, $author$project$Page$Trends$yScale, total) - 5),
							$elm_community$typed_svg$TypedSvg$Attributes$textAnchor(2)
						]),
					_List_fromArray(
						[
							$elm_community$typed_svg$TypedSvg$Core$text(
							$elm$core$String$fromInt(total))
						]))
				]));
	});
var $elm_community$typed_svg$TypedSvg$style = $elm_community$typed_svg$TypedSvg$Core$node('style');
var $elm_community$typed_svg$TypedSvg$svg = $elm_community$typed_svg$TypedSvg$Core$node('svg');
var $elm_community$typed_svg$TypedSvg$TypesToStrings$transformToString = function (xform) {
	var tr = F2(
		function (name, args) {
			return $elm$core$String$concat(
				_List_fromArray(
					[
						name,
						'(',
						A2(
						$elm$core$String$join,
						' ',
						A2($elm$core$List$map, $elm$core$String$fromFloat, args)),
						')'
					]));
		});
	switch (xform.$) {
		case 0:
			var a = xform.a;
			var b = xform.b;
			var c = xform.c;
			var d = xform.d;
			var e = xform.e;
			var f = xform.f;
			return A2(
				tr,
				'matrix',
				_List_fromArray(
					[a, b, c, d, e, f]));
		case 1:
			var a = xform.a;
			var x = xform.b;
			var y = xform.c;
			return A2(
				tr,
				'rotate',
				_List_fromArray(
					[a, x, y]));
		case 2:
			var x = xform.a;
			var y = xform.b;
			return A2(
				tr,
				'scale',
				_List_fromArray(
					[x, y]));
		case 3:
			var x = xform.a;
			return A2(
				tr,
				'skewX',
				_List_fromArray(
					[x]));
		case 4:
			var y = xform.a;
			return A2(
				tr,
				'skewY',
				_List_fromArray(
					[y]));
		default:
			var x = xform.a;
			var y = xform.b;
			return A2(
				tr,
				'translate',
				_List_fromArray(
					[x, y]));
	}
};
var $elm_community$typed_svg$TypedSvg$Attributes$transform = function (transforms) {
	return A2(
		$elm_community$typed_svg$TypedSvg$Core$attribute,
		'transform',
		A2(
			$elm$core$String$join,
			' ',
			A2($elm$core$List$map, $elm_community$typed_svg$TypedSvg$TypesToStrings$transformToString, transforms)));
};
var $elm_community$typed_svg$TypedSvg$Attributes$viewBox = F4(
	function (minX, minY, vWidth, vHeight) {
		return A2(
			$elm_community$typed_svg$TypedSvg$Core$attribute,
			'viewBox',
			A2(
				$elm$core$String$join,
				' ',
				A2(
					$elm$core$List$map,
					$elm$core$String$fromFloat,
					_List_fromArray(
						[minX, minY, vWidth, vHeight]))));
	});
var $author$project$Page$Trends$w = 1000;
var $gampleman$elm_visualization$Scale$tickFormat = function (_v0) {
	var opts = _v0;
	return opts.ga(opts.eV);
};
var $gampleman$elm_visualization$Scale$ticks = F2(
	function (_v0, count) {
		var scale = _v0;
		return A2(scale.gb, scale.eV, count);
	});
var $gampleman$elm_visualization$Axis$computeOptions = F2(
	function (attrs, scale) {
		var _v0 = A3(
			$elm$core$List$foldl,
			F2(
				function (attr, _v1) {
					var babyOpts = _v1.a;
					var post = _v1.b;
					switch (attr.$) {
						case 2:
							var val = attr.a;
							return _Utils_Tuple2(
								_Utils_update(
									babyOpts,
									{cy: val}),
								post);
						case 3:
							var val = attr.a;
							return _Utils_Tuple2(
								_Utils_update(
									babyOpts,
									{cz: val}),
								post);
						case 4:
							var val = attr.a;
							return _Utils_Tuple2(
								_Utils_update(
									babyOpts,
									{a5: val}),
								post);
						case 5:
							var val = attr.a;
							return _Utils_Tuple2(
								_Utils_update(
									babyOpts,
									{dz: val}),
								post);
						default:
							return _Utils_Tuple2(
								babyOpts,
								A2($elm$core$List$cons, attr, post));
					}
				}),
			_Utils_Tuple2(
				{cy: 10, dz: 3, cz: 6, a5: 6},
				_List_Nil),
			attrs);
		var opts = _v0.a;
		var postList = _v0.b;
		return A3(
			$elm$core$List$foldl,
			F2(
				function (attr, options) {
					switch (attr.$) {
						case 0:
							var val = attr.a;
							return _Utils_update(
								options,
								{gb: val});
						case 1:
							var val = attr.a;
							return _Utils_update(
								options,
								{ga: val});
						default:
							return options;
					}
				}),
			{
				cy: opts.cy,
				ga: A2($gampleman$elm_visualization$Scale$tickFormat, scale, opts.cy),
				dz: opts.dz,
				cz: opts.cz,
				a5: opts.a5,
				gb: A2($gampleman$elm_visualization$Scale$ticks, scale, opts.cy)
			},
			postList);
	});
var $elm$svg$Svg$Attributes$dy = _VirtualDom_attribute('dy');
var $elm$svg$Svg$Attributes$fontFamily = _VirtualDom_attribute('font-family');
var $elm$svg$Svg$Attributes$fontSize = _VirtualDom_attribute('font-size');
var $gampleman$elm_visualization$Scale$rangeExtent = function (_v0) {
	var options = _v0;
	return A2(options.co, options.eV, options.fQ);
};
var $elm$svg$Svg$Attributes$textAnchor = _VirtualDom_attribute('text-anchor');
var $gampleman$elm_visualization$Axis$element = F4(
	function (_v0, k, displacement, textAnchorPosition) {
		var x = _v0.gt;
		var y = _v0.nt;
		var x1 = _v0.np;
		var x2 = _v0.nq;
		var y1 = _v0.nu;
		var y2 = _v0.nv;
		var translate = _v0.gf;
		var horizontal = _v0.e1;
		return F2(
			function (attrs, scale) {
				var rangeExtent = $gampleman$elm_visualization$Scale$rangeExtent(scale);
				var range1 = rangeExtent.b + 0.5;
				var range0 = rangeExtent.a + 0.5;
				var position = $gampleman$elm_visualization$Scale$convert(scale);
				var opts = A2($gampleman$elm_visualization$Axis$computeOptions, attrs, scale);
				var spacing = A2($elm$core$Basics$max, opts.cz, 0) + opts.dz;
				var drawTick = function (tick) {
					return A2(
						$elm$svg$Svg$g,
						_List_fromArray(
							[
								$elm$svg$Svg$Attributes$class('tick'),
								$elm$svg$Svg$Attributes$transform(
								translate(
									position(tick)))
							]),
						_List_fromArray(
							[
								A2(
								$elm$svg$Svg$line,
								_List_fromArray(
									[
										$elm$svg$Svg$Attributes$stroke('#000'),
										x2(k * opts.cz),
										y1(0.5),
										y2(0.5)
									]),
								_List_Nil),
								A2(
								$elm$svg$Svg$text_,
								_List_fromArray(
									[
										$elm$svg$Svg$Attributes$fill('#000'),
										x(k * spacing),
										y(0.5),
										$elm$svg$Svg$Attributes$dy(displacement)
									]),
								_List_fromArray(
									[
										$elm$svg$Svg$text(
										opts.ga(tick))
									]))
							]));
				};
				var domainLine = horizontal ? ('M' + ($elm$core$String$fromFloat(k * opts.a5) + (',' + ($elm$core$String$fromFloat(range0) + ('H0.5V' + ($elm$core$String$fromFloat(range1) + ('H' + $elm$core$String$fromFloat(k * opts.a5)))))))) : ('M' + ($elm$core$String$fromFloat(range0) + (',' + ($elm$core$String$fromFloat(k * opts.a5) + ('V0.5H' + ($elm$core$String$fromFloat(range1) + ('V' + $elm$core$String$fromFloat(k * opts.a5))))))));
				return A2(
					$elm$svg$Svg$g,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$fill('none'),
							$elm$svg$Svg$Attributes$fontSize('10'),
							$elm$svg$Svg$Attributes$fontFamily('sans-serif'),
							$elm$svg$Svg$Attributes$textAnchor(textAnchorPosition)
						]),
					A2(
						$elm$core$List$cons,
						A2(
							$elm$svg$Svg$path,
							_List_fromArray(
								[
									$elm$svg$Svg$Attributes$class('domain'),
									$elm$svg$Svg$Attributes$stroke('#000'),
									$elm$svg$Svg$Attributes$d(domainLine)
								]),
							_List_Nil),
						A2($elm$core$List$map, drawTick, opts.gb)));
			});
	});
var $gampleman$elm_visualization$Axis$verticalAttrs = {
	e1: false,
	gf: function (x) {
		return 'translate(' + ($elm$core$String$fromFloat(x) + ', 0)');
	},
	gt: A2($elm$core$Basics$composeL, $elm$svg$Svg$Attributes$y, $elm$core$String$fromFloat),
	np: A2($elm$core$Basics$composeL, $elm$svg$Svg$Attributes$y1, $elm$core$String$fromFloat),
	nq: A2($elm$core$Basics$composeL, $elm$svg$Svg$Attributes$y2, $elm$core$String$fromFloat),
	nt: A2($elm$core$Basics$composeL, $elm$svg$Svg$Attributes$x, $elm$core$String$fromFloat),
	nu: A2($elm$core$Basics$composeL, $elm$svg$Svg$Attributes$x1, $elm$core$String$fromFloat),
	nv: A2($elm$core$Basics$composeL, $elm$svg$Svg$Attributes$x2, $elm$core$String$fromFloat)
};
var $gampleman$elm_visualization$Axis$bottom = A4($gampleman$elm_visualization$Axis$element, $gampleman$elm_visualization$Axis$verticalAttrs, 1, '0.71em', 'middle');
var $gampleman$elm_visualization$Scale$Band$normalizeConfig = function (_v0) {
	var paddingInner = _v0.l_;
	var paddingOuter = _v0.l$;
	var align = _v0.gC;
	return {
		gC: A3($elm$core$Basics$clamp, 0, 1, align),
		l_: A3($elm$core$Basics$clamp, 0, 1, paddingInner),
		l$: A3($elm$core$Basics$clamp, 0, 1, paddingOuter)
	};
};
var $gampleman$elm_visualization$Scale$Band$bandwidth = F3(
	function (cfg, domain, _v0) {
		var d0 = _v0.a;
		var d1 = _v0.b;
		var n = $elm$core$List$length(domain);
		var _v1 = (_Utils_cmp(d0, d1) < 0) ? _Utils_Tuple2(d0, d1) : _Utils_Tuple2(d1, d0);
		var start = _v1.a;
		var stop = _v1.b;
		var _v2 = $gampleman$elm_visualization$Scale$Band$normalizeConfig(cfg);
		var paddingInner = _v2.l_;
		var paddingOuter = _v2.l$;
		var align = _v2.gC;
		var step = (stop - start) / A2($elm$core$Basics$max, 1, (n - paddingInner) + (paddingOuter * 2));
		return step * (1 - paddingInner);
	});
var $gampleman$elm_visualization$Scale$Band$computePositions = F4(
	function (index, cfg, n, _v0) {
		var start = _v0.a;
		var stop = _v0.b;
		var _v1 = $gampleman$elm_visualization$Scale$Band$normalizeConfig(cfg);
		var paddingInner = _v1.l_;
		var paddingOuter = _v1.l$;
		var align = _v1.gC;
		var step = (stop - start) / A2($elm$core$Basics$max, 1, (n - paddingInner) + (paddingOuter * 2));
		var start2 = start + (((stop - start) - (step * (n - paddingInner))) * align);
		return _Utils_Tuple2(start2, step);
	});
var $gampleman$elm_visualization$Scale$Band$indexOfHelp = F3(
	function (index, value, list) {
		indexOfHelp:
		while (true) {
			if (!list.b) {
				return $elm$core$Maybe$Nothing;
			} else {
				var x = list.a;
				var xs = list.b;
				if (_Utils_eq(value, x)) {
					return $elm$core$Maybe$Just(index);
				} else {
					var $temp$index = index + 1,
						$temp$value = value,
						$temp$list = xs;
					index = $temp$index;
					value = $temp$value;
					list = $temp$list;
					continue indexOfHelp;
				}
			}
		}
	});
var $gampleman$elm_visualization$Scale$Band$indexOf = $gampleman$elm_visualization$Scale$Band$indexOfHelp(0);
var $gampleman$elm_visualization$Scale$Band$convert = F4(
	function (cfg, domain, _v0, value) {
		var start = _v0.a;
		var stop = _v0.b;
		var _v1 = A2($gampleman$elm_visualization$Scale$Band$indexOf, value, domain);
		if (!_v1.$) {
			var index = _v1.a;
			var n = $elm$core$List$length(domain);
			if (_Utils_cmp(start, stop) < 0) {
				var _v2 = A4(
					$gampleman$elm_visualization$Scale$Band$computePositions,
					index,
					cfg,
					n,
					_Utils_Tuple2(start, stop));
				var start2 = _v2.a;
				var step = _v2.b;
				return start2 + (step * index);
			} else {
				var _v3 = A4(
					$gampleman$elm_visualization$Scale$Band$computePositions,
					index,
					cfg,
					n,
					_Utils_Tuple2(stop, start));
				var stop2 = _v3.a;
				var step = _v3.b;
				return stop2 + (step * ((n - index) - 1));
			}
		} else {
			return 0 / 0;
		}
	});
var $gampleman$elm_visualization$Scale$band = F3(
	function (config, range_, domain_) {
		return {
			eD: A3($gampleman$elm_visualization$Scale$Band$bandwidth, config, domain_, range_),
			Q: $gampleman$elm_visualization$Scale$Band$convert(config),
			eV: domain_,
			fQ: range_
		};
	});
var $gampleman$elm_visualization$Scale$defaultBandConfig = {gC: 0.5, l_: 0.0, l$: 0.0};
var $author$project$Page$Trends$xScale = function (times) {
	return A3(
		$gampleman$elm_visualization$Scale$band,
		_Utils_update(
			$gampleman$elm_visualization$Scale$defaultBandConfig,
			{l_: 0.1, l$: 0.2}),
		_Utils_Tuple2(0, $author$project$Page$Trends$w - (2 * $author$project$Page$Trends$padding)),
		A2(
			$elm$core$List$map,
			function ($) {
				return $.aJ;
			},
			times));
};
var $author$project$Page$Trends$xAxis = function (times) {
	return A2(
		$gampleman$elm_visualization$Axis$bottom,
		_List_Nil,
		A2(
			$gampleman$elm_visualization$Scale$toRenderable,
			$author$project$Page$Trends$barDateFormat,
			$author$project$Page$Trends$xScale(times)));
};
var $gampleman$elm_visualization$Axis$horizontalAttrs = {
	e1: true,
	gf: function (y) {
		return 'translate(0, ' + ($elm$core$String$fromFloat(y) + ')');
	},
	gt: A2($elm$core$Basics$composeL, $elm$svg$Svg$Attributes$x, $elm$core$String$fromFloat),
	np: A2($elm$core$Basics$composeL, $elm$svg$Svg$Attributes$x1, $elm$core$String$fromFloat),
	nq: A2($elm$core$Basics$composeL, $elm$svg$Svg$Attributes$x2, $elm$core$String$fromFloat),
	nt: A2($elm$core$Basics$composeL, $elm$svg$Svg$Attributes$y, $elm$core$String$fromFloat),
	nu: A2($elm$core$Basics$composeL, $elm$svg$Svg$Attributes$y1, $elm$core$String$fromFloat),
	nv: A2($elm$core$Basics$composeL, $elm$svg$Svg$Attributes$y2, $elm$core$String$fromFloat)
};
var $gampleman$elm_visualization$Axis$left = A4($gampleman$elm_visualization$Axis$element, $gampleman$elm_visualization$Axis$horizontalAttrs, -1, '0.32em', 'end');
var $gampleman$elm_visualization$Axis$TickCount = function (a) {
	return {$: 2, a: a};
};
var $gampleman$elm_visualization$Axis$tickCount = $gampleman$elm_visualization$Axis$TickCount;
var $author$project$Page$Trends$yAxis = A2(
	$gampleman$elm_visualization$Axis$left,
	_List_fromArray(
		[
			$gampleman$elm_visualization$Axis$tickCount(5)
		]),
	$author$project$Page$Trends$yScale);
var $author$project$Page$Trends$viewDetainerWarrantsHistory = function (warrants) {
	var series = A2(
		$elm$core$List$map,
		function (s) {
			return {aJ: s.aJ, et: s.nf};
		},
		warrants);
	return A2(
		$mdgriffith$elm_ui$Element$column,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$padding(20),
				$mdgriffith$elm_ui$Element$spacing(20),
				$mdgriffith$elm_ui$Element$centerX,
				$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
			]),
		_List_fromArray(
			[
				A2(
				$mdgriffith$elm_ui$Element$paragraph,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$Region$heading(1),
						$mdgriffith$elm_ui$Element$Font$size(20),
						$mdgriffith$elm_ui$Element$Font$bold,
						$mdgriffith$elm_ui$Element$Font$center
					]),
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$text('Number of detainer warrants in Davidson Co. TN by month')
					])),
				A2(
				$mdgriffith$elm_ui$Element$row,
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Element$paddingXY, 35, 0)
					]),
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Element$column,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$width(
								A2($mdgriffith$elm_ui$Element$minimum, $author$project$Page$Trends$w, $mdgriffith$elm_ui$Element$shrink)),
								$mdgriffith$elm_ui$Element$height(
								$mdgriffith$elm_ui$Element$px($author$project$Page$Trends$h))
							]),
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$html(
								A2(
									$elm_community$typed_svg$TypedSvg$svg,
									_List_fromArray(
										[
											A4($elm_community$typed_svg$TypedSvg$Attributes$viewBox, 0, 0, $author$project$Page$Trends$w, $author$project$Page$Trends$h)
										]),
									_List_fromArray(
										[
											A2(
											$elm_community$typed_svg$TypedSvg$style,
											_List_Nil,
											_List_fromArray(
												[
													$elm_community$typed_svg$TypedSvg$Core$text('\n            .column rect { fill: rgba(12, 84, 228, 0.8); }\n            .column text { display: none; }\n            .column:hover rect { fill: rgb(129, 169, 248); }\n            .column:hover text { display: inline; }\n          ')
												])),
											A2(
											$elm_community$typed_svg$TypedSvg$g,
											_List_fromArray(
												[
													$elm_community$typed_svg$TypedSvg$Attributes$transform(
													_List_fromArray(
														[
															A2($elm_community$typed_svg$TypedSvg$Types$Translate, $author$project$Page$Trends$padding - 1, $author$project$Page$Trends$h - $author$project$Page$Trends$padding)
														]))
												]),
											_List_fromArray(
												[
													$author$project$Page$Trends$xAxis(series)
												])),
											A2(
											$elm_community$typed_svg$TypedSvg$g,
											_List_fromArray(
												[
													$elm_community$typed_svg$TypedSvg$Attributes$transform(
													_List_fromArray(
														[
															A2($elm_community$typed_svg$TypedSvg$Types$Translate, $author$project$Page$Trends$padding - 1, $author$project$Page$Trends$padding)
														]))
												]),
											_List_fromArray(
												[$author$project$Page$Trends$yAxis])),
											A2(
											$elm_community$typed_svg$TypedSvg$g,
											_List_fromArray(
												[
													$elm_community$typed_svg$TypedSvg$Attributes$transform(
													_List_fromArray(
														[
															A2($elm_community$typed_svg$TypedSvg$Types$Translate, $author$project$Page$Trends$padding, $author$project$Page$Trends$padding)
														])),
													$elm_community$typed_svg$TypedSvg$Attributes$class(
													_List_fromArray(
														['series']))
												]),
											A2(
												$elm$core$List$map,
												$author$project$Page$Trends$column(
													$author$project$Page$Trends$xScale(series)),
												series))
										])))
							]))
					]))
			]));
};
var $elm_community$typed_svg$TypedSvg$Types$Paint = function (a) {
	return {$: 0, a: a};
};
var $elm$core$Basics$acos = _Basics_acos;
var $folkertdev$one_true_path_experiment$LowLevel$Command$EllipticalArc = function (a) {
	return {$: 3, a: a};
};
var $folkertdev$one_true_path_experiment$LowLevel$Command$arcTo = $folkertdev$one_true_path_experiment$LowLevel$Command$EllipticalArc;
var $folkertdev$svg_path_lowlevel$Path$LowLevel$LargestArc = 1;
var $folkertdev$one_true_path_experiment$LowLevel$Command$largestArc = 1;
var $folkertdev$svg_path_lowlevel$Path$LowLevel$SmallestArc = 0;
var $folkertdev$one_true_path_experiment$LowLevel$Command$smallestArc = 0;
var $gampleman$elm_visualization$Shape$Pie$boolToArc = function (b) {
	return b ? $folkertdev$one_true_path_experiment$LowLevel$Command$largestArc : $folkertdev$one_true_path_experiment$LowLevel$Command$smallestArc;
};
var $folkertdev$svg_path_lowlevel$Path$LowLevel$Clockwise = 0;
var $folkertdev$one_true_path_experiment$LowLevel$Command$clockwise = 0;
var $folkertdev$svg_path_lowlevel$Path$LowLevel$CounterClockwise = 1;
var $folkertdev$one_true_path_experiment$LowLevel$Command$counterClockwise = 1;
var $gampleman$elm_visualization$Shape$Pie$boolToDirection = function (b) {
	return b ? $folkertdev$one_true_path_experiment$LowLevel$Command$counterClockwise : $folkertdev$one_true_path_experiment$LowLevel$Command$clockwise;
};
var $elm$core$Basics$cos = _Basics_cos;
var $folkertdev$one_true_path_experiment$SubPath$Empty = {$: 1};
var $folkertdev$one_true_path_experiment$SubPath$empty = $folkertdev$one_true_path_experiment$SubPath$Empty;
var $gampleman$elm_visualization$Shape$Pie$epsilon = 1.0e-12;
var $gampleman$elm_visualization$Shape$Pie$mod = F2(
	function (a, b) {
		var frac = a / b;
		return (frac - (frac | 0)) * b;
	});
var $folkertdev$one_true_path_experiment$LowLevel$Command$MoveTo = $elm$core$Basics$identity;
var $folkertdev$one_true_path_experiment$LowLevel$Command$moveTo = $elm$core$Basics$identity;
var $elm$core$Basics$sin = _Basics_sin;
var $folkertdev$one_true_path_experiment$SubPath$SubPath = function (a) {
	return {$: 0, a: a};
};
var $folkertdev$elm_deque$Deque$Deque = $elm$core$Basics$identity;
var $folkertdev$elm_deque$Internal$rebalance = function (deque) {
	var sizeF = deque.N;
	var sizeR = deque.O;
	var front = deque.V;
	var rear = deque.W;
	var size1 = ((sizeF + sizeR) / 2) | 0;
	var size2 = (sizeF + sizeR) - size1;
	var balanceConstant = 4;
	if ((sizeF + sizeR) < 2) {
		return deque;
	} else {
		if (_Utils_cmp(sizeF, (balanceConstant * sizeR) + 1) > 0) {
			var newRear = _Utils_ap(
				rear,
				$elm$core$List$reverse(
					A2($elm$core$List$drop, size1, front)));
			var newFront = A2($elm$core$List$take, size1, front);
			return {V: newFront, W: newRear, N: size1, O: size2};
		} else {
			if (_Utils_cmp(sizeR, (balanceConstant * sizeF) + 1) > 0) {
				var newRear = A2($elm$core$List$take, size1, rear);
				var newFront = _Utils_ap(
					front,
					$elm$core$List$reverse(
						A2($elm$core$List$drop, size1, rear)));
				return {V: newFront, W: newRear, N: size1, O: size2};
			} else {
				return deque;
			}
		}
	}
};
var $folkertdev$elm_deque$Internal$fromList = function (list) {
	return $folkertdev$elm_deque$Internal$rebalance(
		{
			V: list,
			W: _List_Nil,
			N: $elm$core$List$length(list),
			O: 0
		});
};
var $folkertdev$elm_deque$Deque$fromList = A2($elm$core$Basics$composeL, $elm$core$Basics$identity, $folkertdev$elm_deque$Internal$fromList);
var $folkertdev$one_true_path_experiment$SubPath$with = F2(
	function (moveto, drawtos) {
		return $folkertdev$one_true_path_experiment$SubPath$SubPath(
			{
				g7: $folkertdev$elm_deque$Deque$fromList(drawtos),
				h$: moveto
			});
	});
var $gampleman$elm_visualization$Shape$Pie$arc_ = F6(
	function (x, y, radius, a0, a1, ccw) {
		var tau = 2 * $elm$core$Basics$pi;
		var r = $elm$core$Basics$abs(radius);
		var dy = r * $elm$core$Basics$sin(a0);
		var y0_ = y + dy;
		var dx = r * $elm$core$Basics$cos(a0);
		var x0_ = x + dx;
		var origin = $folkertdev$one_true_path_experiment$LowLevel$Command$moveTo(
			_Utils_Tuple2(x0_, y0_));
		var da = ccw ? (a0 - a1) : (a1 - a0);
		var cw = $gampleman$elm_visualization$Shape$Pie$boolToDirection(!ccw);
		if (!r) {
			return $folkertdev$one_true_path_experiment$SubPath$empty;
		} else {
			if (_Utils_cmp(da, tau - $gampleman$elm_visualization$Shape$Pie$epsilon) > 0) {
				return A2(
					$folkertdev$one_true_path_experiment$SubPath$with,
					origin,
					_List_fromArray(
						[
							$folkertdev$one_true_path_experiment$LowLevel$Command$arcTo(
							_List_fromArray(
								[
									{
									eA: $folkertdev$one_true_path_experiment$LowLevel$Command$largestArc,
									g3: cw,
									a2: _Utils_Tuple2(r, r),
									au: _Utils_Tuple2(x - dx, y - dy),
									aO: 0
								}
								])),
							$folkertdev$one_true_path_experiment$LowLevel$Command$arcTo(
							_List_fromArray(
								[
									{
									eA: $folkertdev$one_true_path_experiment$LowLevel$Command$largestArc,
									g3: cw,
									a2: _Utils_Tuple2(r, r),
									au: _Utils_Tuple2(x0_, y0_),
									aO: 0
								}
								]))
						]));
			} else {
				var da_ = (da < 0) ? (A2($gampleman$elm_visualization$Shape$Pie$mod, da, tau) + tau) : da;
				return A2(
					$folkertdev$one_true_path_experiment$SubPath$with,
					origin,
					_List_fromArray(
						[
							$folkertdev$one_true_path_experiment$LowLevel$Command$arcTo(
							_List_fromArray(
								[
									{
									eA: $gampleman$elm_visualization$Shape$Pie$boolToArc(
										_Utils_cmp(da_, $elm$core$Basics$pi) > -1),
									g3: cw,
									a2: _Utils_Tuple2(r, r),
									au: _Utils_Tuple2(
										x + (r * $elm$core$Basics$cos(a1)),
										y + (r * $elm$core$Basics$sin(a1))),
									aO: 0
								}
								]))
						]));
			}
		}
	});
var $elm$core$Basics$atan2 = _Basics_atan2;
var $folkertdev$one_true_path_experiment$LowLevel$Command$ClosePath = {$: 4};
var $folkertdev$one_true_path_experiment$LowLevel$Command$closePath = $folkertdev$one_true_path_experiment$LowLevel$Command$ClosePath;
var $folkertdev$elm_deque$Internal$empty = {V: _List_Nil, W: _List_Nil, N: 0, O: 0};
var $folkertdev$elm_deque$Internal$popBack = function (deque) {
	var front = deque.V;
	var rear = deque.W;
	var _v0 = _Utils_Tuple2(front, rear);
	if (!_v0.b.b) {
		if (!_v0.a.b) {
			return _Utils_Tuple2($elm$core$Maybe$Nothing, $folkertdev$elm_deque$Internal$empty);
		} else {
			if (!_v0.a.b.b) {
				var _v1 = _v0.a;
				var x = _v1.a;
				return _Utils_Tuple2(
					$elm$core$Maybe$Just(x),
					$folkertdev$elm_deque$Internal$empty);
			} else {
				return _Utils_Tuple2($elm$core$Maybe$Nothing, $folkertdev$elm_deque$Internal$empty);
			}
		}
	} else {
		var _v2 = _v0.b;
		var r = _v2.a;
		var rs = _v2.b;
		return _Utils_Tuple2(
			$elm$core$Maybe$Just(r),
			$folkertdev$elm_deque$Internal$rebalance(
				{V: deque.V, W: rs, N: deque.N, O: deque.O - 1}));
	}
};
var $folkertdev$elm_deque$Deque$unwrap = function (_v0) {
	var boundedDeque = _v0;
	return boundedDeque;
};
var $folkertdev$elm_deque$Deque$popBack = A2(
	$elm$core$Basics$composeL,
	A2(
		$elm$core$Basics$composeL,
		$elm$core$Tuple$mapSecond($elm$core$Basics$identity),
		$folkertdev$elm_deque$Internal$popBack),
	$folkertdev$elm_deque$Deque$unwrap);
var $folkertdev$elm_deque$Deque$mapAbstract = F2(
	function (f, _v0) {
		var _abstract = _v0;
		return f(_abstract);
	});
var $folkertdev$elm_deque$Deque$pushBack = F2(
	function (elem, _v0) {
		var deque = _v0;
		return A2(
			$folkertdev$elm_deque$Deque$mapAbstract,
			$folkertdev$elm_deque$Internal$rebalance,
			{
				V: deque.V,
				W: A2($elm$core$List$cons, elem, deque.W),
				N: deque.N,
				O: deque.O + 1
			});
	});
var $folkertdev$one_true_path_experiment$SubPath$close = function (subpath) {
	if (subpath.$ === 1) {
		return $folkertdev$one_true_path_experiment$SubPath$Empty;
	} else {
		var moveto = subpath.a.h$;
		var drawtos = subpath.a.g7;
		var _v1 = $folkertdev$elm_deque$Deque$popBack(drawtos);
		if ((!_v1.a.$) && (_v1.a.a.$ === 4)) {
			var _v2 = _v1.a.a;
			var preceding = _v1.b;
			return subpath;
		} else {
			return $folkertdev$one_true_path_experiment$SubPath$SubPath(
				{
					g7: A2($folkertdev$elm_deque$Deque$pushBack, $folkertdev$one_true_path_experiment$LowLevel$Command$closePath, drawtos),
					h$: moveto
				});
		}
	}
};
var $folkertdev$one_true_path_experiment$SubPath$firstPoint = function (_v0) {
	var moveto = _v0.h$;
	var p = moveto;
	return p;
};
var $folkertdev$one_true_path_experiment$LowLevel$Command$LineTo = function (a) {
	return {$: 0, a: a};
};
var $folkertdev$one_true_path_experiment$LowLevel$Command$lineTo = $folkertdev$one_true_path_experiment$LowLevel$Command$LineTo;
var $folkertdev$one_true_path_experiment$SubPath$map2 = F3(
	function (f, sub1, sub2) {
		var _v0 = _Utils_Tuple2(sub1, sub2);
		if (_v0.a.$ === 1) {
			if (_v0.b.$ === 1) {
				var _v1 = _v0.a;
				var _v2 = _v0.b;
				return $folkertdev$one_true_path_experiment$SubPath$Empty;
			} else {
				var _v3 = _v0.a;
				var subpath = _v0.b;
				return subpath;
			}
		} else {
			if (_v0.b.$ === 1) {
				var subpath = _v0.a;
				var _v4 = _v0.b;
				return subpath;
			} else {
				var a = _v0.a.a;
				var b = _v0.b.a;
				return A2(f, a, b);
			}
		}
	});
var $folkertdev$one_true_path_experiment$SubPath$pushBack = F2(
	function (drawto, data) {
		return _Utils_update(
			data,
			{
				g7: A2($folkertdev$elm_deque$Deque$pushBack, drawto, data.g7)
			});
	});
var $folkertdev$elm_deque$Internal$length = function (deque) {
	return deque.N + deque.O;
};
var $folkertdev$elm_deque$Internal$isEmpty = function (deque) {
	return !$folkertdev$elm_deque$Internal$length(deque);
};
var $folkertdev$elm_deque$Deque$isEmpty = A2($elm$core$Basics$composeL, $folkertdev$elm_deque$Internal$isEmpty, $folkertdev$elm_deque$Deque$unwrap);
var $folkertdev$elm_deque$Deque$append = F2(
	function (p, q) {
		var x = p;
		var y = q;
		return $folkertdev$elm_deque$Deque$isEmpty(p) ? q : ($folkertdev$elm_deque$Deque$isEmpty(q) ? p : {
			V: _Utils_ap(
				x.V,
				$elm$core$List$reverse(x.W)),
			W: $elm$core$List$reverse(
				_Utils_ap(
					y.V,
					$elm$core$List$reverse(y.W))),
			N: x.N + x.O,
			O: y.N + y.O
		});
	});
var $folkertdev$one_true_path_experiment$SubPath$unsafeConcatenate = F2(
	function (a, b) {
		return _Utils_update(
			a,
			{
				g7: A2($folkertdev$elm_deque$Deque$append, a.g7, b.g7)
			});
	});
var $folkertdev$one_true_path_experiment$SubPath$connect = function () {
	var helper = F2(
		function (right, left) {
			return $folkertdev$one_true_path_experiment$SubPath$SubPath(
				A2(
					$folkertdev$one_true_path_experiment$SubPath$unsafeConcatenate,
					A2(
						$folkertdev$one_true_path_experiment$SubPath$pushBack,
						$folkertdev$one_true_path_experiment$LowLevel$Command$lineTo(
							_List_fromArray(
								[
									$folkertdev$one_true_path_experiment$SubPath$firstPoint(right)
								])),
						left),
					right));
		});
	return $folkertdev$one_true_path_experiment$SubPath$map2(helper);
}();
var $gampleman$elm_visualization$Shape$Pie$cornerTangents = F7(
	function (x0, y0, x1, y1, r1, rc, cw) {
		var y01 = y0 - y1;
		var x01 = x0 - x1;
		var r = r1 - rc;
		var lo = (cw ? rc : (-rc)) / $elm$core$Basics$sqrt(
			A2($elm$core$Basics$pow, x01, 2) + A2($elm$core$Basics$pow, y01, 2));
		var ox = lo * y01;
		var x10 = x1 + ox;
		var x11 = x0 + ox;
		var x00 = (x11 + x10) / 2;
		var oy = (-lo) * x01;
		var y10 = y1 + oy;
		var y11 = y0 + oy;
		var y00 = (y11 + y10) / 2;
		var dy = y10 - y11;
		var dx = x10 - x11;
		var dd = (x11 * y10) - (x10 * y11);
		var d2 = A2($elm$core$Basics$pow, dx, 2) + A2($elm$core$Basics$pow, dy, 2);
		var d = ((dy < 0) ? (-1) : 1) * $elm$core$Basics$sqrt(
			A2(
				$elm$core$Basics$max,
				0,
				(A2($elm$core$Basics$pow, r, 2) * d2) - A2($elm$core$Basics$pow, dd, 2)));
		var cy1 = (((-dd) * dx) + (dy * d)) / d2;
		var dy1 = cy1 - y00;
		var cy0 = (((-dd) * dx) - (dy * d)) / d2;
		var dy0 = cy0 - y00;
		var cx1 = ((dd * dy) + (dx * d)) / d2;
		var dx1 = cx1 - x00;
		var cx0 = ((dd * dy) - (dx * d)) / d2;
		var dx0 = cx0 - x00;
		var _v0 = (_Utils_cmp(
			A2($elm$core$Basics$pow, dx0, 2) + A2($elm$core$Basics$pow, dy0, 2),
			A2($elm$core$Basics$pow, dx1, 2) + A2($elm$core$Basics$pow, dy1, 2)) > 0) ? _Utils_Tuple2(cx1, cy1) : _Utils_Tuple2(cx0, cy0);
		var fcx = _v0.a;
		var fxy = _v0.b;
		return {I: fcx, J: fxy, af: -ox, aN: fcx * ((r1 / r) - 1), ag: -oy, aP: fxy * ((r1 / r) - 1)};
	});
var $gampleman$elm_visualization$Shape$Pie$intersect = F8(
	function (x0, y0, x1, y1, x2, y2, x3, y3) {
		var y32 = y3 - y2;
		var y10 = y1 - y0;
		var x32 = x3 - x2;
		var x10 = x1 - x0;
		var t = ((x32 * (y0 - y2)) - (y32 * (x0 - x2))) / ((y32 * x10) - (x32 * y10));
		return _Utils_Tuple2(x0 + (t * x10), y0 + (t * y10));
	});
var $folkertdev$elm_deque$Internal$foldl = F3(
	function (f, initial, deque) {
		return function (initial_) {
			return A3($elm$core$List$foldr, f, initial_, deque.W);
		}(
			A3($elm$core$List$foldl, f, initial, deque.V));
	});
var $folkertdev$elm_deque$Deque$foldl = F2(
	function (f, initial) {
		return A2(
			$elm$core$Basics$composeL,
			A2($folkertdev$elm_deque$Internal$foldl, f, initial),
			$folkertdev$elm_deque$Deque$unwrap);
	});
var $elm_community$list_extra$List$Extra$last = function (items) {
	last:
	while (true) {
		if (!items.b) {
			return $elm$core$Maybe$Nothing;
		} else {
			if (!items.b.b) {
				var x = items.a;
				return $elm$core$Maybe$Just(x);
			} else {
				var rest = items.b;
				var $temp$items = rest;
				items = $temp$items;
				continue last;
			}
		}
	}
};
var $folkertdev$one_true_path_experiment$LowLevel$Command$updateCursorState = F2(
	function (drawto, state) {
		var noControlPoint = function (currentState) {
			return _Utils_update(
				currentState,
				{x: $elm$core$Maybe$Nothing});
		};
		var maybeUpdateCursor = function (coordinate) {
			return _Utils_update(
				state,
				{
					j5: A2($elm$core$Maybe$withDefault, state.j5, coordinate)
				});
		};
		var _v0 = state.j5;
		var cursorX = _v0.a;
		var cursorY = _v0.b;
		switch (drawto.$) {
			case 0:
				var coordinates = drawto.a;
				return noControlPoint(
					maybeUpdateCursor(
						$elm_community$list_extra$List$Extra$last(coordinates)));
			case 1:
				var coordinates = drawto.a;
				var _v2 = $elm_community$list_extra$List$Extra$last(coordinates);
				if (_v2.$ === 1) {
					return state;
				} else {
					var _v3 = _v2.a;
					var control1 = _v3.a;
					var control2 = _v3.b;
					var target = _v3.c;
					return _Utils_update(
						state,
						{
							j5: target,
							x: $elm$core$Maybe$Just(control2)
						});
				}
			case 2:
				var coordinates = drawto.a;
				var _v4 = $elm_community$list_extra$List$Extra$last(coordinates);
				if (_v4.$ === 1) {
					return state;
				} else {
					var _v5 = _v4.a;
					var control = _v5.a;
					var target = _v5.b;
					return _Utils_update(
						state,
						{
							j5: target,
							x: $elm$core$Maybe$Just(control)
						});
				}
			case 3:
				var _arguments = drawto.a;
				return noControlPoint(
					maybeUpdateCursor(
						A2(
							$elm$core$Maybe$map,
							function ($) {
								return $.au;
							},
							$elm_community$list_extra$List$Extra$last(_arguments))));
			default:
				return noControlPoint(state);
		}
	});
var $folkertdev$one_true_path_experiment$SubPath$finalCursorState = function (_v0) {
	var moveto = _v0.h$;
	var drawtos = _v0.g7;
	var _v1 = moveto;
	var start = _v1;
	var initial = {j5: start, x: $elm$core$Maybe$Nothing, f7: start};
	return A3($folkertdev$elm_deque$Deque$foldl, $folkertdev$one_true_path_experiment$LowLevel$Command$updateCursorState, initial, drawtos);
};
var $folkertdev$one_true_path_experiment$SubPath$finalPoint = A2(
	$elm$core$Basics$composeR,
	$folkertdev$one_true_path_experiment$SubPath$finalCursorState,
	function ($) {
		return $.j5;
	});
var $ianmackenzie$elm_units$Quantity$Quantity = $elm$core$Basics$identity;
var $ianmackenzie$elm_units$Quantity$float = function (value) {
	return value;
};
var $ianmackenzie$elm_geometry$Geometry$Types$Vector2d = $elm$core$Basics$identity;
var $ianmackenzie$elm_geometry$Vector2d$xy = F2(
	function (_v0, _v1) {
		var x = _v0;
		var y = _v1;
		return {gt: x, nt: y};
	});
var $ianmackenzie$elm_geometry$Vector2d$fromTuple = F2(
	function (toQuantity, _v0) {
		var x = _v0.a;
		var y = _v0.b;
		return A2(
			$ianmackenzie$elm_geometry$Vector2d$xy,
			toQuantity(x),
			toQuantity(y));
	});
var $folkertdev$elm_deque$Internal$map = F2(
	function (f, deque) {
		return {
			V: A2($elm$core$List$map, f, deque.V),
			W: A2($elm$core$List$map, f, deque.W),
			N: deque.N,
			O: deque.O
		};
	});
var $folkertdev$elm_deque$Deque$map = function (f) {
	return $folkertdev$elm_deque$Deque$mapAbstract(
		$folkertdev$elm_deque$Internal$map(f));
};
var $folkertdev$one_true_path_experiment$LowLevel$Command$CurveTo = function (a) {
	return {$: 1, a: a};
};
var $folkertdev$one_true_path_experiment$LowLevel$Command$QuadraticBezierCurveTo = function (a) {
	return {$: 2, a: a};
};
var $folkertdev$one_true_path_experiment$LowLevel$Command$mapTuple2 = F2(
	function (f, _v0) {
		var a = _v0.a;
		var b = _v0.b;
		return _Utils_Tuple2(
			f(a),
			f(b));
	});
var $folkertdev$one_true_path_experiment$LowLevel$Command$mapTuple3 = F2(
	function (f, _v0) {
		var a = _v0.a;
		var b = _v0.b;
		var c = _v0.c;
		return _Utils_Tuple3(
			f(a),
			f(b),
			f(c));
	});
var $folkertdev$one_true_path_experiment$LowLevel$Command$mapCoordinateDrawTo = F2(
	function (f, drawto) {
		switch (drawto.$) {
			case 0:
				var coordinates = drawto.a;
				return $folkertdev$one_true_path_experiment$LowLevel$Command$LineTo(
					A2($elm$core$List$map, f, coordinates));
			case 1:
				var coordinates = drawto.a;
				return $folkertdev$one_true_path_experiment$LowLevel$Command$CurveTo(
					A2(
						$elm$core$List$map,
						$folkertdev$one_true_path_experiment$LowLevel$Command$mapTuple3(f),
						coordinates));
			case 2:
				var coordinates = drawto.a;
				return $folkertdev$one_true_path_experiment$LowLevel$Command$QuadraticBezierCurveTo(
					A2(
						$elm$core$List$map,
						$folkertdev$one_true_path_experiment$LowLevel$Command$mapTuple2(f),
						coordinates));
			case 3:
				var _arguments = drawto.a;
				return $folkertdev$one_true_path_experiment$LowLevel$Command$EllipticalArc(
					A2(
						$elm$core$List$map,
						function (argument) {
							return _Utils_update(
								argument,
								{
									au: f(argument.au)
								});
						},
						_arguments));
			default:
				return $folkertdev$one_true_path_experiment$LowLevel$Command$ClosePath;
		}
	});
var $folkertdev$one_true_path_experiment$SubPath$mapCoordinateInstructions = F2(
	function (f, _v0) {
		var moveto = _v0.h$;
		var drawtos = _v0.g7;
		var coordinate = moveto;
		return {
			g7: A2(
				$folkertdev$elm_deque$Deque$map,
				$folkertdev$one_true_path_experiment$LowLevel$Command$mapCoordinateDrawTo(f),
				drawtos),
			h$: f(coordinate)
		};
	});
var $ianmackenzie$elm_geometry$Vector2d$minus = F2(
	function (_v0, _v1) {
		var v2 = _v0;
		var v1 = _v1;
		return {gt: v1.gt - v2.gt, nt: v1.nt - v2.nt};
	});
var $ianmackenzie$elm_geometry$Vector2d$plus = F2(
	function (_v0, _v1) {
		var v2 = _v0;
		var v1 = _v1;
		return {gt: v1.gt + v2.gt, nt: v1.nt + v2.nt};
	});
var $ianmackenzie$elm_units$Quantity$toFloat = function (_v0) {
	var value = _v0;
	return value;
};
var $ianmackenzie$elm_geometry$Vector2d$xComponent = function (_v0) {
	var v = _v0;
	return v.gt;
};
var $ianmackenzie$elm_geometry$Vector2d$yComponent = function (_v0) {
	var v = _v0;
	return v.nt;
};
var $ianmackenzie$elm_geometry$Vector2d$toTuple = F2(
	function (fromQuantity, vector) {
		return _Utils_Tuple2(
			fromQuantity(
				$ianmackenzie$elm_geometry$Vector2d$xComponent(vector)),
			fromQuantity(
				$ianmackenzie$elm_geometry$Vector2d$yComponent(vector)));
	});
var $folkertdev$one_true_path_experiment$SubPath$continue = function () {
	var helper = F2(
		function (right, left) {
			var distance = A2(
				$ianmackenzie$elm_geometry$Vector2d$minus,
				A2(
					$ianmackenzie$elm_geometry$Vector2d$fromTuple,
					$ianmackenzie$elm_units$Quantity$float,
					$folkertdev$one_true_path_experiment$SubPath$firstPoint(right)),
				A2(
					$ianmackenzie$elm_geometry$Vector2d$fromTuple,
					$ianmackenzie$elm_units$Quantity$float,
					$folkertdev$one_true_path_experiment$SubPath$finalPoint(left)));
			var mapper = A2(
				$elm$core$Basics$composeL,
				A2(
					$elm$core$Basics$composeL,
					$ianmackenzie$elm_geometry$Vector2d$toTuple($ianmackenzie$elm_units$Quantity$toFloat),
					$ianmackenzie$elm_geometry$Vector2d$plus(distance)),
				$ianmackenzie$elm_geometry$Vector2d$fromTuple($ianmackenzie$elm_units$Quantity$float));
			return $folkertdev$one_true_path_experiment$SubPath$SubPath(
				A2(
					$folkertdev$one_true_path_experiment$SubPath$unsafeConcatenate,
					left,
					A2($folkertdev$one_true_path_experiment$SubPath$mapCoordinateInstructions, mapper, right)));
		});
	return $folkertdev$one_true_path_experiment$SubPath$map2(helper);
}();
var $gampleman$elm_visualization$Shape$Pie$makeArc = F6(
	function (x, y, radius, a0, a1, ccw) {
		return $folkertdev$one_true_path_experiment$SubPath$continue(
			A6($gampleman$elm_visualization$Shape$Pie$arc_, x, y, radius, a0, a1, ccw));
	});
var $elm$core$Basics$asin = _Basics_asin;
var $gampleman$elm_visualization$Shape$Pie$myAsin = function (x) {
	return (x >= 1) ? ($elm$core$Basics$pi / 2) : ((_Utils_cmp(x, -1) < 1) ? ((-$elm$core$Basics$pi) / 2) : $elm$core$Basics$asin(x));
};
var $gampleman$elm_visualization$Shape$Pie$arc = function (arcData) {
	var a1 = arcData.eX - ($elm$core$Basics$pi / 2);
	var a0 = arcData.du - ($elm$core$Basics$pi / 2);
	var cw = _Utils_cmp(a1, a0) > 0;
	var da = $elm$core$Basics$abs(a1 - a0);
	var _v0 = (_Utils_cmp(arcData.kZ, arcData.ic) > 0) ? _Utils_Tuple2(arcData.ic, arcData.kZ) : _Utils_Tuple2(arcData.kZ, arcData.ic);
	var r0 = _v0.a;
	var r1 = _v0.b;
	var path = function () {
		if (_Utils_cmp(r1, $gampleman$elm_visualization$Shape$Pie$epsilon) < 1) {
			return _List_fromArray(
				[
					$folkertdev$one_true_path_experiment$SubPath$close(
					A2(
						$folkertdev$one_true_path_experiment$SubPath$with,
						$folkertdev$one_true_path_experiment$LowLevel$Command$moveTo(
							_Utils_Tuple2(0, 0)),
						_List_Nil))
				]);
		} else {
			if (_Utils_cmp(da, (2 * $elm$core$Basics$pi) - $gampleman$elm_visualization$Shape$Pie$epsilon) > 0) {
				var p = A7(
					$gampleman$elm_visualization$Shape$Pie$makeArc,
					0,
					0,
					r1,
					a0,
					a1,
					!cw,
					A2(
						$folkertdev$one_true_path_experiment$SubPath$with,
						$folkertdev$one_true_path_experiment$LowLevel$Command$moveTo(
							_Utils_Tuple2(
								r1 * $elm$core$Basics$cos(a0),
								r1 * $elm$core$Basics$sin(a0))),
						_List_Nil));
				return (_Utils_cmp(r0, $gampleman$elm_visualization$Shape$Pie$epsilon) > 0) ? _List_fromArray(
					[
						p,
						$folkertdev$one_true_path_experiment$SubPath$close(
						A7(
							$gampleman$elm_visualization$Shape$Pie$makeArc,
							0,
							0,
							r0,
							a1,
							a0,
							cw,
							A2(
								$folkertdev$one_true_path_experiment$SubPath$with,
								$folkertdev$one_true_path_experiment$LowLevel$Command$moveTo(
									_Utils_Tuple2(
										r0 * $elm$core$Basics$cos(a1),
										r0 * $elm$core$Basics$sin(a1))),
								_List_Nil)))
					]) : _List_fromArray(
					[
						$folkertdev$one_true_path_experiment$SubPath$close(p)
					]);
			} else {
				var rc = A2(
					$elm$core$Basics$min,
					$elm$core$Basics$abs(r1 - r0) / 2,
					arcData.eM);
				var ap = arcData.fB / 2;
				var rp = (_Utils_cmp(ap, $gampleman$elm_visualization$Shape$Pie$epsilon) > 0) ? ((arcData.fC > 0) ? arcData.fC : $elm$core$Basics$sqrt(
					A2($elm$core$Basics$pow, r0, 2) + A2($elm$core$Basics$pow, r1, 2))) : 0;
				var p0 = $gampleman$elm_visualization$Shape$Pie$myAsin(
					(rp / r0) * $elm$core$Basics$sin(ap));
				var p1 = $gampleman$elm_visualization$Shape$Pie$myAsin(
					(rp / r1) * $elm$core$Basics$sin(ap));
				var _v1 = (_Utils_cmp(rp, $gampleman$elm_visualization$Shape$Pie$epsilon) > 0) ? ((_Utils_cmp(da - (p1 * 2), $gampleman$elm_visualization$Shape$Pie$epsilon) > 0) ? (cw ? _Utils_Tuple3(a0 + p1, a1 - p1, da - (p1 * 2)) : _Utils_Tuple3(a0 - p1, a1 + p1, da - (p1 * 2))) : _Utils_Tuple3((a0 + a1) / 2, (a0 + a1) / 2, 0)) : _Utils_Tuple3(a0, a1, da);
				var a01 = _v1.a;
				var a11 = _v1.b;
				var da1 = _v1.c;
				var x01 = r1 * $elm$core$Basics$cos(a01);
				var y01 = r1 * $elm$core$Basics$sin(a01);
				var x11 = r1 * $elm$core$Basics$cos(a11);
				var y11 = r1 * $elm$core$Basics$sin(a11);
				var _v2 = (_Utils_cmp(rp, $gampleman$elm_visualization$Shape$Pie$epsilon) > 0) ? ((_Utils_cmp(da - (p0 * 2), $gampleman$elm_visualization$Shape$Pie$epsilon) > 0) ? (cw ? _Utils_Tuple3(a0 + p0, a1 - p0, da - (p0 * 2)) : _Utils_Tuple3(a0 - p0, a1 + p0, da - (p0 * 2))) : _Utils_Tuple3((a0 + a1) / 2, (a0 + a1) / 2, 0)) : _Utils_Tuple3(a0, a1, da);
				var a00 = _v2.a;
				var a10 = _v2.b;
				var da0 = _v2.c;
				var x00 = r0 * $elm$core$Basics$cos(a00);
				var y00 = r0 * $elm$core$Basics$sin(a00);
				var x10 = r0 * $elm$core$Basics$cos(a10);
				var y10 = r0 * $elm$core$Basics$sin(a10);
				var _v3 = (_Utils_cmp(da0, $gampleman$elm_visualization$Shape$Pie$epsilon) > 0) ? A8($gampleman$elm_visualization$Shape$Pie$intersect, x01, y01, x00, y00, x11, y11, x10, y10) : _Utils_Tuple2(x10, y10);
				var ocx = _v3.a;
				var ocy = _v3.b;
				var lc = $elm$core$Basics$sqrt(
					A2($elm$core$Basics$pow, ocx, 2) + A2($elm$core$Basics$pow, ocy, 2));
				var _v4 = _Utils_Tuple2(x11 - ocx, y11 - ocy);
				var bx = _v4.a;
				var by = _v4.b;
				var _v5 = _Utils_Tuple2(x01 - ocx, y01 - ocy);
				var ax = _v5.a;
				var ay = _v5.b;
				var kc = 1 / $elm$core$Basics$sin(
					$elm$core$Basics$acos(
						((ax * bx) + (ay * by)) / ($elm$core$Basics$sqrt(
							A2($elm$core$Basics$pow, ax, 2) + A2($elm$core$Basics$pow, ay, 2)) * $elm$core$Basics$sqrt(
							A2($elm$core$Basics$pow, bx, 2) + A2($elm$core$Basics$pow, by, 2)))) / 2);
				var _v6 = ((_Utils_cmp(rc, $gampleman$elm_visualization$Shape$Pie$epsilon) > 0) && (_Utils_cmp(da, $elm$core$Basics$pi) < 0)) ? _Utils_Tuple2(
					A2($elm$core$Basics$min, rc, (r0 - lc) / (kc - 1)),
					A2($elm$core$Basics$min, rc, (r1 - lc) / (kc + 1))) : _Utils_Tuple2(rc, rc);
				var rc0 = _v6.a;
				var rc1 = _v6.b;
				var outerRing = function () {
					if (_Utils_cmp(da1, $gampleman$elm_visualization$Shape$Pie$epsilon) < 1) {
						return A2(
							$folkertdev$one_true_path_experiment$SubPath$with,
							$folkertdev$one_true_path_experiment$LowLevel$Command$moveTo(
								_Utils_Tuple2(x01, y01)),
							_List_Nil);
					} else {
						if (_Utils_cmp(rc1, $gampleman$elm_visualization$Shape$Pie$epsilon) > 0) {
							var t1 = A7($gampleman$elm_visualization$Shape$Pie$cornerTangents, x11, y11, x10, y10, r1, rc1, cw);
							var t0 = A7($gampleman$elm_visualization$Shape$Pie$cornerTangents, x00, y00, x01, y01, r1, rc1, cw);
							var p = A2(
								$folkertdev$one_true_path_experiment$SubPath$with,
								$folkertdev$one_true_path_experiment$LowLevel$Command$moveTo(
									_Utils_Tuple2(t0.I + t0.af, t0.J + t0.ag)),
								_List_Nil);
							return (_Utils_cmp(rc1, rc) < 0) ? A7(
								$gampleman$elm_visualization$Shape$Pie$makeArc,
								t0.I,
								t0.J,
								rc1,
								A2($elm$core$Basics$atan2, t0.ag, t0.af),
								A2($elm$core$Basics$atan2, t1.ag, t1.af),
								!cw,
								p) : A7(
								$gampleman$elm_visualization$Shape$Pie$makeArc,
								t1.I,
								t1.J,
								rc1,
								A2($elm$core$Basics$atan2, t1.aP, t1.aN),
								A2($elm$core$Basics$atan2, t1.ag, t1.af),
								!cw,
								A7(
									$gampleman$elm_visualization$Shape$Pie$makeArc,
									0,
									0,
									r1,
									A2($elm$core$Basics$atan2, t0.J + t0.aP, t0.I + t0.aN),
									A2($elm$core$Basics$atan2, t1.J + t1.aP, t1.I + t1.aN),
									!cw,
									A7(
										$gampleman$elm_visualization$Shape$Pie$makeArc,
										t0.I,
										t0.J,
										rc1,
										A2($elm$core$Basics$atan2, t0.ag, t0.af),
										A2($elm$core$Basics$atan2, t0.aP, t0.aN),
										!cw,
										p)));
						} else {
							return A7(
								$gampleman$elm_visualization$Shape$Pie$makeArc,
								0,
								0,
								r1,
								a01,
								a11,
								!cw,
								A2(
									$folkertdev$one_true_path_experiment$SubPath$with,
									$folkertdev$one_true_path_experiment$LowLevel$Command$moveTo(
										_Utils_Tuple2(x01, y01)),
									_List_Nil));
						}
					}
				}();
				if ((_Utils_cmp(r0, $gampleman$elm_visualization$Shape$Pie$epsilon) < 1) || (_Utils_cmp(da0, $gampleman$elm_visualization$Shape$Pie$epsilon) < 1)) {
					return _List_fromArray(
						[
							$folkertdev$one_true_path_experiment$SubPath$close(
							A2(
								$folkertdev$one_true_path_experiment$SubPath$connect,
								A2(
									$folkertdev$one_true_path_experiment$SubPath$with,
									$folkertdev$one_true_path_experiment$LowLevel$Command$moveTo(
										_Utils_Tuple2(x10, y10)),
									_List_Nil),
								outerRing))
						]);
				} else {
					if (_Utils_cmp(rc0, $gampleman$elm_visualization$Shape$Pie$epsilon) > 0) {
						var t1 = A7($gampleman$elm_visualization$Shape$Pie$cornerTangents, x01, y01, x00, y00, r0, -rc0, cw);
						var t0 = A7($gampleman$elm_visualization$Shape$Pie$cornerTangents, x10, y10, x11, y11, r0, -rc0, cw);
						var p = A2(
							$folkertdev$one_true_path_experiment$SubPath$connect,
							A2(
								$folkertdev$one_true_path_experiment$SubPath$with,
								$folkertdev$one_true_path_experiment$LowLevel$Command$moveTo(
									_Utils_Tuple2(t0.I + t0.af, t0.J + t0.ag)),
								_List_Nil),
							outerRing);
						return (_Utils_cmp(rc0, rc) < 0) ? _List_fromArray(
							[
								$folkertdev$one_true_path_experiment$SubPath$close(
								A7(
									$gampleman$elm_visualization$Shape$Pie$makeArc,
									t0.I,
									t0.J,
									rc0,
									A2($elm$core$Basics$atan2, t0.ag, t0.af),
									A2($elm$core$Basics$atan2, t1.ag, t1.af),
									!cw,
									p))
							]) : _List_fromArray(
							[
								$folkertdev$one_true_path_experiment$SubPath$close(
								A7(
									$gampleman$elm_visualization$Shape$Pie$makeArc,
									t1.I,
									t1.J,
									rc0,
									A2($elm$core$Basics$atan2, t1.aP, t1.aN),
									A2($elm$core$Basics$atan2, t1.ag, t1.af),
									!cw,
									A7(
										$gampleman$elm_visualization$Shape$Pie$makeArc,
										0,
										0,
										r0,
										A2($elm$core$Basics$atan2, t0.J + t0.aP, t0.I + t0.aN),
										A2($elm$core$Basics$atan2, t1.J + t1.aP, t1.I + t1.aN),
										cw,
										A7(
											$gampleman$elm_visualization$Shape$Pie$makeArc,
											t0.I,
											t0.J,
											rc0,
											A2($elm$core$Basics$atan2, t0.ag, t0.af),
											A2($elm$core$Basics$atan2, t0.aP, t0.aN),
											!cw,
											p))))
							]);
					} else {
						return _List_fromArray(
							[
								$folkertdev$one_true_path_experiment$SubPath$close(
								A2(
									$folkertdev$one_true_path_experiment$SubPath$connect,
									A6($gampleman$elm_visualization$Shape$Pie$arc_, 0, 0, r0, a10, a00, cw),
									outerRing))
							]);
					}
				}
			}
		}
	}();
	return path;
};
var $gampleman$elm_visualization$Shape$arc = $gampleman$elm_visualization$Shape$Pie$arc;
var $gampleman$elm_visualization$Shape$Pie$centroid = function (arcData) {
	var r = (arcData.kZ + arcData.ic) / 2;
	var a = ((arcData.du + arcData.eX) / 2) - ($elm$core$Basics$pi / 2);
	return _Utils_Tuple2(
		$elm$core$Basics$cos(a) * r,
		$elm$core$Basics$sin(a) * r);
};
var $gampleman$elm_visualization$Shape$centroid = $gampleman$elm_visualization$Shape$Pie$centroid;
var $gampleman$elm_visualization$Shape$defaultPieConfig = {eM: 0, eX: 2 * $elm$core$Basics$pi, kZ: 0, ic: 100, fB: 0, fC: 0, iK: $elm$core$Basics$compare, du: 0, iX: $elm$core$Basics$identity};
var $elm_community$typed_svg$TypedSvg$Attributes$dy = function (length) {
	return A2(
		$elm_community$typed_svg$TypedSvg$Core$attribute,
		'dy',
		$elm_community$typed_svg$TypedSvg$TypesToStrings$lengthToString(length));
};
var $folkertdev$elm_deque$Deque$empty = $folkertdev$elm_deque$Internal$empty;
var $folkertdev$one_true_path_experiment$LowLevel$Command$merge = F2(
	function (instruction1, instruction2) {
		var _v0 = _Utils_Tuple2(instruction1, instruction2);
		_v0$5:
		while (true) {
			switch (_v0.a.$) {
				case 0:
					if (!_v0.b.$) {
						var p1 = _v0.a.a;
						var p2 = _v0.b.a;
						return $elm$core$Result$Ok(
							$folkertdev$one_true_path_experiment$LowLevel$Command$LineTo(
								_Utils_ap(p1, p2)));
					} else {
						break _v0$5;
					}
				case 1:
					if (_v0.b.$ === 1) {
						var p1 = _v0.a.a;
						var p2 = _v0.b.a;
						return $elm$core$Result$Ok(
							$folkertdev$one_true_path_experiment$LowLevel$Command$CurveTo(
								_Utils_ap(p1, p2)));
					} else {
						break _v0$5;
					}
				case 2:
					if (_v0.b.$ === 2) {
						var p1 = _v0.a.a;
						var p2 = _v0.b.a;
						return $elm$core$Result$Ok(
							$folkertdev$one_true_path_experiment$LowLevel$Command$QuadraticBezierCurveTo(
								_Utils_ap(p1, p2)));
					} else {
						break _v0$5;
					}
				case 3:
					if (_v0.b.$ === 3) {
						var p1 = _v0.a.a;
						var p2 = _v0.b.a;
						return $elm$core$Result$Ok(
							$folkertdev$one_true_path_experiment$LowLevel$Command$EllipticalArc(
								_Utils_ap(p1, p2)));
					} else {
						break _v0$5;
					}
				default:
					if (_v0.b.$ === 4) {
						var _v1 = _v0.a;
						var _v2 = _v0.b;
						return $elm$core$Result$Ok($folkertdev$one_true_path_experiment$LowLevel$Command$ClosePath);
					} else {
						break _v0$5;
					}
			}
		}
		return $elm$core$Result$Err(
			_Utils_Tuple2(instruction1, instruction2));
	});
var $folkertdev$elm_deque$Internal$toList = function (deque) {
	return _Utils_ap(
		deque.V,
		$elm$core$List$reverse(deque.W));
};
var $folkertdev$elm_deque$Deque$toList = A2($elm$core$Basics$composeL, $folkertdev$elm_deque$Internal$toList, $folkertdev$elm_deque$Deque$unwrap);
var $folkertdev$one_true_path_experiment$SubPath$compressHelper = function (drawtos) {
	var folder = F2(
		function (instruction, _v3) {
			var previous = _v3.a;
			var accum = _v3.b;
			var _v2 = A2($folkertdev$one_true_path_experiment$LowLevel$Command$merge, previous, instruction);
			if (!_v2.$) {
				var merged = _v2.a;
				return _Utils_Tuple2(merged, accum);
			} else {
				return _Utils_Tuple2(
					instruction,
					A2($elm$core$List$cons, previous, accum));
			}
		});
	var _v0 = $folkertdev$elm_deque$Deque$toList(drawtos);
	if (!_v0.b) {
		return $folkertdev$elm_deque$Deque$empty;
	} else {
		var first = _v0.a;
		var rest = _v0.b;
		return $folkertdev$elm_deque$Deque$fromList(
			$elm$core$List$reverse(
				function (_v1) {
					var a = _v1.a;
					var b = _v1.b;
					return A2($elm$core$List$cons, a, b);
				}(
					A3(
						$elm$core$List$foldl,
						folder,
						_Utils_Tuple2(first, _List_Nil),
						rest))));
	}
};
var $folkertdev$one_true_path_experiment$SubPath$compress = function (subpath) {
	if (subpath.$ === 1) {
		return $folkertdev$one_true_path_experiment$SubPath$Empty;
	} else {
		var data = subpath.a;
		return $folkertdev$one_true_path_experiment$SubPath$SubPath(
			_Utils_update(
				data,
				{
					g7: $folkertdev$one_true_path_experiment$SubPath$compressHelper(data.g7)
				}));
	}
};
var $folkertdev$svg_path_lowlevel$Path$LowLevel$DecimalPlaces = $elm$core$Basics$identity;
var $folkertdev$svg_path_lowlevel$Path$LowLevel$decimalPlaces = $elm$core$Basics$identity;
var $folkertdev$one_true_path_experiment$SubPath$defaultConfig = {dZ: $elm$core$Maybe$Nothing, ed: false};
var $folkertdev$one_true_path_experiment$SubPath$optionFolder = F2(
	function (option, config) {
		if (!option.$) {
			var n = option.a;
			return _Utils_update(
				config,
				{
					dZ: $elm$core$Maybe$Just(n)
				});
		} else {
			return _Utils_update(
				config,
				{ed: true});
		}
	});
var $folkertdev$svg_path_lowlevel$Path$LowLevel$Absolute = 1;
var $folkertdev$svg_path_lowlevel$Path$LowLevel$ClosePath = {$: 8};
var $folkertdev$svg_path_lowlevel$Path$LowLevel$CurveTo = F2(
	function (a, b) {
		return {$: 3, a: a, b: b};
	});
var $folkertdev$svg_path_lowlevel$Path$LowLevel$EllipticalArc = F2(
	function (a, b) {
		return {$: 7, a: a, b: b};
	});
var $folkertdev$svg_path_lowlevel$Path$LowLevel$LineTo = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $folkertdev$svg_path_lowlevel$Path$LowLevel$QuadraticBezierCurveTo = F2(
	function (a, b) {
		return {$: 5, a: a, b: b};
	});
var $folkertdev$one_true_path_experiment$LowLevel$Command$toLowLevelDrawTo = function (drawto) {
	switch (drawto.$) {
		case 0:
			var coordinates = drawto.a;
			return A2($folkertdev$svg_path_lowlevel$Path$LowLevel$LineTo, 1, coordinates);
		case 1:
			var coordinates = drawto.a;
			return A2($folkertdev$svg_path_lowlevel$Path$LowLevel$CurveTo, 1, coordinates);
		case 2:
			var coordinates = drawto.a;
			return A2($folkertdev$svg_path_lowlevel$Path$LowLevel$QuadraticBezierCurveTo, 1, coordinates);
		case 3:
			var _arguments = drawto.a;
			return A2($folkertdev$svg_path_lowlevel$Path$LowLevel$EllipticalArc, 1, _arguments);
		default:
			return $folkertdev$svg_path_lowlevel$Path$LowLevel$ClosePath;
	}
};
var $folkertdev$svg_path_lowlevel$Path$LowLevel$MoveTo = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $folkertdev$one_true_path_experiment$LowLevel$Command$toLowLevelMoveTo = function (_v0) {
	var target = _v0;
	return A2($folkertdev$svg_path_lowlevel$Path$LowLevel$MoveTo, 1, target);
};
var $folkertdev$one_true_path_experiment$SubPath$toLowLevel = function (subpath) {
	if (subpath.$ === 1) {
		return $elm$core$Maybe$Nothing;
	} else {
		var moveto = subpath.a.h$;
		var drawtos = subpath.a.g7;
		return $elm$core$Maybe$Just(
			{
				g7: A2(
					$elm$core$List$map,
					$folkertdev$one_true_path_experiment$LowLevel$Command$toLowLevelDrawTo,
					$folkertdev$elm_deque$Deque$toList(drawtos)),
				h$: $folkertdev$one_true_path_experiment$LowLevel$Command$toLowLevelMoveTo(moveto)
			});
	}
};
var $folkertdev$svg_path_lowlevel$Path$LowLevel$defaultConfig = {c7: $elm$core$String$fromFloat};
var $folkertdev$svg_path_lowlevel$Path$LowLevel$roundTo = F2(
	function (n, value) {
		if (!n) {
			return $elm$core$String$fromInt(
				$elm$core$Basics$round(value));
		} else {
			var sign = (value < 0.0) ? '-' : '';
			var exp = A2($elm$core$Basics$pow, 10, n);
			var raised = $elm$core$Basics$abs(
				$elm$core$Basics$round(value * exp));
			var decimals = raised % exp;
			return (!decimals) ? _Utils_ap(
				sign,
				$elm$core$String$fromInt((raised / exp) | 0)) : (sign + ($elm$core$String$fromInt((raised / exp) | 0) + ('.' + $elm$core$String$fromInt(decimals))));
		}
	});
var $folkertdev$svg_path_lowlevel$Path$LowLevel$optionFolder = F2(
	function (option, config) {
		var n = option;
		return _Utils_update(
			config,
			{
				c7: $folkertdev$svg_path_lowlevel$Path$LowLevel$roundTo(n)
			});
	});
var $folkertdev$svg_path_lowlevel$Path$LowLevel$accumulateOptions = A2($elm$core$List$foldl, $folkertdev$svg_path_lowlevel$Path$LowLevel$optionFolder, $folkertdev$svg_path_lowlevel$Path$LowLevel$defaultConfig);
var $folkertdev$svg_path_lowlevel$Path$LowLevel$isEmpty = function (command) {
	switch (command.$) {
		case 0:
			var mode = command.a;
			var coordinates = command.b;
			return $elm$core$List$isEmpty(coordinates);
		case 1:
			var mode = command.a;
			var coordinates = command.b;
			return $elm$core$List$isEmpty(coordinates);
		case 2:
			var mode = command.a;
			var coordinates = command.b;
			return $elm$core$List$isEmpty(coordinates);
		case 3:
			var mode = command.a;
			var coordinates = command.b;
			return $elm$core$List$isEmpty(coordinates);
		case 4:
			var mode = command.a;
			var coordinates = command.b;
			return $elm$core$List$isEmpty(coordinates);
		case 5:
			var mode = command.a;
			var coordinates = command.b;
			return $elm$core$List$isEmpty(coordinates);
		case 6:
			var mode = command.a;
			var coordinates = command.b;
			return $elm$core$List$isEmpty(coordinates);
		case 7:
			var mode = command.a;
			var _arguments = command.b;
			return $elm$core$List$isEmpty(_arguments);
		default:
			return false;
	}
};
var $elm$core$Char$toLower = _Char_toLower;
var $folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCharacter = F2(
	function (mode, character) {
		if (mode === 1) {
			return $elm$core$String$fromChar(
				$elm$core$Char$toUpper(character));
		} else {
			return $elm$core$String$fromChar(
				$elm$core$Char$toLower(character));
		}
	});
var $folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCoordinate = F2(
	function (config, _v0) {
		var x = _v0.a;
		var y = _v0.b;
		return config.c7(x) + (',' + config.c7(y));
	});
var $folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCoordinate2 = F2(
	function (config, _v0) {
		var c1 = _v0.a;
		var c2 = _v0.b;
		return A2($folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCoordinate, config, c1) + (' ' + A2($folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCoordinate, config, c2));
	});
var $folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCoordinate3 = F2(
	function (config, _v0) {
		var c1 = _v0.a;
		var c2 = _v0.b;
		var c3 = _v0.c;
		return A2($folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCoordinate, config, c1) + (' ' + (A2($folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCoordinate, config, c2) + (' ' + A2($folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCoordinate, config, c3))));
	});
var $folkertdev$svg_path_lowlevel$Path$LowLevel$encodeFlags = function (_v0) {
	var arcFlag = _v0.a;
	var direction = _v0.b;
	var _v1 = _Utils_Tuple2(arcFlag, direction);
	if (_v1.a === 1) {
		if (!_v1.b) {
			var _v2 = _v1.a;
			var _v3 = _v1.b;
			return _Utils_Tuple2(1, 0);
		} else {
			var _v6 = _v1.a;
			var _v7 = _v1.b;
			return _Utils_Tuple2(1, 1);
		}
	} else {
		if (!_v1.b) {
			var _v4 = _v1.a;
			var _v5 = _v1.b;
			return _Utils_Tuple2(0, 0);
		} else {
			var _v8 = _v1.a;
			var _v9 = _v1.b;
			return _Utils_Tuple2(0, 1);
		}
	}
};
var $folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyEllipticalArcArgument = F2(
	function (config, _v0) {
		var radii = _v0.a2;
		var xAxisRotate = _v0.aO;
		var arcFlag = _v0.eA;
		var direction = _v0.g3;
		var target = _v0.au;
		var _v1 = $folkertdev$svg_path_lowlevel$Path$LowLevel$encodeFlags(
			_Utils_Tuple2(arcFlag, direction));
		var arc = _v1.a;
		var sweep = _v1.b;
		return A2(
			$elm$core$String$join,
			' ',
			_List_fromArray(
				[
					A2($folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCoordinate, config, radii),
					$elm$core$String$fromFloat(xAxisRotate),
					$elm$core$String$fromInt(arc),
					$elm$core$String$fromInt(sweep),
					A2($folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCoordinate, config, target)
				]));
	});
var $folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyDrawTo = F2(
	function (config, command) {
		if ($folkertdev$svg_path_lowlevel$Path$LowLevel$isEmpty(command)) {
			return '';
		} else {
			switch (command.$) {
				case 0:
					var mode = command.a;
					var coordinates = command.b;
					return _Utils_ap(
						A2($folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCharacter, mode, 'L'),
						A2(
							$elm$core$String$join,
							' ',
							A2(
								$elm$core$List$map,
								$folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCoordinate(config),
								coordinates)));
				case 1:
					var mode = command.a;
					var coordinates = command.b;
					return $elm$core$List$isEmpty(coordinates) ? '' : _Utils_ap(
						A2($folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCharacter, mode, 'H'),
						A2(
							$elm$core$String$join,
							' ',
							A2($elm$core$List$map, $elm$core$String$fromFloat, coordinates)));
				case 2:
					var mode = command.a;
					var coordinates = command.b;
					return _Utils_ap(
						A2($folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCharacter, mode, 'V'),
						A2(
							$elm$core$String$join,
							' ',
							A2($elm$core$List$map, $elm$core$String$fromFloat, coordinates)));
				case 3:
					var mode = command.a;
					var coordinates = command.b;
					return _Utils_ap(
						A2($folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCharacter, mode, 'C'),
						A2(
							$elm$core$String$join,
							' ',
							A2(
								$elm$core$List$map,
								$folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCoordinate3(config),
								coordinates)));
				case 4:
					var mode = command.a;
					var coordinates = command.b;
					return _Utils_ap(
						A2($folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCharacter, mode, 'S'),
						A2(
							$elm$core$String$join,
							' ',
							A2(
								$elm$core$List$map,
								$folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCoordinate2(config),
								coordinates)));
				case 5:
					var mode = command.a;
					var coordinates = command.b;
					return _Utils_ap(
						A2($folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCharacter, mode, 'Q'),
						A2(
							$elm$core$String$join,
							' ',
							A2(
								$elm$core$List$map,
								$folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCoordinate2(config),
								coordinates)));
				case 6:
					var mode = command.a;
					var coordinates = command.b;
					return _Utils_ap(
						A2($folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCharacter, mode, 'T'),
						A2(
							$elm$core$String$join,
							' ',
							A2(
								$elm$core$List$map,
								$folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCoordinate(config),
								coordinates)));
				case 7:
					var mode = command.a;
					var _arguments = command.b;
					return _Utils_ap(
						A2($folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCharacter, mode, 'A'),
						A2(
							$elm$core$String$join,
							' ',
							A2(
								$elm$core$List$map,
								$folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyEllipticalArcArgument(config),
								_arguments)));
				default:
					return 'Z';
			}
		}
	});
var $folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyMoveTo = F2(
	function (config, _v0) {
		var mode = _v0.a;
		var coordinate = _v0.b;
		if (mode === 1) {
			return 'M' + A2($folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCoordinate, config, coordinate);
		} else {
			return 'm' + A2($folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCoordinate, config, coordinate);
		}
	});
var $folkertdev$svg_path_lowlevel$Path$LowLevel$toStringSubPath = F2(
	function (config, _v0) {
		var moveto = _v0.h$;
		var drawtos = _v0.g7;
		return A2($folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyMoveTo, config, moveto) + (' ' + A2(
			$elm$core$String$join,
			' ',
			A2(
				$elm$core$List$map,
				$folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyDrawTo(config),
				drawtos)));
	});
var $folkertdev$svg_path_lowlevel$Path$LowLevel$toStringWith = F2(
	function (options, subpaths) {
		var config = $folkertdev$svg_path_lowlevel$Path$LowLevel$accumulateOptions(options);
		return A2(
			$elm$core$String$join,
			' ',
			A2(
				$elm$core$List$map,
				$folkertdev$svg_path_lowlevel$Path$LowLevel$toStringSubPath(config),
				subpaths));
	});
var $folkertdev$one_true_path_experiment$SubPath$toStringWith = F2(
	function (options, subpath) {
		var config = A3($elm$core$List$foldl, $folkertdev$one_true_path_experiment$SubPath$optionFolder, $folkertdev$one_true_path_experiment$SubPath$defaultConfig, options);
		var lowLevelOptions = function () {
			var _v0 = config.dZ;
			if (_v0.$ === 1) {
				return _List_Nil;
			} else {
				var n = _v0.a;
				return _List_fromArray(
					[
						$folkertdev$svg_path_lowlevel$Path$LowLevel$decimalPlaces(n)
					]);
			}
		}();
		return A2(
			$elm$core$Maybe$withDefault,
			'',
			A2(
				$elm$core$Maybe$map,
				A2(
					$elm$core$Basics$composeL,
					$folkertdev$svg_path_lowlevel$Path$LowLevel$toStringWith(lowLevelOptions),
					$elm$core$List$singleton),
				$folkertdev$one_true_path_experiment$SubPath$toLowLevel(
					(config.ed ? $folkertdev$one_true_path_experiment$SubPath$compress : $elm$core$Basics$identity)(subpath))));
	});
var $folkertdev$one_true_path_experiment$SubPath$toString = function (subpath) {
	return A2($folkertdev$one_true_path_experiment$SubPath$toStringWith, _List_Nil, subpath);
};
var $folkertdev$one_true_path_experiment$Path$toString = A2(
	$elm$core$Basics$composeL,
	$elm$core$String$join(' '),
	$elm$core$List$map($folkertdev$one_true_path_experiment$SubPath$toString));
var $folkertdev$one_true_path_experiment$Path$element = F2(
	function (path, attributes) {
		return A2(
			$elm$svg$Svg$path,
			A2(
				$elm$core$List$cons,
				$elm$svg$Svg$Attributes$d(
					$folkertdev$one_true_path_experiment$Path$toString(path)),
				attributes),
			_List_Nil);
	});
var $elm_community$typed_svg$TypedSvg$Types$Em = function (a) {
	return {$: 1, a: a};
};
var $elm_community$typed_svg$TypedSvg$Types$em = $elm_community$typed_svg$TypedSvg$Types$Em;
var $elm_community$typed_svg$TypedSvg$TypesToStrings$paintToString = function (paint) {
	switch (paint.$) {
		case 0:
			var color = paint.a;
			return $avh4$elm_color$Color$toCssString(color);
		case 1:
			var string = paint.a;
			return $elm$core$String$concat(
				_List_fromArray(
					['var(' + (string + ')')]));
		case 2:
			var string = paint.a;
			return $elm$core$String$concat(
				_List_fromArray(
					['url(#', string, ')']));
		case 3:
			return 'context-fill';
		case 4:
			return 'context-stroke';
		default:
			return 'none';
	}
};
var $elm_community$typed_svg$TypedSvg$Attributes$fill = A2(
	$elm$core$Basics$composeL,
	$elm_community$typed_svg$TypedSvg$Core$attribute('fill'),
	$elm_community$typed_svg$TypedSvg$TypesToStrings$paintToString);
var $elm$core$List$sortWith = _List_sortWith;
var $elm$core$Dict$values = function (dict) {
	return A3(
		$elm$core$Dict$foldr,
		F3(
			function (key, value, valueList) {
				return A2($elm$core$List$cons, value, valueList);
			}),
		_List_Nil,
		dict);
};
var $gampleman$elm_visualization$Shape$Pie$pie = F2(
	function (settings, data) {
		var unsafeGet = F2(
			function (index, array) {
				unsafeGet:
				while (true) {
					var _v0 = A2($elm$core$Array$get, index, array);
					if (!_v0.$) {
						var v = _v0.a;
						return v;
					} else {
						var $temp$index = index,
							$temp$array = array;
						index = $temp$index;
						array = $temp$array;
						continue unsafeGet;
					}
				}
			});
		var summer = F2(
			function (a, b) {
				var v = settings.iX(a);
				return (v > 0) ? (v + b) : b;
			});
		var sum = A3($elm$core$List$foldr, summer, 0, data);
		var sortedIndices = A2(
			$elm$core$Basics$composeL,
			A2(
				$elm$core$Basics$composeL,
				$elm$core$List$map($elm$core$Tuple$first),
				$elm$core$List$sortWith(
					F2(
						function (_v2, _v3) {
							var a = _v2.b;
							var b = _v3.b;
							return A2(settings.iK, a, b);
						}))),
			$elm$core$List$indexedMap($elm$core$Tuple$pair));
		var dataArray = $elm$core$Array$fromList(data);
		var da = A2(
			$elm$core$Basics$min,
			2 * $elm$core$Basics$pi,
			A2($elm$core$Basics$max, (-2) * $elm$core$Basics$pi, settings.eX - settings.du));
		var p = A2(
			$elm$core$Basics$min,
			$elm$core$Basics$abs(da) / $elm$core$List$length(data),
			settings.fB);
		var pa = p * ((da < 0) ? (-1) : 1);
		var k = (!sum) ? 0 : ((da - ($elm$core$List$length(data) * pa)) / sum);
		var computeValue = F2(
			function (el, angle) {
				var value = settings.iX(el);
				return {
					eM: settings.eM,
					eX: (angle + ((value > 0) ? (value * k) : 0)) + pa,
					kZ: settings.kZ,
					ic: settings.ic,
					fB: p,
					fC: settings.fC,
					du: angle
				};
			});
		var helper = F2(
			function (index, _v1) {
				var angle = _v1.a;
				var result = _v1.b;
				var r = A2(
					computeValue,
					A2(unsafeGet, index, dataArray),
					angle);
				return _Utils_Tuple2(
					r.eX,
					A3($elm$core$Dict$insert, index, r, result));
			});
		return $elm$core$Dict$values(
			A3(
				$elm$core$List$foldl,
				helper,
				_Utils_Tuple2(settings.du, $elm$core$Dict$empty),
				sortedIndices(data)).b);
	});
var $gampleman$elm_visualization$Shape$pie = $gampleman$elm_visualization$Shape$Pie$pie;
var $author$project$Page$Trends$pieColorsHelp = function (toColor) {
	return _List_fromArray(
		[
			A3(toColor, 176, 140, 212),
			A3(toColor, 166, 230, 235),
			A3(toColor, 180, 212, 140),
			A3(toColor, 247, 212, 163),
			A3(toColor, 212, 140, 149),
			A3(toColor, 220, 174, 90)
		]);
};
var $author$project$Page$Trends$pieColors = $author$project$Page$Trends$pieColorsHelp($avh4$elm_color$Color$rgb255);
var $author$project$Page$Trends$pieHeight = 504;
var $author$project$Page$Trends$pieColorsAsElements = $author$project$Page$Trends$pieColorsHelp($mdgriffith$elm_ui$Element$rgb255);
var $author$project$Page$Trends$viewPieColor = function (color) {
	return A2(
		$mdgriffith$elm_ui$Element$el,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$Background$color(color),
				$mdgriffith$elm_ui$Element$Border$rounded(5),
				$mdgriffith$elm_ui$Element$width(
				$mdgriffith$elm_ui$Element$px(20)),
				$mdgriffith$elm_ui$Element$height(
				$mdgriffith$elm_ui$Element$px(20)),
				$mdgriffith$elm_ui$Element$alignRight
			]),
		$mdgriffith$elm_ui$Element$none);
};
var $author$project$Page$Trends$pieLegendName = function (_v0) {
	var name = _v0.a;
	var color = _v0.b;
	return A2(
		$mdgriffith$elm_ui$Element$row,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$spacing(10),
				$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
			]),
		_List_fromArray(
			[
				A2(
				$mdgriffith$elm_ui$Element$column,
				_List_fromArray(
					[$mdgriffith$elm_ui$Element$alignLeft]),
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$text(name)
					])),
				$author$project$Page$Trends$viewPieColor(color)
			]));
};
var $author$project$Page$Trends$pieLegend = function (names) {
	var legendData = A3($elm$core$List$map2, $elm$core$Tuple$pair, names, $author$project$Page$Trends$pieColorsAsElements);
	return A2(
		$mdgriffith$elm_ui$Element$column,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$Font$size(18),
				$mdgriffith$elm_ui$Element$spacing(10)
			]),
		A2($elm$core$List$map, $author$project$Page$Trends$pieLegendName, legendData));
};
var $author$project$Page$Trends$pieWidth = 504;
var $author$project$Page$Trends$radius = A2($elm$core$Basics$min, $author$project$Page$Trends$pieWidth, $author$project$Page$Trends$pieHeight) / 2;
var $elm_community$typed_svg$TypedSvg$Attributes$stroke = A2(
	$elm$core$Basics$composeL,
	$elm_community$typed_svg$TypedSvg$Core$attribute('stroke'),
	$elm_community$typed_svg$TypedSvg$TypesToStrings$paintToString);
var $avh4$elm_color$Color$white = A4($avh4$elm_color$Color$RgbaSpace, 255 / 255, 255 / 255, 255 / 255, 1.0);
var $author$project$Page$Trends$viewPlaintiffAttorneyChart = function (counts) {
	var total = $elm$core$List$sum(
		A2(
			$elm$core$List$map,
			function ($) {
				return $.i2;
			},
			counts));
	var shares = A2(
		$elm$core$List$map,
		function (stats) {
			return _Utils_Tuple2(stats.l3, stats.i2 / total);
		},
		counts);
	var pieData = A2(
		$gampleman$elm_visualization$Shape$pie,
		_Utils_update(
			$gampleman$elm_visualization$Shape$defaultPieConfig,
			{ic: $author$project$Page$Trends$radius}),
		A2($elm$core$List$map, $elm$core$Tuple$second, shares));
	var makeLabel = F2(
		function (slice, _v1) {
			var name = _v1.a;
			var percentage = _v1.b;
			var label = A2(
				$elm$core$String$left,
				4,
				$elm$core$String$fromFloat(percentage * 100));
			var _v0 = $gampleman$elm_visualization$Shape$centroid(
				_Utils_update(
					slice,
					{kZ: $author$project$Page$Trends$radius - 120, ic: $author$project$Page$Trends$radius - 40}));
			var x = _v0.a;
			var y = _v0.b;
			return A2(
				$elm_community$typed_svg$TypedSvg$text_,
				_List_fromArray(
					[
						$elm_community$typed_svg$TypedSvg$Attributes$transform(
						_List_fromArray(
							[
								A2($elm_community$typed_svg$TypedSvg$Types$Translate, x, y)
							])),
						$elm_community$typed_svg$TypedSvg$Attributes$dy(
						$elm_community$typed_svg$TypedSvg$Types$em(0.35)),
						$elm_community$typed_svg$TypedSvg$Attributes$textAnchor(2)
					]),
				_List_fromArray(
					[
						$elm_community$typed_svg$TypedSvg$Core$text(label + '%')
					]));
		});
	var colors = $elm$core$Array$fromList($author$project$Page$Trends$pieColors);
	var makeSlice = F2(
		function (index, datum) {
			return A2(
				$folkertdev$one_true_path_experiment$Path$element,
				$gampleman$elm_visualization$Shape$arc(datum),
				_List_fromArray(
					[
						$elm_community$typed_svg$TypedSvg$Attributes$fill(
						$elm_community$typed_svg$TypedSvg$Types$Paint(
							A2(
								$elm$core$Maybe$withDefault,
								$avh4$elm_color$Color$black,
								A2($elm$core$Array$get, index, colors)))),
						$elm_community$typed_svg$TypedSvg$Attributes$stroke(
						$elm_community$typed_svg$TypedSvg$Types$Paint($avh4$elm_color$Color$white))
					]));
		});
	return A2(
		$mdgriffith$elm_ui$Element$column,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$padding(20),
				$mdgriffith$elm_ui$Element$spacing(20),
				$mdgriffith$elm_ui$Element$centerX,
				$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
			]),
		_List_fromArray(
			[
				A2(
				$mdgriffith$elm_ui$Element$paragraph,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$Region$heading(1),
						$mdgriffith$elm_ui$Element$Font$size(20),
						$mdgriffith$elm_ui$Element$Font$bold,
						$mdgriffith$elm_ui$Element$Font$center
					]),
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$text('Plaintiff attorney listed on detainer warrants, Davidson Co. TN')
					])),
				A2(
				$mdgriffith$elm_ui$Element$row,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$padding(10),
						$mdgriffith$elm_ui$Element$spacing(40)
					]),
				_List_fromArray(
					[
						$author$project$Page$Trends$pieLegend(
						A2($elm$core$List$map, $elm$core$Tuple$first, shares)),
						A2(
						$mdgriffith$elm_ui$Element$column,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$width(
								A2($mdgriffith$elm_ui$Element$minimum, $author$project$Page$Trends$pieWidth, $mdgriffith$elm_ui$Element$shrink)),
								$mdgriffith$elm_ui$Element$height(
								$mdgriffith$elm_ui$Element$px($author$project$Page$Trends$pieHeight))
							]),
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$html(
								A2(
									$elm_community$typed_svg$TypedSvg$svg,
									_List_fromArray(
										[
											A4($elm_community$typed_svg$TypedSvg$Attributes$viewBox, 0, 0, $author$project$Page$Trends$pieWidth, $author$project$Page$Trends$pieHeight)
										]),
									_List_fromArray(
										[
											A2(
											$elm_community$typed_svg$TypedSvg$g,
											_List_fromArray(
												[
													$elm_community$typed_svg$TypedSvg$Attributes$transform(
													_List_fromArray(
														[
															A2($elm_community$typed_svg$TypedSvg$Types$Translate, $author$project$Page$Trends$pieWidth / 2, $author$project$Page$Trends$pieHeight / 2)
														]))
												]),
											_List_fromArray(
												[
													A2(
													$elm_community$typed_svg$TypedSvg$g,
													_List_Nil,
													A2($elm$core$List$indexedMap, makeSlice, pieData)),
													A2(
													$elm_community$typed_svg$TypedSvg$g,
													_List_Nil,
													A3($elm$core$List$map2, makeLabel, pieData, shares))
												]))
										])))
							]))
					]))
			]));
};
var $author$project$Page$Trends$view = F2(
	function (device, model) {
		return {
			gU: A2(
				$mdgriffith$elm_ui$Element$column,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$centerX,
						$mdgriffith$elm_ui$Element$width(
						A2($mdgriffith$elm_ui$Element$maximum, 1000, $mdgriffith$elm_ui$Element$fill)),
						$mdgriffith$elm_ui$Element$padding(20),
						$mdgriffith$elm_ui$Element$Font$size(14)
					]),
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Element$column,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$spacing(30),
								$mdgriffith$elm_ui$Element$centerX,
								$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
							]),
						_List_fromArray(
							[
								A2(
								$mdgriffith$elm_ui$Element$row,
								_List_Nil,
								_List_fromArray(
									[
										$author$project$Page$Trends$chart(model)
									])),
								A2(
								$mdgriffith$elm_ui$Element$row,
								_List_Nil,
								_List_fromArray(
									[
										$author$project$Page$Trends$viewDetainerWarrantsHistory(model.ew)
									])),
								A2(
								$mdgriffith$elm_ui$Element$row,
								_List_fromArray(
									[
										$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
									]),
								_List_fromArray(
									[
										$author$project$Page$Trends$viewPlaintiffAttorneyChart(model.ej)
									])),
								A2(
								$mdgriffith$elm_ui$Element$row,
								_List_fromArray(
									[
										$mdgriffith$elm_ui$Element$height(
										$mdgriffith$elm_ui$Element$px(30))
									]),
								_List_Nil),
								function () {
								var _v0 = model.dK;
								if (!_v0.$) {
									var amountAwardedHistory = _v0.a;
									return A2(
										$mdgriffith$elm_ui$Element$row,
										_List_Nil,
										_List_fromArray(
											[
												A2($author$project$Page$Trends$amountAwardedChart, model, amountAwardedHistory)
											]));
								} else {
									return $mdgriffith$elm_ui$Element$none;
								}
							}(),
								function () {
								var _v1 = model.el;
								if (!_v1.$) {
									var rollupMeta = _v1.a;
									return A2(
										$mdgriffith$elm_ui$Element$row,
										_List_fromArray(
											[$mdgriffith$elm_ui$Element$centerX]),
										_List_fromArray(
											[
												$mdgriffith$elm_ui$Element$text(
												'Detainer Warrants updated via Red Door Collective members as of: ' + $author$project$Page$Trends$dateFormatLong(rollupMeta.li))
											]));
								} else {
									return $mdgriffith$elm_ui$Element$none;
								}
							}()
							]))
					])),
			er: 'Trends'
		};
	});
var $author$project$Page$WarrantHelp$viewTextRow = function (text) {
	return A2(
		$mdgriffith$elm_ui$Element$row,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
				$mdgriffith$elm_ui$Element$padding(10),
				$mdgriffith$elm_ui$Element$Border$solid,
				$mdgriffith$elm_ui$Element$Border$color($author$project$Palette$grayLight),
				$mdgriffith$elm_ui$Element$Border$widthEach(
				{eH: 1, fb: 0, fT: 0, gd: 0})
			]),
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$text(text)
			]));
};
var $author$project$Page$WarrantHelp$viewDefendant = function (defendant) {
	return $author$project$Page$WarrantHelp$viewTextRow(defendant.h1);
};
var $author$project$Page$WarrantHelp$viewDefendants = function (warrant) {
	return A2(
		$mdgriffith$elm_ui$Element$column,
		_List_Nil,
		A2($elm$core$List$map, $author$project$Page$WarrantHelp$viewDefendant, warrant.g0));
};
var $author$project$Page$WarrantHelp$viewHeaderCell = function (text) {
	return A2(
		$mdgriffith$elm_ui$Element$row,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
				$mdgriffith$elm_ui$Element$padding(10),
				$mdgriffith$elm_ui$Element$Font$semiBold,
				$mdgriffith$elm_ui$Element$Border$solid,
				$mdgriffith$elm_ui$Element$Border$color($author$project$Palette$grayLight),
				$mdgriffith$elm_ui$Element$Border$widthEach(
				{eH: 1, fb: 0, fT: 0, gd: 0})
			]),
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$text(text)
			]));
};
var $author$project$Page$WarrantHelp$viewWarrants = function (model) {
	return A2(
		$mdgriffith$elm_ui$Element$table,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$Font$size(14)
			]),
		{
			jY: _List_fromArray(
				[
					{
					am: $author$project$Page$WarrantHelp$viewHeaderCell('Docket ID'),
					i_: function (warrant) {
						return $author$project$Page$WarrantHelp$viewTextRow(warrant.g4);
					},
					i5: $mdgriffith$elm_ui$Element$fill
				},
					{
					am: $author$project$Page$WarrantHelp$viewHeaderCell('Court Date'),
					i_: A2(
						$elm$core$Basics$composeL,
						A2(
							$elm$core$Basics$composeL,
							A2(
								$elm$core$Basics$composeL,
								$author$project$Page$WarrantHelp$viewTextRow,
								$elm$core$Maybe$withDefault('')),
							$elm$core$Maybe$map($justinmimbs$date$Date$toIsoString)),
						function ($) {
							return $.bj;
						}),
					i5: $mdgriffith$elm_ui$Element$fill
				},
					{
					am: $author$project$Page$WarrantHelp$viewHeaderCell('File Date'),
					i_: A2(
						$elm$core$Basics$composeL,
						A2(
							$elm$core$Basics$composeL,
							A2(
								$elm$core$Basics$composeL,
								$author$project$Page$WarrantHelp$viewTextRow,
								$elm$core$Maybe$withDefault('')),
							$elm$core$Maybe$map($justinmimbs$date$Date$toIsoString)),
						function ($) {
							return $.hg;
						}),
					i5: $mdgriffith$elm_ui$Element$fill
				},
					{
					am: $author$project$Page$WarrantHelp$viewHeaderCell('Defendants'),
					i_: $author$project$Page$WarrantHelp$viewDefendants,
					i5: $mdgriffith$elm_ui$Element$fill
				},
					{
					am: $author$project$Page$WarrantHelp$viewHeaderCell('Plaintiff'),
					i_: A2(
						$elm$core$Basics$composeL,
						A2(
							$elm$core$Basics$composeL,
							A2(
								$elm$core$Basics$composeL,
								$author$project$Page$WarrantHelp$viewTextRow,
								$elm$core$Maybe$withDefault('')),
							$elm$core$Maybe$map(
								function ($) {
									return $.h1;
								})),
						function ($) {
							return $.ij;
						}),
					i5: $mdgriffith$elm_ui$Element$fill
				}
				]),
			eN: A2(
				$elm$core$List$filter,
				function (warrant) {
					return A2(
						$elm$core$List$any,
						function (defendant) {
							return A2(
								$elm$core$String$contains,
								$elm$core$String$toUpper(model.bz),
								$elm$core$String$toUpper(defendant.h1));
						},
						warrant.g0);
				},
				model.nk)
		});
};
var $author$project$Page$WarrantHelp$view = F2(
	function (profile, model) {
		return {
			gU: A2(
				$mdgriffith$elm_ui$Element$row,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$centerX,
						$mdgriffith$elm_ui$Element$padding(10),
						$mdgriffith$elm_ui$Element$Font$size(20),
						$mdgriffith$elm_ui$Element$width(
						A2(
							$mdgriffith$elm_ui$Element$minimum,
							400,
							A2($mdgriffith$elm_ui$Element$maximum, 1000, $mdgriffith$elm_ui$Element$fill)))
					]),
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Element$column,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$centerX,
								$mdgriffith$elm_ui$Element$spacing(10)
							]),
						_Utils_ap(
							function () {
								if (!profile.$) {
									var user = profile.a;
									return _List_fromArray(
										[
											A2(
											$mdgriffith$elm_ui$Element$row,
											_List_fromArray(
												[$mdgriffith$elm_ui$Element$centerX, $mdgriffith$elm_ui$Element$Font$center]),
											_List_fromArray(
												[
													$mdgriffith$elm_ui$Element$text('Hello ' + (user.kE + ', one of these may be your detainer warrant: '))
												]))
										]);
								} else {
									return _List_Nil;
								}
							}(),
							_List_fromArray(
								[
									A2(
									$mdgriffith$elm_ui$Element$row,
									_List_fromArray(
										[
											$mdgriffith$elm_ui$Element$centerX,
											$mdgriffith$elm_ui$Element$width(
											A2(
												$mdgriffith$elm_ui$Element$minimum,
												400,
												A2($mdgriffith$elm_ui$Element$maximum, 1000, $mdgriffith$elm_ui$Element$fill)))
										]),
									$elm$core$List$isEmpty(model.nk) ? _List_Nil : _List_fromArray(
										[
											$author$project$Page$WarrantHelp$viewWarrants(model)
										]))
								])))
					])),
			er: 'Warrant Help'
		};
	});
var $author$project$Page$Login = {$: 6};
var $author$project$Page$links = F2(
	function (settings, page) {
		return _Utils_ap(
			_List_fromArray(
				[
					{
					L: _Utils_eq(page, $author$project$Page$Trends),
					mR: 'Trends',
					cF: $author$project$Route$href($author$project$Route$Trends)
				},
					{
					L: _Utils_eq(page, $author$project$Page$About),
					mR: 'About',
					cF: $author$project$Route$href($author$project$Route$About)
				},
					{
					L: _Utils_eq(page, $author$project$Page$Actions),
					mR: 'Actions',
					cF: $author$project$Route$href($author$project$Route$Actions)
				},
					{
					L: _Utils_eq(page, $author$project$Page$Glossary),
					mR: 'Glossary',
					cF: $author$project$Route$href(
						$author$project$Route$Glossary($elm$core$Maybe$Nothing))
				}
				]),
			function () {
				var _v0 = settings.i$;
				if (!_v0.$) {
					return _List_fromArray(
						[
							{
							L: _Utils_eq(page, $author$project$Page$WarrantHelp),
							mR: 'Warrant Help',
							cF: $author$project$Route$href($author$project$Route$WarrantHelp)
						}
						]);
				} else {
					return _List_fromArray(
						[
							{
							L: _Utils_eq(page, $author$project$Page$Login),
							mR: 'Login',
							cF: $author$project$Route$href($author$project$Route$Login)
						}
						]);
				}
			}());
	});
var $mdgriffith$elm_ui$Element$Font$regular = A2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$fontWeight, $mdgriffith$elm_ui$Internal$Style$classes.m_);
var $author$project$Page$navBarLink = function (_v0) {
	var url = _v0.cF;
	var text = _v0.mR;
	var isActive = _v0.L;
	return A2(
		$mdgriffith$elm_ui$Element$link,
		_Utils_ap(
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$height(
					$mdgriffith$elm_ui$Element$px(40)),
					$mdgriffith$elm_ui$Element$Font$center,
					$mdgriffith$elm_ui$Element$width(
					A2(
						$mdgriffith$elm_ui$Element$maximum,
						300,
						A2($mdgriffith$elm_ui$Element$minimum, 150, $mdgriffith$elm_ui$Element$fill))),
					$mdgriffith$elm_ui$Element$mouseOver(
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$Background$color($author$project$Palette$redLight)
						])),
					$mdgriffith$elm_ui$Element$Background$color($author$project$Palette$sred),
					$mdgriffith$elm_ui$Element$centerY,
					$mdgriffith$elm_ui$Element$Font$size(20),
					$mdgriffith$elm_ui$Element$Font$regular
				]),
			isActive ? _List_fromArray(
				[
					$mdgriffith$elm_ui$Element$Border$widthEach(
					{eH: 3, fb: 0, fT: 0, gd: 0}),
					$mdgriffith$elm_ui$Element$Border$color($author$project$Palette$grayLight),
					$mdgriffith$elm_ui$Element$Font$color($author$project$Palette$grayLight)
				]) : _List_Nil),
		{
			hL: A2(
				$mdgriffith$elm_ui$Element$row,
				_List_fromArray(
					[$mdgriffith$elm_ui$Element$centerX]),
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$text(text)
					])),
			cF: url
		});
};
var $author$project$Page$rose = '🌹';
var $author$project$Page$roseSeparator = A2(
	$mdgriffith$elm_ui$Element$el,
	_List_fromArray(
		[
			$mdgriffith$elm_ui$Element$Background$color($author$project$Palette$sred),
			$mdgriffith$elm_ui$Element$padding(10)
		]),
	$mdgriffith$elm_ui$Element$text($author$project$Page$rose));
var $author$project$Page$dashboard = function (page) {
	return {
		L: _Utils_eq(page, $author$project$Page$OrganizerDashboard),
		hL: 'Dashboard',
		cF: $author$project$Route$href($author$project$Route$OrganizerDashboard)
	};
};
var $author$project$Search$detainerWarrantsDefault = {je: $elm$core$Maybe$Nothing, bj: $elm$core$Maybe$Nothing, eQ: $elm$core$Maybe$Nothing, g4: $elm$core$Maybe$Nothing, hg: $elm$core$Maybe$Nothing, ij: $elm$core$Maybe$Nothing, ik: $elm$core$Maybe$Nothing};
var $author$project$Page$detainerWarrants = function (page) {
	return {
		L: _Utils_eq(page, $author$project$Page$ManageDetainerWarrants),
		hL: 'Detainer Warrants',
		cF: $author$project$Route$href(
			$author$project$Route$ManageDetainerWarrants($author$project$Search$detainerWarrantsDefault))
	};
};
var $author$project$Search$plaintiffsDefault = {h1: $elm$core$Maybe$Nothing};
var $author$project$Page$plaintiffs = function (page) {
	return {
		L: _Utils_eq(page, $author$project$Page$ManagePlaintiffs),
		hL: 'Plaintiffs',
		cF: $author$project$Route$href(
			$author$project$Route$ManagePlaintiffs($author$project$Search$plaintiffsDefault))
	};
};
var $author$project$Page$adminOptions = F2(
	function (settings, page) {
		return _List_fromArray(
			[
				$author$project$Page$dashboard(page),
				$author$project$Page$detainerWarrants(page),
				$author$project$Page$plaintiffs(page)
			]);
	});
var $author$project$Page$defendantOptions = F2(
	function (settings, page) {
		return _List_Nil;
	});
var $author$project$Page$logoutLink = {
	L: false,
	hL: 'Logout',
	cF: $author$project$Route$href($author$project$Route$Logout)
};
var $author$project$Page$menuLink = function (_v0) {
	var label = _v0.hL;
	var url = _v0.cF;
	var isActive = _v0.L;
	return A2(
		$mdgriffith$elm_ui$Element$link,
		_Utils_ap(
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$height(
					$mdgriffith$elm_ui$Element$px(40)),
					$mdgriffith$elm_ui$Element$Font$center,
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
					$mdgriffith$elm_ui$Element$mouseOver(
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$Background$color($author$project$Palette$redLight)
						])),
					$mdgriffith$elm_ui$Element$Background$color($author$project$Palette$sred),
					$mdgriffith$elm_ui$Element$centerY,
					$mdgriffith$elm_ui$Element$Font$size(18),
					$mdgriffith$elm_ui$Element$padding(10)
				]),
			isActive ? _List_fromArray(
				[
					$mdgriffith$elm_ui$Element$Border$width(1),
					$mdgriffith$elm_ui$Element$Border$color($author$project$Palette$grayLight),
					$mdgriffith$elm_ui$Element$Font$color($author$project$Palette$grayLight)
				]) : _List_Nil),
		{
			hL: A2(
				$mdgriffith$elm_ui$Element$row,
				_List_Nil,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$text(label)
					])),
			cF: url
		});
};
var $author$project$Page$organizerOptions = F2(
	function (settings, page) {
		return _List_fromArray(
			[
				$author$project$Page$dashboard(page),
				$author$project$Page$detainerWarrants(page),
				$author$project$Page$plaintiffs(page)
			]);
	});
var $author$project$User$Admin = 1;
var $author$project$User$Defendant = 3;
var $author$project$User$Organizer = 2;
var $author$project$User$Superuser = 0;
var $author$project$User$hasPermission = F2(
	function (name, roles) {
		return !$elm$core$List$isEmpty(
			A2(
				$elm$core$List$filter,
				function (role) {
					return _Utils_eq(role.h1, name);
				},
				roles));
	});
var $author$project$User$permissions = function (user) {
	return A2($author$project$User$hasPermission, 'Superuser', user.dn) ? 0 : (A2($author$project$User$hasPermission, 'Admin', user.dn) ? 1 : (A2($author$project$User$hasPermission, 'Organizer', user.dn) ? 2 : (A2($author$project$User$hasPermission, 'Defendant', user.dn) ? 3 : 3)));
};
var $author$project$Page$accountOptions = F2(
	function (settings, page) {
		return A2(
			$mdgriffith$elm_ui$Element$column,
			_List_Nil,
			A2(
				$elm$core$List$map,
				$author$project$Page$menuLink,
				_Utils_ap(
					function () {
						var _v0 = settings.ni;
						if (!_v0.$) {
							var user = _v0.a;
							var _v1 = $author$project$User$permissions(user);
							switch (_v1) {
								case 0:
									return A2($author$project$Page$adminOptions, settings, page);
								case 1:
									return A2($author$project$Page$adminOptions, settings, page);
								case 2:
									return A2($author$project$Page$organizerOptions, settings, page);
								default:
									return A2($author$project$Page$defendantOptions, settings, page);
							}
						} else {
							return _List_Nil;
						}
					}(),
					_List_fromArray(
						[$author$project$Page$logoutLink]))));
	});
var $mdgriffith$elm_ui$Element$Region$description = A2($elm$core$Basics$composeL, $mdgriffith$elm_ui$Internal$Model$Describe, $mdgriffith$elm_ui$Internal$Model$Label);
var $Orasund$elm_ui_widgets$Internal$Button$iconButton = F2(
	function (style, _v0) {
		var onPress = _v0.lM;
		var text = _v0.mR;
		var icon = _v0.hr;
		return A2(
			$mdgriffith$elm_ui$Element$Input$button,
			_Utils_ap(
				style.kr,
				_Utils_ap(
					_Utils_eq(onPress, $elm$core$Maybe$Nothing) ? style.hu : style.ib,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$Region$description(text)
						]))),
			{
				hL: A2(
					$mdgriffith$elm_ui$Element$el,
					style.gU.kt,
					icon(
						_Utils_eq(onPress, $elm$core$Maybe$Nothing) ? style.gU.gU.hr.hu : style.gU.gU.hr.ib)),
				lM: onPress
			});
	});
var $Orasund$elm_ui_widgets$Widget$iconButton = function () {
	var fun = $Orasund$elm_ui_widgets$Internal$Button$iconButton;
	return fun;
}();
var $Orasund$elm_ui_widgets$Widget$Icon$elmFeather = F2(
	function (fun, icon) {
		return function (_v0) {
			var size = _v0.f$;
			var color = _v0.eL;
			return A2(
				$mdgriffith$elm_ui$Element$el,
				_List_Nil,
				$mdgriffith$elm_ui$Element$html(
					A2(
						fun,
						_List_fromArray(
							[
								$elm$svg$Svg$Attributes$width(
								$elm$core$String$fromInt(size)),
								$elm$svg$Svg$Attributes$height(
								$elm$core$String$fromInt(size)),
								$elm$svg$Svg$Attributes$stroke(
								$avh4$elm_color$Color$toCssString(color))
							]),
						icon)));
		};
	});
var $feathericons$elm_feather$FeatherIcons$menu = A2(
	$feathericons$elm_feather$FeatherIcons$makeBuilder,
	'menu',
	_List_fromArray(
		[
			A2(
			$elm$svg$Svg$line,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$x1('3'),
					$elm$svg$Svg$Attributes$y1('12'),
					$elm$svg$Svg$Attributes$x2('21'),
					$elm$svg$Svg$Attributes$y2('12')
				]),
			_List_Nil),
			A2(
			$elm$svg$Svg$line,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$x1('3'),
					$elm$svg$Svg$Attributes$y1('6'),
					$elm$svg$Svg$Attributes$x2('21'),
					$elm$svg$Svg$Attributes$y2('6')
				]),
			_List_Nil),
			A2(
			$elm$svg$Svg$line,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$x1('3'),
					$elm$svg$Svg$Attributes$y1('18'),
					$elm$svg$Svg$Attributes$x2('21'),
					$elm$svg$Svg$Attributes$y2('18')
				]),
			_List_Nil)
		]));
var $author$project$Page$menuIcon = A2($Orasund$elm_ui_widgets$Widget$Icon$elmFeather, $feathericons$elm_feather$FeatherIcons$toHtml, $feathericons$elm_feather$FeatherIcons$menu);
var $author$project$Page$menuIconStyle = {eL: $avh4$elm_color$Color$white, f$: 20};
var $author$project$Page$hamburgerMenu = F3(
	function (config, settings, page) {
		return A2(
			$Orasund$elm_ui_widgets$Widget$iconButton,
			{
				gU: {
					gU: {
						hr: {ht: $author$project$Page$menuIconStyle, hu: $author$project$Page$menuIconStyle, ib: $author$project$Page$menuIconStyle},
						mR: {j2: _List_Nil}
					},
					kt: _List_fromArray(
						[$mdgriffith$elm_ui$Element$centerX, $mdgriffith$elm_ui$Element$Font$center])
				},
				kr: _Utils_ap(
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$width(
							$mdgriffith$elm_ui$Element$px(40)),
							$mdgriffith$elm_ui$Element$height(
							$mdgriffith$elm_ui$Element$px(40)),
							$mdgriffith$elm_ui$Element$Background$color($author$project$Palette$sred),
							$mdgriffith$elm_ui$Element$centerX,
							$mdgriffith$elm_ui$Element$Font$center
						]),
					config.b$ ? _List_fromArray(
						[
							$mdgriffith$elm_ui$Element$below(
							A2($author$project$Page$accountOptions, settings, page))
						]) : _List_Nil),
				ht: _List_Nil,
				hu: _List_Nil,
				ib: _List_Nil
			},
			{
				hr: $author$project$Page$menuIcon,
				lM: $elm$core$Maybe$Just(config.lK),
				mR: 'Toggle menu'
			});
	});
var $author$project$Page$viewHamburgerMenu = F3(
	function (config, settings, page) {
		var _v0 = settings.i$;
		if (!_v0.$) {
			var viewer = _v0.a;
			return _List_fromArray(
				[
					A3($author$project$Page$hamburgerMenu, config, settings, page)
				]);
		} else {
			return _List_Nil;
		}
	});
var $author$project$Page$horizontalBar = F3(
	function (config, settings, page) {
		return A2(
			$mdgriffith$elm_ui$Element$row,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$centerY,
					$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
					$mdgriffith$elm_ui$Element$width(
					A2($mdgriffith$elm_ui$Element$minimum, 600, $mdgriffith$elm_ui$Element$fill)),
					$mdgriffith$elm_ui$Element$Font$color($author$project$Palette$white)
				]),
			A2(
				$elm$core$List$intersperse,
				$author$project$Page$roseSeparator,
				_Utils_ap(
					A2(
						$elm$core$List$map,
						$author$project$Page$navBarLink,
						A2($author$project$Page$links, settings, page)),
					A3($author$project$Page$viewHamburgerMenu, config, settings, page))));
	});
var $author$project$RedDoor$default = {d2: 10, hm: 75, i5: 50};
var $author$project$Logo$floatPx = A2($elm$core$Basics$composeL, $mdgriffith$elm_ui$Element$px, $elm$core$Basics$round);
var $author$project$Logo$name = A2(
	$mdgriffith$elm_ui$Element$textColumn,
	_List_fromArray(
		[
			$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink),
			$mdgriffith$elm_ui$Element$alignBottom
		]),
	_List_fromArray(
		[
			A2(
			$mdgriffith$elm_ui$Element$paragraph,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$Font$color($author$project$Palette$red)
				]),
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$text('Red')
				])),
			A2(
			$mdgriffith$elm_ui$Element$paragraph,
			_List_Nil,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$text('Door')
				])),
			A2(
			$mdgriffith$elm_ui$Element$paragraph,
			_List_Nil,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$text('Collective')
				]))
		]));
var $elm_community$typed_svg$TypedSvg$circle = $elm_community$typed_svg$TypedSvg$Core$node('circle');
var $elm_community$typed_svg$TypedSvg$Attributes$cx = function (length) {
	return A2(
		$elm_community$typed_svg$TypedSvg$Core$attribute,
		'cx',
		$elm_community$typed_svg$TypedSvg$TypesToStrings$lengthToString(length));
};
var $elm_community$typed_svg$TypedSvg$Attributes$InPx$cx = function (value) {
	return $elm_community$typed_svg$TypedSvg$Attributes$cx(
		$elm_community$typed_svg$TypedSvg$Types$px(value));
};
var $elm_community$typed_svg$TypedSvg$Attributes$cy = function (length) {
	return A2(
		$elm_community$typed_svg$TypedSvg$Core$attribute,
		'cy',
		$elm_community$typed_svg$TypedSvg$TypesToStrings$lengthToString(length));
};
var $elm_community$typed_svg$TypedSvg$Attributes$InPx$cy = function (value) {
	return $elm_community$typed_svg$TypedSvg$Attributes$cy(
		$elm_community$typed_svg$TypedSvg$Types$px(value));
};
var $elm_community$typed_svg$TypedSvg$Attributes$r = function (length) {
	return A2(
		$elm_community$typed_svg$TypedSvg$Core$attribute,
		'r',
		$elm_community$typed_svg$TypedSvg$TypesToStrings$lengthToString(length));
};
var $elm_community$typed_svg$TypedSvg$Attributes$InPx$r = function (value) {
	return $elm_community$typed_svg$TypedSvg$Attributes$r(
		$elm_community$typed_svg$TypedSvg$Types$px(value));
};
var $author$project$RedDoor$view = function (dimensions) {
	var window = function (attrs) {
		return A2(
			$elm_community$typed_svg$TypedSvg$rect,
			_Utils_ap(
				_List_fromArray(
					[
						$elm_community$typed_svg$TypedSvg$Attributes$fill(
						$elm_community$typed_svg$TypedSvg$Types$Paint($avh4$elm_color$Color$black)),
						$elm_community$typed_svg$TypedSvg$Attributes$InPx$width(dimensions.d2),
						$elm_community$typed_svg$TypedSvg$Attributes$InPx$height(dimensions.d2)
					]),
				attrs),
			_List_Nil);
	};
	var doorknob = A2(
		$elm_community$typed_svg$TypedSvg$g,
		_List_Nil,
		_List_fromArray(
			[
				A2(
				$elm_community$typed_svg$TypedSvg$circle,
				_List_fromArray(
					[
						$elm_community$typed_svg$TypedSvg$Attributes$InPx$cx(42),
						$elm_community$typed_svg$TypedSvg$Attributes$InPx$cy(50),
						$elm_community$typed_svg$TypedSvg$Attributes$fill(
						$elm_community$typed_svg$TypedSvg$Types$Paint($avh4$elm_color$Color$black)),
						$elm_community$typed_svg$TypedSvg$Attributes$InPx$r(3)
					]),
				_List_Nil)
			]));
	return A2(
		$elm_community$typed_svg$TypedSvg$svg,
		_List_fromArray(
			[
				A4($elm_community$typed_svg$TypedSvg$Attributes$viewBox, 0, 0, dimensions.i5, dimensions.hm)
			]),
		_List_fromArray(
			[
				A2(
				$elm_community$typed_svg$TypedSvg$rect,
				_List_fromArray(
					[
						$elm_community$typed_svg$TypedSvg$Attributes$InPx$x(0),
						$elm_community$typed_svg$TypedSvg$Attributes$InPx$y(0),
						$elm_community$typed_svg$TypedSvg$Attributes$InPx$width(dimensions.i5),
						$elm_community$typed_svg$TypedSvg$Attributes$InPx$height(dimensions.hm),
						$elm_community$typed_svg$TypedSvg$Attributes$fill(
						$elm_community$typed_svg$TypedSvg$Types$Paint($avh4$elm_color$Color$red))
					]),
				_List_Nil),
				A2(
				$elm_community$typed_svg$TypedSvg$g,
				_List_Nil,
				_List_fromArray(
					[
						window(
						_List_fromArray(
							[
								$elm_community$typed_svg$TypedSvg$Attributes$InPx$x(13),
								$elm_community$typed_svg$TypedSvg$Attributes$InPx$y(17)
							])),
						window(
						_List_fromArray(
							[
								$elm_community$typed_svg$TypedSvg$Attributes$InPx$x(27),
								$elm_community$typed_svg$TypedSvg$Attributes$InPx$y(17)
							])),
						window(
						_List_fromArray(
							[
								$elm_community$typed_svg$TypedSvg$Attributes$InPx$x(13),
								$elm_community$typed_svg$TypedSvg$Attributes$InPx$y(32)
							])),
						window(
						_List_fromArray(
							[
								$elm_community$typed_svg$TypedSvg$Attributes$InPx$x(27),
								$elm_community$typed_svg$TypedSvg$Attributes$InPx$y(32)
							]))
					])),
				doorknob
			]));
};
var $author$project$Logo$link = function () {
	var dimensions = $author$project$RedDoor$default;
	return A2(
		$mdgriffith$elm_ui$Element$link,
		_List_Nil,
		{
			hL: A2(
				$mdgriffith$elm_ui$Element$column,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink)
					]),
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Element$row,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$inFront($author$project$Logo$name),
								$mdgriffith$elm_ui$Element$centerX,
								$mdgriffith$elm_ui$Element$width(
								$author$project$Logo$floatPx(dimensions.i5 + 55)),
								$mdgriffith$elm_ui$Element$height(
								$author$project$Logo$floatPx(45 + dimensions.hm))
							]),
						_List_fromArray(
							[
								A2(
								$mdgriffith$elm_ui$Element$el,
								_List_fromArray(
									[
										$mdgriffith$elm_ui$Element$alignRight,
										$mdgriffith$elm_ui$Element$width(
										$author$project$Logo$floatPx(dimensions.i5)),
										$mdgriffith$elm_ui$Element$height(
										$author$project$Logo$floatPx(dimensions.hm))
									]),
								$mdgriffith$elm_ui$Element$html(
									$author$project$RedDoor$view($author$project$RedDoor$default)))
							]))
					])),
			cF: '/'
		});
}();
var $author$project$Page$desktopBar = F3(
	function (config, settings, page) {
		return A2(
			$mdgriffith$elm_ui$Element$row,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$Border$color($author$project$Palette$black),
					$mdgriffith$elm_ui$Element$padding(5),
					$mdgriffith$elm_ui$Element$width(
					A2(
						$mdgriffith$elm_ui$Element$minimum,
						200,
						A2($mdgriffith$elm_ui$Element$maximum, 1400, $mdgriffith$elm_ui$Element$fill))),
					$mdgriffith$elm_ui$Element$centerX,
					$mdgriffith$elm_ui$Element$centerY,
					$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
					A2($mdgriffith$elm_ui$Element$spacingXY, 20, 0)
				]),
			_List_fromArray(
				[
					$author$project$Logo$link,
					A3($author$project$Page$horizontalBar, config, settings, page)
				]));
	});
var $author$project$Page$tabletBar = F3(
	function (config, settings, page) {
		return A2(
			$mdgriffith$elm_ui$Element$column,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$centerX,
					$mdgriffith$elm_ui$Element$spacing(10)
				]),
			_List_fromArray(
				[
					A2(
					$mdgriffith$elm_ui$Element$row,
					_List_fromArray(
						[$mdgriffith$elm_ui$Element$centerX]),
					_List_fromArray(
						[$author$project$Logo$link])),
					A3($author$project$Page$horizontalBar, config, settings, page)
				]));
	});
var $author$project$Page$verticalTab = function (_v0) {
	var url = _v0.cF;
	var text = _v0.mR;
	var isActive = _v0.L;
	return A2(
		$mdgriffith$elm_ui$Element$link,
		_Utils_ap(
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$height(
					$mdgriffith$elm_ui$Element$px(40)),
					$mdgriffith$elm_ui$Element$Font$center,
					$mdgriffith$elm_ui$Element$width(
					A2(
						$mdgriffith$elm_ui$Element$maximum,
						300,
						A2($mdgriffith$elm_ui$Element$minimum, 200, $mdgriffith$elm_ui$Element$fill))),
					$mdgriffith$elm_ui$Element$mouseOver(
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$Background$color($author$project$Palette$redLight)
						])),
					$mdgriffith$elm_ui$Element$Background$color($author$project$Palette$sred),
					$mdgriffith$elm_ui$Element$centerY,
					$mdgriffith$elm_ui$Element$Font$size(20),
					$mdgriffith$elm_ui$Element$Font$regular
				]),
			isActive ? _List_fromArray(
				[
					$mdgriffith$elm_ui$Element$Border$width(1),
					$mdgriffith$elm_ui$Element$Border$color($author$project$Palette$grayLight),
					$mdgriffith$elm_ui$Element$Font$color($author$project$Palette$grayLight)
				]) : _List_Nil),
		{
			hL: isActive ? A2(
				$mdgriffith$elm_ui$Element$row,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$padding(10),
						$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
					]),
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Element$el,
						_List_fromArray(
							[$mdgriffith$elm_ui$Element$alignLeft]),
						$mdgriffith$elm_ui$Element$text($author$project$Page$rose)),
						A2(
						$mdgriffith$elm_ui$Element$el,
						_List_fromArray(
							[$mdgriffith$elm_ui$Element$centerX]),
						$mdgriffith$elm_ui$Element$text(text)),
						A2(
						$mdgriffith$elm_ui$Element$el,
						_List_fromArray(
							[$mdgriffith$elm_ui$Element$alignRight]),
						$mdgriffith$elm_ui$Element$text($author$project$Page$rose))
					])) : A2(
				$mdgriffith$elm_ui$Element$row,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$padding(10),
						$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
					]),
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Element$el,
						_List_fromArray(
							[$mdgriffith$elm_ui$Element$centerX]),
						$mdgriffith$elm_ui$Element$text(text))
					])),
			cF: url
		});
};
var $author$project$Page$verticalBar = F3(
	function (config, settings, page) {
		return A2(
			$mdgriffith$elm_ui$Element$column,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$Font$color($author$project$Palette$white),
					$mdgriffith$elm_ui$Element$centerX,
					$mdgriffith$elm_ui$Element$width(
					A2(
						$mdgriffith$elm_ui$Element$maximum,
						300,
						A2($mdgriffith$elm_ui$Element$minimum, 200, $mdgriffith$elm_ui$Element$fill)))
				]),
			_Utils_ap(
				A2(
					$elm$core$List$map,
					$author$project$Page$verticalTab,
					A2($author$project$Page$links, settings, page)),
				A3($author$project$Page$viewHamburgerMenu, config, settings, page)));
	});
var $author$project$Page$phoneBar = F3(
	function (config, settings, page) {
		var _v0 = settings.kj.lW;
		if (!_v0) {
			return A2(
				$mdgriffith$elm_ui$Element$column,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
						$mdgriffith$elm_ui$Element$spacing(10)
					]),
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Element$row,
						_List_fromArray(
							[$mdgriffith$elm_ui$Element$centerX]),
						_List_fromArray(
							[$author$project$Logo$link])),
						A2(
						$mdgriffith$elm_ui$Element$row,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
								$mdgriffith$elm_ui$Element$centerX
							]),
						_List_fromArray(
							[
								A3($author$project$Page$verticalBar, config, settings, page)
							]))
					]));
		} else {
			return A3($author$project$Page$tabletBar, config, settings, page);
		}
	});
var $author$project$Page$breadCrumbLink = F3(
	function (route, name, enabled) {
		return A2(
			$mdgriffith$elm_ui$Element$link,
			enabled ? _List_fromArray(
				[
					$mdgriffith$elm_ui$Element$Font$color($author$project$Palette$sred)
				]) : _List_Nil,
			{
				hL: $mdgriffith$elm_ui$Element$text(name),
				cF: $author$project$Route$href(route)
			});
	});
var $author$project$Page$campaignLink = function (id) {
	return A2(
		$author$project$Page$breadCrumbLink,
		$author$project$Route$CampaignOverview(id),
		'Campaign');
};
var $author$project$Page$dashboardLink = A2($author$project$Page$breadCrumbLink, $author$project$Route$OrganizerDashboard, 'Organizer Dashboard');
var $author$project$Page$detainerWarrantLink = function (maybeId) {
	return A2(
		$author$project$Page$breadCrumbLink,
		$author$project$Route$DetainerWarrantCreation(maybeId),
		'Edit');
};
var $author$project$Page$detainerWarrantsLink = A2(
	$author$project$Page$breadCrumbLink,
	$author$project$Route$ManageDetainerWarrants($author$project$Search$detainerWarrantsDefault),
	'Manage Detainer Warrants');
var $author$project$Page$eventLink = F2(
	function (campaignId, id) {
		return A2(
			$author$project$Page$breadCrumbLink,
			A2($author$project$Route$Event, campaignId, id),
			'Event');
	});
var $feathericons$elm_feather$FeatherIcons$chevronRight = A2(
	$feathericons$elm_feather$FeatherIcons$makeBuilder,
	'chevron-right',
	_List_fromArray(
		[
			A2(
			$elm$svg$Svg$polyline,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$points('9 18 15 12 9 6')
				]),
			_List_Nil)
		]));
var $author$project$Page$chevronRight = A2($Orasund$elm_ui_widgets$Widget$Icon$elmFeather, $feathericons$elm_feather$FeatherIcons$toHtml, $feathericons$elm_feather$FeatherIcons$chevronRight)(
	{eL: $avh4$elm_color$Color$red, f$: 20});
var $author$project$Page$viewBreadcrumbsHelp = function (breadcrumbs) {
	return A2(
		$mdgriffith$elm_ui$Element$row,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$spacing(10)
			]),
		A2($elm$core$List$intersperse, $author$project$Page$chevronRight, breadcrumbs));
};
var $author$project$Page$viewBreadcrumbs = function (page) {
	return A2(
		$mdgriffith$elm_ui$Element$row,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
			]),
		_List_fromArray(
			[
				A2(
				$mdgriffith$elm_ui$Element$column,
				_List_fromArray(
					[$mdgriffith$elm_ui$Element$centerX]),
				_List_fromArray(
					[
						$author$project$Page$viewBreadcrumbsHelp(
						function () {
							switch (page.$) {
								case 8:
									var campaignId = page.a;
									return _List_fromArray(
										[
											$author$project$Page$dashboardLink(true),
											A2($author$project$Page$campaignLink, campaignId, false)
										]);
								case 9:
									var campaignId = page.a;
									var eventId = page.b;
									return _List_fromArray(
										[
											$author$project$Page$dashboardLink(true),
											A2($author$project$Page$campaignLink, campaignId, true),
											A3($author$project$Page$eventLink, campaignId, eventId, false)
										]);
								case 11:
									var maybeId = page.a;
									return _List_fromArray(
										[
											$author$project$Page$detainerWarrantsLink(true),
											A2($author$project$Page$detainerWarrantLink, maybeId, false)
										]);
								default:
									return _List_Nil;
							}
						}())
					]))
			]));
};
var $author$project$Page$navBar = F3(
	function (config, settings, page) {
		return A2(
			$mdgriffith$elm_ui$Element$column,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
					$mdgriffith$elm_ui$Element$spacing(10)
				]),
			_List_fromArray(
				[
					function () {
					var _v0 = settings.kj.jS;
					switch (_v0) {
						case 0:
							return A3($author$project$Page$phoneBar, config, settings, page);
						case 1:
							return A3($author$project$Page$tabletBar, config, settings, page);
						case 2:
							return A3($author$project$Page$desktopBar, config, settings, page);
						default:
							return A3($author$project$Page$desktopBar, config, settings, page);
					}
				}(),
					$author$project$Page$viewBreadcrumbs(page)
				]));
	});
var $author$project$Page$viewHeader = F3(
	function (config, settings, page) {
		return A3($author$project$Page$navBar, config, settings, page);
	});
var $author$project$Session$viewer = function (session) {
	if (!session.$) {
		var val = session.b;
		return $elm$core$Maybe$Just(val);
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $author$project$Main$view = function (model) {
	var viewer = $author$project$Session$viewer(
		$author$project$Main$toSession(model));
	var navBar = {b$: model.b$, lK: $author$project$Main$GotHamburgerMenuPress};
	var device = $author$project$Main$classifyDevice(model.i8);
	var settings = {kj: device, ni: model.dl, i$: viewer};
	var viewPage = F3(
		function (page, toMsg, _v1) {
			var title = _v1.er;
			var content = _v1.gU;
			var header = A3($author$project$Page$viewHeader, navBar, settings, page);
			var document = A2(
				$author$project$Page$view,
				header,
				{
					gU: A2($mdgriffith$elm_ui$Element$map, toMsg, content),
					er: title
				});
			return {bM: document.bM, er: document.er};
		});
	var _v0 = model.aG;
	switch (_v0.$) {
		case 0:
			return A2(
				$author$project$Page$view,
				A3($author$project$Page$viewHeader, navBar, settings, $author$project$Page$Other),
				$author$project$Page$Blank$view);
		case 1:
			return A2(
				$author$project$Page$view,
				A3($author$project$Page$viewHeader, navBar, settings, $author$project$Page$Other),
				$author$project$Page$NotFound$view);
		case 2:
			var login = _v0.a;
			return A3(
				viewPage,
				$author$project$Page$Other,
				$author$project$Main$GotLoginMsg,
				$author$project$Page$Login$view(login));
		case 3:
			var trends = _v0.a;
			return A3(
				viewPage,
				$author$project$Page$Trends,
				$author$project$Main$GotTrendsMsg,
				A2($author$project$Page$Trends$view, device, trends));
		case 5:
			var about = _v0.a;
			return A3(
				viewPage,
				$author$project$Page$About,
				$author$project$Main$GotAboutMsg,
				$author$project$Page$About$view(about));
		case 7:
			var glossary = _v0.a;
			return A3(
				viewPage,
				$author$project$Page$Glossary,
				$author$project$Main$GotGlossaryMsg,
				A2($author$project$Page$Glossary$view, device, glossary));
		case 4:
			var warrantHelp = _v0.a;
			return A3(
				viewPage,
				$author$project$Page$WarrantHelp,
				$author$project$Main$GotWarrantHelpMsg,
				A2($author$project$Page$WarrantHelp$view, model.dl, warrantHelp));
		case 6:
			var actions = _v0.a;
			return A3(
				viewPage,
				$author$project$Page$Actions,
				$author$project$Main$GotActionsMsg,
				$author$project$Page$Actions$view(actions));
		case 8:
			var dashboard = _v0.a;
			return A3(
				viewPage,
				$author$project$Page$OrganizerDashboard,
				$author$project$Main$GotOrganizerDashboardMsg,
				A2($author$project$Page$Organize$Dashboard$view, settings, dashboard));
		case 10:
			var campaignId = _v0.a;
			var eventId = _v0.b;
			var event = _v0.c;
			return A3(
				viewPage,
				A2($author$project$Page$Event, campaignId, eventId),
				$author$project$Main$GotEventMsg,
				A2($author$project$Page$Organize$Event$view, settings, event));
		case 9:
			var id = _v0.a;
			var campaign = _v0.b;
			return A3(
				viewPage,
				$author$project$Page$CampaignOverview(id),
				$author$project$Main$GotCampaignOverviewMsg,
				A2($author$project$Page$Organize$CampaignOverview$view, settings, campaign));
		case 11:
			var dw = _v0.a;
			return A3(
				viewPage,
				$author$project$Page$ManageDetainerWarrants,
				$author$project$Main$GotManageDetainerWarrantsMsg,
				A2($author$project$Page$Organize$DetainerWarrants$view, settings, dw));
		case 12:
			var maybeId = _v0.a;
			var dwc = _v0.b;
			return A3(
				viewPage,
				$author$project$Page$DetainerWarrantCreation(maybeId),
				$author$project$Main$GotDetainerWarrantCreationMsg,
				A2($author$project$Page$Organize$DetainerWarrantCreation$view, settings, dwc));
		case 13:
			var plaintiffs = _v0.a;
			return A3(
				viewPage,
				$author$project$Page$ManagePlaintiffs,
				$author$project$Main$GotManagePlaintiffsMsg,
				A2($author$project$Page$Organize$Plaintiffs$view, settings, plaintiffs));
		default:
			var maybeId = _v0.a;
			var plaintiff = _v0.b;
			return A3(
				viewPage,
				$author$project$Page$PlaintiffCreation(maybeId),
				$author$project$Main$GotPlaintiffCreationMsg,
				A2($author$project$Page$Organize$PlaintiffCreation$view, settings, plaintiff));
	}
};
var $author$project$Main$main = A2(
	$author$project$Api$application,
	$author$project$Viewer$decoder,
	{hw: $author$project$Main$init, h7: $author$project$Main$ChangedUrl, h8: $author$project$Main$ClickedLink, iO: $author$project$Main$subscriptions, iW: $author$project$Main$update, i_: $author$project$Main$view});
_Platform_export({'Main':{'init':$author$project$Main$main($elm$json$Json$Decode$value)(0)}});}(this));