name: Continuous Integration

on: push

jobs:
  unit_test:
    runs-on: ubuntu-latest
    name: Unit tests
    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: eviction_tracker_test
          POSTGRES_PASSWORD: junkdata
          POSTGRES_DB: eviction_tracker_test
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2.3.4
      - uses: cachix/install-nix-action@v12
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v8
        with:
          name: midtndsa
          signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: nix-shell --run "pytest"
        env:
          TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
          TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN }}

  compute_tags:
    name: Compute Tags
    runs-on: ubuntu-latest
    outputs:
      release_tag: ${{ steps.compute_tag.outputs.next_tag }}
      last_release_tag: ${{ steps.compute_tag.outputs.previous_tag }}
    steps:
      - uses: actions/checkout@v2

      - name: Compute release tag
        id: compute_tag
        uses: craig-day/compute-tag@v13
        with:
          github_token: ${{ github.token }}
          version_scheme: continuous
          version_type: major
          
  commit_assets:
    runs-on: ubuntu-latest
    name: Commit Assets
    needs: compute_tags
    steps:
      - uses: actions/checkout@v2.3.4
      
      - uses: cachix/install-nix-action@v12
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v8
        with:
          name: midtndsa
          signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: nix-shell --run './scripts/build-ui'
        name: Build application
        env:
          TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
          TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN }}
      - id: commit_assets
        run: |
          set -ex -o pipefail
          git config user.name "Release Bot"
          git config user.email "not.real@example.com"
          git add -f eviction_tracker/static eviction_tracker/static_pages
          git commit -m "Build application for $GITHUB_SHA"
          
          BRANCH_NAME="$(echo "${GITHUB_HEAD_REF:-$GITHUB_REF}" | sed -e 's/refs\/heads\///')-deploy"

          git push --force origin "HEAD:refs/heads/$BRANCH_NAME"
          echo "::set-output name=git_branch::$BRANCH_NAME"
  
  release:
    name: Create Release
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: 
      - commit_assets
      - compute_tags
    steps:
      # Checkout the ref that contains artifacts
      - uses: actions/checkout@v2
        with:
          ref: main-deploy

      - name: Build release message
        id: release_message
        run: echo "::set-output name=message::$(git log --format=%B -n 1 ${{ github.sha }})"

      - name: Push tag
        run: |
          git config user.name "Release Bot"
          git config user.email "not.real@example.com"
          git push origin "HEAD:refs/tags/$TAG"
        env:
          TAG: ${{ needs.compute_tags.outputs.release_tag }}

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ needs.compute_tags.outputs.release_tag }}
          release_name: ${{ needs.compute_tags.outputs.release_tag }}
          body: |
            This release includes generated configuration artifacts that are dependent on a successful version bump.
            ### Links
            * [Pull Request diff](https://github.com/${{ github.repository }}/compare/${{ github.sha }}..${{ needs.compute_tags.outputs.release_tag }})
            * [Changes since last release](https://github.com/${{ github.repository }}/compare/${{ needs.compute_tags.outputs.last_release_tag }}..${{ needs.compute_tags.outputs.release_tag }})
        env:
          GITHUB_TOKEN: ${{ github.token }}